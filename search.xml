<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Docker相关知识（摘录）</title>
    <url>/2021/01/09/Docker%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%EF%BC%88%E6%91%98%E5%BD%95%EF%BC%89/</url>
    <content><![CDATA[<p>注：本文内容是从参考部分摘录而来，如有侵权请及时告知！</p>
<h1 id="容器技术"><a class="markdownIt-Anchor" href="#容器技术"></a> 容器技术</h1>
<h2 id="从环境配置开始说起"><a class="markdownIt-Anchor" href="#从环境配置开始说起"></a> 从环境配置开始说起</h2>
<p>软件开发最大的麻烦事之一，就是环境配置。用户必须保证两件事：操作系统的设置，各种库和组件的安装。只有它们都正确，软件才能运行。举例来说，安装一个 Python 应用，计算机必须有 Python 引擎，还必须有各种依赖，可能还要配置环境变量。</p>
<p>如果某些老旧的模块与当前环境不兼容，那就麻烦了。环境配置如此麻烦，换一台机器，就要重来一次，旷日费时。很多人想到，能不能从根本上解决问题，软件可以带环境安装？也就是说，安装的时候，把原始环境一模一样地复制过来。</p>
<a id="more"></a>
<h2 id="虚拟机技术"><a class="markdownIt-Anchor" href="#虚拟机技术"></a> 虚拟机技术</h2>
<p>虚拟机（virtual machine）就是带环境安装的一种解决方案。它可以在一种操作系统里面运行另一种操作系统，比如在 Windows  系统里面运行 Linux  系统。应用程序对此毫无感知，因为虚拟机看上去跟真实系统一模一样，而对于底层系统来说，虚拟机就是一个普通文件，不需要了就删掉，对其他部分毫无影响。</p>
<p>虽然用户可以通过虚拟机还原软件的原始环境。但是，这个方案有几个缺点：</p>
<ol>
<li>
<p>资源占用多：虚拟机会独占一部分内存和硬盘空间。它运行的时候，其他程序就不能使用这些资源了。哪怕虚拟机里面的应用程序，真正使用的内存只有 1MB，虚拟机依然需要几百 MB 的内存才能运行。</p>
</li>
<li>
<p>冗余步骤多：虚拟机是完整的操作系统，一些系统级别的操作步骤，往往无法跳过，比如用户登录。</p>
</li>
<li>
<p>启动慢：启动操作系统需要多久，启动虚拟机就需要多久。可能要等几分钟，应用程序才能真正运行。</p>
</li>
</ol>
<h2 id="容器技术-2"><a class="markdownIt-Anchor" href="#容器技术-2"></a> 容器技术</h2>
<p>由于虚拟机存在这些缺点，Linux 发展出了另一种虚拟化技术：Linux 容器（Linux Containers，缩写为 LXC）。</p>
<p>**Linux 容器不是模拟一个完整的操作系统，而是对进程进行隔离。**或者说，在正常进程的外面套了一个<span class="exturl" data-url="aHR0cHM6Ly9vcGVuc291cmNlLmNvbS9hcnRpY2xlLzE4LzEvaGlzdG9yeS1sb3ctbGV2ZWwtY29udGFpbmVyLXJ1bnRpbWVz">保护层<i class="fa fa-external-link-alt"></i></span>。对于容器里面的进程来说，它接触到的各种资源都是虚拟的，从而实现与底层系统的隔离。</p>
<p>由于容器是进程级别的，相比虚拟机有很多优势：</p>
<ol>
<li>
<p>启动快：容器里面的应用，直接就是底层系统的一个进程，而不是虚拟机内部的进程。所以，启动容器相当于启动本机的一个进程，而不是启动一个操作系统，速度就快很多。</p>
</li>
<li>
<p>资源占用少：容器只占用需要的资源，不占用那些没有用到的资源；虚拟机由于是完整的操作系统，不可避免要占用所有资源。另外，多个容器可以共享资源，虚拟机都是独享资源。</p>
</li>
<li>
<p>体积小：容器只要包含用到的组件即可，而虚拟机是整个操作系统的打包，所以容器文件比虚拟机文件要小很多。</p>
</li>
</ol>
<p>总之，容器有点像轻量级的虚拟机，能够提供虚拟化的环境，但是成本开销小得多。</p>
<h1 id="docker"><a class="markdownIt-Anchor" href="#docker"></a> Docker</h1>
<h2 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h2>
<p>**Docker 属于 Linux 容器的一种封装，提供简单易用的容器使用接口。**它是目前最流行的 Linux 容器解决方案。</p>
<p>Docker 将应用程序与该程序的依赖，打包在一个文件里面。运行这个文件，就会生成一个虚拟容器。程序在这个虚拟容器里运行，就好像在真实的物理机上运行一样。有了 Docker，就不用担心环境问题。</p>
<p>总体来说，Docker 的接口相当简单，用户可以方便地创建和使用容器，把自己的应用放入容器。容器还可以进行版本管理、复制、分享、修改，就像管理普通的代码一样。</p>
<p>Docker 的主要用途，目前有三大类。</p>
<ol>
<li>提供一次性的环境。比如，本地测试他人的软件、持续集成的时候提供单元测试和构建的环境。</li>
<li>提供弹性的云服务。因为 Docker 容器可以随开随关，很适合动态扩容和缩容。</li>
<li>组建微服务架构。通过多个容器，一台机器可以跑多个服务，因此在本机就可以模拟出微服务架构。</li>
</ol>
<h2 id="docker涉及到的三个概念"><a class="markdownIt-Anchor" href="#docker涉及到的三个概念"></a> Docker涉及到的三个概念</h2>
<ol>
<li>镜像（Image）：类似于虚拟机中的镜像，是一个包含有文件系统的面向Docker引擎的只读模板。任何应用程序运行都需要环境，而镜像就是用来提供这种运行环境的。例如一个Ubuntu镜像就是一个包含Ubuntu操作系统环境的模板，同理在该镜像上装上Apache软件，就可以称为Apache镜像。</li>
<li>容器（Container）：类似于一个轻量级的沙盒，可以将其看作一个极简的Linux系统环境（包括root权限、进程空间、用户空间和网络空间等），以及运行在其中的应用程序。Docker引擎利用容器来运行、隔离各个应用。容器是镜像创建的应用实例，可以创建、启动、停止、删除容器，各个容器之间是是相互隔离的，互不影响。注意：镜像本身是只读的，容器从镜像启动时，Docker在镜像的上层创建一个可写层，镜像本身不变。</li>
<li>仓库（Repository）：类似于代码仓库，这里是镜像仓库，是Docker用来集中存放镜像文件的地方。注意与注册服务器（Registry）的区别：注册服务器是存放仓库的地方，一般会有多个仓库；而仓库是存放镜像的地方，一般每个仓库存放一类镜像，每个镜像利用tag进行区分，比如Ubuntu仓库存放有多个版本（12.04、14.04等）的Ubuntu镜像。</li>
</ol>
<h2 id="底层原理"><a class="markdownIt-Anchor" href="#底层原理"></a> 底层原理</h2>
<p>Docker容器与虚拟机的底层原理如下图所示:</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210105222310.jpg" alt="v2-0327d6666507f8716c3d3630fa4cb671_720w" /></p>
<p>容器时在Linux上本机运行，并与其他容器共享主机的内核，它运行的一个独立的进程，不占用其他任何可执行文件的内存，非常轻量。而虚拟机运行的是一个完成的操作系统，通过虚拟机管理程序对主机资源进行虚拟访问，相比之下需要的资源更多。</p>
<p>docker基于Linux内核，提供了如下几项功能实现：</p>
<ul>
<li><strong>NameSpace</strong><br />
我们知道Linux中的PID、IPC、网络等资源是全局的，而NameSpace机制是一种资源隔离方案，在该机制下这些资源就不再是全局的了，而是属于某个特定的NameSpace，各个NameSpace下的资源互不干扰，这就使得每个NameSpace看上去就像一个独立的操作系统一样，但是只有NameSpace是不够。</li>
<li><strong>Control groups</strong><br />
虽然有了NameSpace技术可以实现资源隔离，但进程还是可以不受控的访问系统资源，比如CPU、内存、磁盘、网络等，为了控制容器中进程对资源的访问，Docker采用control  groups技术(也就是cgroup)，有了cgroup就可以控制容器中进程对系统资源的消耗了，比如你可以限制某个容器使用内存的上限、可以在哪些CPU上运行等等。</li>
</ul>
<h2 id="工作模式"><a class="markdownIt-Anchor" href="#工作模式"></a> 工作模式</h2>
<p>Docker使用了常见的CS架构，也就是client-server模式，Docker client负责处理用户输入的各种命令，比如docker  build、docker run，真正工作的其实是server，也就是Docker daemon，值得注意的是，Docker  client和Docker daemon可以运行在同一台机器上。</p>
<h3 id="docker-build"><a class="markdownIt-Anchor" href="#docker-build"></a> docker build</h3>
<p>当我们写完dockerfile交给docker“编译”时使用这个命令，client在接收到请求后转发给docker daemon，接着docker daemon根据dockerfile创建出镜像image。</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210105222337.jpg" alt="v2-f16577a98471b4c4b5b1af1036882caa_720w" /></p>
<h3 id="docker-run"><a class="markdownIt-Anchor" href="#docker-run"></a> docker run</h3>
<p>有了镜像image后就可以运行程序了，接下来使用命令docker run，docker daemon接收到该命令后找到具体的image，然后加载到内存开始执行，此时便生成一个所谓的容器。</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210105222352.jpg" alt="v2-672b29e2d53d2ab044269b026c6bc473_720w" /></p>
<h3 id="docker-pull"><a class="markdownIt-Anchor" href="#docker-pull"></a> docker pull</h3>
<p>Docker registry 可以用来存放各种image，公共的可以供任何人下载image的仓库就是Docker Hub。那么该怎么从Docker Hub中下载image呢，就是这里的docker pull命令了。</p>
<p>因此，这个命令的实现也很简单，那就是用户通过docker client发送命令，docker daemon接收到命令后向docker registry发送image下载请求，下载后存放在本地，这样我们就可以使用image了。</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210105222439.jpg" alt="v2-dac570abcf7e1776cc266a60c4b19e5e_720w" /></p>
<h1 id="docker的使用"><a class="markdownIt-Anchor" href="#docker的使用"></a> Docker的使用</h1>
<h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2>
<p>Docker官方提供了自动安装的脚本，可以在机器上自动安装docker。只需要执行如下命令即可：<code>curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</code>。手动安装的步骤相比于自动安装脚本要繁琐地多，可以参照网页https://www.runoob.com/docker/ubuntu-docker-install.html提供的安装教程。</p>
<p>在安装完成之后，执行<code>systemctl start docker</code>便可以启动Docker服务，也可以同时使用enable将docker服务设置为开机自启动，方便以后的使用。</p>
<h2 id="镜像的使用"><a class="markdownIt-Anchor" href="#镜像的使用"></a> 镜像的使用</h2>
<h3 id="生成镜像"><a class="markdownIt-Anchor" href="#生成镜像"></a> 生成镜像</h3>
<p>镜像的生成有如下几种方式：</p>
<ol>
<li>从Docker Hub中获取，例如从Docker Hub中获取Fedora的镜像：<code>docker pull fedora</code>。这一命令会自动从Docker Hub中查找并下载相应的镜像。</li>
<li>自己写Dockerfile，然后根据Dockerfile，使用<code>docker build</code>命令生成镜像。可以参考https://www.runoob.com/docker/docker-dockerfile.html</li>
<li>将一个容器打包成镜像：<code>docker commit [container-ID] [Image-name]</code>。可以使用<code>docker save -o [compressed-file-name] [Image-name]</code>命令，将一个镜像转为压缩文件，从而方便在其他主机上部署。这一压缩文件在其他主机上可以用<code>docker load &lt; [compressed-file-name]</code>命令，导入到镜像文件库中。</li>
</ol>
<h3 id="镜像管理"><a class="markdownIt-Anchor" href="#镜像管理"></a> 镜像管理</h3>
<ul>
<li>列出镜像列表：<code>docker images</code></li>
<li>查找镜像：<code>docker search [image-name]</code></li>
<li>删除镜像：<code>docker rmi [image-name]</code></li>
<li>设置镜像标签：<code>docker tag [image-id] [image-name]</code></li>
</ul>
<h2 id="容器的使用"><a class="markdownIt-Anchor" href="#容器的使用"></a> 容器的使用</h2>
<h3 id="基本操作"><a class="markdownIt-Anchor" href="#基本操作"></a> 基本操作</h3>
<ul>
<li>启动容器：<code>docker run [options] [image-name] [commands]</code>，例如<code>docker run -it ubuntu /bin/bash</code>代表进入一个ubuntu镜像的终端交互界面，要退出可以直接输入<code>exit</code>即可。启动过程中使用到的不同参数可以用<code>--help</code>进行查询。常用的参数包括：
<ul>
<li><code>-i</code>：允许对容器的标准输入进行交互</li>
<li><code>-t</code>：在新容器内指定一个终端/伪终端</li>
<li><code>-d</code>：将容器放在后台运行</li>
</ul>
</li>
<li>启动停止状态的容器：先用<code>docker ps -a</code>查看所有的容器，对处于exit状态的容器可以用<code>docker start [container-id]</code>来重新启动它</li>
<li>停止一个容器：<code>docker stop [container-id]</code>，停止的容器可以用<code>docker restart [container-id]</code>重启</li>
<li>查看容器输出：<code>docker logs [container-id]</code></li>
<li>进入容器：如果在容器启动的时候使用了<code>-d</code>参数，那么启动之后会进入后台。此时如果要进入容器，有两种方式：
<ul>
<li><code>docker attach</code>：这一命令在退出容器终端之后，会导致容器停止</li>
<li><code>docker exec</code>：这一命令在退出终端之后，不会导致容器停止</li>
</ul>
</li>
<li>删除容器：<code>docker rm -f [container-id]</code>，如果要清除所有处于终止状态的容器可以使用<code>docker container prune</code>命令</li>
<li>导出容器：<code>docker export [container-id] &gt; [filename]</code>，导出的文件名一般为<code>*.tar</code>压缩文件</li>
<li>将容器快照导入为镜像：<code>docker import [URL or filename] [image-name]</code></li>
</ul>
<h3 id="容器状态"><a class="markdownIt-Anchor" href="#容器状态"></a> 容器状态</h3>
<ul>
<li>created（已创建）</li>
<li>restarting（重启中）</li>
<li>running 或 Up（运行中）</li>
<li>removing（迁移中）</li>
<li>paused（暂停）</li>
<li>exited（停止）</li>
<li>dead（死亡）</li>
</ul>
<h3 id="网络连接"><a class="markdownIt-Anchor" href="#网络连接"></a> 网络连接</h3>
<h4 id="端口映射"><a class="markdownIt-Anchor" href="#端口映射"></a> 端口映射</h4>
<p>在创建docker容器的时候，可以加入<code>-P</code>或者<code>-p</code>参数来指定容器绑定的网络地址。使用<code>-P</code>参数时，容器内部端口随机映射到主机的高端口；而使用<code>-p</code>参数时，需要在这一参数后面加上主机端口与容器端口的映射关系，例如<code>5000:5000</code>、<code>127.0.0.1:5001:5000</code>等，将容器内部的端口绑定到指定的主机端口。默认绑定的是TCP端口，如果要绑定UDP端口需要在端口后面加上<code>/udp</code>。</p>
<p>使用<code>docker port</code>命令可以快捷地查看端口的绑定情况。</p>
<h4 id="连接系统"><a class="markdownIt-Anchor" href="#连接系统"></a> 连接系统</h4>
<p>docker 有一个连接系统允许将多个容器连接在一起，共享连接信息。使用<code>docker network create -d [network-type] [name]</code>命令可以创建一个docker网络，网络类型可以为bridge或者overlay。</p>
<p>在这之后，如果要将一个容器连接到新创建的网络系统上，可以在创建容器的时候加入<code>--network [name]</code>这一额外参数。</p>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<ol>
<li><span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8yMzU5OTIyOQ==">https://zhuanlan.zhihu.com/p/23599229<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cDovL3d3dy5ydWFueWlmZW5nLmNvbS9ibG9nLzIwMTgvMDIvZG9ja2VyLXR1dG9yaWFsLmh0bWw=">http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xODc1MDU5ODE=">https://zhuanlan.zhihu.com/p/187505981<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS9kb2NrZXIvZG9ja2VyLXR1dG9yaWFsLmh0bWw=">https://www.runoob.com/docker/docker-tutorial.html<i class="fa fa-external-link-alt"></i></span></li>
</ol>
]]></content>
      <categories>
        <category>Docker</category>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenSSL-SSL通信（转载）</title>
    <url>/2021/01/09/OpenSSL-SSL%E9%80%9A%E4%BF%A1%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89/</url>
    <content><![CDATA[<p>注：本文内容转载自https://www.cnblogs.com/LittleHann/p/3741907.html</p>
<p>下面的代码为服务器和客户端建立SSL连接的代码示例：</p>
<a id="more"></a>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">ssl-server.c:</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/in.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/wait.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/ssl.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/err.h&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXBUF 1024 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> * *argv)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sockfd, new_fd;</span><br><span class="line">    <span class="keyword">socklen_t</span> len;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">my_addr</span>, <span class="title">their_addr</span>;</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> myport, lisnum;</span><br><span class="line">    <span class="keyword">char</span> buf[MAXBUF + <span class="number">1</span>];</span><br><span class="line">    SSL_CTX * ctx;</span><br><span class="line">    <span class="comment">//指定监听端口</span></span><br><span class="line">    <span class="keyword">if</span> (argv[<span class="number">1</span>]) </span><br><span class="line">    &#123;</span><br><span class="line">        myport = atoi(argv[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        myport = <span class="number">8888</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//最大客户端连接数</span></span><br><span class="line">    <span class="keyword">if</span> (argv[<span class="number">2</span>]) </span><br><span class="line">    &#123;</span><br><span class="line">        lisnum = atoi(argv[<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        lisnum = <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* SSL 库初始化*/</span></span><br><span class="line">    SSL_library_init();</span><br><span class="line">    <span class="comment">/* 载入所有SSL 算法*/</span></span><br><span class="line">    OpenSSL_add_all_algorithms();</span><br><span class="line">    <span class="comment">/* 载入所有SSL 错误消息*/</span></span><br><span class="line">    SSL_load_error_strings();</span><br><span class="line">    <span class="comment">/* 以SSL V2 和V3 标准兼容方式产生一个SSL_CTX ，即SSL Content Text */</span></span><br><span class="line">    ctx = SSL_CTX_new(SSLv23_server_method());</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">    也可以用SSLv2_server_method() 或SSLv3_server_method() 单独表示V2 或V3标准</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">if</span> (ctx == <span class="literal">NULL</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        ERR_print_errors_fp(<span class="built_in">stdout</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 载入用户的数字证书， 此证书用来发送给客户端。证书里包含有公钥*/</span></span><br><span class="line">    <span class="keyword">if</span> (SSL_CTX_use_certificate_file(ctx, argv[<span class="number">4</span>], SSL_FILETYPE_PEM) &lt;= <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        ERR_print_errors_fp(<span class="built_in">stdout</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 载入用户私钥*/</span></span><br><span class="line">    <span class="keyword">if</span> (SSL_CTX_use_PrivateKey_file(ctx, argv[<span class="number">5</span>], SSL_FILETYPE_PEM) &lt;= <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        ERR_print_errors_fp(<span class="built_in">stdout</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 检查用户私钥是否正确*/</span></span><br><span class="line">    <span class="keyword">if</span> (!SSL_CTX_check_private_key(ctx)) </span><br><span class="line">    &#123;</span><br><span class="line">        ERR_print_errors_fp(<span class="built_in">stdout</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 开启一个socket 监听*/</span></span><br><span class="line">    <span class="keyword">if</span> ((sockfd = socket(PF_INET, SOCK_STREAM, <span class="number">0</span>)) == <span class="number">-1</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;socket&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;socket created\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    bzero( &amp;my_addr, <span class="keyword">sizeof</span>(my_addr));</span><br><span class="line">    my_addr.sin_family = PF_INET;</span><br><span class="line">    my_addr.sin_port = htons(myport);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//设置监听的IP</span></span><br><span class="line">    <span class="keyword">if</span> (argv[<span class="number">3</span>]) </span><br><span class="line">    &#123;</span><br><span class="line">        my_addr.sin_addr.s_addr = inet_addr(argv[<span class="number">3</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//如果用户没有指定监听端口，则默认监听0.0.0.0(任意IP)</span></span><br><span class="line">        my_addr.sin_addr.s_addr = INADDR_ANY;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (bind(sockfd, (struct sockaddr * ) &amp;my_addr, <span class="keyword">sizeof</span>(struct sockaddr)) == <span class="number">-1</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;bind&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;binded\n&quot;</span>);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">if</span> (listen(sockfd, lisnum) == <span class="number">-1</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;listen&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;begin listen\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        SSL * ssl;</span><br><span class="line">        len = <span class="keyword">sizeof</span>(struct sockaddr);</span><br><span class="line">        <span class="comment">/* 等待客户端连上来*/</span></span><br><span class="line">        <span class="keyword">if</span> ((new_fd = accept(sockfd, (struct sockaddr * ) &amp; their_addr, &amp;len)) == <span class="number">-1</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            perror(<span class="string">&quot;accept&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(errno);</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;server: got connection from %s, port %d, socket %d\n&quot;</span>, inet_ntoa(their_addr.sin_addr), ntohs(their_addr.sin_port), new_fd);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* 基于ctx 产生一个新的SSL */</span></span><br><span class="line">        ssl = SSL_new(ctx);</span><br><span class="line">        <span class="comment">/* 将连接用户的socket 加入到SSL */</span></span><br><span class="line">        SSL_set_fd(ssl, new_fd);</span><br><span class="line">        <span class="comment">/* 建立SSL 连接*/</span></span><br><span class="line">        <span class="keyword">if</span> (SSL_accept(ssl) == <span class="number">-1</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            perror(<span class="string">&quot;accept&quot;</span>);</span><br><span class="line">            close(new_fd);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* 开始处理每个新连接上的数据收发*/</span></span><br><span class="line">        bzero(buf, MAXBUF + <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">strcpy</span>(buf, <span class="string">&quot;server-&gt;client&quot;</span>);</span><br><span class="line">        <span class="comment">/* 发消息给客户端*/</span></span><br><span class="line">        len = SSL_write(ssl, buf, <span class="built_in">strlen</span>(buf));</span><br><span class="line">        <span class="keyword">if</span> (len &lt;= <span class="number">0</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;消息&#x27;%s&#x27;发送失败！错误代码是%d，错误信息是&#x27;%s&#x27;\n&quot;</span>, buf, errno, strerror(errno));</span><br><span class="line">            <span class="keyword">goto</span> finish;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;消息&#x27;%s&#x27;发送成功，共发送了%d 个字节！\n&quot;</span>, buf, len);</span><br><span class="line">        &#125;</span><br><span class="line">        bzero(buf, MAXBUF + <span class="number">1</span>);</span><br><span class="line">        <span class="comment">/* 接收客户端的消息*/</span></span><br><span class="line">        len = SSL_read(ssl, buf, MAXBUF);</span><br><span class="line">        <span class="keyword">if</span> (len &gt; <span class="number">0</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;接收消息成功:&#x27;%s&#x27;，共%d 个字节的数据\n&quot;</span>, buf, len);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;消息接收失败！错误代码是%d，错误信息是&#x27;%s&#x27;\n&quot;</span>, errno, strerror(errno));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* 处理每个新连接上的数据收发结束*/</span></span><br><span class="line">        finish:</span><br><span class="line">        <span class="comment">/* 关闭SSL 连接*/</span></span><br><span class="line">        SSL_shutdown(ssl);</span><br><span class="line">        <span class="comment">/* 释放SSL */</span></span><br><span class="line">        SSL_free(ssl);</span><br><span class="line">        <span class="comment">/* 关闭socket */</span></span><br><span class="line">        close(new_fd);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 关闭监听的socket */</span></span><br><span class="line">    close(sockfd);</span><br><span class="line">    <span class="comment">/* 释放CTX */</span></span><br><span class="line">    SSL_CTX_free(ctx);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ssl-client.c</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;resolv.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/in.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/ssl.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/err.h&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXBUF 1024 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShowCerts</span><span class="params">(SSL * ssl)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    X509 * cert;</span><br><span class="line">    <span class="keyword">char</span> * line;</span><br><span class="line">    cert = SSL_get_peer_certificate(ssl);</span><br><span class="line">    <span class="keyword">if</span> (cert != <span class="literal">NULL</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;数字证书信息:\n&quot;</span>);</span><br><span class="line">        line = X509_NAME_oneline(X509_get_subject_name(cert), <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;证书: %s\n&quot;</span>, line);</span><br><span class="line">        <span class="built_in">free</span>(line);</span><br><span class="line">        line = X509_NAME_oneline(X509_get_issuer_name(cert), <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;颁发者: %s\n&quot;</span>, line);</span><br><span class="line">        <span class="built_in">free</span>(line);</span><br><span class="line">        X509_free(cert);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;无证书信息！\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> * *argv)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sockfd, len;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">dest</span>;</span></span><br><span class="line">    <span class="keyword">char</span> buffer[MAXBUF + <span class="number">1</span>];</span><br><span class="line">    SSL_CTX * ctx;</span><br><span class="line">    SSL * ssl;</span><br><span class="line">    <span class="keyword">if</span> (argc != <span class="number">3</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;参数格式错误！正确用法如下：\n\t\t%s IP 地址端口\n\t 比如:\t%s 127.0.0.1 80\n 此程序用来从某个IP 地址的服务器某个端口接收最多MAXBUF 个字节的消息&quot;</span>, argv[<span class="number">0</span>], argv[<span class="number">0</span>]);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* SSL 库初始化*/</span></span><br><span class="line">    SSL_library_init();</span><br><span class="line">    <span class="comment">/* 载入所有SSL 算法*/</span></span><br><span class="line">    OpenSSL_add_all_algorithms();</span><br><span class="line">    <span class="comment">/* 载入所有SSL 错误消息*/</span></span><br><span class="line">    SSL_load_error_strings();</span><br><span class="line">    <span class="comment">/* 以SSL V2 和V3 标准兼容方式产生一个SSL_CTX ，即SSL Content Text */</span></span><br><span class="line">    ctx = SSL_CTX_new(SSLv23_client_method());</span><br><span class="line">    <span class="keyword">if</span> (ctx == <span class="literal">NULL</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        ERR_print_errors_fp(<span class="built_in">stdout</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 创建一个socket 用于tcp 通信*/</span></span><br><span class="line">    <span class="keyword">if</span> ((sockfd = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>)) &lt; <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;Socket&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(errno);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;socket created\n&quot;</span>);</span><br><span class="line">    <span class="comment">/* 初始化服务器端（对方）的地址和端口信息*/</span></span><br><span class="line">    bzero( &amp;dest, <span class="keyword">sizeof</span>(dest));</span><br><span class="line">    dest.sin_family = AF_INET;</span><br><span class="line">    <span class="comment">//设置连接的端口</span></span><br><span class="line">    dest.sin_port = htons(atoi(argv[<span class="number">2</span>]));</span><br><span class="line">    <span class="comment">//设置连接的IP地址</span></span><br><span class="line">    <span class="keyword">if</span> (inet_aton(argv[<span class="number">1</span>], (struct in_addr * ) &amp;dest.sin_addr.s_addr) == <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        perror(argv[<span class="number">1</span>]);</span><br><span class="line">        <span class="built_in">exit</span>(errno);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;address created\n&quot;</span>);</span><br><span class="line">    <span class="comment">/* 连接服务器*/</span></span><br><span class="line">    <span class="keyword">if</span> (connect(sockfd, (struct sockaddr * ) &amp;dest, <span class="keyword">sizeof</span>(dest)) != <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;Connect &quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(errno);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;server connected\n&quot;</span>);</span><br><span class="line">    <span class="comment">/* 基于ctx 产生一个新的SSL */</span></span><br><span class="line">    ssl = SSL_new(ctx);</span><br><span class="line">    <span class="comment">/* 将新连接的socket 加入到SSL */</span></span><br><span class="line">    SSL_set_fd(ssl, sockfd);</span><br><span class="line">    <span class="comment">/* 建立SSL 连接*/</span></span><br><span class="line">    <span class="keyword">if</span> (SSL_connect(ssl) == <span class="number">-1</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        ERR_print_errors_fp(<span class="built_in">stderr</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Connected with %s encryption\n&quot;</span>, SSL_get_cipher(ssl));</span><br><span class="line">        ShowCerts(ssl);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 接收对方发过来的消息，最多接收MAXBUF 个字节*/</span></span><br><span class="line">    bzero(buffer, MAXBUF + <span class="number">1</span>);</span><br><span class="line">    <span class="comment">/* 接收服务器来的消息*/</span></span><br><span class="line">    len = SSL_read(ssl, buffer, MAXBUF);</span><br><span class="line">    <span class="keyword">if</span> (len &gt; <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;接收消息成功:&#x27;%s&#x27;，共%d 个字节的数据\n&quot;</span>, buffer, len);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;消息接收失败！错误代码是%d，错误信息是&#x27;%s&#x27;\n&quot;</span>, errno, strerror(errno));</span><br><span class="line">        <span class="keyword">goto</span> finish;</span><br><span class="line">    &#125;</span><br><span class="line">    bzero(buffer, MAXBUF + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">strcpy</span>(buffer, <span class="string">&quot;from client-&gt;server&quot;</span>);</span><br><span class="line">    <span class="comment">/* 发消息给服务器*/</span></span><br><span class="line">    len = SSL_write(ssl, buffer, <span class="built_in">strlen</span>(buffer));</span><br><span class="line">    <span class="keyword">if</span> (len &lt; <span class="number">0</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;消息&#x27;%s&#x27;发送失败！错误代码是%d，错误信息是&#x27;%s&#x27;\n&quot;</span>, buffer, errno, strerror(errno));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;消息&#x27;%s&#x27;发送成功，共发送了%d 个字节！\n&quot;</span>, buffer, len);</span><br><span class="line">    &#125;</span><br><span class="line">    finish:</span><br><span class="line">    <span class="comment">/* 关闭连接*/</span></span><br><span class="line">    SSL_shutdown(ssl);</span><br><span class="line">    SSL_free(ssl);</span><br><span class="line">    close(sockfd);</span><br><span class="line">    SSL_CTX_free(ctx);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>usage:</p>
<ol>
<li>程序中用到的包含公钥的服务端证书cacert.pem和服务端私钥文件privkey.pem需要使用如下方式生成：<br />
openssl genrsa -out privkey.pem 2048<br />
openssl req -new -x509 -key privkey.pem -out cacert.pem -days 1095</li>
<li>编译程序用下列命令：<br />
gcc -Wall ssl-client.c -o client -lssl<br />
gcc -Wall ssl-server.c -o server -lssl</li>
<li>运行程序用如下命令：<br />
./server 8888 3 127.0.0.1 cacert.pem privkey.pem<br />
./client 127.0.0.1 8888</li>
</ol>
]]></content>
      <categories>
        <category>信息安全</category>
        <category>OpenSSL</category>
        <category>转载</category>
      </categories>
      <tags>
        <tag>信息安全</tag>
        <tag>OpenSSL</tag>
      </tags>
  </entry>
  <entry>
    <title>信息安全与密码学博士应该掌握的52个知识点（转载）</title>
    <url>/2021/01/09/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E4%B8%8E%E5%AF%86%E7%A0%81%E5%AD%A6%E5%8D%9A%E5%A3%AB%E5%BA%94%E8%AF%A5%E6%8E%8C%E6%8F%A1%E7%9A%8452%E4%B8%AA%E7%9F%A5%E8%AF%86%E7%82%B9%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89/</url>
    <content><![CDATA[<p>注：本文内容为转载</p>
<p>Bristol大学的密码安全工作组为密码学和信息安全相关的博士准备了52个基本知识点，详情见http://www.cs.bris.ac.uk/Research/CryptographySecurity/knowledge.html。</p>
<p>密码学是一个高度跨学科的领域，包含纯数学、计算机科学以及电子工程等多方面的知识。考虑读研读博的学生专业知识背景不一，Bristol大学对这方面的知识点进行了一个全面的总结和覆盖。52个知识点，Bristol大学推荐所有博一学生花一年的时间应该基本掌握，也就是差不多一个星期掌握一个知识点。掌握这些知识点后，对之后的课堂学习、项目执行、论文研读、科研协作、参加国际会议、与密码学者沟通会大有益处；要不然，可能一直处于懵懵懂懂的状态，荒废学业。</p>
<a id="more"></a>
<p>目前Bristol大学的密码工作组也开了一个博客“<span class="exturl" data-url="aHR0cDovL2JyaXN0b2xjcnlwdG8uYmxvZ3Nwb3QuY29tLyVFMiU4MCU5RA==">http://bristolcrypto.blogspot.com/”<i class="fa fa-external-link-alt"></i></span> 来分别分析这些知识点。下面列出这52个需要掌握的知识点：</p>
<h1 id="computer-engineering-e-计算机工程方面"><a class="markdownIt-Anchor" href="#computer-engineering-e-计算机工程方面"></a> Computer Engineering ([E]) 计算机工程方面</h1>
<p>Number 1：What is the difference between the following?</p>
<ul>
<li>
<p>A general-purpose processor.</p>
</li>
<li>
<p>A general-purpose processor with instruction-set extensions.</p>
</li>
<li>
<p>A special-purpose processor (or co-processor).</p>
</li>
<li>
<p>An FPGA.</p>
</li>
</ul>
<p>Number 2：What is the difference between a multi-core processor and a vector processor?</p>
<p>Number 3：Estimate the relative computational and storage capabilities of…</p>
<ul>
<li>
<p>a smart-card</p>
</li>
<li>
<p>a micro-controller (i.e. a sensor node)</p>
</li>
<li>
<p>an embedded or mobile computer (e.g., a mobile phone or PDA)</p>
</li>
<li>
<p>a laptop- or desktop-class computer.</p>
</li>
</ul>
<h1 id="theoretical-computer-science-f-理论计算机科学方面"><a class="markdownIt-Anchor" href="#theoretical-computer-science-f-理论计算机科学方面"></a> Theoretical Computer Science ([F]) 理论计算机科学方面</h1>
<p>Number 4：What is meant by the complexity class P?</p>
<p>Number 5：What is meant by the complexity class NP?</p>
<p>Number 6：How can we interpret NP as the set of theorems whose proofs can be checked in polynomial time?</p>
<p>Number 7：How does randomness help in computation, and what is the class BPP?</p>
<p>Number 8：How does interaction help in computation, and what is the class IP?</p>
<p>Number 9：What are Shannon’s definitions of entropy and information?</p>
<h1 id="mathematical-background-ab-数学背景"><a class="markdownIt-Anchor" href="#mathematical-background-ab-数学背景"></a> Mathematical Background ([A,B]) 数学背景</h1>
<p>Number 10：What is the difference between the RSA and the Strong-RSA problem?</p>
<p>Number 11：What are the DLP, CDH and DDH problems?</p>
<p>Number 12：What is the elliptic curve group law?</p>
<p>Number 13：Outline the use and advantages of projective point representation.</p>
<p>Number 14：What is a cryptographic pairing?</p>
<h1 id="basic-practical-or-deployed-cryptographic-schemes-and-protocols-a-基本密码机制与协议"><a class="markdownIt-Anchor" href="#basic-practical-or-deployed-cryptographic-schemes-and-protocols-a-基本密码机制与协议"></a> Basic (Practical or Deployed) Cryptographic Schemes and Protocols ([A]) 基本密码机制与协议</h1>
<p>Number 15：Describe the key generation, encryption and decryption algorithms for RSA-OAEP and ECIES.</p>
<p>Number 16： Describe the key generation, signature and verification algorithms for DSA, Schnorr and RSA-FDH.</p>
<p>Number 17：Describe and compare the round structure of DES and AES.</p>
<p>Number 18：Draw a diagram (or describe) the ECB, CBC and CTR modes of operation.</p>
<p>Number 19：Describe the Shamir secret sharing scheme.</p>
<p>Number 20：How are Merkle-Damgaard style hash functions constructed?</p>
<h1 id="cryptographic-implementation-details-a-密码实现详情"><a class="markdownIt-Anchor" href="#cryptographic-implementation-details-a-密码实现详情"></a> Cryptographic Implementation Details ([A]) 密码实现详情</h1>
<p>Number 21：How does the CRT method improve performance of RSA?</p>
<p>Number 22：How do you represent a number and multiply numbers in Montgomery arithmetic?</p>
<p>Number 23：Write a C program to implement Montgomery arithmetic.</p>
<p>Number 24：Describe the binary, m-ary and sliding window exponentiation algorithms.</p>
<p>Number 25：Describe methods for modular reduction using “special” primes that define GF§ and GF(2^n).</p>
<p>Number 26：Describe the NAF scalar multiplication algorithm.</p>
<h1 id="security-definitions-and-proofs-abc-安全定义和证明"><a class="markdownIt-Anchor" href="#security-definitions-and-proofs-abc-安全定义和证明"></a> Security Definitions and Proofs ([A,B,C]) 安全定义和证明</h1>
<p>Number 27：What is the IND-CCA security definition for symmetric key encryption?</p>
<p>Number 28：What is the IND-CCA security definition for public key encryption?</p>
<p>Number 29：What is the UF-CMA security definition for digital signatures?</p>
<p>Number 30：Roughly outline the BR security definition for key agreement?</p>
<p>Number 31：Give one proof of something which involves game hopping</p>
<p>Number 32：Outline the difference between a game based and a simulation based security definition.</p>
<h1 id="mathematical-attacks-ab-数学攻击"><a class="markdownIt-Anchor" href="#mathematical-attacks-ab-数学攻击"></a> Mathematical Attacks ([A,B]) 数学攻击</h1>
<p>Number 33：How does the Bellcore attack work against RSA with CRT?</p>
<p>Number 34：Describe the Baby-Step/Giant-Step method for breaking DLPs</p>
<p>Number 35：Give the rough idea of Pollard rho, Pollard “kangaroo” and parallel Pollard rho attacks on ECDLP.</p>
<p>Number 36：What is meant by index calculus algorithms?</p>
<p>Number 37：Roughly outline (in two paragraphs only) how the NFS works.</p>
<h1 id="practical-attacks-d-实际攻击"><a class="markdownIt-Anchor" href="#practical-attacks-d-实际攻击"></a> Practical Attacks ([D]) 实际攻击</h1>
<p>Number 38：What is the difference between a covert channel and a side-channel?</p>
<p>Number 39：What is the difference between a side-channel attack and a fault attack?</p>
<p>Number 40：What is usually considered the difference between DPA and SPA?</p>
<p>Number 41：Are all side channels related to power analysis?</p>
<p>Number 42：Look at your C code for Montgomery multiplication above; can you determine where it could leak side channel information?</p>
<p>Number 43：Describe some basic (maybe ineffective) defences against side channel attacks proposed in the literature for AES.</p>
<p>Number 44：Describe some basic (maybe ineffective) defences against side channel attacks proposed in the literature for ECC.</p>
<p>Number 45：Describe some basic (maybe ineffective) defences against side channel attacks proposed in the literature for RSA.</p>
<p>#Advanced Protocols and Constructions ([A,B]) 高级协议与构造</p>
<p>Number 46：What is the Fiat-Shamir transform?</p>
<p>Number 47：What does correctness, soundness and zero-knowledge mean in the context of a Sigma protocol?</p>
<p>Number 48：What is the purpose and use of a TPM?</p>
<p>Number 49：Describe the basic ideas behind IPSec and TLS.</p>
<p>Number 50：What is the BLS pairing based signature scheme?</p>
<p>Number 51：What is the security model for ID-based encryption, and describe one IBE scheme.</p>
<p>Number 52：Pick an advanced application concept such as e-Voting, Auctions or Multi-Party Computation. What are the rough security requirements of such a system?</p>
<h1 id="further-reading-进一步参考文献"><a class="markdownIt-Anchor" href="#further-reading-进一步参考文献"></a> Further Reading （进一步参考文献）</h1>
<p>[A] Nigel’s book is deliberately informal and tries to give quick flavours of what is important in theory and practice.</p>
<p>[B] The Katz Lindell book is a better formal introduction to modern theoretical cryptography but it is less good in its treatment of what is  important in the real world (e.g. the coverage of AES, ECC, implementation, etc is quite limited).</p>
<p>[C] Goldreich’s two volume book is a very good introduction to the deep theory, but deliberately does not cover practical cryptography.</p>
<p>[D] Elisabeth’s DPA book is the best introduction to all things about side-channels.</p>
<p>[E] Dan’s book is a good starting place for computer architecture and learning VHDL.</p>
<p>[F] Goldreich’s  book on complexity theory is a good place to start. Its approach is much more down-to-earth and sensible than other approaches (i.e. P vs NP is presented in terms of is it easier to check or find proofs?)</p>
]]></content>
      <categories>
        <category>信息安全</category>
        <category>转载</category>
      </categories>
      <tags>
        <tag>信息安全</tag>
        <tag>其它</tag>
      </tags>
  </entry>
  <entry>
    <title>密码学-哈希函数</title>
    <url>/2021/01/09/%E5%AF%86%E7%A0%81%E5%AD%A6-%E5%93%88%E5%B8%8C%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="basic-concepts"><a class="markdownIt-Anchor" href="#basic-concepts"></a> Basic concepts</h1>
<h2 id="definition"><a class="markdownIt-Anchor" href="#definition"></a> Definition</h2>
<p>A <strong>hash function</strong> (with output length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi></mrow><annotation encoding="application/x-tex">\ell</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">ℓ</span></span></span></span>) is a pair of probabilistic polynomial-time algorithms <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>H</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(Gen,H)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mclose">)</span></span></span></span> satisfying the following:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span> is a probabilistic algorithm that takes as input a security parameter <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and outputs a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span>. We assume that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> is implicit in <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span> takes as input a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span> and a string <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">x\in \{0,1\}^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span> and outputs a string <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>H</mi><mi>s</mi></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">H^{s}(x)\in \{0,1\}^{\ell(n)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> (<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> is the security parameter implicit in <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span>).</li>
</ul>
<p>In general case, the function takes as input strings of arbitrary length. If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>H</mi><mi>s</mi></msup></mrow><annotation encoding="application/x-tex">H^s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span></span></span></span></span></span></span> is defined only for inputs <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mrow><msup><mi mathvariant="normal">ℓ</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">x\in\{0,1\}^{\ell &#x27;(n)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.19248em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="normal">ℓ</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\ell &#x27;(n)&gt;\ell(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">ℓ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℓ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>, then we say that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>H</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(Gen,H)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mclose">)</span></span></span></span> is a fixed-length hash function for inputs of length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="normal">ℓ</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">\ell &#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord">ℓ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>. In this case, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span> is also called a <em>compression function</em>.</p>
<a id="more"></a>
<h2 id="collision-resistance"><a class="markdownIt-Anchor" href="#collision-resistance"></a> Collision resistance</h2>
<p>First we define an collision-finding experiment <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi>a</mi><mi>s</mi><mi>h</mi><mo>−</mo><mi>c</mi><mi>o</mi><mi>l</mi><msub><mi>l</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Hash-coll_{\mathcal{A},\pi}(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> for a hash function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi><mo>=</mo><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>H</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi=(Gen,H)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mclose">)</span></span></span></span>, an adversary <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> and a security parameter <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>:</p>
<ol>
<li>A key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span> is generated by running <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gen(1^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>.</li>
<li>The adversary <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> is given <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span> and outputs <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo separator="true">,</mo><msup><mi>x</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">x,x&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>.</li>
<li>The output of the experiment is defined to be 1 if and only if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mi mathvariant="normal">≠</mi><msup><mi>x</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">x\ne x&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>H</mi><mi>s</mi></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>H</mi><mi>s</mi></msup><mo stretchy="false">(</mo><msup><mi>x</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H^s(x)=H^s(x&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>. In such a case we say that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> has found a collision.</li>
</ol>
<p>A hash function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi><mo>=</mo><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>H</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi=(Gen,H)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mclose">)</span></span></span></span> is collision resistant if for all probabilistic polynomial-time adversaries <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> there is a negligible function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">negl</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> such that</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><mi>H</mi><mi>a</mi><mi>s</mi><mi>h</mi><mo>−</mo><mi>c</mi><mi>o</mi><mi>l</mi><msub><mi>l</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo stretchy="false">]</mo><mo>≤</mo><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Pr[Hash-coll_{\mathcal{A},\pi}(n)=1]\le negl(n)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></p>
<h2 id="unkeyed-hash-functions"><a class="markdownIt-Anchor" href="#unkeyed-hash-functions"></a> Unkeyed hash functions</h2>
<p>Cryptographic hash functions used in practice generally have a fixed output length and are usually unkeyed, meaning that the hash function is just a fixed function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo>:</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup><mo>→</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi mathvariant="normal">ℓ</mi></msup></mrow><annotation encoding="application/x-tex">H:\{0,1\}^*\rightarrow \{0,1\}^\ell</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">ℓ</span></span></span></span></span></span></span></span></span></span></span>. Although this is problematic theoretically since <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span> must have a collision pair, the unkeyed cryptographic hash functions used in the real world are collision resistant for all practical purposes. It is due to the fact that colliding pairs are unknown and computationally difficult to find even though they must exist.</p>
<p>In proofs of security for the construction based on collision resistance of a hash function, we just assume that any efficient ways to find a collision in <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span> can be used by the adversaries.</p>
<h2 id="weaker-notions-of-security"><a class="markdownIt-Anchor" href="#weaker-notions-of-security"></a> Weaker notions of security</h2>
<p>In some applications, it suffices to rely on security requirements weaker than collision resistance. These include:</p>
<ul>
<li><strong>Second-preimage or target-collision resistance</strong>: if given <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span> and a uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>, it is infeasible for a PPT adversary to find <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mo mathvariant="normal">′</mo></msup><mi mathvariant="normal">≠</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">x&#x27;\ne x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> such that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>H</mi><mi>s</mi></msup><mo stretchy="false">(</mo><msup><mi>x</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo><mo>=</mo><msup><mi>H</mi><mi>s</mi></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H^s(x&#x27;)=H^s(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>. Any hash function that is collision resistant is also second preimage resistant.</li>
<li><strong>Preimage resistance</strong>: if given <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span> and a uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>, it is infeasible for a PPT adversary to find a value <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> such that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>H</mi><mi>s</mi></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">H^s(x)=y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span> (this essentially means that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>H</mi><mi>s</mi></msup></mrow><annotation encoding="application/x-tex">H^s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span></span></span></span></span></span></span> is one-way).</li>
</ul>
<h1 id="domain-extension-the-merkle-damgard-transform"><a class="markdownIt-Anchor" href="#domain-extension-the-merkle-damgard-transform"></a> Domain extension: the Merkle-Damgard transform</h1>
<p>Hash functions are often constructed by first designing a collision-resistant compression function handling fixed-length inputs, and then using domain extension to handle arbitrary-length inputs. The Merkle-Damgard transform is a common approach for extending a compression function to a full-fledged hash function, while maintaining the collision-resistance property of the former.</p>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(Gen,h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mclose">)</span></span></span></span> be a fixed-length hash function for inputs of length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mi>n</mi></mrow><annotation encoding="application/x-tex">2n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault">n</span></span></span></span> and with output length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>. Construct hash function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>H</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(Gen,H)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mclose">)</span></span></span></span> as follows:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span>: a probabilistic algorithm that takes as input a security parameter <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and outputs a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span>: on input a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span> and a string <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">x\in \{0,1\}^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span> of length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo>&lt;</mo><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">L&lt;2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>, do the following:
<ol>
<li>Set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mo>=</mo><mo stretchy="false">⌈</mo><mfrac><mi>L</mi><mi>n</mi></mfrac><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">B=\lceil \frac{L}{n}\rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌉</span></span></span></span> (i.e., the number of blocks in <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>). Pad <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> with zeros so its length is a multiple of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>. Parse the padded result as the sequence of n-bit blocks <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">x_1,\dots,x_B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>. Set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mrow><mi>B</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mi>L</mi></mrow><annotation encoding="application/x-tex">x_{B+1}=L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span></span></span></span>, where <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span></span></span></span> is encoded as an n-bit string.</li>
<li>Set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mn>0</mn></msub><mo>=</mo><msup><mn>0</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">z_0=0^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> (this is also called the IV).</li>
<li>For <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>B</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i=1,\dots,B+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>, compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mi>i</mi></msub><mo>=</mo><msup><mi>h</mi><mi>s</mi></msup><mo stretchy="false">(</mo><msub><mi>z</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">z_i=h^s(z_{i-1}||x_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>.</li>
<li>Output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mrow><mi>B</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">z_{B+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>.</li>
</ol>
</li>
</ul>
<p>The above construction is illustrated as the following figure:</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002747.png" alt="image-20201019225205206" style="zoom: 33%;" />
<h1 id="message-authentication-using-hash-functions"><a class="markdownIt-Anchor" href="#message-authentication-using-hash-functions"></a> Message authentication using hash functions</h1>
<h2 id="hash-and-mac"><a class="markdownIt-Anchor" href="#hash-and-mac"></a> Hash-and-MAC</h2>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi><mo>=</mo><mo stretchy="false">(</mo><mi>M</mi><mi>a</mi><mi>c</mi><mo separator="true">,</mo><mi>V</mi><mi>r</mi><mi>f</mi><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi=(Mac,Vrfy)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> be a MAC for messages of length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\ell(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℓ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>, and let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mi>H</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><msub><mi>n</mi><mi>H</mi></msub><mo separator="true">,</mo><mi>H</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi_H=(Gen_H,H)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mclose">)</span></span></span></span> be a hash function with output length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\ell(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℓ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>. Construct a MAC <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="normal">Π</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><msup><mi>n</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><mi>M</mi><mi>a</mi><msup><mi>c</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><mi>V</mi><mi>r</mi><mi>f</mi><msup><mi>y</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi&#x27;=(Gen&#x27;,Mac&#x27;,Vrfy&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> for arbitrary-length messages as follows:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><msup><mi>n</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">Gen&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>: on input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>, choose uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">k\in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and run <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><msub><mi>n</mi><mi>H</mi></msub><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gen_{H}(1^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> to obtain <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span>; the key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>k</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mo>&lt;</mo><mi>k</mi><mo separator="true">,</mo><mi>s</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">k&#x27;=&lt;k,s&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>a</mi><msup><mi>c</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">Mac&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>: on input a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>k</mi><mo separator="true">,</mo><mi>s</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;k,s&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">m\in \{0,1\}^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>, output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>←</mo><mi>M</mi><mi>a</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msup><mi>H</mi><mi>s</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t\leftarrow Mac_k(H^s(m))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><msup><mi>y</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">Vrfy&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>: on input a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>k</mi><mo separator="true">,</mo><mi>s</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;k,s&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>, a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">m\in \{0,1\}^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>, and a MAC tag <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>, output 1 if and only if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><msub><mi>y</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msup><mi>H</mi><mi>s</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">Vrfy_k(H^s(m),t)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>.</li>
</ul>
<p>If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span> is a secure MAC for messages of length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi></mrow><annotation encoding="application/x-tex">\ell</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">ℓ</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mi>H</mi></msub></mrow><annotation encoding="application/x-tex">\Pi_H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> is collision resistant, then the above construction is a secure MAC for arbitrary-length messages.</p>
<h2 id="hmac"><a class="markdownIt-Anchor" href="#hmac"></a> HMAC</h2>
<p>If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span> is constructed using the Merkle-Damgard transform (and the most real-world hash functions are), then a MAC designed in this way is completely insecure (why?). Instead, two layers of hashing is used.</p>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><msub><mi>n</mi><mi>H</mi></msub><mo separator="true">,</mo><mi>H</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(Gen_H,H)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mclose">)</span></span></span></span> be a hash function constructed by applying the Merkle-Damg\aa{}rd transform to a compression function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><msub><mi>n</mi><mi>H</mi></msub><mo separator="true">,</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(Gen_H,h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mclose">)</span></span></span></span> taking inputs of length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>+</mo><msup><mi>n</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">n+n&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>. Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mi>p</mi><mi>a</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">ipad</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">p</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>o</mi><mi>p</mi><mi>a</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">opad</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span></span></span></span> be fixed constants of length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">n&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>. Define a MAC as follows:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span>: on input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>, run <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><msub><mi>n</mi><mi>H</mi></msub><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gen_H(1^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> to obtain a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span>. Also choose uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><msup><mi>n</mi><mo mathvariant="normal">′</mo></msup></msup></mrow><annotation encoding="application/x-tex">k\in \{0,1\}^{n&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.19248em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>. Output the key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>s</mi><mo separator="true">,</mo><mi>k</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;s,k&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>a</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Mac</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span></span></span></span>: on input a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>s</mi><mo separator="true">,</mo><mi>k</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;s,k&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">m\in \{0,1\}^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>, output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>:</mo><mo>=</mo><msup><mi>H</mi><mi>s</mi></msup><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>k</mi><mtext> </mtext><mi>x</mi><mi>o</mi><mi>r</mi><mtext> </mtext><mi>o</mi><mi>p</mi><mi>a</mi><mi>d</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msup><mi>H</mi><mi>s</mi></msup><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>k</mi><mtext> </mtext><mi>x</mi><mi>o</mi><mi>r</mi><mtext> </mtext><mi>i</mi><mi>p</mi><mi>a</mi><mi>d</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>m</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t:=H^s((k~xor~opad)||H^s((k~xor~ipad)||m))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace nobreak"> </span><span class="mord mathdefault">x</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace nobreak"> </span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace nobreak"> </span><span class="mord mathdefault">x</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace nobreak"> </span><span class="mord mathdefault">i</span><span class="mord mathdefault">p</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">Vrfy</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>: on input a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>s</mi><mo separator="true">,</mo><mi>k</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;s,k&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>, a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">m\in \{0,1\}^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>, and a tag <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>, output 1 if and only if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>=</mo><msup><mi>H</mi><mi>s</mi></msup><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>k</mi><mtext> </mtext><mi>x</mi><mi>o</mi><mi>r</mi><mtext> </mtext><mi>o</mi><mi>p</mi><mi>a</mi><mi>d</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msup><mi>H</mi><mi>s</mi></msup><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>k</mi><mtext> </mtext><mi>x</mi><mi>o</mi><mi>r</mi><mtext> </mtext><mi>i</mi><mi>p</mi><mi>a</mi><mi>d</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>m</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t=H^s((k~xor~opad)||H^s((k~xor~ipad)||m))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace nobreak"> </span><span class="mord mathdefault">x</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace nobreak"> </span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace nobreak"> </span><span class="mord mathdefault">x</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace nobreak"> </span><span class="mord mathdefault">i</span><span class="mord mathdefault">p</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>.</li>
</ul>
<p>The HMAC construction is illustrated as the following figure:</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002758.png" alt="image-20201019225435750" style="zoom: 50%;" />
<h1 id="generic-attacks-on-hash-functions"><a class="markdownIt-Anchor" href="#generic-attacks-on-hash-functions"></a> Generic attacks on hash functions</h1>
<h2 id="birthday-attacks"><a class="markdownIt-Anchor" href="#birthday-attacks"></a> Birthday attacks</h2>
<p>The collision-finding algorithm we have described is often called a birthday attack.The birthday problem is the following: if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span> people are in a room, what is the probability that two of them have the same birthday? (Assume birthdays are uniformly and independently distributed among the 365 days of a non-leap year.)</p>
<p>For <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>y</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">y_1,\dots,y_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> chosen uniformly in <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>N</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{1,\dots,N\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">}</span></span></span></span>, the probability of a collision is roughly 1/2 when <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi><mo>=</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">(</mo><msup><mi>N</mi><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">q=\Theta(N^{1/2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>. So, for a hash function to resist collision-finding attacks that run in time <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span>, the output length of the hash function needs to be at least <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mi>log</mi><mo>⁡</mo><mi>T</mi></mrow><annotation encoding="application/x-tex">2\log T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span> bits.</p>
<h2 id="small-space-birthday-attacks"><a class="markdownIt-Anchor" href="#small-space-birthday-attacks"></a> Small-space birthday attacks</h2>
<p>The small-space birthday attack has similar time complexity and success probability as birthday attacks, but require drastically reduced memory requirements (use constant memory). The attack begins by choosing a random value <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and then computing <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>:</mo><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_i:=H(x_{i-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mrow><mn>2</mn><mi>i</mi></mrow></msub><mo>:</mo><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>H</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mn>2</mn><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_{2i}:=H(H(x_{2(i-1)}))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo></mrow><annotation encoding="application/x-tex">i=1,2,\dots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span></span></span></span>. In each step the values <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mrow><mn>2</mn><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_{2i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> are compared; if they are equal then there is a collision somewhere in the sequence <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mrow><mn>2</mn><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">x_0,x_1,\dots,x_{2i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>.</p>
<h1 id="additional-application-of-hash-functions"><a class="markdownIt-Anchor" href="#additional-application-of-hash-functions"></a> Additional application of hash functions</h1>
<ul>
<li>
<p>Fingerprinting &amp; Deduplication:</p>
<p>When using a collision-resistant hash function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span>, the hash of a file <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span> can be used as a unique identifier of the file <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>. One can check the hashes of two files to determine whether they are equal. This idea is used in many applications like virus fingerprinting, file deduplication, P2P file sharing, etc.</p>
</li>
<li>
<p>Password hashing:</p>
<p>The user’s passward <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>w</mi></mrow><annotation encoding="application/x-tex">pw</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span> is stored by a hash of the password <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>p</mi><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(pw)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span> instead of a password itself. To prevent exhaustive decryption from an attacker, one way is to use “slow” hash functions (i.e., compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>H</mi><mi>I</mi></msup><mo stretchy="false">(</mo><mi>p</mi><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H^{I}(pw)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mo>&gt;</mo><mo>&gt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">I&gt;&gt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>), and another way is to introduce a salt (i.e., a long random value <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span> unique to the user)</p>
</li>
<li>
<p>Key derivation:</p>
<p>A key-derivation function provides a way to obtain a uniformly distributed string from any distribution with high (computational) min-entropy.</p>
</li>
<li>
<p>Commitment scheme:</p>
<p>A commitment scheme allows one party to “commit” to a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> by sending a commitment value <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>o</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">com</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span></span></span></span>, with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>o</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">com</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span></span></span></span> reveals nothing about <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>o</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">com</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span></span></span></span> cannot later “open” as two different messages. To commit to a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>, the sender chooses uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">r \in \{0, 1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and outputs <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>o</mi><mi>m</mi><mo>:</mo><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>m</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">com := H(m||r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span>.</p>
</li>
</ul>
<h1 id="practical-applications"><a class="markdownIt-Anchor" href="#practical-applications"></a> Practical applications</h1>
<h2 id="hash-function-from-block-ciphers"><a class="markdownIt-Anchor" href="#hash-function-from-block-ciphers"></a> Hash function from block ciphers</h2>
<p>It is possible to build a collision-resistant compression function from a block cipher. One of the most common ways is via the Davies-Meyer construction.</p>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> be a block cipher with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>-bit key length and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi></mrow><annotation encoding="application/x-tex">\ell</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">ℓ</span></span></span></span>-bit block length. The compression function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo>:</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mrow><mi>n</mi><mo>+</mo><mi mathvariant="normal">ℓ</mi></mrow></msup><mo>→</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi mathvariant="normal">ℓ</mi></msup></mrow><annotation encoding="application/x-tex">h:\{0,1\}^{n+\ell}\rightarrow \{0,1\}^{\ell}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0991079999999998em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">ℓ</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span></span></span></span></span></span></span></span></span></span></span></span> is defined as <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>F</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>⊕</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">h(k,x)=F_{k}(x)\oplus x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>.</p>
<p>If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> is modeled as <em>an ideal cipher</em>, then the Davies–Meyer construction yields a collision-resistant compression function. However, when instantiating the Davies-Meyer construction with concrete block ciphers, the ciphers should be designed specially for this purpose (block ciphers designed for encryption like DES and AES should not be used).</p>
<h2 id="md5"><a class="markdownIt-Anchor" href="#md5"></a> MD5</h2>
<p>MD5 is a hash function with a 128-bit output length. Today, the collisions in MD5 can be found within one minute. So MD5 should not be used anywhere cryptographic security is needed.</p>
<p>The detail of MD5 algorithm can refer to:</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzI3ODEzNDI5Mg==">https://www.zhihu.com/question/278134292<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2dvb2RuYW1ldXNlZC9hcnRpY2xlL2RldGFpbHMvODEwNjg2OTc=">https://blog.csdn.net/goodnameused/article/details/81068697<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h2 id="sha-family"><a class="markdownIt-Anchor" href="#sha-family"></a> SHA family</h2>
<p>The Secure Hash Algorithm (SHA) refers to a series of cryptographic hash functions standardized by NIST.</p>
<p>SHA-1 has a 160-bit output length. Theoretical analysis over the past few years indicates that collisions in SHA-1 can be found using significantly fewer than the <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>80</mn></msup></mrow><annotation encoding="application/x-tex">2^{80}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span> hash-function evaluations, and it is conjectured that a collision will be found soon. So it is recommended to be replaced by more secure hash algorithms. The details of SHA-1 can refer to: <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NtcXdhbi9hcnRpY2xlL2RldGFpbHMvODI0MTQ5NTQ=">https://blog.csdn.net/cmqwan/article/details/82414954<i class="fa fa-external-link-alt"></i></span></p>
<p>SHA-2 is a group of hash functions includes SHA-224, SHA-256, SHA-384, SHA-512, etc. SHA-2 is recommended to use in applications. The principle of SHA-256 can refer to: <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2plcnJ5ODEzMzMvYXJ0aWNsZS9kZXRhaWxzLzc4NTY2NDE4">https://blog.csdn.net/jerry81333/article/details/78566418<i class="fa fa-external-link-alt"></i></span>.</p>
<p>SHA-3(Keccak) was chosen as the next-generation replacement of SHA-2. The structure of SHA-3 is very different from SHA-1 and SHA-2. Refer to the following pages for details: <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NoZW5ncWl1bWluZy9hcnRpY2xlL2RldGFpbHMvODI4MTk3Njk=">https://blog.csdn.net/chengqiuming/article/details/82819769<i class="fa fa-external-link-alt"></i></span>, <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JsYWNrTmlnaHQxNjgvYXJ0aWNsZS9kZXRhaWxzLzgyOTUyNDg5">https://blog.csdn.net/BlackNight168/article/details/82952489<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="references"><a class="markdownIt-Anchor" href="#references"></a> References</h1>
<ol>
<li>Introduction to Modern Cryptography, Second Edition.</li>
<li>Understanding Cryptography: A Textbook for Students and Practitioners (Chinese Version).</li>
</ol>
]]></content>
      <categories>
        <category>信息安全</category>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>密码学</tag>
      </tags>
  </entry>
  <entry>
    <title>密码学-基础知识</title>
    <url>/2021/01/09/%E5%AF%86%E7%A0%81%E5%AD%A6-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<h1 id="basic-concepts"><a class="markdownIt-Anchor" href="#basic-concepts"></a> Basic concepts</h1>
<h2 id="what-is-cryptography"><a class="markdownIt-Anchor" href="#what-is-cryptography"></a> What is cryptography？</h2>
<p>The study of mathematical techniques for securing digital information, systems, and distributed computations against adversarial attacks.</p>
<h2 id="category"><a class="markdownIt-Anchor" href="#category"></a> Category</h2>
<ul>
<li>private(symmetric) key encryption: encryption and decryption use the same key.</li>
<li>public(asymmetric) key encryption: encryption and decryption use different keys.</li>
</ul>
<a id="more"></a>
<h2 id="kerckhoffs-principle"><a class="markdownIt-Anchor" href="#kerckhoffs-principle"></a> Kerckhoffs’ principle</h2>
<p><strong>Kerckhoffs’ principle</strong>: The cipher method must not be required to be secret, and it must be able to fall into the hands of the enemy without inconvenience.</p>
<p><strong>Security rely solely on secrecy of the key!</strong></p>
<p>Three primary arguments in favor of Kerckhoffs’ principle:</p>
<ul>
<li>It’s significantly easier for the parties to maintain secrecy of a short key than to keep secret the encryption/decryption algorithm.</li>
<li>In case the secret information is ever exposed, it will be much easier to change a key than to replace an encryption scheme.</li>
<li>It’s significantly easier for users to all rely on the same encryption algorithm. i.e. The encryption schemes should be standardize so that (1) compatibiity is ensured (2) encryption scheme could undergone public scrutiny.</li>
</ul>
<h1 id="historical-ciphers"><a class="markdownIt-Anchor" href="#historical-ciphers"></a> Historical ciphers</h1>
<h2 id="casears-cipher-shift-cipher"><a class="markdownIt-Anchor" href="#casears-cipher-shift-cipher"></a> Casear’s cipher (shift cipher)</h2>
<p><strong>Casear’s cipher</strong>: Shifting the letters of the alphabet <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> bits forward. At the end of the alphabet, the letters wrap around.</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>m</mi><mn>1</mn></msub><mo>…</mo><msub><mi>m</mi><mi>l</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>c</mi><mn>1</mn></msub><mo>…</mo><msub><mi>c</mi><mi>l</mi></msub><mo separator="true">,</mo><msub><mi>c</mi><mi>i</mi></msub><mo>=</mo><mo stretchy="false">[</mo><mo stretchy="false">(</mo><msub><mi>m</mi><mi>i</mi></msub><mo>+</mo><mi>k</mi><mo stretchy="false">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mn>26</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">Enc_{k}(m_{1}\dots m_{l})=c_{1}\dots c_{l}, c_{i}=[(m_{i}+k)mod 26]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord">2</span><span class="mord">6</span><span class="mclose">]</span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>e</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>c</mi><mn>1</mn></msub><mo>…</mo><msub><mi>c</mi><mi>l</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>m</mi><mn>1</mn></msub><mo>…</mo><msub><mi>m</mi><mi>l</mi></msub><mo separator="true">,</mo><msub><mi>m</mi><mi>i</mi></msub><mo>=</mo><mo stretchy="false">[</mo><mo stretchy="false">(</mo><msub><mi>c</mi><mi>i</mi></msub><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mn>26</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">Dec_{k}(c_{1}\dots c_{l})=m_{1}\dots m_{l}, m_{i}=[(c_{i}-k)mod 26]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord">2</span><span class="mord">6</span><span class="mclose">]</span></span></span></span></span></p>
<p>So it can be decrypted effortlessly(Just try by brute force).</p>
<p>e.g. encrypt <em>begin the attack now</em><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> <em>EHJLQWKHDWWDFNQRZ</em></p>
<p>Application: Online forums. It is used merely to ensure the text is unintelligible unless the reader consciously chooses to decrypt it.</p>
<p>What can we learn from that?</p>
<p><strong>Sufficient key-space principle</strong>: Any secure encryption scheme must have a key space that is sufficiently large to make an exhaustive-search attack infeasible.</p>
<p>Attention: the sufficient key-space principle gives a <strong>necessary</strong> condition for security, but not a <strong>sufficient</strong> one.</p>
<h2 id="mono-alphabetic-substitution-cipher"><a class="markdownIt-Anchor" href="#mono-alphabetic-substitution-cipher"></a> Mono-alphabetic substitution cipher</h2>
<p><strong>Mono-alphabetic substitution cipher</strong>: The key defines a map from each letter of the plaintext alphabet to some letter of the cipher text alphabet, where the map is arbitrary as long as that it be one-to-one.</p>
<p>The key space consists of all bijections(permutations) of the alphabet.</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002815.png" alt="image-20201019200916950" style="zoom:80%;" />
<p><em>tellhimaboutme</em> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> <em>GDOOKVCXEFLGCD</em></p>
<p>The key space is of size <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>26</mn><mo stretchy="false">!</mo><mo>≈</mo><msup><mn>2</mn><mn>88</mn></msup></mrow><annotation encoding="application/x-tex">26!\approx 2^{88}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span></span>, which means that the brute force attack is infeasible. But is that safe?</p>
<p>Based on the letter frequency distribution in the following figure,</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002819.png" alt="image-20201019201240626" /></p>
<p>let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">p_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> denote the frequency of the <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>th letter in the English text, we can get the following result:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mn>25</mn></munderover><msubsup><mi>p</mi><mi>i</mi><mn>2</mn></msubsup><mo>≈</mo><mn>0.065</mn></mrow><annotation encoding="application/x-tex">\sum_{i=0}^{25}p_{i}^{2}\approx 0.065
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">6</span><span class="mord">5</span></span></span></span></span></p>
<p>Attack on the Mono-alphabetic substitution cipher relies on the fact that the frequency distribution of individual letters in the English language is known.</p>
<p>The mono-alphabetic substitution cipher is still <strong>insecure</strong>, even if it has large key space!</p>
<h2 id="poly-alphabetic-substitution-cipher"><a class="markdownIt-Anchor" href="#poly-alphabetic-substitution-cipher"></a> Poly-alphabetic substitution cipher</h2>
<p><strong>Poly-alphabetic substitution cipher</strong>: The key defines a mapping that is applied on <em>blocks</em> of plaintext characters.</p>
<p>E.g.: A special case called The Vigenere cipher</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002825.png" alt="image-20201019201559161" style="zoom:67%;" />
<p>Poly-alphabet substitution ciphers “smooth out” the frequency distribution of characters in the ciphertext, which makes it harder to perform statistical analysis. A systematic attack on this scheme was only devised hundreds of years later after this cipher was invented.</p>
<p>If we know the length of the key, then the attack is relatively easy. Assuming the key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>=</mo><msub><mi>k</mi><mn>1</mn></msub><mo>…</mo><msub><mi>k</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">k=k_{1}\dots k_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, then the ciphertext can be divided into <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> parts where each part can be seen as having been encrypted using a shift cipher, which is easy to decrypt. But what if the key length is unknown?</p>
<p>Some methods for determining the key length:</p>
<ol>
<li>
<p>If the maximum length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span> of the key is not too large, we can just use brute force.</p>
</li>
<li>
<p>Kasiski’s method.</p>
<p>Find the repeated patterns of length 2 or 3 in the ciphertext first(likely to be certain bigrams or trigrams, e.g. the, am, is, are, that appears frequently). The distance between them must be a multiple of the period <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>. Then we can get <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><msub><mi>l</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>l</mi><mn>2</mn></msub><mo>…</mo><msub><mi>l</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>k</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">gcd(l_{1}, l_{2}\dots l_{n})=kt</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">c</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">t</span></span></span></span></p>
</li>
<li>
<p>Index of coincidence method</p>
<p>Recall that if the key length is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>, then in the ciphertext characters <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>c</mi><mrow><mn>1</mn><mo>+</mo><mi>t</mi></mrow></msub><mo separator="true">,</mo><msub><mi>c</mi><mrow><mn>1</mn><mo>+</mo><mn>2</mn><mi>t</mi></mrow></msub><mo separator="true">,</mo><mo>…</mo></mrow><annotation encoding="application/x-tex">c_{1}, c_{1+t}, c_{1+2t}, \dots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span></span></span></span> all resulted from encryption using same shift.</p>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">q_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> denote the observed letter frequency of the <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>th English letter in the above stream, from equation of english letter frequency we can get:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mn>25</mn></munderover><msubsup><mi>q</mi><mi>i</mi><mn>2</mn></msubsup><mo>≈</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mn>25</mn></munderover><msubsup><mi>p</mi><mi>i</mi><mn>2</mn></msubsup><mo>≈</mo><mn>0.065</mn></mrow><annotation encoding="application/x-tex">	\sum_{i=0}^{25}q_{i}^{2}\approx \sum_{i=0}^{25}p_{i}^{2}\approx 0.065
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">6</span><span class="mord">5</span></span></span></span></span></p>
</li>
</ol>
<p>So, for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>τ</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo></mrow><annotation encoding="application/x-tex">\tau =1, 2, \dots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span></span></span></span>, just look at sequence of ciphertext characters <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>c</mi><mrow><mn>1</mn><mo>+</mo><mi>τ</mi></mrow></msub><mo separator="true">,</mo><msub><mi>c</mi><mrow><mn>1</mn><mo>+</mo><mn>2</mn><mi>τ</mi></mrow></msub><mo separator="true">,</mo><mo>…</mo></mrow><annotation encoding="application/x-tex">c_{1}, c_{1+\tau}, c_{1+2\tau}, \dots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.1132em;">τ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.1132em;">τ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span></span></span></span> and calculate <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>q</mi><mn>25</mn></msub></mrow><annotation encoding="application/x-tex">q_{0}, \dots, q_{25}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>. Then compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>τ</mi></msub><mover><mo stretchy="true">=</mo><mpadded width="+0.6em" lspace="0.3em"><mrow><mi>d</mi><mi>e</mi><mi>f</mi></mrow></mpadded></mover><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mn>25</mn></msubsup><msubsup><mi>q</mi><mi>i</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">S_{\tau} \xlongequal{def}\sum_{i=0}^{25}q_{i}^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1641079999999997em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.1132em;">τ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel x-arrow"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0141079999999998em;"><span style="top:-3.228em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight x-arrow-pad"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="svg-align" style="top:-2.783em;"><span class="pstrut" style="height:2.7em;"></span><span class="hide-tail" style="height:0.334em;min-width:0.888em;"><svg width='400em' height='0.334em' viewBox='0 0 400000 334' preserveAspectRatio='xMinYMin slice'><path d='M0 50 h400000 v40H0z m0 194h40000v40H0z
M0 50 h400000 v40H0z m0 194h40000v40H0z'/></svg></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.253718em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>When <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>τ</mi><mo>=</mo><mi>t</mi></mrow><annotation encoding="application/x-tex">\tau=t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> we expect <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>τ</mi></msub><mo>≈</mo><mn>0.065</mn></mrow><annotation encoding="application/x-tex">S_{\tau}\approx 0.065</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.1132em;">τ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">6</span><span class="mord">5</span></span></span></span>, else we expect that all characters will occur with roughly equal probablity and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>τ</mi></msub><mo>≈</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mn>25</mn></msubsup><mo stretchy="false">(</mo><mfrac><mn>1</mn><mn>26</mn></mfrac><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>≈</mo><mn>0.038</mn></mrow><annotation encoding="application/x-tex">S_{\tau}\approx \sum_{i=0}^{25}(\frac{1}{26})^{2}\approx 0.038</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.1132em;">τ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.299008em;vertical-align:-0.345em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">3</span><span class="mord">8</span></span></span></span></p>
<p>What can we learn: <strong>A longer key means harder to attack.</strong></p>
<h2 id="conclusion"><a class="markdownIt-Anchor" href="#conclusion"></a> Conclusion</h2>
<p><strong>Desiging secure ciphers is hard!</strong></p>
<h2 id="principles-of-modern-cryptography"><a class="markdownIt-Anchor" href="#principles-of-modern-cryptography"></a> Principles of modern cryptography</h2>
<h2 id="formal-definitions"><a class="markdownIt-Anchor" href="#formal-definitions"></a> Formal definitions</h2>
<p><em>If you don’t understand what you want to achieve, how can you possibly know when or if you have achieved it?</em></p>
<p>Considering what threats are in scope and what security guarantees are desired. Then we can find an encryption scheme satisfying the demands. A side benefit: <em>modularity</em>.</p>
<p>A secure definition has two components:</p>
<ul>
<li>A security guarantee: what the scheme is intended to prevent the attack from doing.</li>
<li>Threat model: what actions that attacker is assumed able to carry out.</li>
</ul>
<p>A secure encryption scheme should guarantee that a ciphertext should leak no additional information about the underlying plaintext regardless of any information an attacker already has.</p>
<h2 id="precise-assumptions"><a class="markdownIt-Anchor" href="#precise-assumptions"></a> Precise assumptions</h2>
<p>The most modern cryptographic constructions cannot be proven secure unconditionally, since the proofs of their security rely on assmuptions. Any assumption is required to be made explicit and mathematically precise.</p>
<h2 id="proofs-of-security"><a class="markdownIt-Anchor" href="#proofs-of-security"></a> Proofs of security</h2>
<p>The two principles described above allow us to provide a rigorous proof that a construction satisfies a given definition under certain specified assumptions. Proofs of security give an iron-clad guarantee that no attacker will succeed.</p>
<h1 id="threats"><a class="markdownIt-Anchor" href="#threats"></a> Threats</h1>
<p>Assumptions:</p>
<ul>
<li>The attackers know the encryption algorithm.</li>
<li>The attackers can use any strategy to attack.</li>
</ul>
<h2 id="ciphertext-only-attack"><a class="markdownIt-Anchor" href="#ciphertext-only-attack"></a> Ciphertext-only attack</h2>
<p>The adversary just observes a <strong>ciphertext</strong>. The adversary attempts to determine information about the underlying plaintexts.</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002834.png" alt="image-20201019202614575" /></p>
<h2 id="known-plaintext-attack"><a class="markdownIt-Anchor" href="#known-plaintext-attack"></a> Known-plaintext attack</h2>
<p>The adversary is able to learn <strong>one or more plaintext/ciphertext pairs</strong> generated using the same key.</p>
<p>The aim of the adversary is to deduce information about the underlying plaintext of some other ciphertext produced using the same key.</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002840.png" alt="image-20201019202807841" /></p>
<h2 id="chosen-plaintext-attack"><a class="markdownIt-Anchor" href="#chosen-plaintext-attack"></a> Chosen-plaintext attack</h2>
<p>The adversary can obtain <strong>plaintext/ciphertext pairs for plaintexts <em>of its choice</em></strong>.</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002854.png" alt="image-20201019202903845" /></p>
<h2 id="chosen-ciphertext-attack"><a class="markdownIt-Anchor" href="#chosen-ciphertext-attack"></a> Chosen-ciphertext attack</h2>
<p>The adversary is able to <em>additionally</em>(compared with chosen-plaintext attack) obtain <strong>the decryption of ciphertexts <em>of its choice</em></strong>.</p>
<p>The adversary’s aim is to learn information about the underlying plaintext of some other ciphertext(whose decryption the adversary is unable to obtain directly).</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002844.png" alt="image-20201019203030004" /></p>
<h1 id="perfect-secrecy"><a class="markdownIt-Anchor" href="#perfect-secrecy"></a> Perfect secrecy</h1>
<h2 id="randomness"><a class="markdownIt-Anchor" href="#randomness"></a> Randomness</h2>
<p><strong>Randomness is essential in cryptography!</strong></p>
<p>Steps for generating random numbers:</p>
<ol>
<li>
<p>Collect a “pool” of high-entropy data. E.g. external inputs(mouse movements, hard-disk access times, etc.), system hardware(thermal/shot noise, etc.)</p>
</li>
<li>
<p>The high-entropy data is processed to yield a sequence of nearly independent and unbias bits(The raw high-entropy data might not be uniformally distributed).</p>
</li>
</ol>
<p>A poor random-number generators could make a good cryptosystem vulnerable to attack. E.g. the <code>rand()</code> function in C <code>stdlib.h</code> libaray is cryptographically insecure.</p>
<p>Principle: use a random-number generator <strong>designed for cryptographic use</strong>.</p>
<h2 id="perfect-secrecy-2"><a class="markdownIt-Anchor" href="#perfect-secrecy-2"></a> Perfect secrecy</h2>
<p><strong>Definition</strong>: an encryption scheme (Gen, Enc, Dec) with message space <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">M</mi></mrow><annotation encoding="application/x-tex">\mathcal{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">M</span></span></span></span></span> is perfectly secret if for every probability distribution over <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">M</mi></mrow><annotation encoding="application/x-tex">\mathcal{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">M</span></span></span></span></span>, every message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mi mathvariant="script">M</mi></mrow><annotation encoding="application/x-tex">m\in \mathcal{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">M</span></span></span></span></span>, and every ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>∈</mo><mi mathvariant="script">C</mi></mrow><annotation encoding="application/x-tex">c\in \mathcal{C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.05834em;">C</span></span></span></span></span> for with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><mi>C</mi><mo>=</mo><mi>c</mi><mo stretchy="false">]</mo><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">Pr[C=c]&gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><mi>M</mi><mo>=</mo><mi>m</mi><mi mathvariant="normal">∣</mi><mi>C</mi><mo>=</mo><mi>c</mi><mo stretchy="false">]</mo><mo>=</mo><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><mi>M</mi><mo>=</mo><mi>m</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">Pr[M=m|C=c]=Pr[M=m]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mclose">]</span></span></span></span></span></p>
<p>An equivalent formulation: an encryption scheme (Gen, Enc, Dec) with message space <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">M</mi></mrow><annotation encoding="application/x-tex">\mathcal{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">M</span></span></span></span></span> is perfectly secret if and only if the following equation holds for every <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo separator="true">,</mo><msup><mi>m</mi><mo mathvariant="normal">′</mo></msup><mo>∈</mo><mi mathvariant="script">M</mi></mrow><annotation encoding="application/x-tex">m, m&#x27;\in \mathcal{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">M</span></span></span></span></span>, and every <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>∈</mo><mi mathvariant="script">C</mi></mrow><annotation encoding="application/x-tex">c\in \mathcal{C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.05834em;">C</span></span></span></span></span>:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><mi>E</mi><mi>n</mi><msub><mi>c</mi><mi>K</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo><mo>=</mo><mi>c</mi><mo stretchy="false">]</mo><mo>=</mo><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><mi>E</mi><mi>n</mi><msub><mi>c</mi><mi>K</mi></msub><mo stretchy="false">(</mo><msup><mi>m</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mi>c</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">Pr[Enc_{K}(m)=c]=Pr[Enc_{K}(m&#x27;)=c]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mclose">]</span></span></span></span></span></p>
<p>Another definition based on the adversarial indistinguishability experiment <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mi>i</mi><mi>v</mi><msubsup><mi>K</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow><mrow><mi>e</mi><mi>a</mi><mi>v</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">PrivK_{\mathcal{A},\pi}^{eav}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0947689999999999em;vertical-align:-0.411439em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.424669em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.411439em;"><span></span></span></span></span></span></span></span></span></span> (eav means eavesdropper, i.e. the attacker <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> only knows the ciphertext):</p>
<ol>
<li>
<p>The adversary <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> outputs a pair of messages <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>m</mi><mn>1</mn></msub><mo>∈</mo><mi mathvariant="script">M</mi></mrow><annotation encoding="application/x-tex">m_{0}, m_{1}\in \mathcal{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">M</span></span></span></span></span>. Note that the messages are randomly chosen so <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>m</mi><mn>0</mn></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|m_{0}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>m</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|m_{1}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span> might be different.</p>
</li>
<li>
<p>A key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> is generated using Gen, and a uniform bit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">b\in \{0, 1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span> is chosen (i.e. <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">m_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> or <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">m_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> are chosen with probability <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>). Challenge ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>←</mo><mi>E</mi><mi>n</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>m</mi><mi>b</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c\leftarrow Enc_{k}(m_{b})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> is computed and given to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span>.</p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> outputs a bit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">b&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>. Note that no computation power is limited to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span>.</p>
</li>
<li>
<p>The output of the experiment is 1 if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">b&#x27;=b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>, and 0 otherwise. We say <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mi>i</mi><mi>v</mi><msubsup><mi>K</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow><mrow><mi>e</mi><mi>a</mi><mi>v</mi></mrow></msubsup><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">PrivK_{\mathcal{A},\pi}^{eav}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0947689999999999em;vertical-align:-0.411439em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.424669em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.411439em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> if the output of the experiment is 1 and in this case we say that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> succeeds.</p>
</li>
</ol>
<p>Encryption scheme <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi><mo>=</mo><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>E</mi><mi>n</mi><mi>c</mi><mo separator="true">,</mo><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi=(Gen, Enc, Dec)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span> with message space <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">M</mi></mrow><annotation encoding="application/x-tex">\mathcal{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">M</span></span></span></span></span> is perfectly indistinguishable if for every <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> it holds that</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \cal at position 11: Pr[PrivK_{\̲c̲a̲l̲{A},\pi}^{eav}=…'>Pr[PrivK_{\cal{A},\pi}^{eav}=1]=\frac{1}{2} \text{(i.e. random guess)}
</p>
<p>And encryption scheme <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span> is perfectly secret if and only if it is perfectly indistinguishable.</p>
<p>In a word, perfect secrecy means the probability distribution of the ciphertext does not depend on the plaintext.</p>
<h2 id="one-time-pad"><a class="markdownIt-Anchor" href="#one-time-pad"></a> One-time pad</h2>
<p><strong>Construction of one-time pad encryption</strong>:</p>
<p>Fix an integer <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\ell &gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">ℓ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>. The message space <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">M</mi></mrow><annotation encoding="application/x-tex">\mathcal{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">M</span></span></span></span></span>, key space <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">K</mi></mrow><annotation encoding="application/x-tex">\mathcal{K}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.01445em;">K</span></span></span></span></span> and ciphertext space <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">C</mi></mrow><annotation encoding="application/x-tex">\mathcal{C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.05834em;">C</span></span></span></span></span> are all equal to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi mathvariant="normal">ℓ</mi></msup></mrow><annotation encoding="application/x-tex">\{0, 1\}^{\ell}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span></span></span></span></span></span></span></span></span></span></span></span>(the set of all binary strings with length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi></mrow><annotation encoding="application/x-tex">\ell</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">ℓ</span></span></span></span>). The one-time pad encryption is constructed as follows:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span>: the key-generation algorithm chooses a key from <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">K</mi><mo>=</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi mathvariant="normal">ℓ</mi></msup></mrow><annotation encoding="application/x-tex">\mathcal{K}=\{0, 1\}^{\ell}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.01445em;">K</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span></span></span></span></span></span></span></span></span></span></span></span> according to uniform distribution. (i.e. each of the <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi mathvariant="normal">ℓ</mi></msup></mrow><annotation encoding="application/x-tex">2^{\ell}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span></span></span></span></span></span></span></span></span></span></span></span> strings in the space is chosen with equal probability <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mo>−</mo><mi mathvariant="normal">ℓ</mi></mrow></msup></mrow><annotation encoding="application/x-tex">2^{-\ell}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">ℓ</span></span></span></span></span></span></span></span></span></span></span></span>).</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><mi>c</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">Enc:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span> given a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi mathvariant="normal">ℓ</mi></msup></mrow><annotation encoding="application/x-tex">k\in \{0, 1\}^{\ell}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span></span></span></span></span></span></span></span></span></span></span></span> and a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi mathvariant="normal">ℓ</mi></msup></mrow><annotation encoding="application/x-tex">m\in \{0, 1\}^{\ell}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span></span></span></span></span></span></span></span></span></span></span></span>, the encryption algorithm outputs the ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>:</mo><mo>=</mo><mi>k</mi><mtext> XOR </mtext><mi>m</mi></mrow><annotation encoding="application/x-tex">c:=k\text{ XOR }m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord text"><span class="mord"> XOR </span></span><span class="mord mathdefault">m</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Dec</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span></span></span></span>: given a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi mathvariant="normal">ℓ</mi></msup></mrow><annotation encoding="application/x-tex">k\in \{0, 1\}^{\ell}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span></span></span></span></span></span></span></span></span></span></span></span> and a ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi mathvariant="normal">ℓ</mi></msup></mrow><annotation encoding="application/x-tex">c\in \{0, 1\}^{\ell}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span></span></span></span></span></span></span></span></span></span></span></span>, the decryption algorithm outputs the message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>:</mo><mo>=</mo><mi>k</mi><mtext> XOR </mtext><mi>c</mi></mrow><annotation encoding="application/x-tex">m:=k\text{ XOR }c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord text"><span class="mord"> XOR </span></span><span class="mord mathdefault">c</span></span></span></span>  (<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mtext> XOR </mtext><mi>b</mi><mtext> XOR </mtext><mi>b</mi><mo>=</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">a\text{ XOR }b\text{ XOR }b=a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord text"><span class="mord"> XOR </span></span><span class="mord mathdefault">b</span><span class="mord text"><span class="mord"> XOR </span></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>).</li>
</ul>
<p>The one-time pad encryption scheme is perfectly secret. But the most prominent drawback is that the key is as long as the message.</p>
<p>Moreover, the one-time pad is only secure if used once(just as the name indicates). E.g., if two messages <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo separator="true">,</mo><msup><mi>m</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">m, m&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> are encrypted using the same key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>, an adversary who obtains <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo separator="true">,</mo><msup><mi>c</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">c, c&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> can compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mtext> XOR </mtext><msup><mi>c</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>m</mi><mtext> XOR </mtext><msup><mi>m</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">c\text{ XOR }c&#x27;=m\text{ XOR }m&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord text"><span class="mord"> XOR </span></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord text"><span class="mord"> XOR </span></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> and thus learn where the two messages differ(information leakage).</p>
<p>limitations of perfect secrecy: if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi><mo>=</mo><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>E</mi><mi>n</mi><mi>c</mi><mo separator="true">,</mo><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi=(Gen, Enc, Dec)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span> is a perfectly secret encryption scheme with message space <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">M</mi></mrow><annotation encoding="application/x-tex">\mathcal{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">M</span></span></span></span></span> and key space <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">K</mi></mrow><annotation encoding="application/x-tex">\mathcal{K}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.01445em;">K</span></span></span></span></span>, then <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="script">K</mi><mi mathvariant="normal">∣</mi><mo>≥</mo><mi mathvariant="normal">∣</mi><mi mathvariant="script">M</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|\mathcal{K}|\ge |\mathcal{M}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathcal" style="margin-right:0.01445em;">K</span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathcal">M</span></span><span class="mord">∣</span></span></span></span>.</p>
<h1 id="references"><a class="markdownIt-Anchor" href="#references"></a> References</h1>
<ol>
<li>Jonathan Katz, Yehuda Lindell. Introduction to Modern Cryptography, Second Edition.</li>
</ol>
]]></content>
      <categories>
        <category>信息安全</category>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>密码学</tag>
      </tags>
  </entry>
  <entry>
    <title>密码学-消息验证码</title>
    <url>/2021/01/09/%E5%AF%86%E7%A0%81%E5%AD%A6-%E6%B6%88%E6%81%AF%E9%AA%8C%E8%AF%81%E7%A0%81/</url>
    <content><![CDATA[<h1 id="basic-concepts"><a class="markdownIt-Anchor" href="#basic-concepts"></a> Basic concepts</h1>
<h2 id="message-integrity"><a class="markdownIt-Anchor" href="#message-integrity"></a> Message integrity</h2>
<p><strong>Message integrity (Message authentication)</strong>: each party should be able to identify when a message it receives was sent by the party claiming to send it, and it was not modified in transit.</p>
<p>E.g. A bank should make sure a transfer request is sent by a legitimate user, and the received request should not be modified.</p>
<p><em>Remember that encryption does not privide any integrity unless it is specifically designed with that purpose!</em></p>
<a id="more"></a>
<p>E.g. For a stream cipher, the attacker can filp one or more bits of the ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span> to modify the decrypted plaintext. Since the attacker do not know the plaintext, it does not contradict the concept of secrecy.</p>
<h2 id="message-authentication-codes-mac"><a class="markdownIt-Anchor" href="#message-authentication-codes-mac"></a> Message Authentication Codes (MAC)</h2>
<h3 id="definition"><a class="markdownIt-Anchor" href="#definition"></a> Definition</h3>
<p>A message authentication code (MAC) consists of three probabilistic polynomial-time algorithms <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>M</mi><mi>a</mi><mi>c</mi><mo separator="true">,</mo><mi>V</mi><mi>r</mi><mi>f</mi><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(Gen,Mac,Vrfy)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> such that</p>
<ol>
<li>The key-generation algorithm <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span> takes as input the security parameter <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and outputs a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>k</mi><mi mathvariant="normal">∣</mi><mo>≥</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">|k|\ge n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>.</li>
<li>The tag-generation algorithm <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>a</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Mac</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span></span></span></span> takes as input a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> and a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">m\in \{0,1\}^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>, and outputs a tag <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>. We write it as <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>←</mo><mi>M</mi><mi>a</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t\leftarrow Mac_{k}(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span> since the algorithm might be randomized.</li>
<li>The deterministic verification algorithm <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">Vrfy</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span> takes as input a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>, a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> and a tag <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>. It outputs a bit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>, with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">b=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> meaning valid and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">b=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> meaning invalid. We write this as <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>:</mo><mo>=</mo><mi>V</mi><mi>r</mi><mi>f</mi><msub><mi>y</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">b:=Vrfy_{k}(m,t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>.</li>
</ol>
<p>It is required that for every <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>, every key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> output by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gen(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> and every <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">m\in \{0,1\}^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>, it holds that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><msub><mi>y</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>M</mi><mi>a</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">Vrfy_{k}(m,Mac_{k}(m))=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>.</p>
<h3 id="security-of-macs"><a class="markdownIt-Anchor" href="#security-of-macs"></a> Security of MACs</h3>
<p>The message authentication experiment <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>a</mi><mi>c</mi><mo>−</mo><mi>f</mi><mi>o</mi><mi>r</mi><mi>g</mi><msub><mi>e</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Mac-forge_{\mathcal{A},\pi}(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>:</p>
<ol>
<li>A key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> is generated by running <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gen(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>.</li>
<li>The adversary <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> is given input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and oracle access to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>a</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Mac_{k}(\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span>. The adversary eventually outputs <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m,t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span> (<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> could be any messages of its choice). Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">Q</mi></mrow><annotation encoding="application/x-tex">\mathcal{Q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal">Q</span></span></span></span></span> denote the set of all queries that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> asked its oracle.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> succeeds if and only if (1) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><msub><mi>y</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">Vrfy_{k}(m,t)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> and (2) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi mathvariant="normal">∉</mi><mi mathvariant="script">Q</mi></mrow><annotation encoding="application/x-tex">m \notin \mathcal{Q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mord"><span class="mrel">∈</span></span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="llap"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="inner"><span class="mord"><span class="mord">/</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal">Q</span></span></span></span></span>. In that case the output of the experiment is defined to be 1.</li>
</ol>
<p>A message authentication code <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi><mo>=</mo><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>M</mi><mi>a</mi><mi>c</mi><mo separator="true">,</mo><mi>V</mi><mi>r</mi><mi>f</mi><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi =(Gen, Mac, Vrfy)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> is existentilly unforgeable under an adaptive chosen-message attack, or just <strong>secure</strong>, if for all probabilistic polynomial-time adversaries <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span>, there is a negligible function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">negl</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> such that</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \cal at position 15: Pr[Mac-forge_{\̲c̲a̲l̲{A},\pi}(n)=1]\…'>Pr[Mac-forge_{\cal{A},\pi}(n)=1]\le negl(n)
</p>
<p>This definition of security is strong in two respects. First, the adversary is allowed to request <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>A</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">MAC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> tags for any messages of its choice. Second, the adversary is considered to have broken the scheme if it can output a valid tag on any previously unauthenticated message.</p>
<p>By making the definition of security for MACs as strong as possible, we ensure that secure MACs can be used for a wide range of purposes without worring about compatibility of the MAC with the semantics of the application.</p>
<p>Remember the MAC itself offers <em>no protection against replay attacks!</em> To prevent replay attacks, two common techniques are used:</p>
<ul>
<li><em>Sequence numbers (or counters)</em>: the communicating users maintain(synchronize) a state. It can be problematic when users communicate over a lossy channel.</li>
<li><em>Time stamps</em>: the sender prepends the current time <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span> to the message before authenticating, and sends <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span> along with the mesage and the and the resulting tag <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>. The receiver verifies that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> is a valid tag for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">T||m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault">m</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span> is within acceptable clock skew from current time. This method requires maintaining closely synchronized clocks. And a replay attack can still take place if it is done quickly enough.</li>
</ul>
<h3 id="strong-macs"><a class="markdownIt-Anchor" href="#strong-macs"></a> Strong MACs</h3>
<p>Consider a modified experiment <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>a</mi><mi>c</mi><mo>−</mo><mi>s</mi><mi>f</mi><mi>o</mi><mi>r</mi><mi>g</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">Mac-sforge</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">e</span></span></span></span> that defined the same way as <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>a</mi><mi>c</mi><mo>−</mo><mi>f</mi><mi>o</mi><mi>r</mi><mi>g</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">Mac-forge</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">e</span></span></span></span>, except that the set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">Q</mi></mrow><annotation encoding="application/x-tex">\mathcal{Q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal">Q</span></span></span></span></span> contains pairs of oracle queries and their associated responses (i.e. <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∈</mo><mi mathvariant="script">Q</mi></mrow><annotation encoding="application/x-tex">(m,t)\in \mathcal{Q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal">Q</span></span></span></span></span>). The adversary <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> succeeds if and only if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> outputs <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m,t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span> such that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><msub><mi>y</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">Vrfy_{k}(m,t)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∉</mi><mi mathvariant="script">Q</mi></mrow><annotation encoding="application/x-tex">(m,t)\notin \mathcal{Q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mord"><span class="mrel">∈</span></span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="llap"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="inner"><span class="mord"><span class="mord">/</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal">Q</span></span></span></span></span>.</p>
<p>A message authentication code <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi><mo>=</mo><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>M</mi><mi>a</mi><mi>c</mi><mo separator="true">,</mo><mi>V</mi><mi>r</mi><mi>f</mi><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi=(Gen,Mac,Vrfy)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> is strongly secure, or a strong MAC, if for all probabilistic polynomial-time adversaries <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span>, there is a negligible function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">negl</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> such that:</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \cal at position 16: Pr[Mac-sforge_{\̲c̲a̲l̲{A},\pi}(n)=1]\…'>Pr[Mac-sforge_{\cal{A},\pi}(n)=1]\le negl(n)
</p>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi><mo>=</mo><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>M</mi><mi>a</mi><mi>c</mi><mo separator="true">,</mo><mi>V</mi><mi>r</mi><mi>f</mi><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi=(Gen,Mac,Vrfy)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> be a secure MAC that uses canonical verification (the receiver re-compute the tag and check for equality). Then <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span> is a strong MAC. (Attention that the definition of the MAC do not have any restriciton to how <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">Vrfy</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span> algorithm works.)</p>
<p><strong>A potential timing attack</strong> (an example of side channel attack): Consider an adversary who can send message/tag pairs to the receiver. The adversary can learn not only whether the receiver accepts or not, but also the time to make decisions. If there is a MAC using canonical verification, the time to reject differs depending on the position of the first unequal byte. The attacker can send <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><msub><mi>t</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><msub><mi>t</mi><mn>255</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m,t_{0}),\cdots,(m,t_{255})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">5</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> to the receiver, where <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">t_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9011879999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> is a string with the first <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> bytes set correctly and the <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mi>s</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">(i+1)st</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span></span></span></span> byte equal to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>. The tag with slightly longer time for rejection has the correct <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mi>s</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">(i+1)st</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span></span></span></span> byte.</p>
<p><em>MAC verification should use time-independent string comparison that always compares all bytes!</em></p>
<h1 id="construct-secure-macs"><a class="markdownIt-Anchor" href="#construct-secure-macs"></a> Construct secure MACs</h1>
<h2 id="a-fixed-length-mac"><a class="markdownIt-Anchor" href="#a-fixed-length-mac"></a> A fixed-length MAC</h2>
<h3 id="construction"><a class="markdownIt-Anchor" href="#construction"></a> Construction</h3>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> be a pseudorandom function. Define a fixed-length MAC for messages of length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> as follows:</p>
<ul>
<li><strong>Mac</strong>: on input a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">k\in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">m\in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>, output the tag <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>:</mo><mo>=</mo><msub><mi>F</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t:=F_{k}(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span>. (If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>m</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">≠</mi><mi mathvariant="normal">∣</mi><mi>k</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|m|\ne |k|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault">m</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord">∣</span></span></span></span> then output nothing.)</li>
<li><strong>Vrfy</strong>: on input a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">k\in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>, a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">m\in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and a tag <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">t\in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65418em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>, output 1 if and only if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>=</mo><msub><mi>F</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t=F_{k}(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span>. (If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>m</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">≠</mi><mi mathvariant="normal">∣</mi><mi>k</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|m|\ne |k|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault">m</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord">∣</span></span></span></span> then output 0.)</li>
</ul>
<p>If F is a pseudorandom function, then the above construction is a secure fixed-length MAC for messages of length n.</p>
<h3 id="proof"><a class="markdownIt-Anchor" href="#proof"></a> Proof</h3>
<p>Consider the MAC <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi mathvariant="normal">Π</mi><mo>~</mo></mover></mrow><annotation encoding="application/x-tex">\tilde{\Pi}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9201899999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Π</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">~</span></span></span></span></span></span></span></span></span> using a truly random function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span> instead of pseudorandom function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">F_{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>. For any message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi mathvariant="normal">∉</mi><mi mathvariant="script">Q</mi></mrow><annotation encoding="application/x-tex">m\notin \mathcal{Q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mord"><span class="mrel">∈</span></span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="llap"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="inner"><span class="mord"><span class="mord">/</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal">Q</span></span></span></span></span>, the value <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t=f(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span> is uniformly distributed in <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> from the view of adversary <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span>, so we can get:</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \cal at position 16: 	Pr[Mac-forge_{\̲c̲a̲l̲{A},\tilde{\pi}…'>	Pr[Mac-forge_{\cal{A},\tilde{\pi}}(n)=1]\le 2^{-n}
</p>
<p>Then construct a distinguisher <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> that is given input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and access to an oracle <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">O</mi><mo>:</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup><mo>→</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\mathcal{O}:\{0,1\}^{n}\rightarrow \{0,1\}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span>. (1) Run <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{A}(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal">A</span></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>. Whenever <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> queries its MAC oracle on a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> obtain a response <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>. (2) When <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> outputs <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m,t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span> at the end of its execution, query <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">O</mi></mrow><annotation encoding="application/x-tex">\mathcal{O}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span></span></span></span> with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> and obtain response <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>t</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.87852em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.87852em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">t</span></span></span><span style="top:-3.18408em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">^</span></span></span></span></span></span></span></span></span>. If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>t</mi><mo>^</mo></mover><mo>=</mo><mi>t</mi></mrow><annotation encoding="application/x-tex">\hat{t}=t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.87852em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.87852em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">t</span></span></span><span style="top:-3.18408em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">^</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> never queried its MAC oracle on <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>, then output 1; otherwise output 0.</p>
<p>If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>'s oracle is a pseudorandom function, then the view of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> when run as a sub-routine by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> is distributed identically to the view of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> in experiment <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>a</mi><mi>c</mi><mo>−</mo><mi>f</mi><mi>o</mi><mi>r</mi><mi>g</mi><msub><mi>e</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Mac-forge_{\mathcal{A},\pi}(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>. Therefore,</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \cal at position 46: …=Pr[Mac-forge_{\̲c̲a̲l̲{A},\pi}(n)=1]
'>	Pr[D^{F_{k}(\cdot)}(1^{n})=1]=Pr[Mac-forge_{\cal{A},\pi}(n)=1]
</p>
<p>If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>'s oracle is a truly random function, then the view of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> when run as a sub-routine by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> is distributed identically to the view of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> in experiment <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>a</mi><mi>c</mi><mo>−</mo><mi>f</mi><mi>o</mi><mi>r</mi><mi>g</mi><msub><mi>e</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mover accent="true"><mi>π</mi><mo>~</mo></mover></mrow></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Mac-forge_{\mathcal{A},\tilde{\pi}}(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span><span style="top:-3.0500000000000003em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mtight">~</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>. Therefore,</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \cal at position 42: …=Pr[Mac-forge_{\̲c̲a̲l̲{A},\tilde{\pi}…'>	Pr[D^{f(\cdot)}(1^{n})=1]=Pr[Mac-forge_{\cal{A},\tilde{\pi}}(n)=1]
</p>
<p>Since <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> is a pseudorandom function and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> runs in polynomial time, so there exists a negligible function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">negl</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> that</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><msup><mi>D</mi><mrow><msub><mi>F</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo stretchy="false">]</mo><mo>−</mo><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><msup><mi>D</mi><mrow><mi>f</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo stretchy="false">]</mo><mi mathvariant="normal">∣</mi><mo>≤</mo><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">	|Pr[D^{F_{k}(\cdot)}(1^{n})=1]-Pr[D^{f(\cdot)}(1^{n})=1]|\le negl(n)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight">⋅</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mtight">⋅</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></p>
<p>Combining the above four equations, we finally get</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \cal at position 15: Pr[Mac-forge_{\̲c̲a̲l̲{A},\pi}(n)=1]\…'>Pr[Mac-forge_{\cal{A},\pi}(n)=1]\le 2^{-n}+negl(n)
</p>
<p>which proves the theorem.</p>
<h2 id="domain-extension-for-macs"><a class="markdownIt-Anchor" href="#domain-extension-for-macs"></a> Domain extension for MACs</h2>
<h3 id="construction-2"><a class="markdownIt-Anchor" href="#construction-2"></a> Construction</h3>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="normal">Π</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mo stretchy="false">(</mo><mi>M</mi><mi>a</mi><msup><mi>c</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><mi>V</mi><mi>r</mi><mi>f</mi><msup><mi>y</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi&#x27;=(Mac&#x27;,Vrfy&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> be a fixed-length MAC for messages of length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>. Define a MAC as follows:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>a</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Mac</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span></span></span></span>: on input a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">k\in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">m\in \{0,1\}^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span> of nonzero length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi><mo>&lt;</mo><msup><mn>2</mn><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\ell &lt; 2^{n/4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">ℓ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mtight">/</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></span>, parse <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> into <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span> blocks <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>m</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">m_{1},\cdots,m_{d}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, each of length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow><annotation encoding="application/x-tex">n/4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mord">/</span><span class="mord">4</span></span></span></span>.(The final block is padded with 0s if necessary.) Choose a uniform identifier <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup></mrow><annotation encoding="application/x-tex">r\in \{0,1\}^{n/4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mtight">/</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></span>. For <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">i=1,\cdots,d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span></span></span></span>, compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>i</mi></msub><mo>←</mo><mi>M</mi><mi>a</mi><msubsup><mi>c</mi><mi>k</mi><mo mathvariant="normal">′</mo></msubsup><mo stretchy="false">(</mo><mi>r</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">ℓ</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>i</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>m</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t_{i}\leftarrow Mac_{k}&#x27;(r||\ell||i||m_{i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.035em;vertical-align:-0.2831079999999999em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord">ℓ</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault">i</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>, where <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo separator="true">,</mo><mi mathvariant="normal">ℓ</mi></mrow><annotation encoding="application/x-tex">i,\ell</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">ℓ</span></span></span></span> are encoded as strings of length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow><annotation encoding="application/x-tex">n/4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mord">/</span><span class="mord">4</span></span></span></span>. Output the tag <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>:</mo><mo>=</mo><mo>&lt;</mo><mi>r</mi><mo separator="true">,</mo><msub><mi>t</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>t</mi><mi>d</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">t:=&lt;r,t_{1},\cdots,t_{d}&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">Vrfy</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>: on input a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">k\in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>, a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">m\in \{0,1\}^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span> of nonzero length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi><mo>&lt;</mo><msup><mn>2</mn><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\ell &lt; 2^{n/4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">ℓ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mtight">/</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></span>, and a tag <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>:</mo><mo>=</mo><mo>&lt;</mo><mi>r</mi><mo separator="true">,</mo><msub><mi>t</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>t</mi><msup><mi>d</mi><mo mathvariant="normal">′</mo></msup></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">t:=&lt;r,t_{1},\cdots,t_{d&#x27;}&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>, parse <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> into <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span> blocks <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>m</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">m_{1},\dots,m_{d}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, each of length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow><annotation encoding="application/x-tex">n/4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mord">/</span><span class="mord">4</span></span></span></span>.(The final block is padded with 0s if necessary.) Output 1 if and only if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>d</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">d&#x27;=d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><msubsup><mi>y</mi><mi>k</mi><mo mathvariant="normal">′</mo></msubsup><mo stretchy="false">(</mo><mi>r</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">ℓ</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>i</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>m</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>t</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">Vrfy_{k}&#x27;(r||\ell||i||m_{i},t_{i})=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.035em;vertical-align:-0.2831079999999999em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4168920000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord">ℓ</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault">i</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">1\le i \le d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79549em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span>.</li>
</ul>
<p>If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="normal">Π</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">\Pi&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> is a secure fixed-length MAC for messages of length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>, then the following construction is a secure MAC (for arbitrary-length messages).</p>
<p><strong>Note</strong>:</p>
<p>(1)  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> is used for preventing block reordering attack (the attacker shuffles the order of blocks in an authenticated message).</p>
<p>(2) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi></mrow><annotation encoding="application/x-tex">\ell</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">ℓ</span></span></span></span> is intended to thwart truncation attack (the attacker drop blocks and corresponding tags from the end of the message).</p>
<p>(3) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span> aims at preventing “mix-and-match” attack (the attacker combines blocks from different messages).</p>
<h3 id="proof-2"><a class="markdownIt-Anchor" href="#proof-2"></a> Proof</h3>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>e</mi><mi>p</mi><mi>e</mi><mi>a</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">Repeat</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span></span></span></span> denote the event that the same random identifier appears in two of the tags returned by the MAC oracle in experiment <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>A</mi><mi>C</mi><mo>−</mo><mi>f</mi><mi>o</mi><mi>r</mi><mi>g</mi><msub><mi>e</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><msup><mi>π</mi><mo mathvariant="normal">′</mo></msup></mrow></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">MAC-forge_{\mathcal{A},\pi&#x27;}(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>. <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi>e</mi><mi>w</mi><mi>B</mi><mi>l</mi><mi>o</mi><mi>c</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">NewBlock</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> denote the event that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> tries to output a valid tag on a block that was never previously authenticated by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>a</mi><msup><mi>c</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">Mac&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> in the course of answering <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span>'s <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>a</mi><msup><mi>c</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">Mac&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> queries.</p>
<p>We have</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: align at position 7: \begin{̲a̲l̲i̲g̲n̲}̲
	Pr[MAC-forge_…'>\begin{align}
	Pr[MAC-forge_{\cal{A},\pi&#039;}(n)=1]=&amp; Pr[MAC-forge_{\cal{A},\pi&#039;}(n)=1 \wedge Repeat] \notag \\
	+ &amp; Pr[MAC-forge_{\cal{A},\pi&#039;}(n)=1 \wedge \overline{Repeat}\wedge NewBlock] \notag \\
	+ &amp; Pr[MAC-forge_{\cal{A},\pi&#039;}(n)=1 \wedge \overline{Repeat}\wedge \overline{NewBlock}] \notag \\
	\le &amp; Pr[Repeat]+ \notag \\
	&amp; Pr[MAC-forge_{\cal{A},\pi&#039;}(n)=1 \wedge NewBlock] + \notag \\
	&amp; Pr[MAC-forge_{\cal{A},\pi&#039;}(n)=1 \wedge \overline{Repeat}\wedge \overline{NewBlock}]
\end{align}
</p>
<p>(1) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><mi>R</mi><mi>e</mi><mi>p</mi><mi>e</mi><mi>a</mi><mi>t</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">Pr[Repeat]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mclose">]</span></span></span></span> is negligible. Applying the “birthday bound” (search “birthday problem” for detail), we have <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><mi>R</mi><mi>e</mi><mi>p</mi><mi>e</mi><mi>a</mi><mi>t</mi><mo stretchy="false">]</mo><mo>≤</mo><mfrac><mrow><mi>q</mi><mo stretchy="false">(</mo><mi>n</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><msup><mn>2</mn><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup></mfrac></mrow><annotation encoding="application/x-tex">Pr[Repeat]\le \frac{q(n)^{2}}{2^{n/4}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4943449999999998em;vertical-align:-0.38542499999999996em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10892em;"><span style="top:-2.614575em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8220357142857143em;"><span style="top:-2.8220357142857138em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mtight">/</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.38542499999999996em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>. Since <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> makes only polynomially many queries (i.e., <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">q(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> is polynomial), this value is negligible.</p>
<p>(2) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><mi>M</mi><mi>A</mi><mi>C</mi><mo>−</mo><mi>f</mi><mi>o</mi><mi>r</mi><mi>g</mi><msub><mi>e</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><msup><mi>π</mi><mo mathvariant="normal">′</mo></msup></mrow></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>∧</mo><mover accent="true"><mrow><mi>R</mi><mi>e</mi><mi>p</mi><mi>e</mi><mi>a</mi><mi>t</mi></mrow><mo stretchy="true">‾</mo></mover><mo>∧</mo><mover accent="true"><mrow><mi>N</mi><mi>e</mi><mi>w</mi><mi>B</mi><mi>l</mi><mi>o</mi><mi>c</mi><mi>k</mi></mrow><mo stretchy="true">‾</mo></mover><mo stretchy="false">]</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">Pr[MAC-forge_{\mathcal{A},\pi&#x27;}(n)=1 \wedge \overline{Repeat}\wedge \overline{NewBlock}]=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0777700000000001em;vertical-align:-0.19444em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.14444em;vertical-align:-0.25em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.89444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.81444em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>. If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>A</mi><mi>C</mi><mo>−</mo><mi>f</mi><mi>o</mi><mi>r</mi><mi>g</mi><msub><mi>e</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><msup><mi>π</mi><mo mathvariant="normal">′</mo></msup></mrow></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">MAC-forge_{\mathcal{A},\pi&#x27;}(n)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>e</mi><mi>p</mi><mi>e</mi><mi>a</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">Repeat</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span></span></span></span> did not occur, then it must be the case that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi>e</mi><mi>w</mi><mi>B</mi><mi>l</mi><mi>o</mi><mi>c</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">NewBlock</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> happens. So <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>R</mi><mi>e</mi><mi>p</mi><mi>e</mi><mi>a</mi><mi>t</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{Repeat}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0777700000000001em;vertical-align:-0.19444em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span></span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>N</mi><mi>e</mi><mi>w</mi><mi>B</mi><mi>l</mi><mi>o</mi><mi>c</mi><mi>k</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{NewBlock}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.89444em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.89444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.81444em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span> can not occur at the same time.</p>
<p>(3) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><mi>M</mi><mi>A</mi><mi>C</mi><mo>−</mo><mi>f</mi><mi>o</mi><mi>r</mi><mi>g</mi><msub><mi>e</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><msup><mi>π</mi><mo mathvariant="normal">′</mo></msup></mrow></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>∧</mo><mi>N</mi><mi>e</mi><mi>w</mi><mi>B</mi><mi>l</mi><mi>o</mi><mi>c</mi><mi>k</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">Pr[MAC-forge_{\mathcal{A},\pi&#x27;}(n)=1 \wedge NewBlock]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">]</span></span></span></span> is negligible. Construct a PPT adversary <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="script">A</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">\mathcal{A}&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">A</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> attacks the fixed-length MAC <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span>. <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="script">A</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">\mathcal{A&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span> runs as a subroutine of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span>: answering the request by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> for a tag on <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> by choosing <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>←</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup></mrow><annotation encoding="application/x-tex">r\leftarrow \{0,1\}^{n/4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mtight">/</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></span>, parsing <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> and making necessary queries to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>a</mi><msubsup><mi>c</mi><mi>k</mi><mo mathvariant="normal">′</mo></msubsup><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Mac_{k}&#x27;(\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.035em;vertical-align:-0.2831079999999999em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span>; check whether <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi>e</mi><mi>w</mi><mi>B</mi><mi>l</mi><mi>o</mi><mi>c</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">NewBlock</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> occur when \mathcal{A} outputs. If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>A</mi><mi>C</mi><mo>−</mo><mi>f</mi><mi>o</mi><mi>r</mi><mi>g</mi><msub><mi>e</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><msup><mi>π</mi><mo mathvariant="normal">′</mo></msup></mrow></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">MAC-forge_{\mathcal{A},\pi&#x27;}(n)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> then the tag for every block is valid; if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi>e</mi><mi>w</mi><mi>B</mi><mi>l</mi><mi>o</mi><mi>c</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">NewBlock</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> occurs then <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="script">A</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">\mathcal{A}&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">A</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> outputs a block that was never previously authenticated. So <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="script">A</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">\mathcal{A&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span> succeeds in outputting a valid forgery on a previously unauthenticated message with probability</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \cal at position 15: Pr[Mac-forge_{\̲c̲a̲l̲{A&#039;},\pi}(n)=1]…'>Pr[Mac-forge_{\cal{A&#039;},\pi}(n)=1]\ge Pr[MAC-forge_{\cal{A},\pi&#039;}(n)=1 \wedge NewBlock]
</p>
<p>The left-hand side is negligible, so proving the claim.</p>
<p>So from the above we have proved that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><mi>M</mi><mi>A</mi><mi>C</mi><mo>−</mo><mi>f</mi><mi>o</mi><mi>r</mi><mi>g</mi><msub><mi>e</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><msup><mi>π</mi><mo mathvariant="normal">′</mo></msup></mrow></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">Pr[MAC-forge_{\mathcal{A},\pi&#x27;}(n)=1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span> is negligible.</p>
<h2 id="cbc-mac"><a class="markdownIt-Anchor" href="#cbc-mac"></a> CBC-MAC</h2>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> be a pseudorandom function, and fix a length function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\ell &gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">ℓ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>. The basic CBC-MAC construction is as follows:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi>a</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Mac</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span></span></span></span>: on input a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">k\in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> of length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">\ell(n)\cdot n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℓ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>, parse <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> as <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><msub><mi>m</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>m</mi><mi mathvariant="normal">ℓ</mi></msub></mrow><annotation encoding="application/x-tex">m=m_{1},\cdots,m_{\ell}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> where each <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">m_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> is of length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>, and set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mn>0</mn></msub><mo>:</mo><mo>=</mo><msup><mn>0</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">t_{0}:=0^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi>i</mi></msub><mo>:</mo><mo>=</mo><msub><mi>F</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>T</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub><mtext> </mtext><mi>X</mi><mi>O</mi><mi>R</mi><mtext> </mtext><msub><mi>m</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t_{i}:=F_{k}(T_{k-1}~XOR~m_{i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>. Output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mi mathvariant="normal">ℓ</mi></msub></mrow><annotation encoding="application/x-tex">t_{\ell}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> as the tag.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">Vrfy</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>: on input a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">k\in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>, a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>, a tag <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>, if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> is not of length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">\ell(n)\cdot n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℓ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> the output 0. Otherwise, output 1 if and only if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>=</mo><mi>M</mi><mi>a</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t=Mac_{k}(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span>.</li>
</ul>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi></mrow><annotation encoding="application/x-tex">\ell</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">ℓ</span></span></span></span> be a polynomial. If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> is a pseudorandom function, then the above construction is a secure MAC for messages of length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">\ell(n)\cdot n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℓ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>. Note that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mn>0</mn></msub><mo>:</mo><mo>=</mo><msup><mn>0</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">t_{0}:=0^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> is crucial for security, and it is no longer secure when using a random <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">t_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.</p>
<p>For arbitrary-length messages, the fixed-length CBC-MAC can be modified in two ways:</p>
<ul>
<li>Prepend the message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> with its length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>m</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|m|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault">m</span><span class="mord">∣</span></span></span></span> (encoded as an n-bit string) and compute basic CBC-MAC on the result.</li>
<li>Choose two independent, uniform keys <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">k_1 \in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mn>2</mn></msub><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">k_2 \in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>. Then to authenticate a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>, first compute the result <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> of basic CBC-MAC of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> using <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">k_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, and the tag is computed as <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>t</mi><mo>^</mo></mover><mo>=</mo><msub><mi>F</mi><msub><mi>k</mi><mn>2</mn></msub></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{t}=F_{k_2}(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.87852em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.87852em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">t</span></span></span><span style="top:-3.18408em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">^</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>.</li>
</ul>
<h1 id="authenticated-encryption"><a class="markdownIt-Anchor" href="#authenticated-encryption"></a> Authenticated encryption</h1>
<h2 id="definitions"><a class="markdownIt-Anchor" href="#definitions"></a> Definitions</h2>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi><mo>=</mo><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>E</mi><mi>n</mi><mi>c</mi><mo separator="true">,</mo><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi=(Gen,Enc,Dec)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span> be a private-key encryption scheme, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> be an adversary, and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> be the security parameter. The unforgeable encryption experiment <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><mi>c</mi><mo>−</mo><mi>F</mi><mi>o</mi><mi>r</mi><mi>g</mi><msub><mi>e</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Enc-Forge_{\mathcal{A},\pi}(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> is defined as follows:</p>
<ol>
<li>Run <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gen(1^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> to obtain a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>.</li>
<li>The adversary <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> is given input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and access to an encryption oracle <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Enc_{k}(\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span>. The adversary outputs a ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span>.</li>
<li>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><mi>D</mi><mi>e</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m=Dec_{k}(c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span>, and let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">Q</mi></mrow><annotation encoding="application/x-tex">\mathcal{Q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal">Q</span></span></span></span></span> denote the set of all queries that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> asked its encryption oracle. The output of the experiment is 1 if and only if (1) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi mathvariant="normal">≠</mi><mtext>error</mtext></mrow><annotation encoding="application/x-tex">m\ne \text{error}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord text"><span class="mord">error</span></span></span></span></span> and (2) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi mathvariant="normal">∉</mi><mi mathvariant="script">Q</mi></mrow><annotation encoding="application/x-tex">m\notin \mathcal{Q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mord"><span class="mrel">∈</span></span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="llap"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="inner"><span class="mord"><span class="mord">/</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal">Q</span></span></span></span></span>.</li>
</ol>
<p>A private-key encryption scheme <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span> is unforgeable if for all probabilistic polynomial-time adversaries <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span>, there is a negligible function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">negl</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> such that:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><mi>E</mi><mi>n</mi><mi>c</mi><mo>−</mo><mi>F</mi><mi>o</mi><mi>r</mi><mi>g</mi><msub><mi>e</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo stretchy="false">]</mo><mo>≤</mo><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Pr[Enc-Forge_{\mathcal{A},\pi}(n)=1]\le negl(n)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></p>
<p>And a private-key encryption scheme <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span> is authenticated encryption scheme if it is CCA-secure and unforgeable.</p>
<h2 id="generic-constructions"><a class="markdownIt-Anchor" href="#generic-constructions"></a> Generic constructions</h2>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mi>E</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mi>E</mi><mi>n</mi><mi>c</mi><mo separator="true">,</mo><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi_{E}=(Enc,Dec)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span> be a CPA-secure encryption scheme and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mi>M</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mi>M</mi><mi>a</mi><mi>c</mi><mo separator="true">,</mo><mi>V</mi><mi>r</mi><mi>f</mi><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi_{M}=(Mac,Vrfy)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> denote a message authentication code, where key generation in both schemes simply involves choosing a uniform n-bit key. There are three natural approaches to combining encryption and message authentication using independent keys <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>E</mi></msub></mrow><annotation encoding="application/x-tex">k_E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">k_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mi>E</mi></msub></mrow><annotation encoding="application/x-tex">\Pi_{E}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">\Pi_{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>:</p>
<ol>
<li>
<p><strong>Encrypt-and-authenticate</strong>: Given a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>, the transmitted value is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>c</mi><mo separator="true">,</mo><mi>t</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;c,t&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> where</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;$&#039; in math mode at position 61: …ow Mac_{k_M}(m)$̲$.

'>c\leftarrow Enc_{k_E}(m)~\text{and}~t\leftarrow Mac_{k_M}(m)$$.

</p>
</li>
<li>
<p><strong>Authenticate-then-encrypt</strong>: A MAC tag <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>←</mo><mi>M</mi><mi>A</mi><msub><mi>C</mi><msub><mi>k</mi><mi>M</mi></msub></msub><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t\leftarrow MAC_{k_M}(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.000305em;vertical-align:-0.250305em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.250305em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span> is first computed, then <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">m||t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault">t</span></span></span></span> is encrypted and the resulting value <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><msub><mi>c</mi><msub><mi>k</mi><mi>E</mi></msub></msub><mo stretchy="false">(</mo><mi>m</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Enc_{k_E}(m||t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.000305em;vertical-align:-0.250305em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.250305em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span> is transmitted. This combination does not necessarily yield an authenticated encryption scheme, since the decryption has two steps.</p>
</li>
<li>
<p><strong>Encrypt-then-authenticate</strong>: The message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> is first encrypted by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>←</mo><mi>E</mi><mi>n</mi><msub><mi>c</mi><msub><mi>k</mi><mi>E</mi></msub></msub><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c\leftarrow Enc_{k_E}(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.000305em;vertical-align:-0.250305em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.250305em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span>, then the a MAC is computed by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>←</mo><mi>M</mi><mi>a</mi><msub><mi>c</mi><msub><mi>k</mi><mi>M</mi></msub></msub><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t\leftarrow Mac_{k_M}(c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.000305em;vertical-align:-0.250305em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.250305em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span>, and the ciphertext is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>c</mi><mo separator="true">,</mo><mi>t</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;c,t&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>. Decryption of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>c</mi><mo separator="true">,</mo><mi>t</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;c,t&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> is done by outputting error if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><msub><mi>y</mi><msub><mi>k</mi><mi>M</mi></msub></msub><mo stretchy="false">(</mo><mi>c</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mi mathvariant="normal">≠</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">Vrfy_{k_M}(c,t)\ne 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.000305em;vertical-align:-0.250305em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.250305em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>, and otherwise outputting <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>e</mi><msub><mi>c</mi><msub><mi>k</mi><mi>E</mi></msub></msub><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Dec_{k_E}(c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.000305em;vertical-align:-0.250305em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.250305em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span>.</p>
</li>
</ol>
<p>If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mi>E</mi></msub></mrow><annotation encoding="application/x-tex">\Pi_E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> is a CPA-secure private-key encryption scheme, and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">\Pi_{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> is a strongly secure MAC, then the encrypt-then-authenticate approach is an authenticated encryption scheme. Note that the <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>E</mi></msub></mrow><annotation encoding="application/x-tex">k_E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">k_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> must be independent to ensure CCA-secure, and this is a basic principle of cryptography: different instances of cryptographic primitives should always use independent keys.</p>
<h2 id="secure-communication-sessions"><a class="markdownIt-Anchor" href="#secure-communication-sessions"></a> Secure communication sessions</h2>
<p>The authenticated encryption scheme does not suffice the following potential attacks:</p>
<ul>
<li><em>Re-ordering attack</em>: An attacker can swap the order of the messages.</li>
<li><em>Replay attack</em>: An attacker can replay a valid ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span> sent previously by one of the parties.</li>
<li><em>Reflection attack</em>: An attacker can take a ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span> sent from A to B and send it back to A.</li>
</ul>
<p>To prevent the above attacks, a counter is used to prevent the first two and a directionality bit is used to prevent the third.</p>
<h1 id="references"><a class="markdownIt-Anchor" href="#references"></a> References</h1>
<ol>
<li>Introduction to Modern Cryptography, Second Edition.</li>
<li>Understanding Cryptography: A Textbook for Students and Practitioners (Chinese Version).</li>
</ol>
]]></content>
      <categories>
        <category>信息安全</category>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>密码学</tag>
      </tags>
  </entry>
  <entry>
    <title>技术书籍与资料整理</title>
    <url>/2021/01/09/%E6%8A%80%E6%9C%AF%E4%B9%A6%E7%B1%8D%E4%B8%8E%E8%B5%84%E6%96%99%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<p>本文总结了自己读过的一些技术书籍、看过的网课等内容，并给出了简单评价。当然每个人的阅读习惯不同，因此我的意见仅供参考:)。作为程序员，学无止境，本文内容也会慢慢补充。</p>
<h1 id="编程语言"><a class="markdownIt-Anchor" href="#编程语言"></a> 编程语言</h1>
<h2 id="cc"><a class="markdownIt-Anchor" href="#cc"></a> C/C++</h2>
<p>C++ primer：一本大部头，对C++的语法介绍十分详细。适合先通读一遍并完成课后题，然后当参考书使用，遇到问题时翻看。</p>
<p>The C Programming Language：自己买来当参考书看的，因为自己学的第一门编程语言是C++，这本书用于对C语言编程的一些特定语法进行补充。</p>
<h2 id="python"><a class="markdownIt-Anchor" href="#python"></a> Python</h2>
<p>廖雪峰的Python教程：网页版，对于Python语法的介绍比较详细，唯一的缺点是练习题有一些少。如果已有其他编程语言的基础学起来会很快。</p>
<h1 id="计算机基础"><a class="markdownIt-Anchor" href="#计算机基础"></a> 计算机基础</h1>
<h2 id="数据结构与算法"><a class="markdownIt-Anchor" href="#数据结构与算法"></a> 数据结构与算法</h2>
<p>算法导论：常见的算法基本都有介绍，而且算法的证明过程很详细，但是读下来确实也十分吃力。MIT有配套公开课，可以辅助阅读。注意课后题里面也有许多精华，这些题目在网上有答案。读完之后LeetCode中等及以下难度题目应该很少会因为算法基础知识欠缺而不会做。</p>
<a id="more"></a>
<p>数据结构（C++版）邓俊辉：强推的一本数据结构书，有详细代码与图解，可以在读算法导论之前读它来打基础。同时这本书也是算法导论内容的补充，因为算法导论里面对一些数据结构的介绍有一些简略。书读完之后最好是用熟悉的编程语言把这些数据结构实现一遍，既可以加深了解，也可以加强编程能力。学堂在线有配套网课，质量极高，可以搭配使用。</p>
<h2 id="计算机组成原理"><a class="markdownIt-Anchor" href="#计算机组成原理"></a> 计算机组成原理</h2>
<p>深入理解计算机系统：这本书是以一个程序员的视角讲述了计算机组成原理和操作系统的一些知识，书中的一部分内容对于代码优化还是很有帮助的。2~6章偏重于讲计算机组成原理的内容，后面的章节偏重于讲操作系统相关的内容。前6章读起来个人感觉难度不大，第7章后面的章节在对操作系统原理了解比较少的时候可能读起来会感觉跳跃度略大（个人感觉这样），适合学过操作系统相关内容之后再读。尤其是第9章，将操作系统的知识与计算机硬件结合起来理解，会有不一样的收获。</p>
<p>哈尔滨工业大学刘宏伟老师的计算机组成原理公开课：讲解的比较详细，内容更加偏底层硬件一些。网课内容包含了计算机组成原理的大部分知识框架，但是有一些细节需要阅读其他书籍来补充。</p>
<p>计算机组成与设计-硬件/软件接口：自己写博客的时候参考过其中的部分内容，比起深入理解计算机系统更加详细一些，但是没有仔细读过。</p>
<h2 id="操作系统"><a class="markdownIt-Anchor" href="#操作系统"></a> 操作系统</h2>
<h3 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h3>
<p>哈尔滨工业大学李治军老师的操作系统公开课：对于操作系统入门来说，是一门比较好的网课，对于操作系统内涉及到的一些主要思想都有介绍。</p>
<p>Operating Systems: Three Easy Pieces：将操作系统分为CPU虚拟化、内存虚拟化、并发和持久性四大部分来讲解，这四大部分包含了操作系统设计的主要思想。而且作者的介绍比较符合人的思考习惯，由浅入深，是一本不错的入门书籍。</p>
<h3 id="实践"><a class="markdownIt-Anchor" href="#实践"></a> 实践</h3>
<p>鸟哥的Linux私房菜：介绍Linux操作系统的基本使用，可以作为工具书查阅。</p>
<h2 id="计算机网络"><a class="markdownIt-Anchor" href="#计算机网络"></a> 计算机网络</h2>
<p>计算机网络：自顶向下方法：按照TCP/IP五层模型的思想来介绍计算机网络，对于入门来说很适合。</p>
<h2 id="汇编语言"><a class="markdownIt-Anchor" href="#汇编语言"></a> 汇编语言</h2>
<p>小甲鱼的汇编语言网课：讲解很幽默，适合入门。但是讲解的一些东西对于X86/64架构可能有一些过时。</p>
<p>深入理解计算机系统的第3章：结合C语言讲解汇编语言的命令，比较简单易懂，可以作为入门。而且比较好的一点是书中的汇编语言是基于X86/64架构的。</p>
<h1 id="机器学习"><a class="markdownIt-Anchor" href="#机器学习"></a> 机器学习</h1>
<h2 id="数据处理"><a class="markdownIt-Anchor" href="#数据处理"></a> 数据处理</h2>
<p>利用Python进行数据分析：介绍了用Python进行数据分析的几个常用函数库的用法，包括Numpy、Pandas、Matplotlib等，同时书中也包含了比较多的使用示例。这本书学习起来难度不大，比较容易上手，作者给出的使用示例在进行实际的数据处理与分析时也会经常用到，应该在学习机器学习之前阅读。</p>
<h2 id="入门"><a class="markdownIt-Anchor" href="#入门"></a> 入门</h2>
<p>机器学习-周志华：书中对于算法的介绍比较简略，同时给出的使用示例也少了一些。所以不推荐拿这本书来作为机器学习的入门教材，这本书适合有一个像周志华一样的大佬带着读:(。</p>
<p>吴恩达的机器学习公开课：可以作为机器学习入门来进行学习，讲解比较浅显易懂。</p>
<p>机器学习基石/机器学习技法：两门台湾的公开课，自己只看过其中部分内容，但是讲解还不错。</p>
<h2 id="统计学习"><a class="markdownIt-Anchor" href="#统计学习"></a> 统计学习</h2>
<p>统计学习方法：必读的一本书，公式推导详细，读的时候可以拿白纸边看边推，对于算法原理的理解很有帮助。</p>
<p>The Elements of Statistical Learning：统计学习的经典教材，需要的数学功底很高（一些比较简单的推导步骤直接被跳过），对于基础理论的讲解也更深。</p>
<p>XGBoost和LightGBM的原论文：作为经常使用的两种提升树算法，论文对于原理的介绍也更加详细一些。强推XGBoost的原论文，LightGBM则需要在网上查阅一些其他资料来辅助理解。</p>
<h2 id="深度学习"><a class="markdownIt-Anchor" href="#深度学习"></a> 深度学习</h2>
<p>深度学习（花书）：对于深度学习的理论讲解比较详细，适合作为深度学习的入门书籍。</p>
<h2 id="强化学习"><a class="markdownIt-Anchor" href="#强化学习"></a> 强化学习</h2>
<p>Sutton的强化学习：读过一小部分，对于算法理论的介绍很详细，阅读起来难度较大。</p>
<h2 id="实践-2"><a class="markdownIt-Anchor" href="#实践-2"></a> 实践</h2>
<p>集体智慧编程：包含了许多机器学习在Web应用开发中的实际案例，并且有详细代码，同时不会涉及太多的理论细节。这本书适合作为入门书籍来阅读，可以了解机器学习技术的一些落地场景。</p>
<p>机器学习实战：使用Numpy自己实现常见的机器学习算法，如果跟着实践一遍对于算法理解很有帮助。</p>
<p>机器学习实用指南：前半本讲Scikit-learn的用法，后半本讲的是TensorFlow的用法，带有详细代码，而且GitHub里面也有写好的Jupyter文档。前半部分的内容基本涵盖了用Scikit-learn做机器学习的基本步骤以及常用算法的示例。至于后半部分……嗯，PyTorch真香:)。</p>
<p>深度学习框架PyTorch-入门与实践：介绍了PyTorch的基本用法，并且给了一些实际案例，涵盖了图像与语言处理的一些应用示例。跟着示例做2~3个实际案例基本上就可以掌握PyTorch的用法。不过PyTorch更新较快，书中一些代码可能会过时，可以参照PyTorch官方文档查找相关API稍作修改。</p>
<h1 id="网络安全"><a class="markdownIt-Anchor" href="#网络安全"></a> 网络安全</h1>
<h2 id="密码学"><a class="markdownIt-Anchor" href="#密码学"></a> 密码学</h2>
<p>深入浅出密码学：对于一些常用的加解密算法介绍比较详细，但是密码学理论的介绍则比较少。</p>
<p>Introduction to Modern Cryptography：对于密码学的理论讲解的比较详细，但是对于实际应用则讲解的不多，适合与深入浅出密码学互为补充。</p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机组成原理-基于硬件原理的程序优化</title>
    <url>/2021/01/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E5%9F%BA%E4%BA%8E%E7%A1%AC%E4%BB%B6%E5%8E%9F%E7%90%86%E7%9A%84%E7%A8%8B%E5%BA%8F%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<ol>
<li>
<p>对于一些简单的函数，用内联函数替换。即：将代码中调用函数的步骤用函数体填充。这样就减少了调用函数的开销。</p>
</li>
<li>
<p>消除循环的低效率。循环中可能存在需要执行多次，但是每次的计算结果都不变的表达式。此时可以把这一表达式移动到循环体之外。例如循环体的结束条件中，有时是以一个字符串的大小作为判据的。如果字符串的大小不变，那么不必每次调用strlen()函数，只需要在开始的时候调用一次即可。</p>
</li>
</ol>
<a id="more"></a>
<ol start="3">
<li>
<p>消除不必要的内存引用。例如求一个数组A所有元素的累加和，并将结果写入到一个储存在内存的变量中（如调用函数时，通过指针*dest来读取一个存储在内存中的变量）。如果将表达式写为*dest=*dest+A[i]，那么对于每一个i值，表达式的每一步都要读取一次内存并写入一次内存。此时可以用一个临时变量acc来保存结果，直接将最后结果写入到*dest中，由于临时变量acc被储存在寄存器中，此时就避免了内存的频繁读写。</p>
</li>
<li>
<p>尽量用乘法代替除法，尽量用移位与加法运算代替乘除法。因为乘除法的在CPU计算时的延迟要大于加法，而除法的延迟又大于乘法且不是完全流水线化的。</p>
</li>
<li>
<p>循环展开。增加每一次迭代时的操作数，从而减小循环的迭代次数。在使用优化等级3及以上（即编译时加上-O3），编译器会自动进行循环展开。</p>
</li>
<li>
<p>提高并行性。由于CPU可以在每个时钟周期内执行多个操作（超标量），同时指令执行的顺序不一定与它们在机器级程序中的顺序一致，而且CPU的功能单元是流水线化的，因此可以使用一些办法来提高程序的并行性：</p>
<ol>
<li>
<p>使用多个累积变量。 对于可结合和可交换的合并运算（如整数的累加累积，浮点数在相差不大情况下的累加和累积），可以将运算拆分成若干部分，并在最后合并结果。例如将一个n个数的累加拆分成2组n/2个数的累加，并在最后合并。对于延迟为L，容量为C的操作而言，循环展开因子至少为C*L时可以达到吞吐量界限。但是也并不意味着展开因子越多越好，由于寄存器的数量有限，如果临时变量过多，则会被保存到栈上去。</p>
<p>例：同时使用循环展开与累积变量</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 2 x 2 loop unrolling */</span></span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">combine6</span><span class="params">(vec_ptr v, <span class="keyword">data_t</span> *dest)</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">   	<span class="keyword">long</span> i;</span><br><span class="line">   	<span class="keyword">long</span> length = vec_length(v);</span><br><span class="line">   	<span class="keyword">long</span> limit = length<span class="number">-1</span>;</span><br><span class="line">   	<span class="keyword">data_t</span> *data = get_vec_start(v);</span><br><span class="line">   	<span class="keyword">data_t</span> acc0 = IDENT;</span><br><span class="line">   	<span class="keyword">data_t</span> acc1 = IDENT;</span><br><span class="line">   	<span class="comment">/* Combine 2 elements at a time */</span></span><br><span class="line">   	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; limit; i+=<span class="number">2</span>) &#123;</span><br><span class="line">   		acc0 = acc0 OP data[i];</span><br><span class="line">   		acc1 = acc1 OP data[i+<span class="number">1</span>];</span><br><span class="line">   	&#125;</span><br><span class="line">   	<span class="comment">/* Finish any remaining elements */</span></span><br><span class="line">   	<span class="keyword">for</span> (; i &lt; length; i++) &#123;</span><br><span class="line">   		acc0 = acc0 OP data[i];</span><br><span class="line">   	&#125;</span><br><span class="line">   	*dest = acc0 OP acc1;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>重新结合变换。表达式acc=(acc*data[i])*data[i+1]与acc=acc*(data[i]*data[i+1])的运算所需时间是不同的。对于前者而言，需要等待括号内的值执行完之后才能执行下一步；而对于后者而言，由于CPU的流水线特性，计算括号内部分的时候，可以和acc的乘法运算同时进行。这样，就减少了计算数据流中关键路径上面操作的数量。</p>
<p>又例：对于计算多项式的值，虽然第一段代码所需的乘法次数多于第二个，但是由于第一段代码中的两个乘法可以同时执行，因此反而第一段代码的速度更快</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">poly</span><span class="params">(<span class="keyword">double</span> a[], <span class="keyword">double</span> x, <span class="keyword">long</span> degree)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">long</span> i;</span><br><span class="line">	<span class="keyword">double</span> result = a[<span class="number">0</span>];</span><br><span class="line">	<span class="keyword">double</span> xpwr = x; <span class="comment">/* Equals x^i at start of loop */</span></span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= degree; i++) &#123;</span><br><span class="line">		result += a[i] * xpwr;</span><br><span class="line">		xpwr = x * xpwr;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">polyh</span><span class="params">(<span class="keyword">double</span> a[], <span class="keyword">double</span> x, <span class="keyword">long</span> degree)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">long</span> i;</span><br><span class="line">	<span class="keyword">double</span> result = a[degree];</span><br><span class="line">	<span class="keyword">for</span> (i = degree<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">		result = a[i] + x*result;</span><br><span class="line">	<span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
<li>
<p>将条件语句修改为功能式的风格。由于处理器具有投机执行的特性，因此对于一些结果不可预知的条件语句(如循环语句属于可以预知的)，这样修改可以提高函数的效率。例如一个将数组a和b中较小的元素保存在a中，较大的元素保存在b中的函数（只写主体部分）：</p>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[i]&gt;b[i])&#123;</span><br><span class="line">        swap(a[i],b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这一语句可修改为：</p>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[i]&gt;b[i])&#123;</span><br><span class="line">        <span class="built_in">min</span>=a[i]&lt;b[i]?a[i]:b[i];</span><br><span class="line">        <span class="built_in">max</span>=a[i]&lt;b[i]?b[i]:a[i];	</span><br><span class="line">        a[i]=<span class="built_in">min</span>;</span><br><span class="line">        b[i]=<span class="built_in">max</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>选择合适的算法与数据结构，充分使用硬件性能。</p>
</li>
<li>
<p>编写高速缓存友好的代码，即编写时间与空间局部性较好的代码。尽量增加对局部变量的反复引用；由于数据是以连续的块存储，因此在引用的时候尽量减小步长，例如引用数组的时候尽量由内到外引用，引用一个结构体的时候按照结构体中变量存储的顺序引用。</p>
<p>例1：优化矩阵乘法</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;n;k++)&#123;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">		r=A[i][k];</span><br><span class="line">		<span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">			C[i][j]+=r*B[k][j];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>例2：转置矩阵的时候，对矩阵分块进行操作</p>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B chunkdatas_length_of_side </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">faster_transpose</span><span class="params">(<span class="keyword">int</span> *dst, <span class="keyword">int</span> *src, <span class="keyword">int</span> dim)</span> </span>&#123;    </span><br><span class="line">    <span class="keyword">long</span> limit = dim * dim;    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dim; i += B) &#123;        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; dim; j += B) &#123;            </span><br><span class="line">        <span class="comment">/* Using blocking to improve temporal locality */</span>             </span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = i; k &lt; i+B; ++k) &#123;                </span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> l = j; l &lt; j+B; ++l) &#123;                    </span><br><span class="line">                <span class="comment">/* independent calculations */</span>                    </span><br><span class="line">                    <span class="keyword">int</span> d = l*dim + k;                    </span><br><span class="line">                    <span class="keyword">int</span> s = k*dim + l;                    </span><br><span class="line">                    <span class="keyword">if</span> (s &lt; limit &amp;&amp; d &lt; limit) &#123;                        </span><br><span class="line">                        dst[d] = src[s]                    </span><br><span class="line">                    &#125;       </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;            </span><br><span class="line">        &#125;         </span><br><span class="line">    &#125;    </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>计算机组成原理</tag>
        <tag>程序优化</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机网络-OSI七层模型</title>
    <url>/2021/01/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-OSI%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<h1 id="osi七层模型"><a class="markdownIt-Anchor" href="#osi七层模型"></a> OSI七层模型</h1>
<p>OSI（Open System Interconnect），即开放式系统互联。 一般都叫OSI参考模型，是ISO（国际标准化组织）组织在1985年研究的网络互连模型。ISO为了更好的使网络应用更为普及，推出了OSI参考模型。其含义就是推荐所有公司使用这个规范来控制网络。这样所有公司都有相同的规范。</p>
<p>OSI模型把网络从逻辑上分为七层，每一层都有相应的物理设备。它是一种框架式的设计方法，最主要的功能就是帮助不同类型的主机实现数据传输； 最大优点就是将服务、接口和协议三个概念明确的区分起来。但是这一模型复杂且不实用；在实际中，经常使用的是TCP/IP五层（或四层，将物理层与数据链路层看作同一层）模型。</p>
<a id="more"></a>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201104232856.png" alt="img" /></p>
<p>OSI七层模型的示意图</p>
<p>为了使数据分组从源传送到目的地，源端OSI模型的每一层都必须与目的端的对等层进行通信，这种通信方式称为对等层通信。在每一层通信过程中，使用本层自己协议进行通信。</p>
<h1 id="tcpip五层模型"><a class="markdownIt-Anchor" href="#tcpip五层模型"></a> TCP/IP五层模型</h1>
<p>在TCP/IP五层模型中，每一层都呼叫它的下一层提供的接口来完成自己的需求。（如果是四层模型数据链路层和物理层在一层） 在每一层实现的协议都不同，即每一层的服务不同。同时，每一层为了实现不同的服务，也工作着不同的设备。</p>
<ol>
<li>物理层：负责光电信号传递方式。集线器工作在物理层。</li>
<li>数据链路层：负责设备之间的数据帧的传输和识别，例如网卡设备的驱动，帧同步，冲突检测，数据差错校验等工作。 交换机工作在数据链路层。</li>
<li>网络层：负责地址管理和路由选择。路由器工作在网络层。</li>
<li>传输层：负责两台主机之间的数据传输。</li>
<li>应用层：负责应用程序之间的沟通。网络编程主要针对的就是应用层。</li>
</ol>
<p>应用层的封装在应用程序中完成；传输层和网络层的封装在操作系统完成；数据链路层和物理层的封装在设备驱动程序与网络接口中完成。</p>
<p>TCP/IP五层模型与OSI七层模型的对应关系如下：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201104232906.png" alt="img" /></p>
<h1 id="数据传送"><a class="markdownIt-Anchor" href="#数据传送"></a> 数据传送</h1>
<p>在信息的传递过程中，为了便于数据传输，从应用层向下的每一层都会为数据加一个报头，将其封装成包。在到达设备或是终端的时候，再层层拆包。其大致过程如下图所示</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201104232912.png" alt="img" /></p>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<ol>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vcWlzaHVpL3AvNTQyODkzOC5odG1s">https://www.cnblogs.com/qishui/p/5428938.html<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzIyMjM4MDIxL2FydGljbGUvZGV0YWlscy84MDI3OTAwMT91dG1fbWVkaXVtPWRpc3RyaWJ1dGUucGNfcmVsZXZhbnQubm9uZS10YXNrLWJsb2ctQmxvZ0NvbW1lbmRGcm9tTWFjaGluZUxlYXJuUGFpMi0xLmFkZF9wYXJhbV9pc0NmJmFtcDtkZXB0aF8xLXV0bV9zb3VyY2U9ZGlzdHJpYnV0ZS5wY19yZWxldmFudC5ub25lLXRhc2stYmxvZy1CbG9nQ29tbWVuZEZyb21NYWNoaW5lTGVhcm5QYWkyLTEuYWRkX3BhcmFtX2lzQ2Y=">https://blog.csdn.net/qq_22238021/article/details/80279001?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.add_param_isCf&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.add_param_isCf<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MzI2NDcyL2FydGljbGUvZGV0YWlscy84ODA4OTc0Nw==">https://blog.csdn.net/qq_39326472/article/details/88089747<i class="fa fa-external-link-alt"></i></span></li>
<li>Computer Networking: A Top-down Approach</li>
</ol>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机网络-物理层</title>
    <url>/2021/01/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%89%A9%E7%90%86%E5%B1%82/</url>
    <content><![CDATA[<h1 id="数据和信号"><a class="markdownIt-Anchor" href="#数据和信号"></a> 数据和信号</h1>
<h2 id="模拟数据和数字数据"><a class="markdownIt-Anchor" href="#模拟数据和数字数据"></a> 模拟数据和数字数据</h2>
<h3 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h3>
<p>数据分为模拟数据和数字数据，模拟数据是指连续状态的信息，比如人说话时在空气中形成的声波；数字数据为一系列离散值，比如数据以0和1的形式存储在计算机中。相对应地，信号也分为模拟信号和数字信号，模拟信号在一段时间内有无穷多个强度等级，它是连续变化的；而数字信号只具有有限个已定义的数值。</p>
<a id="more"></a>
<h3 id="模拟信号"><a class="markdownIt-Anchor" href="#模拟信号"></a> 模拟信号</h3>
<p>在数据传输中，我们一般使用的是周期性的模拟信号。周期模拟信号可以分为简单类型和复合类型两种：简单周期模拟信号即正弦波；而复合周期模拟信号是由多个正弦波信号组成的，根据傅里叶定律，任何复合信号都可以由不同频率、相位和振幅的正弦波信号组合而成。</p>
<p>对于一个复合信号，它包含的频率范围称为<strong>带宽</strong>。带宽是信号最高频率和最低频率的差值。对于周期信号来说，带宽分组包含许多个离散频率，而非周期信号的带宽具有相同的范围，但是频率连续。</p>
<h3 id="数字信号"><a class="markdownIt-Anchor" href="#数字信号"></a> 数字信号</h3>
<p>数字信号在传输数据时，是根据电平的高低来进行编码的。一个数字信号的电平个数越多，比特率（一秒发送的位数）也就相应越高。但是电平个数越多也就相应减弱了系统的可靠性。</p>
<p>使用傅里叶变换可以将数字信号分解为复合的模拟信号。由于数字信号会有突变，因此带宽是无穷大的。如果数字信号为周期性，那么频域是离散的；如果是非周期性的，那么频域是连续的。</p>
<p>数字信号的传输有两种方法，分别为基带传输和宽带传输。基带传输是指通过通道发送数字信号，并不转换为模拟信号，它需要一个低通通道。低通通道的带宽是从0开始的。而宽带传输是把数字信号转换为模拟信号再进行传输。通过调制允许我们使用带通通道，它的带宽不是从0开始的。</p>
<h2 id="传输减损"><a class="markdownIt-Anchor" href="#传输减损"></a> 传输减损</h2>
<p>信号通过介质进行传输，这一过程会造成信号的减损，导致信号在开始一端和结束一端并不相同。减损的类型分为以下三种：</p>
<ul>
<li>衰减：当信号通过介质传输时，需要克服介质的阻抗失去一部分能量。为了补偿这种损失，通常使用放大器来放大信号。</li>
<li>失真：失真产生于不同频率组成的复合信号当中，由于每一种信号成分在通过介质时的传播速度不同，所以到达最终目的结点时各自会有延迟，从而导致相位差，也就使得复合信号的形状发生变化。</li>
<li>噪声：噪声包括热噪声、感应噪声、串扰和脉冲噪声等。为了找到理论上的比特率限制，需要计算信噪比（SNR），即平均信号功率除以平均噪声功率。</li>
</ul>
<h2 id="数据速率限制"><a class="markdownIt-Anchor" href="#数据速率限制"></a> 数据速率限制</h2>
<p>数据速率取决于三种因素：</p>
<ul>
<li>有效带宽</li>
<li>使用的信号电平数</li>
<li>通道的质量（噪声电平）</li>
</ul>
<p>对于无噪声信道，奈奎斯特比特率公式定义了理论上的最大比特率：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mo>×</mo><mi>B</mi><mo>×</mo><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mi>L</mi></mrow><annotation encoding="application/x-tex">2\times B \times \log_2 L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.93858em;vertical-align:-0.24414em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span></span></span></span>。其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>指的是通道的带宽，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span></span></span></span>是用于表示数据的信号电平数量。</p>
<p>而香农容量定理则确定了噪声通道理论上的最高数据速率：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mo>=</mo><mi>B</mi><mo>×</mo><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mtext>SNR</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C=B\times \log_2(1+\text{SNR})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">SNR</span></span><span class="mclose">)</span></span></span></span>。其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>指的是通道带宽，SNR为信噪比，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span>指的是通道的传输容量。</p>
<p>在实际情况中，一般需要同时使用两个公式进行计算，使用香农容量定理计算出数据速率的上限，然后在此基础上计算所需的信号电平数。</p>
<h2 id="性能"><a class="markdownIt-Anchor" href="#性能"></a> 性能</h2>
<p>网络性能的衡量可以通过如下这些指标：</p>
<ul>
<li>带宽：可以用赫兹衡量或是用每秒位数衡量两种方式</li>
<li>吞吐量：衡量通过网络发送数据的快慢</li>
<li>延迟：一个位从源开始发出到整个报文完全到达目标所经历的时间。带宽与延迟的乘积是能够充满链路的位个数。</li>
<li>抖动：当数据不同分组的延迟不同，并且应用在接收数据时对时间敏感时，使用这些分组的应用就会遭遇抖动</li>
</ul>
<h1 id="数字传输"><a class="markdownIt-Anchor" href="#数字传输"></a> 数字传输</h1>
<h2 id="数字到数字转换"><a class="markdownIt-Anchor" href="#数字到数字转换"></a> 数字到数字转换</h2>
<p>数字到数字转换指的是将数字数据转换为数字信号。这一转换涉及到下面的三种技术：</p>
<ul>
<li>线路编码：指的是将数字数据转换为数字信号的过程。公用线路编码机制分为如下三类：
<ul>
<li>单极性：电压电平在正电平和负电平之间振荡。这种编码机制中包括不归零编码（电平等级决定位值或是电平是否跳变决定位值）、归零编码（信号在位中变化，需要用两个信号编码一个位）、曼彻斯特编码（将位的持续时间二等分，前半部分和后半部分的跳变决定位值）、差分曼彻斯特编码（同样是位中间跳变，但是位值在位开始时决定）。</li>
<li>双极性：有三个电平，包括正电平、负电平和零，一个数据元素的电平是0，而另一个数据元素的电平在正和负电平之间交替。常用编码方式包括AMI和伪三元编码。</li>
<li>多电平：将m个数据元素的模式编码成n哥信号元素的模式，从而增加每波特的位数。</li>
</ul>
</li>
<li>块编码：块编码将m位的块变成n位的块（n&gt;m），从而提供冗余来确保同步，并提供内在的差错检测。</li>
<li>扰动：在长距离通信中，连续的长序列可能会不同步。此时可以通过增加扰动来将电平脉冲进行置换，在不增长位数的同时提供同步。</li>
</ul>
<h2 id="模拟到数字转换"><a class="markdownIt-Anchor" href="#模拟到数字转换"></a> 模拟到数字转换</h2>
<p>将模拟信号转换成数字信号最通用的技术称为脉冲码调制（PCM），PCM编码器包括三个过程：</p>
<ol>
<li>对模拟信号采样。为了再生原始模拟信号，采样速率至少是原始信号中最高频率的两倍。</li>
<li>对采样后的信号进行量化。这一步骤是将原始模拟信号的振幅分成若干个区间，然后将样本的振幅值对应到区间的中点。</li>
<li>将量化后的值编码为位流。在每个样本被量化且每个样本的位数被确定之后，将每个样本转换成对应的0/1数字编码。</li>
</ol>
<p>原始信号的恢复需要PCM解码器。解码器首先将数字编码转换成脉冲，这个脉冲在下个脉冲之前保持振幅，这一过程生成阶梯信号。当阶梯信号完成后，它经过一个低通滤波器将阶梯信号平滑为模拟信号。</p>
<p>由于PCM调制较为复杂，目前已开发出其它技术用来简化这一操作，例如delta调制等。</p>
<h1 id="模拟传输"><a class="markdownIt-Anchor" href="#模拟传输"></a> 模拟传输</h1>
<h2 id="数字到模拟转换"><a class="markdownIt-Anchor" href="#数字到模拟转换"></a> 数字到模拟转换</h2>
<p>数字到模拟转换指的是根据数字数据中的信息而改变模拟信号的某种特性的过程。由于一个正弦波可以通过振幅、频率和相位三个特性定义，当我们改变其中一个就产生了波的另一种形式。因此，将数字数据调制为模拟信号有三种方式：幅移键控、频移键控和相移键控。此外，还有正交振幅调制方法，将振幅和相位的变化结合起来，这种方法是目前调制解调器中普遍采用的机制。</p>
<h2 id="模拟到模拟转换"><a class="markdownIt-Anchor" href="#模拟到模拟转换"></a> 模拟到模拟转换</h2>
<p>模拟到模拟转换，又叫模拟调制，是通过模拟信号来表示模拟信息的。如果介质具有带通性，那么就需要对模拟信号进行调制。比如每个无线电基站生成的模拟信号都是低通信号，都在同一频率范围内。为了收听不同电台，则需要将低通信号进行平移，使得每一个信号对应于不同的频率范围。</p>
<p>模拟到模拟转换的实现方式有三种：调幅（AM）、调频（FM）和调相（PM）。</p>
<h1 id="带宽利用"><a class="markdownIt-Anchor" href="#带宽利用"></a> 带宽利用</h1>
<h2 id="多路复用"><a class="markdownIt-Anchor" href="#多路复用"></a> 多路复用</h2>
<h3 id="简介-2"><a class="markdownIt-Anchor" href="#简介-2"></a> 简介</h3>
<p>多路复用是允许同时通过一条数据链路传输多个信号的一组技术。只要连接两台设备的介质带宽比设备间传输所要求的带宽高时，该链路就可以被共享。</p>
<p>在多路复用的系统中，n条线路共享一条链路的带宽。n条输入将传输流送到多路复用器中，它将这些流组成一个单独的流；而在接收端，这个传输流被分离器接收，并分解为原来几个独立的传输流，并直接发送到对应的设备上。</p>
<h3 id="技术"><a class="markdownIt-Anchor" href="#技术"></a> 技术</h3>
<p>基本的多路复用技术包括：</p>
<ul>
<li>频分多路复用：在链路带宽大于要传输的信号的带宽之和时使用。每个发送设备生成的信号用于调制不同的载波频率，调制后的信号再被合并为一个可以通过链路传输的复合信号。这些载波频率被分离为多个不同的信号通道，同时每一条通道之间有狭长的未使用带宽，作为防护频带对这些通道进行分隔，以防止信号重叠。</li>
<li>波分多路复用：用于具有高数据速率传输能力的光纤电缆。其原理也是将不同频率的不同信号合并。</li>
<li>时分多路复用：这一技术是通过将时间分成多个时间段，每个链接占用链路的一个时间段。</li>
</ul>
<h2 id="扩频"><a class="markdownIt-Anchor" href="#扩频"></a> 扩频</h2>
<h3 id="简介-3"><a class="markdownIt-Anchor" href="#简介-3"></a> 简介</h3>
<p>扩频也是把来自某些源端的信号组合在一起，形成一个更宽的带宽。但是扩频是为无线应用而设计的，在这些类型的应用中，所有基站以空气作为通信传输介质。</p>
<p>通过扩频，原始信号的频带被扩展，从而允许源端使用一些带有防护的封装将它的报文进行更加安全的传输。</p>
<h3 id="扩频技术"><a class="markdownIt-Anchor" href="#扩频技术"></a> 扩频技术</h3>
<h4 id="跳频扩频"><a class="markdownIt-Anchor" href="#跳频扩频"></a> 跳频扩频</h4>
<p>跳频扩频使用源信号调制M个不同的载波频率，在某一时刻用信号调制1个载波频率，在下一时刻信号调制另一个频率。因此，最终一共使用了M个频率。</p>
<h4 id="直接序列扩频"><a class="markdownIt-Anchor" href="#直接序列扩频"></a> 直接序列扩频</h4>
<p>直接序列扩频技术也是扩大源信号的带宽，但是原始数据的每一位被编码为n个码片，而码片的速率是数据比特率的n倍。如果每个站点使用不同的编码方式，它可以提供抗干扰的能力。</p>
<h1 id="传输介质"><a class="markdownIt-Anchor" href="#传输介质"></a> 传输介质</h1>
<h2 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h2>
<p>传输介质实际上位于物理层以下，并直接由物理层控制。它可以广义地定义为可以从源端传送信息到目的端的任何东西。传输介质可以分为有向和无向两大类。</p>
<h2 id="有向介质"><a class="markdownIt-Anchor" href="#有向介质"></a> 有向介质</h2>
<p>有向介质指的是那些在设备之间提供通路的介质，包括双绞线、同轴电缆和光缆。沿着这类介质传输的信号，其传输方向和传播范围受到介质的物理边界限制。</p>
<p>双绞线和同轴电缆使用金属导体接收和传输电流形式的信号，光纤使用玻璃线缆接收和传输光波形式的信号。</p>
<h3 id="无向介质"><a class="markdownIt-Anchor" href="#无向介质"></a> 无向介质</h3>
<p>无向介质不使用物理导体传输电磁波，这种类型的通信通常是指无线通信。信号通常是通过空气广播的，可以被任何人接收。</p>
<p>无线传输可以分为如下的三组方式：</p>
<ul>
<li>无线电波：指的是频率范围在3KHz到1GHz之间的电磁波。大部分的无线电波是全方向的，也就是说发射和接收天线无需对准，同时也可以被任何的接收天线接收。但是这种方法容易受到另一只使用相同频率或波段的天线所发射信号的干扰。无线电波可以传播的距离很长，穿透性也较好，但是通信速率较低。</li>
<li>微波：指的是频率范围1GHz到300GHz的电磁波。微波是单向的，天线发射微波时可以聚集在很窄的范围内，因此发射天线和接收天线需要对准。微波的数据速率较快，但是穿透性较差。</li>
<li>红外信号：指的是频率范围300GHz到400THz的电磁波。红外信号频率很高，不能穿透墙体，因此常用作短距离通信。但是这样也可以防止系统之间的互相干扰。</li>
</ul>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<ol>
<li>计算机网络：自顶向下方法</li>
</ol>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>密码学-公钥加密</title>
    <url>/2021/01/09/%E5%AF%86%E7%A0%81%E5%AD%A6-%E5%85%AC%E9%92%A5%E5%8A%A0%E5%AF%86/</url>
    <content><![CDATA[<h1 id="math-related-with-public-key-encryption"><a class="markdownIt-Anchor" href="#math-related-with-public-key-encryption"></a> Math related with public-key encryption</h1>
<h2 id="diffie-hellman-problems"><a class="markdownIt-Anchor" href="#diffie-hellman-problems"></a> Diffie-Hellman problems</h2>
<p>Fix a cyclic group <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="double-struck">G</mi></mrow><annotation encoding="application/x-tex">\mathbb{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span></span></span></span> and a generator <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo>∈</mo><mi mathvariant="double-struck">G</mi></mrow><annotation encoding="application/x-tex">g\in \mathbb{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span></span></span></span>. Given elements <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>h</mi><mn>2</mn></msub><mo>∈</mo><mi mathvariant="double-struck">G</mi></mrow><annotation encoding="application/x-tex">h_{1},h_{2}\in \mathbb{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span></span></span></span>, define <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><msub><mi>H</mi><mi>g</mi></msub><mo stretchy="false">(</mo><msub><mi>h</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>h</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><msup><mi>g</mi><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>g</mi></msub><msub><mi>h</mi><mn>1</mn></msub><mo>⋅</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>g</mi></msub><msub><mi>h</mi><mn>2</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">DH_{g}(h_{1},h_{2})=g^{log_{g}h_{1}\cdot log_{g}h_{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">o</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">o</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285716em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>. That is, if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mn>1</mn></msub><mo>=</mo><msup><mi>g</mi><msub><mi>x</mi><mn>1</mn></msub></msup></mrow><annotation encoding="application/x-tex">h_{1}=g^{x_{1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mn>2</mn></msub><mo>=</mo><msup><mi>g</mi><msub><mi>x</mi><mn>2</mn></msub></msup></mrow><annotation encoding="application/x-tex">h_{2}=g^{x_{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> then</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><msub><mi>H</mi><mi>g</mi></msub><mo stretchy="false">(</mo><msub><mi>h</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>h</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><msup><mi>g</mi><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>⋅</mo><msub><mi>x</mi><mn>2</mn></msub></mrow></msup><mo>=</mo><msubsup><mi>h</mi><mn>1</mn><msub><mi>x</mi><mn>2</mn></msub></msubsup><mo>=</mo><msubsup><mi>h</mi><mn>2</mn><msub><mi>x</mi><mn>1</mn></msub></msubsup></mrow><annotation encoding="application/x-tex">DH_{g}(h_{1},h_{2})=g^{x_{1}\cdot x_{2}}=h_{1}^{x_{2}}=h_{2}^{x_{1}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.918555em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.724115em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0126em;vertical-align:-0.26630799999999993em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.746292em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0126em;vertical-align:-0.26630799999999993em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.746292em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>The computational Diffie-Hellman(CDH) problem is to compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><msub><mi>H</mi><mi>g</mi></msub><mo stretchy="false">(</mo><msub><mi>h</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>h</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">DH_{g}(h_{1},h_{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> for uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">h_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">h_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>. It is not clear whether hardness of the discrete-logarithm problem implies that the CDH problem is hard as well.</p>
<a id="more"></a>
<p>The decisional Diffie-Hellman(DDH) problem is, when given uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>h</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">h_{1},h_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and a third group element <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>h</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">h&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>, distinguish whether <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>h</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>D</mi><msub><mi>H</mi><mi>g</mi></msub><mo stretchy="false">(</mo><msub><mi>h</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>h</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h&#x27;=DH_{g}(h_{1},h_{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> or <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>h</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">h&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> is chosen from a uniform group element.</p>
<h2 id="rsa-generation"><a class="markdownIt-Anchor" href="#rsa-generation"></a> RSA generation</h2>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002514.png" alt="image-20201019230737926" /></p>
<h1 id="key-management-evolution"><a class="markdownIt-Anchor" href="#key-management-evolution"></a> Key management evolution</h1>
<h2 id="key-distribution-in-private-key-encryption"><a class="markdownIt-Anchor" href="#key-distribution-in-private-key-encryption"></a> key distribution in private-key encryption</h2>
<h3 id="problems"><a class="markdownIt-Anchor" href="#problems"></a> Problems</h3>
<ul>
<li>Key distribution: The key must be shared through a secure channel.</li>
<li>Storing and managing large number of secret keys: N people communicating with each other need to store N-1 secret keys for each one.</li>
<li>Inapplicability of private-key cryptography to open systems: can not interact with new users.</li>
</ul>
<h3 id="key-distribution-centers"><a class="markdownIt-Anchor" href="#key-distribution-centers"></a> Key-distribution centers</h3>
<p>A key-distribution center(KDC) can become a partial solution for the problem above. An entity trusted by all the users serves as a key-distribution center and it helps all the users share pairwise keys.</p>
<p><strong>Offline fashion</strong>: When a new people <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> join, the KDC shares a key with this people, and also distributes <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> shared keys between <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> and other <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>∼</mo><mi>i</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1\sim i-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> people.</p>
<p><strong>Online fashion</strong>: Generate key on demand whenever Alice and Bob need to communicate securely. Choose a new, random key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>, then send to Alice encrypted using <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">k_{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and to Bob encrypted using <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">k_{B}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>. (<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">k_{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> is a private key between KDC and Alice)</p>
<p>The KDC can alleviate two of the problem: the key distribution is simplified, and the key storage is eased.</p>
<p>There are also some drawbacks: the KDC is a single point of failure, and a successful attack on the KDC will result in a complete break of the system.</p>
<h3 id="needham-schroder-protocol"><a class="markdownIt-Anchor" href="#needham-schroder-protocol"></a> Needham-Schroder protocol</h3>
<p>A protocol for secure key distribution using KDC. One of its features is that KDC sends to Alice the session key encrypted under Alice’s key in addition to the session key encrypted under Bob’s key. Alice then sends the second ciphertext to Bob as a credential that allows Alice talk to Bob.</p>
<p>The process is shown as the following figure:</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002520.png" alt="image-20201019231425359" style="zoom: 50%;" />
<h2 id="diffie-hellman-protocol"><a class="markdownIt-Anchor" href="#diffie-hellman-protocol"></a> Diffie-Hellman protocol</h2>
<p>The KDC approaches still require a private and authenticated channel that can be used to share keys, so it is still not applicable in open systems.</p>
<p>Diffie and Hellman’s paper stated that there are certain actions that can be easily performed but not easily reversed. This phenomena could be used to derive interactive protocols for sercure key exchange that allow two parties to share a secret key via communication over a public but authenticated channel, by having the parties perform operations that they can reverse but that an eavesdropper cannot.</p>
<h3 id="secure-key-exchange"><a class="markdownIt-Anchor" href="#secure-key-exchange"></a> Secure key exchange</h3>
<p>The key-exchange experiment <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><msubsup><mi>E</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow><mrow><mi>e</mi><mi>a</mi><mi>v</mi></mrow></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">KE_{\mathcal{A},\pi}^{eav}(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.161439em;vertical-align:-0.411439em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.424669em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.411439em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>:</p>
<ol>
<li>
<p>Two parties holding <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> execute protocol <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span>. This results in a transcript <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">trans</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span></span></span></span> containing all the messages sent by the parties, and a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> output by each of the parties.</p>
</li>
<li>
<p>A uniform bit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">b\in \{0,1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span> is chosen. If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">b=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>k</mi><mo>^</mo></mover><mo>:</mo><mo>=</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">\hat{k}:=k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9578799999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>, and if b=1 then choose <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>k</mi><mo>^</mo></mover><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\hat{k}\in \{0,1\}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9969799999999999em;vertical-align:-0.0391em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> uniformly at random</p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> is given <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">trans</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>k</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9578799999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span></span></span></span>, and output a bit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">b&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>The output of the experiment is defined to be 1 if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">b&#x27;=b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> and 0 otherwise. In the case that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><msubsup><mi>E</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow><mrow><mi>e</mi><mi>a</mi><mi>v</mi></mrow></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">KE_{\mathcal{A},\pi}^{eav}(n)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.161439em;vertical-align:-0.411439em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.424669em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.411439em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> we say that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> succeeds.</p>
</li>
</ol>
<p>A key-exchange protocol <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span> is secure in the presence of \textit{an eavesdropper} if for all probabilistic polynomial-time adversaries <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> there is a negligible function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">negl</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> such that</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><mi>K</mi><msubsup><mi>E</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow><mrow><mi>e</mi><mi>a</mi><mi>v</mi></mrow></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo stretchy="false">]</mo><mo>≤</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>+</mo><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Pr[KE_{\mathcal{A},\pi}^{eav}(n)=1]\le \frac{1}{2}+negl(n)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.133108em;vertical-align:-0.383108em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-2.4530000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></p>
<h3 id="the-diffie-hellman-key-exchange-protocol"><a class="markdownIt-Anchor" href="#the-diffie-hellman-key-exchange-protocol"></a> The Diffie-Hellman key-exchange protocol</h3>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">G</mi></mrow><annotation encoding="application/x-tex">\mathcal{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span></span></span></span> be a probabilistic polynomial-time algorithm that, on input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>, outputs a description of a cyclic group <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="double-struck">G</mi></mrow><annotation encoding="application/x-tex">\mathbb{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span></span></span></span>, its order <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span> with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>q</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>=</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">||q||=n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>, and a generator <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo>∈</mo><mi mathvariant="double-struck">G</mi></mrow><annotation encoding="application/x-tex">g\in \mathbb{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span></span></span></span>. The Diffie-Hellman key-exchange protocol can be described as follows:</p>
<ul>
<li><strong>Common input</strong>: The security parameter <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>.</li>
<li><strong>The protocol</strong>:
<ol>
<li>Alice runs <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">G</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{G}(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> to obtain <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\mathbb{G},q,g)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mclose">)</span></span></span></span>.</li>
<li>Alice chooses a uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>∈</mo><msub><mi mathvariant="double-struck">Z</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">x\in \mathbb{Z}_{q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.974998em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>, and computes <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>A</mi></msub><mo>:</mo><mo>=</mo><msup><mi>g</mi><mi>x</mi></msup></mrow><annotation encoding="application/x-tex">h_{A}:=g^x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span>.</li>
<li>Alice sends <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><msub><mi>h</mi><mi>A</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\mathbb{G},q,g,h_{A})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> to Bob.</li>
<li>Bob receives <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><msub><mi>h</mi><mi>A</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\mathbb{G},q,g,h_{A})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>. He chooses a uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>∈</mo><msub><mi mathvariant="double-struck">Z</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">y\in \mathbb{Z}_{q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.974998em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>, and computes <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>B</mi></msub><mo>:</mo><mo>=</mo><msup><mi>g</mi><mi>y</mi></msup></mrow><annotation encoding="application/x-tex">h_{B}:=g^y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span></span></span>. Bob sends <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">h_{B}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> to Alice and outputs the key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>B</mi></msub><mo>:</mo><mo>=</mo><msubsup><mi>h</mi><mi>A</mi><mi>y</mi></msubsup></mrow><annotation encoding="application/x-tex">k_{B}:=h_{A}^{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.075831em;vertical-align:-0.293531em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.4064690000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.293531em;"><span></span></span></span></span></span></span></span></span></span>.</li>
<li>Alice receives <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>h</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">h_{B}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and outputs the key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>A</mi></msub><mo>:</mo><mo>=</mo><msubsup><mi>h</mi><mi>B</mi><mi>x</mi></msubsup></mrow><annotation encoding="application/x-tex">k_{A}:=h_{B}^{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9697709999999999em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.424669em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>.</li>
</ol>
</li>
</ul>
<p>The following figure illustrate the construction of Diffie-Hellman key-exchange protocol:</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002527.png" alt="image-20201019231826956" style="zoom: 50%;" />
<p>If the decisional Diffie-Hellman problem is hard relative to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">G</mi></mrow><annotation encoding="application/x-tex">\mathcal{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span></span></span></span>, then the Diffie-Hellman key-exchange protocol <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span> is secure in the presence of an eavesdropper.</p>
<p>Please note that the shared key is indistinguishable from a <em>uniform element of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="double-struck">G</mi></mrow><annotation encoding="application/x-tex">\mathbb{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span></span></span></span></em> rather than from a uniform n-bit string.</p>
<p>In order to use the key for subsequent cryptographic applications, the key output by the parties should be indistinguishable from a uniform bit-string of the appropriate length. The Diffie-Hellman protocol can be modified to achieve this by using an appropriate <em>key-derivation function</em>.</p>
<p>Diffie-Hellman protocol is completely insecure against man-in-the-middle attacks (both honest parties are executing the protocol and the adversary is intercepting and modifying messages being sent from one party to the other). But it is the core of standardized key-exchange protocols today.</p>
<h1 id="public-key-encryption"><a class="markdownIt-Anchor" href="#public-key-encryption"></a> Public-key encryption</h1>
<h2 id="overview"><a class="markdownIt-Anchor" href="#overview"></a> Overview</h2>
<p>In public-key encryption, the receiver generates a pair of keys <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mi>k</mi><mo separator="true">,</mo><mi>s</mi><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(pk,sk)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>, called the <em>public key</em> and <em>private key</em> respectively. The public key is used by the sender to encrypt a message; the receiver uses the private key to decrypt the resulting ciphertext.</p>
<p>Two ways to learn <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">pk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> (Alice is the receiver and Bob is the sender):</p>
<ol>
<li>
<p>When Alice learns that Bob wants to communicate with her, generate <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mi>k</mi><mo separator="true">,</mo><mi>s</mi><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(pk,sk)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span> and then send <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">pk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> to Bob in the clear.</p>
</li>
<li>
<p>Alice generate her keys <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mi>k</mi><mo separator="true">,</mo><mi>s</mi><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(pk,sk)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span> in advance, independently of any particular sender. Then she can widely disseminate <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">pk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> so that anyone who wishes to communicate with her can use <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">pk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> directly.</p>
</li>
</ol>
<p>Some important notes for public-key encryption:</p>
<ul>
<li>The security of public-key encryption relies on the secrecy of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">sk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>.</li>
<li>The security of public-key encryption is under the assumption that the sender are able to obtain a legitimate copy of the receiver’s public key.</li>
</ul>
<p>Comparison with private-key encryption:</p>
<ul>
<li>
<p>Advantages:</p>
<ol>
<li>The key-distribution could be done over public but authenticated channels, since <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">pk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> do not need to be secret.</li>
<li>Reduce the need for users to store many secret keys.</li>
<li>More suitable for open environments.</li>
</ol>
</li>
<li>
<p>Drawbacks:</p>
<ol>
<li>The receiver could receive messages from anyone. (When receiver only wants to receive the message from specific invididuals it is a drawback).</li>
<li>Roughly <strong>2 to 3 orders of magnitude slower</strong> than private-key encryption.</li>
</ol>
</li>
</ul>
<h2 id="public-key-encryption-scheme"><a class="markdownIt-Anchor" href="#public-key-encryption-scheme"></a> Public-key encryption scheme</h2>
<p>A public-key encryption scheme is a triple of probabilistic polynomial-time algorithms <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>E</mi><mi>n</mi><mi>c</mi><mo separator="true">,</mo><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(Gen,Enc,Dec)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span> such that:</p>
<ol>
<li>The key-generation algorithm <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span> takes the security parameter <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> as input and outputs a pair of keys <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mi>k</mi><mo separator="true">,</mo><mi>s</mi><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(pk,sk)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>. We refer to the first of these as the \textit{public key} and the second as \textit{private key}. Assuming for convenience that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">pk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">sk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> each has length at least <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>, and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> can be determined from <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi><mo separator="true">,</mo><mi>s</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">pk,sk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>.</li>
<li>The encryption algorithm <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Enc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span></span></span></span> takes a public key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">pk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> and a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> from some message space (depend on <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">pk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>) as input. It outputs a ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span>, and we write it as <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>←</mo><mi>E</mi><mi>n</mi><msub><mi>c</mi><mrow><mi>p</mi><mi>k</mi></mrow></msub><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c\leftarrow Enc_{pk}(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span>. (Write this way means that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Enc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span></span></span></span> is probabilistic, which is needed to achieve meaningful security)</li>
<li>The deterministic decryption algorithm <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Dec</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span></span></span></span> takes a private key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">sk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> and a ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span> as input, and outputs a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> or a special symbol denoting failure. We write this as <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>:</mo><mo>=</mo><mi>D</mi><mi>e</mi><msub><mi>c</mi><mrow><mi>s</mi><mi>k</mi></mrow></msub><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m:=Dec_{sk}(c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span>.</li>
</ol>
<h2 id="kemdem-paradigm"><a class="markdownIt-Anchor" href="#kemdem-paradigm"></a> KEM/DEM paradigm</h2>
<h3 id="hybrid-encryption"><a class="markdownIt-Anchor" href="#hybrid-encryption"></a> Hybrid encryption</h3>
<p>In hybrid encryption, both private-key encryption and public-key encryption are used. The aims of using hybrid encryption:</p>
<ul>
<li>Private-key encryption can increase efficiency.</li>
<li>Using public-key encryption to increase bandwidth.</li>
</ul>
<p>Note that although the private-key encryption is used as a component, this method still belongs to public encryption schemes, since <em>the sender and receiver do not share any secret key in advance</em>.</p>
<h3 id="construction"><a class="markdownIt-Anchor" href="#construction"></a> Construction</h3>
<p>A key-encapsulation mechanism(KEM) is a tuple of probabilistic polynomial-time algorithms <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>E</mi><mi>n</mi><mi>c</mi><mi>a</mi><mi>p</mi><mi>s</mi><mo separator="true">,</mo><mi>D</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>p</mi><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(Gen,Encaps,Decaps)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span> such that:</p>
<ol>
<li>
<p>The key-generation algorithm <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span> takes as input the security parameter <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and outputs a public-/private-key pair <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mi>k</mi><mo separator="true">,</mo><mi>s</mi><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(pk,sk)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>. Assuming that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">pk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">sk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> each has length at least <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>, and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> can be determined from <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi><mo separator="true">,</mo><mi>s</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">pk,sk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>.</p>
</li>
<li>
<p>The encapsulation algorithm <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><mi>c</mi><mi>a</mi><mi>p</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">Encaps</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">s</span></span></span></span> takes as input a public key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">pk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> and the security parameter <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>. It outputs a ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span> and a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">k\in \{0,1\}^{\ell (n)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> where <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi></mrow><annotation encoding="application/x-tex">\ell</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">ℓ</span></span></span></span> is the key length. It can be written as <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>c</mi><mo separator="true">,</mo><mi>k</mi><mo stretchy="false">)</mo><mo>←</mo><mi>E</mi><mi>n</mi><mi>c</mi><mi>a</mi><mi>p</mi><msub><mi>s</mi><mrow><mi>p</mi><mi>k</mi></mrow></msub><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(c,k)\leftarrow Encaps_{pk}(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>.</p>
</li>
<li>
<p>The deterministic decapsulation algorithm <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>p</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">Decaps</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">s</span></span></span></span> takes as input a private key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">sk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> and a ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span>, and outputs a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> or a special symbol denoting failure. We write this as <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>:</mo><mo>=</mo><mi>D</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>p</mi><msub><mi>s</mi><mrow><mi>s</mi><mi>k</mi></mrow></msub><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k:=Decaps_{sk}(c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span>.</p>
</li>
</ol>
<p>By using a KEM, a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> is generated and then is used for private-key encryption.<br />
The private-key encrypton scheme is called the data-encapsulation mechanism(DEM).</p>
<p>Using the construction above, we can construct hybrid encryption using the KEM/DEM paradigm:</p>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi><mo>=</mo><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>E</mi><mi>n</mi><mi>c</mi><mi>a</mi><mi>p</mi><mi>s</mi><mo separator="true">,</mo><mi>D</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>p</mi><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi=(Gen,Encaps,Decaps)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span> be a KEM with key length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>, and let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="normal">Π</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><msup><mi>n</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><mi>E</mi><mi>n</mi><msup><mi>c</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><mi>D</mi><mi>e</mi><msup><mi>c</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi&#x27;=(Gen&#x27;,Enc&#x27;,Dec&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> be a private-key encryption scheme. Construct a public-key encryption scheme <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="normal">Π</mi><mrow><mi>h</mi><mi>y</mi></mrow></msup><mo>=</mo><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><msup><mi>n</mi><mrow><mi>h</mi><mi>y</mi></mrow></msup><mo separator="true">,</mo><mi>E</mi><mi>n</mi><msup><mi>c</mi><mrow><mi>h</mi><mi>y</mi></mrow></msup><mo separator="true">,</mo><mi>D</mi><mi>e</mi><msup><mi>c</mi><mrow><mi>h</mi><mi>y</mi></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi^{hy}=(Gen^{hy},Enc^{hy},Dec^{hy})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0991079999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> as follows:</p>
<ul>
<li>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><msup><mi>n</mi><mrow><mi>h</mi><mi>y</mi></mrow></msup></mrow><annotation encoding="application/x-tex">Gen^{hy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span></span></span></span>: on input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> run <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gen(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> and use the public and private keys <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mi>k</mi><mo separator="true">,</mo><mi>s</mi><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(pk,sk)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span> that are output.</p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><msup><mi>c</mi><mrow><mi>h</mi><mi>y</mi></mrow></msup></mrow><annotation encoding="application/x-tex">Enc^{hy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span></span></span></span>: on input a public key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">pk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> and a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">m\in \{0,1\}^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span> do:</p>
<ol>
<li>Compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>c</mi><mo separator="true">,</mo><mi>k</mi><mo stretchy="false">)</mo><mo>←</mo><mi>E</mi><mi>n</mi><mi>c</mi><mi>a</mi><mi>p</mi><msub><mi>s</mi><mrow><mi>p</mi><mi>k</mi></mrow></msub><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(c,k)\leftarrow Encaps_{pk}(1^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>.</li>
<li>Compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>c</mi><mo mathvariant="normal">′</mo></msup><mo>←</mo><mi>E</mi><mi>n</mi><msubsup><mi>c</mi><mi>k</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msubsup><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c&#x27;\leftarrow Enc_{k}^{&#x27;}(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.225588em;vertical-align:-0.2831079999999999em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span>.</li>
<li>Output the ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>c</mi><mo separator="true">,</mo><msup><mi>c</mi><mo mathvariant="normal">′</mo></msup><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;c,c&#x27;&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>.</li>
</ol>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>e</mi><msup><mi>c</mi><mrow><mi>h</mi><mi>y</mi></mrow></msup></mrow><annotation encoding="application/x-tex">Dec^{hy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span></span></span></span>: on input a private key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">sk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> and a ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>c</mi><mo separator="true">,</mo><msup><mi>c</mi><mo mathvariant="normal">′</mo></msup><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;c,c&#x27;&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>  do:</p>
<ol>
<li>Compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>:</mo><mo>=</mo><mi>D</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>p</mi><msub><mi>s</mi><mrow><mi>s</mi><mi>k</mi></mrow></msub><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k:=Decaps_{sk}(c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span>.</li>
<li>Output the message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>:</mo><mo>=</mo><mi>D</mi><mi>e</mi><msubsup><mi>c</mi><mi>k</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msubsup><mo stretchy="false">(</mo><msup><mi>c</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m:=Dec_{k}^{&#x27;}(c&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.225588em;vertical-align:-0.2831079999999999em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>.</li>
</ol>
</li>
</ul>
<h2 id="cdhddh-based-encryption"><a class="markdownIt-Anchor" href="#cdhddh-based-encryption"></a> CDH/DDH-based encryption</h2>
<h3 id="el-gamal-encryption"><a class="markdownIt-Anchor" href="#el-gamal-encryption"></a> El Gamal encryption</h3>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">G</mi></mrow><annotation encoding="application/x-tex">\mathcal{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span></span></span></span> be a probabilistic polynomial-time algorithm that, on input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>, outputs a description of a cyclic group <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="double-struck">G</mi></mrow><annotation encoding="application/x-tex">\mathbb{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span></span></span></span>, its order <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span> with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>q</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>=</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">||q||=n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>, and a generator <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo>∈</mo><mi mathvariant="double-struck">G</mi></mrow><annotation encoding="application/x-tex">g\in \mathbb{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span></span></span></span>. Define the El Gamal encryption scheme as follows:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span>: on input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> run <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">G</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{G}(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> to obtain <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\mathbb{G},q,g)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mclose">)</span></span></span></span>. Then choose a uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>∈</mo><msub><mi mathvariant="double-struck">Z</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">x\in \mathbb{Z}_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.974998em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> and compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo>:</mo><mo>=</mo><msup><mi>g</mi><mi>x</mi></msup></mrow><annotation encoding="application/x-tex">h:=g^x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span>. The public key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>h</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;\mathbb{G},q,g,h&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and the private key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>x</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;\mathbb{G},q,g,x&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.88333em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>. The message space is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="double-struck">G</mi></mrow><annotation encoding="application/x-tex">\mathbb{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Enc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span></span></span></span>: on input a public key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi><mo>=</mo><mo>&lt;</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>h</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">pk=&lt;\mathbb{G},q,g,h&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mi mathvariant="double-struck">G</mi></mrow><annotation encoding="application/x-tex">m\in \mathbb{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span></span></span></span>, choose a uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>∈</mo><msub><mi mathvariant="double-struck">Z</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">y\in \mathbb{Z}_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.974998em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> and output the ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><msup><mi>g</mi><mi>y</mi></msup><mo separator="true">,</mo><msup><mi>h</mi><mi>y</mi></msup><mo>⋅</mo><mi>m</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;g^{y},h^{y}\cdot m&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Dec</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span></span></span></span>: on input a private key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>k</mi><mo>=</mo><mo>&lt;</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>x</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">sk=&lt;\mathbb{G},q,g,x&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.88333em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and a ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><msub><mi>c</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>c</mi><mn>2</mn></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;c_{1},c_{2}&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>, output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>m</mi><mo>^</mo></mover><mo>:</mo><mo>=</mo><msub><mi>c</mi><mn>2</mn></msub><mi mathvariant="normal">/</mi><msubsup><mi>c</mi><mn>1</mn><mi>x</mi></msubsup></mrow><annotation encoding="application/x-tex">\hat{m}:=c_{2}/c_{1}^{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span>.</li>
</ul>
<p>If the DDH problem is hard relative to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">G</mi></mrow><annotation encoding="application/x-tex">\mathcal{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span></span></span></span>, then the El Gamal encryption scheme is CPA-secure, but it is not CCA-secure!</p>
<p>Some implementation issues:</p>
<ul>
<li>It is common for these parameters generated by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span> to be fixed once for all, and then shared by multiple receivers. Sharing parameters in this way <em>does not impact security</em>.</li>
<li>The group order <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span> is generally chosen to be prime. And elliptic curves are one popular choice.</li>
<li>The message space is a group <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="double-struck">G</mi></mrow><annotation encoding="application/x-tex">\mathbb{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span></span></span></span> rather than bit-strings. So the messages need to be encoded as group elements before encryption, and decoded after decryption.</li>
</ul>
<h3 id="ddh-based-key-encapsulation"><a class="markdownIt-Anchor" href="#ddh-based-key-encapsulation"></a> DDH-based key encapsulation</h3>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">G</mi></mrow><annotation encoding="application/x-tex">\mathcal{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span></span></span></span> be a probabilistic polynomial-time algorithm that, on input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>, outputs a description of a cyclic group <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="double-struck">G</mi></mrow><annotation encoding="application/x-tex">\mathbb{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span></span></span></span>, its order <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span> with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>q</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>=</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">||q||=n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>, and a generator <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo>∈</mo><mi mathvariant="double-struck">G</mi></mrow><annotation encoding="application/x-tex">g\in \mathbb{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span></span></span></span>. Define a KEM as follows:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span>: on input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> run <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">G</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{G}(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> to obtain <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\mathbb{G},q,g)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mclose">)</span></span></span></span>. Then choose a uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>∈</mo><msub><mi mathvariant="double-struck">Z</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">x\in \mathbb{Z}_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.974998em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> and compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo>:</mo><mo>=</mo><msup><mi>g</mi><mi>x</mi></msup></mrow><annotation encoding="application/x-tex">h:=g^x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span>. Also specify a function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo>:</mo><mi mathvariant="double-struck">G</mi><mo>→</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">H:\mathbb{G}\rightarrow \{0,1\}^{\ell (n)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> for some function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi></mrow><annotation encoding="application/x-tex">\ell</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">ℓ</span></span></span></span>. The public key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>h</mi><mo separator="true">,</mo><mi>H</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;\mathbb{G},q,g,h,H&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and the private key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>x</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;\mathbb{G},q,g,x&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.88333em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><mi>c</mi><mi>a</mi><mi>p</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">Encaps</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">s</span></span></span></span>: on input a public key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi><mo>=</mo><mo>&lt;</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>h</mi><mo separator="true">,</mo><mi>H</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">pk=&lt;\mathbb{G},q,g,h,H&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>, choose a uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>∈</mo><msub><mi mathvariant="double-struck">Z</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">y\in \mathbb{Z}_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.974998em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> and output the ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>g</mi><mi>y</mi></msup></mrow><annotation encoding="application/x-tex">g^{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span></span></span></span> and the key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><msup><mi>h</mi><mi>y</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(h^{y})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>p</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">Decaps</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">s</span></span></span></span>: on input a private key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>k</mi><mo>=</mo><mo>&lt;</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>x</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">sk=&lt;\mathbb{G},q,g,x&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.88333em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and a ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>∈</mo><mi mathvariant="double-struck">G</mi></mrow><annotation encoding="application/x-tex">c\in \mathbb{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span></span></span></span>, output the key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><msup><mi>c</mi><mi>x</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(c^{x})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>.</li>
</ul>
<p>If the gap-CDH problem (based on CDH problem, additionally give access to an oracle <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">O</mi></mrow><annotation encoding="application/x-tex">\mathcal{O}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span></span></span></span> that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">O</mi><mo stretchy="false">(</mo><mi>U</mi><mo separator="true">,</mo><mi>V</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{O}(U,V)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mclose">)</span></span></span></span> returns 1 when <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mo>=</mo><msup><mi>U</mi><mi>y</mi></msup></mrow><annotation encoding="application/x-tex">V=U^y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span></span></span>) is hard relative to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">G</mi></mrow><annotation encoding="application/x-tex">\mathcal{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span></span></span></span>, and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span> is modeled as a random oracle (an ideal model that treats a cryptographic hash function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span> as a truly random function), then the above construction is a CCA-secure KEM.</p>
<h3 id="dhiesecies"><a class="markdownIt-Anchor" href="#dhiesecies"></a> DHIES/ECIES</h3>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">G</mi></mrow><annotation encoding="application/x-tex">\mathcal{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span></span></span></span> be a probabilistic polynomial-time algorithm that, on input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>, outputs a description of a cyclic group <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="double-struck">G</mi></mrow><annotation encoding="application/x-tex">\mathbb{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span></span></span></span>, its order <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span> with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>q</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>=</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">||q||=n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>, and a generator <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo>∈</mo><mi mathvariant="double-struck">G</mi></mrow><annotation encoding="application/x-tex">g\in \mathbb{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span></span></span></span>. Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mi>E</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mi>E</mi><mi>n</mi><msup><mi>c</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><mi>D</mi><mi>e</mi><msup><mi>c</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi_{E}=(Enc&#x27;,Dec&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> be a private-key encryption scheme, and let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mi>M</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mi>M</mi><mi>a</mi><mi>c</mi><mo separator="true">,</mo><mi>V</mi><mi>r</mi><mi>f</mi><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi_{M}=(Mac,Vrfy)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> be a message authentication code. Define a public-key encryption scheme as follows:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span>: On input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> run <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">G</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{G}(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> to obtain <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\mathbb{G},q,g)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mclose">)</span></span></span></span>. Choose a uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>∈</mo><msub><mi mathvariant="double-struck">Z</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">x\in \mathbb{Z}_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.974998em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>, set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo>:</mo><mo>=</mo><msup><mi>g</mi><mi>x</mi></msup></mrow><annotation encoding="application/x-tex">h:=g^x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span>, and specify a function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo>:</mo><mi mathvariant="double-struck">G</mi><mo>→</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mrow><mn>2</mn><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">H:\mathbb{G}\rightarrow \{0,1\}^{2n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span>. The public key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>h</mi><mo separator="true">,</mo><mi>H</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;\mathbb{G},q,g,h,H&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and the private key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>H</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;\mathbb{G},q,g,x,H&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.88333em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Enc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span></span></span></span>: On input a public key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi><mo>=</mo><mo>&lt;</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>h</mi><mo separator="true">,</mo><mi>H</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">pk=&lt;\mathbb{G},q,g,h,H&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>, choose a uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>∈</mo><msub><mi mathvariant="double-struck">Z</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">y\in \mathbb{Z}_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.974998em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> and set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>E</mi></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>k</mi><mi>M</mi></msub><mo>:</mo><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><msup><mi>h</mi><mi>y</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k_{E}||k_{M}:=H(h^{y})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>. Compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>c</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>E</mi><mi>n</mi><msubsup><mi>c</mi><msub><mi>k</mi><mi>E</mi></msub><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msubsup><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c&#x27;=Enc_{k_{E}}^{&#x27;}(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3258929999999998em;vertical-align:-0.3834129999999999em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3834129999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span> and output the ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><msup><mi>g</mi><mi>y</mi></msup><mo separator="true">,</mo><msup><mi>c</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><mi>M</mi><mi>a</mi><msub><mi>c</mi><msub><mi>k</mi><mi>M</mi></msub></msub><mo stretchy="false">(</mo><msup><mi>c</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;g^{y},c&#x27;,Mac_{k_{M}}(c&#x27;)&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.002197em;vertical-align:-0.250305em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.250305em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Dec</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span></span></span></span>: On input a private key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>k</mi><mo>=</mo><mo>&lt;</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>H</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">sk=&lt;\mathbb{G},q,g,x,H&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.88333em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and a ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>c</mi><mo separator="true">,</mo><msup><mi>c</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><mi>t</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;c,c&#x27;,t&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>, output failure if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi mathvariant="normal">∉</mi><mi mathvariant="double-struck">G</mi></mrow><annotation encoding="application/x-tex">c\notin \mathbb{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mord"><span class="mrel">∈</span></span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="llap"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="inner"><span class="mord"><span class="mord">/</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span></span></span></span>. Else, compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>E</mi></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>k</mi><mi>M</mi></msub><mo>:</mo><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><msup><mi>c</mi><mi>x</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k_{E}||k_{M}:=H(c^{x})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>. If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><msub><mi>y</mi><msub><mi>k</mi><mi>M</mi></msub></msub><mo stretchy="false">(</mo><msup><mi>c</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mi mathvariant="normal">≠</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">Vrfy_{k_{M}}(c&#x27;,t)\ne 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.002197em;vertical-align:-0.250305em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.250305em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> then output failure, otherwise output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>e</mi><msubsup><mi>c</mi><msub><mi>k</mi><mi>E</mi></msub><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msubsup><mo stretchy="false">(</mo><msup><mi>c</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Dec_{k_{E}}^{&#x27;}(c&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3258929999999998em;vertical-align:-0.3834129999999999em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3834129999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>.</li>
</ul>
<p>When the group <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="double-struck">G</mi></mrow><annotation encoding="application/x-tex">\mathbb{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span></span></span></span> is a cyclic subgroup of a finite field, this encryption scheme is called the Diffie-Hellman Integrated Encryption Scheme (DHIES). And When <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="double-struck">G</mi></mrow><annotation encoding="application/x-tex">\mathbb{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span></span></span></span> is an elliptic-curve group, it is called the Elliptic Curve Integrated Encryption Scheme (ECIES).</p>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mi>E</mi></msub></mrow><annotation encoding="application/x-tex">\Pi_{E}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> be a CPA-secure private-key encryption scheme, and let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">\Pi_{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> be a strongly secure message authentication code. If the gap-CDH problem is hard relative to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">G</mi></mrow><annotation encoding="application/x-tex">\mathcal{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span></span></span></span>, and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span> is modeled as a random oracle, then the above construction is a CCA-secure public-key encryption scheme.</p>
<h2 id="rsa-encryption"><a class="markdownIt-Anchor" href="#rsa-encryption"></a> RSA encryption</h2>
<h3 id="plain-rsa"><a class="markdownIt-Anchor" href="#plain-rsa"></a> Plain RSA</h3>
<p>Using RSA generation algorithm \ref{alg:rsa_gen}, define the plain RSA encryption scheme as follows:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span>: on input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> run <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi><mi>R</mi><mi>S</mi><mi>A</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">GenRSA(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> to obtain <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">e</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span>. The public key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>N</mi><mo separator="true">,</mo><mi>e</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;N,e&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and the private key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>N</mi><mo separator="true">,</mo><mi>d</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;N,d&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Enc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span></span></span></span>: on input a public key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi><mo>=</mo><mo>&lt;</mo><mi>N</mi><mo separator="true">,</mo><mi>e</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">pk=&lt;N,e&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><msubsup><mi mathvariant="double-struck">Z</mi><mi>N</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">m\in \mathbb{Z}_{N}^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.964221em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.424669em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>, compute the ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>:</mo><mo>=</mo><mo stretchy="false">[</mo><msup><mi>m</mi><mi>e</mi></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>N</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">c:=[m^{e}~mod~N]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">]</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Dec</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span></span></span></span>: on input a private key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>k</mi><mo>=</mo><mo>&lt;</mo><mi>N</mi><mo separator="true">,</mo><mi>d</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">sk=&lt;N,d&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and a ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>∈</mo><msubsup><mi mathvariant="double-struck">Z</mi><mi>N</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">c\in \mathbb{Z}_{N}^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.964221em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.424669em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>, compute the message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>:</mo><mo>=</mo><mo stretchy="false">[</mo><msup><mi>c</mi><mi>d</mi></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>N</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">m:=[c^{d}~mod~N]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">]</span></span></span></span>.</li>
</ul>
<p>Plain RSA encryption is deterministic and so it is not CPA-secure!</p>
<h3 id="padded-rsa-pkcs-1-v15"><a class="markdownIt-Anchor" href="#padded-rsa-pkcs-1-v15"></a> Padded RSA &amp; PKCS #1 v1.5</h3>
<p>Using RSA generation algorithm, and let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi></mrow><annotation encoding="application/x-tex">\ell</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">ℓ</span></span></span></span> be a function with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>≤</mo><mn>2</mn><mi>n</mi><mo>−</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">\ell (n)\le 2n-4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℓ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span> for all <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>. Define a public-key encryption scheme as follows:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span>: on input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> run <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi><mi>R</mi><mi>S</mi><mi>A</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">GenRSA(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> to obtain <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">e</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span>. The public key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>N</mi><mo separator="true">,</mo><mi>e</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;N,e&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and the private key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>N</mi><mo separator="true">,</mo><mi>d</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;N,d&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Enc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span></span></span></span>: on input a public key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi><mo>=</mo><mo>&lt;</mo><mi>N</mi><mo separator="true">,</mo><mi>e</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">pk=&lt;N,e&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>N</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>−</mo><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>−</mo><mn>2</mn></mrow></msup></mrow><annotation encoding="application/x-tex">m\in \{0,1\}^{||N||-\ell (n)-2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mtight">∣</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mord mtight">∣</span><span class="mord mtight">∣</span><span class="mbin mtight">−</span><span class="mord mtight">ℓ</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">)</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span>, choose a uniform string <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">r\in \{0,1\}^{\ell (n)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> and interpret <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>m</mi><mo>^</mo></mover><mo>:</mo><mo>=</mo><mi>r</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">\hat{m}:=r||m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault">m</span></span></span></span> as an element of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi mathvariant="double-struck">Z</mi><mi>N</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">\mathbb{Z}_{N}^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.964221em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.424669em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>. Output the ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>:</mo><mo>=</mo><mo stretchy="false">[</mo><msup><mover accent="true"><mi>m</mi><mo>^</mo></mover><mi>e</mi></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>N</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">c:=[\hat{m}^{e}~mod~N]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">]</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Dec</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span></span></span></span>: on input a private key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>k</mi><mo>=</mo><mo>&lt;</mo><mi>N</mi><mo separator="true">,</mo><mi>d</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">sk=&lt;N,d&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and a ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>∈</mo><msubsup><mi mathvariant="double-struck">Z</mi><mi>N</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">c\in \mathbb{Z}_{N}^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.964221em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.424669em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>, compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>m</mi><mo>^</mo></mover><mo>:</mo><mo>=</mo><mo stretchy="false">[</mo><msup><mi>c</mi><mi>d</mi></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>N</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\hat{m}:=[c^{d}~mod~N]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">]</span></span></span></span> and output the <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>N</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>−</mo><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>−</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">||N||-\ell (n)-2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℓ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> least-significant bits of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>m</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span></span></span></span>.</li>
</ul>
<p>The RSA laboratories Public-Key Cryptography Standard (PKCS) #1 version 1.5, utilizes a varient of padded RSA encryption. Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> denote an integer satisfying <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mn>8</mn><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>≤</mo><mi>N</mi><mo>≤</mo><msup><mn>2</mn><mrow><mn>8</mn><mi>k</mi></mrow></msup></mrow><annotation encoding="application/x-tex">2^{8(k-1)}\le N \le 2^{8k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0239699999999998em;vertical-align:-0.13597em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span> (the length of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span> in bytes). Messages <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> to be encrypted are assumed to be a multiple of 8 bits long and can have length anywhere from one to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>−</mo><mn>11</mn></mrow><annotation encoding="application/x-tex">k-11</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span></span></span></span> bytes. Encryption of a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> is computed as <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mn>0</mn><mi>x</mi><mn>00</mn><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mn>0</mn><mi>x</mi><mn>02</mn><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>r</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mn>0</mn><mi>x</mi><mn>00</mn><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>m</mi><msup><mo stretchy="false">)</mo><mi>e</mi></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>N</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[(0x00||0x02||r||0x00||m)^{e}~mod~N]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mopen">(</span><span class="mord">0</span><span class="mord mathdefault">x</span><span class="mord">0</span><span class="mord">0</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord">0</span><span class="mord mathdefault">x</span><span class="mord">0</span><span class="mord">2</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord">0</span><span class="mord mathdefault">x</span><span class="mord">0</span><span class="mord">0</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault">m</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">]</span></span></span></span>, where <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span> is randomly generated.</p>
<p>Unfortunately, PKCS #1 v1.5 as specified is not CPA-secure because it allows using random padding that is too short. If we force <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span> to be roughly half the length of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>, then it is reasonable to <em>conjecture</em> that the encryption scheme in PKCS #1 v1.5 is CPA-secure. Also, PKCS #1 v1.5 is not CCA-secure.</p>
<h3 id="oaep-rsa-pkcs-1-v20"><a class="markdownIt-Anchor" href="#oaep-rsa-pkcs-1-v20"></a> OAEP &amp; RSA PKCS #1 v2.0</h3>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi><mi>R</mi><mi>S</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">GenRSA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">A</span></span></span></span> be as in the previous sections, and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>k</mi><mn>0</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>k</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\ell(n),k_{0}(n),k_{1}(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℓ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> be integer-valued functions with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mn>0</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>k</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k_{0}(n),k_{1}(n)=\Theta(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> and that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>k</mi><mn>0</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>k</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\ell(n)+k_{0}(n)+k_{1}(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℓ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> is less than the minimum bit-length of moduli output by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi><mi>R</mi><mi>S</mi><mi>A</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">GenRSA(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>. Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mo>:</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><msub><mi>k</mi><mn>0</mn></msub></msup><mo>→</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mrow><mi mathvariant="normal">ℓ</mi><mo>+</mo><msub><mi>k</mi><mn>1</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">G:\{0,1\}^{k_{0}}\rightarrow \{0,1\}^{\ell+k_{1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo>:</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mrow><mi mathvariant="normal">ℓ</mi><mo>+</mo><msub><mi>k</mi><mn>1</mn></msub></mrow></msup><mo>→</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><msub><mi>k</mi><mn>0</mn></msub></msup></mrow><annotation encoding="application/x-tex">H:\{0,1\}^{\ell+k_{1}}\rightarrow \{0,1\}^{k_{0}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> be functions. Construct the RSA-OAEP encryption scheme as follows:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span>: on input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> run <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi><mi>R</mi><mi>S</mi><mi>A</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">GenRSA(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> to obtain <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">e</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span>. The public key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>N</mi><mo separator="true">,</mo><mi>e</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;N,e&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and the private key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>N</mi><mo separator="true">,</mo><mi>d</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;N,d&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Enc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span></span></span></span>: on input a public key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>N</mi><mo separator="true">,</mo><mi>e</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;N,e&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi mathvariant="normal">ℓ</mi></msup></mrow><annotation encoding="application/x-tex">m\in \{0,1\}^{\ell}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span></span></span></span></span></span></span></span></span></span></span></span>, set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>m</mi><mo mathvariant="normal">′</mo></msup><mo>:</mo><mo>=</mo><mi>m</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msup><mn>0</mn><msub><mi>k</mi><mn>1</mn></msub></msup></mrow><annotation encoding="application/x-tex">m&#x27;:=m||0^{k_{1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> and choose a uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><msub><mi>k</mi><mn>0</mn></msub></msup></mrow><annotation encoding="application/x-tex">r\in \{0,1\}^{k_{0}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>. Then compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>:</mo><mo>=</mo><msup><mi>m</mi><mo mathvariant="normal">′</mo></msup><mtext> </mtext><mi>X</mi><mi>O</mi><mi>R</mi><mtext> </mtext><mi>G</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s:=m&#x27;~XOR~G(r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace nobreak"> </span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>:</mo><mo>=</mo><mi>r</mi><mtext> </mtext><mi>X</mi><mi>O</mi><mi>R</mi><mtext> </mtext><mi>H</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t:=r~XOR~H(s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span>, and set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>m</mi><mo>^</mo></mover><mo>:</mo><mo>=</mo><mi>s</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\hat{m}:=s||t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault">t</span></span></span></span>. Output the ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>:</mo><mo>=</mo><mo stretchy="false">[</mo><msup><mover accent="true"><mi>m</mi><mo>^</mo></mover><mi>e</mi></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>N</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">c:=[\hat{m}^{e}~mod~N]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">]</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Dec</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span></span></span></span>: on input a private key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>N</mi><mo separator="true">,</mo><mi>d</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;N,d&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and a ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>∈</mo><msubsup><mi mathvariant="double-struck">Z</mi><mi>N</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">c\in \mathbb{Z}_{N}^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.964221em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.424669em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>, compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>m</mi><mo>^</mo></mover><mo>:</mo><mo>=</mo><mo stretchy="false">[</mo><msup><mi>c</mi><mi>d</mi></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>N</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\hat{m}:=[c^{d}~mod~N]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">]</span></span></span></span>. If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mover accent="true"><mi>m</mi><mo>^</mo></mover><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>&gt;</mo><mi mathvariant="normal">ℓ</mi><mo>+</mo><msub><mi>k</mi><mn>0</mn></msub><mo>+</mo><msub><mi>k</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">||\hat{m}||&gt;\ell +k_{0}+k_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">ℓ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, output error. Otherwise, parse <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>m</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span></span></span></span> as <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">s||t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault">t</span></span></span></span> with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mrow><mi mathvariant="normal">ℓ</mi><mo>+</mo><msub><mi>k</mi><mn>1</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">s\in \{0,1\}^{\ell+k_{1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><msub><mi>k</mi><mn>0</mn></msub></msup></mrow><annotation encoding="application/x-tex">t\in \{0,1\}^{k_{0}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65418em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>. Compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>:</mo><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>X</mi><mi>O</mi><mi>R</mi><mtext> </mtext><mi>t</mi></mrow><annotation encoding="application/x-tex">r:=H(s)~XOR~t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace nobreak"> </span><span class="mord mathdefault">t</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>m</mi><mo mathvariant="normal">′</mo></msup><mo>:</mo><mo>=</mo><mi>G</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>X</mi><mi>O</mi><mi>R</mi><mtext> </mtext><mi>s</mi></mrow><annotation encoding="application/x-tex">m&#x27;:=G(r)~XOR~s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace nobreak"> </span><span class="mord mathdefault">s</span></span></span></span>. If the least-significant <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">k_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> bits of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>m</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">m&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> are not all 0, output error. Otherwise, output the <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi></mrow><annotation encoding="application/x-tex">\ell</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">ℓ</span></span></span></span> most-significant bits of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>m</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span></span></span></span></span></span></span>.</li>
</ul>
<p>The RSA-OAEP encryption scheme is CCA-secure. But the encryption scheme should ensure that the time to return an error is identical regardless of where the error occurs, otherwise this information can be used as side-channel information in CCA.</p>
<h1 id="recommended-key-lengths"><a class="markdownIt-Anchor" href="#recommended-key-lengths"></a> Recommended key lengths</h1>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002716.png" alt="image-20201020001434684" /></p>
<h1 id="references"><a class="markdownIt-Anchor" href="#references"></a> References</h1>
<ol>
<li>Jonathan Katz, Yehuda Lindell. Introduction to Modern Cryptography, Second Edition.</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9TTTIvMTUwODE4MzE/ZnI9YWxhZGRpbg==">https://baike.baidu.com/item/SM2/15081831?fr=aladdin<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JsYWNrTmlnaHQxNjgvYXJ0aWNsZS9kZXRhaWxzLzg4MTY5NjQy">https://blog.csdn.net/BlackNight168/article/details/88169642<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NhbXNobzIvYXJ0aWNsZS9kZXRhaWxzLzgwNzcyMjI4">https://blog.csdn.net/samsho2/article/details/80772228<i class="fa fa-external-link-alt"></i></span></li>
</ol>
]]></content>
      <categories>
        <category>信息安全</category>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>密码学</tag>
      </tags>
  </entry>
  <entry>
    <title>密码学-数字签名</title>
    <url>/2021/01/09/%E5%AF%86%E7%A0%81%E5%AD%A6-%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D/</url>
    <content><![CDATA[<h1 id="overview"><a class="markdownIt-Anchor" href="#overview"></a> Overview</h1>
<h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2>
<p>Signature schemes allow a signer <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span> who has established a public key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">pk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> to “sign” a message using the associated private key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">sk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> in such a way that anyone who knows <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">pk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> (and knows that this public key was established by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span>) can verify that the message originated from <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span> and was not modified in transit. (Note that the owner of the public key behaves as the sender, which is in contrast to the public-key encryption)</p>
<a id="more"></a>
<p>Comparison to MAC:</p>
<ul>
<li>Signatures are publicly verifiable: one receiver verifies a signature <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span></span> on a given message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> means all other parties will also verify it as legitimate.</li>
<li>Signatures are transferable: a signature <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span></span> on a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> by a signer <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span> can be shown to a third party.</li>
<li>Signatures provide non-repudiation: once <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span> signs a message, the signer cannot later deny having done so. But MAC cannot provide that property.</li>
<li>Signatures are much slower: MAC is roughly 2-3 orders of magnitude more efficient than digital signatures.</li>
</ul>
<h2 id="definitions"><a class="markdownIt-Anchor" href="#definitions"></a> Definitions</h2>
<p>A digital signature scheme consists of three probabilistic polynomial-time algorithms <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>n</mi><mo separator="true">,</mo><mi>V</mi><mi>r</mi><mi>f</mi><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(Gen,Sign,Vrfy)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> such that:</p>
<ul>
<li>The key-generation algorithm <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span> takes as input a security parameter <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and outputs a pair of keys <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mi>k</mi><mo separator="true">,</mo><mi>s</mi><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(pk,sk)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>. These are called the public key and the private key, respectively. We assume that pk and sk each has length at least <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>, and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> can be determined from <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">pk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> or <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">sk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>.</li>
<li>The signing algorithm <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>i</mi><mi>g</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Sign</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span></span></span></span> takes as input a private key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">sk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> and a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> for some message space. It outputs a signature <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span></span>, and we write this as <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi><mo>←</mo><mi>S</mi><mi>i</mi><mi>g</mi><msub><mi>n</mi><mrow><mi>s</mi><mi>k</mi></mrow></msub><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma\leftarrow Sign_{sk}(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span>.</li>
<li>The deterministic verification algorithm <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">Vrfy</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span> takes as input a public key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">pk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>, a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> and a signature <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span></span>. It outputs a bit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>, with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">b=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> meaning valid and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">b=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> meaning invalid. We write this as <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>:</mo><mo>=</mo><mi>V</mi><mi>r</mi><mi>f</mi><msub><mi>y</mi><mrow><mi>p</mi><mi>k</mi></mrow></msub><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>σ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">b:=Vrfy_{pk}(m,\sigma)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mclose">)</span></span></span></span>.</li>
</ul>
<p>It is required that except with negligible probability over <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mi>k</mi><mo separator="true">,</mo><mi>s</mi><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(pk,sk)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span> output by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gen(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>, it holds that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><msub><mi>y</mi><mrow><mi>p</mi><mi>k</mi></mrow></msub><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>S</mi><mi>i</mi><mi>g</mi><msub><mi>n</mi><mrow><mi>s</mi><mi>k</mi></mrow></msub><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">Vrfy_{pk}(m,Sign_{sk}(m))=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> for every legal message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>.</p>
<h1 id="the-hash-and-sign-paradigm"><a class="markdownIt-Anchor" href="#the-hash-and-sign-paradigm"></a> The Hash-and-Sign paradigm</h1>
<p>Similar with hybrid encryption, it is possible to obtain the functionality of digital signatures at the symptotic cost of a private-key operation, at least for sufficient long messages. This can be done using the hash-and-sign approach.</p>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi><mo>=</mo><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>S</mi><mi>i</mi><mi>g</mi><mi>n</mi><mo separator="true">,</mo><mi>V</mi><mi>r</mi><mi>f</mi><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi=(Gen,Sign,Vrfy)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> be a signature scheme for messages of length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\ell(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℓ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>, and let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mi>H</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><msub><mi>n</mi><mi>H</mi></msub><mo separator="true">,</mo><mi>H</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi_{H}=(Gen_{H},H)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mclose">)</span></span></span></span> be a hash function with output length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\ell(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℓ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>. Construct signature scheme <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="normal">Π</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><msup><mi>n</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><mi>S</mi><mi>i</mi><mi>g</mi><msup><mi>n</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><mi>V</mi><mi>r</mi><mi>f</mi><msup><mi>y</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi&#x27;=(Gen&#x27;,Sign&#x27;,Vrfy&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> as follows:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><msup><mi>n</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">Gen&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>: on input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>, run <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gen(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> to obtain <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mi>k</mi><mo separator="true">,</mo><mi>s</mi><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(pk,sk)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span> and run <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><msub><mi>n</mi><mi>H</mi></msub><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gen_{H}(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> to obtain <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span>; the public key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>p</mi><mi>k</mi><mo separator="true">,</mo><mi>s</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;pk,s&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and the private key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>s</mi><mi>k</mi><mo separator="true">,</mo><mi>s</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;sk,s&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>i</mi><mi>g</mi><msup><mi>n</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">Sign&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>: on input a private key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>s</mi><mi>k</mi><mo separator="true">,</mo><mi>s</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;sk,s&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">m\in \{0,1\}^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>, output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi><mo>←</mo><mi>S</mi><mi>i</mi><mi>g</mi><msub><mi>n</mi><mrow><mi>s</mi><mi>k</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>H</mi><mi>s</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma \leftarrow Sign_{sk}(H^{s}(m))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><msup><mi>y</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">Vrfy&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>: on input a public key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>p</mi><mi>k</mi><mo separator="true">,</mo><mi>s</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;pk,s&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>, a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">m\in\{0,1\}^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>, and a signature <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span></span>, output 1 if and only if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><msub><mi>y</mi><mrow><mi>p</mi><mi>k</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>H</mi><mi>s</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>σ</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">Vrfy_{pk}(H^{s}(m),\sigma)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>.</li>
</ul>
<p>If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span> is a secure signature scheme for messages of length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi></mrow><annotation encoding="application/x-tex">\ell</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">ℓ</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mi>H</mi></msub></mrow><annotation encoding="application/x-tex">\Pi_{H}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> is collision resistant, then the above construction is a secure signature scheme (for arbitrary-length messages).</p>
<h1 id="rsa-signatures"><a class="markdownIt-Anchor" href="#rsa-signatures"></a> RSA signatures</h1>
<h2 id="plain-rsa"><a class="markdownIt-Anchor" href="#plain-rsa"></a> Plain RSA</h2>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi><mi>R</mi><mi>S</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">GenRSA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">A</span></span></span></span> be as in the text. Define the plain RSA signature scheme as follows:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span>: on input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> run <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi><mi>R</mi><mi>S</mi><mi>A</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">GenRSA(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> to obtain <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>N</mi><mo separator="true">,</mo><mi>e</mi><mo separator="true">,</mo><mi>d</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;N,e,d&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>. The public key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>N</mi><mo separator="true">,</mo><mi>e</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;N,e&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and the private key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>N</mi><mo separator="true">,</mo><mi>d</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;N,d&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>i</mi><mi>g</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Sign</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span></span></span></span>: on input a private key $ sk=&lt;N,d&gt;$ and a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><msubsup><mi mathvariant="double-struck">Z</mi><mi>N</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">m\in \mathbb{Z}_{N}^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.964221em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.424669em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>, compute the signature <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi><mo>:</mo><mo>=</mo><mo stretchy="false">[</mo><msup><mi>m</mi><mi>d</mi></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>N</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\sigma:=[m^{d}~mod~N]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">]</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">Vrfy</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>: on input a public key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi><mo>=</mo><mo>&lt;</mo><mi>N</mi><mo separator="true">,</mo><mi>e</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">pk=&lt;N,e&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>, a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><msubsup><mi mathvariant="double-struck">Z</mi><mi>N</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">m\in \mathbb{Z}_{N}^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.964221em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.424669em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>, and a signature <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi><mo>∈</mo><msubsup><mi mathvariant="double-struck">Z</mi><mi>N</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">\sigma\in \mathbb{Z}_{N}^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.964221em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.424669em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>, output 1 if and only if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><mo stretchy="false">[</mo><msup><mi>σ</mi><mi>e</mi></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>N</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">m=[\sigma ^{e}~mod~N]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">]</span></span></span></span>.</li>
</ul>
<p>The plain RSA signature scheme is vulnerable to the following two types of attack:</p>
<ol>
<li>No-message attack: the forgery use the public key alone, without obtaining any signatures from the legitimate signer. The attacker choose a uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi><mo>∈</mo><msubsup><mi mathvariant="double-struck">Z</mi><mi>N</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">\sigma \in \mathbb{Z}_{N}^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.964221em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.424669em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span> and compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>:</mo><mo>=</mo><mo stretchy="false">[</mo><msup><mi>σ</mi><mi>e</mi></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>N</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">m:=[\sigma ^{e}~mod~N]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">]</span></span></span></span>. Then output the forgery <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>σ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m,\sigma)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mclose">)</span></span></span></span>.</li>
<li>Forging a signature on an arbitrary message: when the adversary can obtain two signatures from the signer, the signature <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi><mo>:</mo><mo>=</mo><mo stretchy="false">[</mo><msub><mi>σ</mi><mn>1</mn></msub><mo>⋅</mo><msub><mi>σ</mi><mn>2</mn></msub><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>N</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\sigma:=[\sigma_{1}\cdot \sigma_{2}~mod~N]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">]</span></span></span></span> is a valid on message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><msub><mi>m</mi><mn>1</mn></msub><mo>⋅</mo><msub><mi>m</mi><mn>2</mn></msub><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>N</mi></mrow><annotation encoding="application/x-tex">m=m_{1}\cdot m_{2}~mod~N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.59445em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>.</li>
</ol>
<h2 id="rsa-fdh-and-pkcs-1-v21"><a class="markdownIt-Anchor" href="#rsa-fdh-and-pkcs-1-v21"></a> RSA-FDH and PKCS #1 v2.1</h2>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi><mi>R</mi><mi>S</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">GenRSA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">A</span></span></span></span> be as in the text. Construct the RSA-FDH signature scheme as follows:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span>: on input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> run <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi><mi>R</mi><mi>S</mi><mi>A</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">GenRSA(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> to obtain <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>N</mi><mo separator="true">,</mo><mi>e</mi><mo separator="true">,</mo><mi>d</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;N,e,d&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>. The public key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>N</mi><mo separator="true">,</mo><mi>e</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;N,e&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and the private key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>N</mi><mo separator="true">,</mo><mi>d</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;N,d&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>. Also, a key is generated to specify a function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo>:</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup><mo>→</mo><msubsup><mi mathvariant="double-struck">Z</mi><mi>N</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">H:\{0,1\}^{*}\rightarrow \mathbb{Z}_{N}^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.964221em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.424669em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>i</mi><mi>g</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Sign</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span></span></span></span>: on input a private key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>k</mi><mo>=</mo><mo>&lt;</mo><mi>N</mi><mo separator="true">,</mo><mi>d</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">sk=&lt;N,d&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><msubsup><mi mathvariant="double-struck">Z</mi><mi>N</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">m\in \mathbb{Z}_{N}^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.964221em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.424669em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>, compute the signature <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi><mo>:</mo><mo>=</mo><mo stretchy="false">[</mo><mi>H</mi><mo stretchy="false">(</mo><mi>m</mi><msup><mo stretchy="false">)</mo><mi>d</mi></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>N</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\sigma:=[H(m)^{d}~mod~N]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">]</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">Vrfy</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>: on input a public key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi><mo>=</mo><mo>&lt;</mo><mi>N</mi><mo separator="true">,</mo><mi>e</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">pk=&lt;N,e&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>, a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><msubsup><mi mathvariant="double-struck">Z</mi><mi>N</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">m\in \mathbb{Z}_{N}^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.964221em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.424669em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>, and a signature <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi><mo>∈</mo><msubsup><mi mathvariant="double-struck">Z</mi><mi>N</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">\sigma\in \mathbb{Z}_{N}^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.964221em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.424669em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>, output 1 if and only if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>σ</mi><mi>e</mi></msup><mo>=</mo><mo stretchy="false">[</mo><mi>H</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>N</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\sigma^{e}=[H(m)~mod~N]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">]</span></span></span></span>.</li>
</ul>
<p>The hash function should satisfy that:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span> should be hard to invert.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span> does not admit multiplicative relations.</li>
<li>It is hard to find collisions in <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span>.</li>
</ul>
<p>There is no known way to choose <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span> so that the above construction can be proven secure. But it is possible to prove security if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span> is modeled as a random oracle that maps its inputs uniformly onto <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi mathvariant="double-struck">Z</mi><mi>N</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">\mathbb{Z}_{N}^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.964221em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.424669em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>. The scheme in this case is called the RSA full-domain hash (RSA-FDH) signature scheme.</p>
<p>The RSA PKCS #1 v2.1 standard includes a signature scheme that can be viewed as a variant of RSA-FDH. The standard defines a scheme in which the signature on a message depends on a <strong>salt</strong> (i.e., a random value) chosen by the signer at the time of signature generation.</p>
<h1 id="signatures-from-the-discrete-logarithm-problem"><a class="markdownIt-Anchor" href="#signatures-from-the-discrete-logarithm-problem"></a> Signatures from the Discrete-Logarithm problem</h1>
<h2 id="the-schnorr-signature-scheme"><a class="markdownIt-Anchor" href="#the-schnorr-signature-scheme"></a> The Schnorr signature scheme</h2>
<p>An <strong>identification scheme</strong> is an interactive protocol that allows one party to prove its identity (i.e., to authenticate itself) to another.</p>
<p>The party identifying herself is called the “prover”, and the party verifying the identity is called the “verifier”.<br />
Successful execution of the identification protocol convinces the verifier that it is communicating with the intended prover rather than an imposter.</p>
<h3 id="three-round-identification-scheme"><a class="markdownIt-Anchor" href="#three-round-identification-scheme"></a> Three-round identification scheme</h3>
<p>A <strong>three-round identification scheme</strong> is shown as the following figure. <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="script">P</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\mathcal{P}_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">P</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="script">P</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\mathcal{P}_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">P</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> are two algorithms used by the prover and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">V</mi></mrow><annotation encoding="application/x-tex">\mathcal{V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">V</span></span></span></span></span> is the algorithm used at the verifier’s side. <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Ω</mi><mrow><mi>p</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\Omega_{pk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord">Ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> is a set defined by the prover’s public key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">pk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>.</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002941.png" alt="image-20201019234646133" style="zoom: 33%;" />
<h3 id="fiat-shamir-transform"><a class="markdownIt-Anchor" href="#fiat-shamir-transform"></a> Fiat-Shamir transform</h3>
<p>The <strong>Fiat-Shamir transform</strong> provides a way to convert any interactive identification scheme into a non-interactive signature scheme. The basic idea is for the signer to act as a prover, running the identification protocol by itself.</p>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><msub><mi>n</mi><mrow><mi>i</mi><mi>d</mi></mrow></msub><mo separator="true">,</mo><msub><mi mathvariant="script">P</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi mathvariant="script">P</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="script">V</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(Gen_{id},\mathcal{P}_{1},\mathcal{P}_{2},\mathcal{V})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">P</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">P</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">V</span></span><span class="mclose">)</span></span></span></span> be an identification scheme, construct a signature scheme as follows:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span>: on input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>, simply run <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><msub><mi>n</mi><mrow><mi>i</mi><mi>d</mi></mrow></msub><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gen_{id}(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> to obtain keys <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi><mo separator="true">,</mo><mi>s</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">pk,sk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>i</mi><mi>g</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Sign</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span></span></span></span>: on input a private key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">sk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> and a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">m\in \{0,1\}^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span></span></span></span>, do:
<ol>
<li>Compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>I</mi><mo separator="true">,</mo><mi>s</mi><mi>t</mi><mo stretchy="false">)</mo><mo>←</mo><msub><mi mathvariant="script">P</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>s</mi><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(I,st)\leftarrow \mathcal{P}_{1}(sk)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">P</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>.</li>
<li>Compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>:</mo><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>I</mi><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r:=H(I,m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span>.</li>
<li>Compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>:</mo><mo>=</mo><msub><mi mathvariant="script">P</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>s</mi><mi>k</mi><mo separator="true">,</mo><mi>s</mi><mi>t</mi><mo separator="true">,</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s:=\mathcal{P}_{2}(sk,st,r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">P</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span>.</li>
<li>Output the signature <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r,s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span>.</li>
</ol>
</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">Vrfy</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>: on input a public key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">pk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>, a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>, and a signature <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r,s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span>, compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mo>:</mo><mo>=</mo><mi mathvariant="script">V</mi><mo stretchy="false">(</mo><mi>p</mi><mi>k</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I:=\mathcal{V}(pk,r,s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">V</span></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span> and output 1 if and only if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>I</mi><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo><mo>=</mo><mi>r</mi></mrow><annotation encoding="application/x-tex">H(I,m)=r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>.</li>
</ul>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span> be an identification scheme, and let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="normal">Π</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">\Pi&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> be the signature scheme that results by applying the Fiat-Shamir transform to it. If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span> is secure and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span> is modeled as a random oracle, then <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="normal">Π</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">\Pi&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> is secure.</p>
<h3 id="schnorr-identification-scheme"><a class="markdownIt-Anchor" href="#schnorr-identification-scheme"></a> Schnorr identification scheme</h3>
<p>The <strong>Schnorr identification scheme</strong> is based on hardness of the discrete-logarithm problem. An execution of the Schnorr identification scheme is shown as the following figure. Note that the cyclic group <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="double-struck">G</mi></mrow><annotation encoding="application/x-tex">\mathbb{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span></span></span></span>, its order <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span> and a generator <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi></mrow><annotation encoding="application/x-tex">g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span></span></span></span> are generated by a polynomial-time algorithm <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">G</mi></mrow><annotation encoding="application/x-tex">\mathcal{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span></span></span></span>.</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002938.png" alt="image-20201019234955220" style="zoom: 33%;" />
<p>If the discrete-logarithm problem is hard relative to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">G</mi></mrow><annotation encoding="application/x-tex">\mathcal{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span></span></span></span>, then the Schnorr identification scheme is secure.</p>
<p>By applying the Fiat-Shamir transform to the Schnorr identification scheme, the Schnorr signature scheme is obtained as follows:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span>: run <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">G</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{G}(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> to obtain <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\mathbb{G},q,g)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mclose">)</span></span></span></span>. Choose a uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>∈</mo><msub><mi mathvariant="double-struck">Z</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">x\in \mathbb{Z}_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.974998em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> and set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>:</mo><mo>=</mo><msup><mi>g</mi><mi>x</mi></msup></mrow><annotation encoding="application/x-tex">y:=g^x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span>. The private key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> and the public key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\mathbb{G},q,g,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>. Also, generate a key to specify a function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo>:</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup><mo>→</mo><msub><mi mathvariant="double-struck">Z</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">H:\{0,1\}^{*}\rightarrow \mathbb{Z}_{q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.974998em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>i</mi><mi>g</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Sign</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span></span></span></span>: on input a private key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> and a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">m\in \{0,1\}^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>, choose uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><msub><mi mathvariant="double-struck">Z</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">k\in \mathbb{Z}_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.974998em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> and set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mo>:</mo><mo>=</mo><msup><mi>g</mi><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">I:=g^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>. Then compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>:</mo><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>I</mi><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r:=H(I,m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span>, followed by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>:</mo><mo>=</mo><mo stretchy="false">[</mo><mi>r</mi><mi>x</mi><mo>+</mo><mi>k</mi><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>q</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">s:=[rx+k~mod~q]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">]</span></span></span></span>. Output the signature <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r,s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">Vrfy</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>: on input a public key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\mathbb{G},q,g,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>, a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>, and a signature <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r,s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span>, compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mo>:</mo><mo>=</mo><msup><mi>g</mi><mi>s</mi></msup><mo>⋅</mo><msup><mi>y</mi><mrow><mo>−</mo><mi>r</mi></mrow></msup></mrow><annotation encoding="application/x-tex">I:=g^{s}\cdot y^{-r}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9657709999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span></span></span></span></span> and output 1 if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>I</mi><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo><mo>=</mo><mi>r</mi></mrow><annotation encoding="application/x-tex">H(I,m)=r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>.</li>
</ul>
<h2 id="dsa-and-ecdsa"><a class="markdownIt-Anchor" href="#dsa-and-ecdsa"></a> DSA and ECDSA</h2>
<p>The <strong>Digital Signature Algorithm</strong> (DSA) and <strong>Elliptic Curve Digital Signature Algorithm</strong> (ECDSA) are based on the discrete-logarithm problem in different classes of groups. They are both included in the current Digital Signature Standard (DSS) issued by NIST.</p>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="double-struck">G</mi></mrow><annotation encoding="application/x-tex">\mathbb{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span></span></span></span> be a cyclic group of prime order <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span> with generator <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi></mrow><annotation encoding="application/x-tex">g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span></span></span></span>, both schemes can be seen as constructing from the following identification scheme:</p>
<ul>
<li>The prover chooses uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><msubsup><mi mathvariant="double-struck">Z</mi><mi>q</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">k\in \mathbb{Z}_{q}^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.071998em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span> and sends <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mo>:</mo><mo>=</mo><msup><mi>g</mi><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">I:=g^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>.</li>
<li>The verifier chooses and sends uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo separator="true">,</mo><mi>r</mi><mo>∈</mo><msub><mi mathvariant="double-struck">Z</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">\alpha,r\in \mathbb{Z}_{q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.974998em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> as the challenge.</li>
<li>The prover sends <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>:</mo><mo>=</mo><mo stretchy="false">[</mo><msup><mi>k</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>⋅</mo><mo stretchy="false">(</mo><mi>α</mi><mo>+</mo><mi>x</mi><mi>r</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>q</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">s:=[k^{-1}\cdot (\alpha + xr)~mod~q]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">]</span></span></span></span> as the response.</li>
<li>The verifier accepts if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi mathvariant="normal">≠</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">s\ne 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>g</mi><mrow><mi>α</mi><msup><mi>s</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow></msup><mo>⋅</mo><msup><mi>y</mi><mrow><mi>r</mi><msup><mi>s</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow></msup><mo>=</mo><mi>I</mi></mrow><annotation encoding="application/x-tex">g^{\alpha s^{-1}}\cdot  y^{rs^{-1}}=I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.18136em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.18136em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span></span></span></span>.</li>
</ul>
<p>The DSA/ECDSA signature scheme are constructed by “collapsing” the above idnetification scheme into a non-interactive algorithm in <em>a different way from Fiat-Shamir transform</em>. The construction is as follows:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span>: on input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>, run <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">G</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{G}(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> to obtain <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\mathbb{G},q,g)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mclose">)</span></span></span></span>. Choose uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>∈</mo><msub><mi mathvariant="double-struck">Z</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">x\in \mathbb{Z}_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.974998em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> and set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>:</mo><mo>=</mo><msup><mi>g</mi><mi>x</mi></msup></mrow><annotation encoding="application/x-tex">y:=g^x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span>. The public key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>y</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;\mathbb{G},q,g,y&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.88333em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and the private key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>. Also generate two functions <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo>:</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup><mo>→</mo><msub><mi mathvariant="double-struck">Z</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">H:\{0,1\}^{*}\rightarrow \mathbb{Z}_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.974998em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo>:</mo><mi mathvariant="double-struck">G</mi><mo>→</mo><msub><mi mathvariant="double-struck">Z</mi><mi>q</mi></msub></mrow><annotation encoding="application/x-tex">F:\mathbb{G}\rightarrow \mathbb{Z}_q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">G</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.974998em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>i</mi><mi>g</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Sign</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span></span></span></span>: on input the private key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> and a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">m\in \{0,1\}^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>, choose uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><msubsup><mi mathvariant="double-struck">Z</mi><mi>q</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">k\in \mathbb{Z}_{q}^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.071998em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span> and set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>:</mo><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><msup><mi>g</mi><mi>k</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r:=F(g^{k})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>. Then compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>:</mo><mo>=</mo><mo stretchy="false">[</mo><msup><mi>k</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>⋅</mo><mo stretchy="false">(</mo><mi>H</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo><mo>+</mo><mi>x</mi><mi>r</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>q</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">s:=[k^{-1}\cdot (H(m)+xr)~mod~q]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">]</span></span></span></span>. (if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">r=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> or <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">s=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> just start again with a new <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>). Output the signature <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r,s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">Vrfy</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>: on input a public key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi mathvariant="double-struck">G</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>y</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;\mathbb{G},q,g,y&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.88333em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathbb">G</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>, a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">m\in \{0,1\}^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>, and a signature <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r,s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span> with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo separator="true">,</mo><mi>s</mi><mi mathvariant="normal">≠</mi><mn>0</mn><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>q</mi></mrow><annotation encoding="application/x-tex">r,s\ne 0~mod~q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span>, output 1 if and only if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><msup><mi>g</mi><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo><mo>⋅</mo><msup><mi>s</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow></msup><msup><mi>y</mi><mrow><mi>r</mi><mo>⋅</mo><msup><mi>s</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r=F(g^{H(m)\cdot s^{-1}}y^{r\cdot s^{-1}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.23692em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999998em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">m</span><span class="mclose mtight">)</span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>.</li>
</ul>
<p>The function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span> is a cryptographic hash function; the function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> depends on the group <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="double-struck">G</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">\mathbb{G}_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83889em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">G</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, which in DSA is defined as <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">[</mo><mi>I</mi><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>q</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">F(I)=[I~mod~q]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">]</span></span></span></span>, and is defined as <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">[</mo><mi>x</mi><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>q</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">F((x,y))=[x~mod~q]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">x</span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">]</span></span></span></span> in ECDSA.  Also pay attention that the signer should choose a uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><msubsup><mi mathvariant="double-struck">Z</mi><mi>q</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">k\in \mathbb{Z}_q^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.071998em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">Z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span> when computing a signature.</p>
<h1 id="certificates-and-public-key-infrastructures"><a class="markdownIt-Anchor" href="#certificates-and-public-key-infrastructures"></a> Certificates and public-key infrastructures</h1>
<h2 id="certificates"><a class="markdownIt-Anchor" href="#certificates"></a> Certificates</h2>
<h3 id="definition"><a class="markdownIt-Anchor" href="#definition"></a> Definition</h3>
<p>In concrete, assuming a party Charlie has generated a key-pair <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><msub><mi>k</mi><mi>C</mi></msub><mo separator="true">,</mo><mi>s</mi><msub><mi>k</mi><mi>C</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(pk_{C},sk_{C})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> for a secure digital signature scheme. Further another party Bob has also generated a key-pair <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><msub><mi>k</mi><mi>B</mi></msub><mo separator="true">,</mo><mi>s</mi><msub><mi>k</mi><mi>B</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(pk_{B},sk_{B})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> and Charlie knows that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><msub><mi>k</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">pk_B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> is Bob’s public key. Then Charlie can compute the signature <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>e</mi><mi>r</mi><msub><mi>t</mi><mrow><mi>C</mi><mo>→</mo><mi>B</mi></mrow></msub><mo>=</mo><mi>S</mi><mi>i</mi><mi>g</mi><msub><mi>n</mi><mrow><mi>s</mi><msub><mi>k</mi><mi>C</mi></msub></mrow></msub><mo stretchy="false">(</mo><mrow><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup><mi mathvariant="normal">B</mi><mi mathvariant="normal">o</mi><msup><mi mathvariant="normal">b</mi><mo mathvariant="normal">′</mo></msup><mi mathvariant="normal">s</mi><mtext> </mtext><mi mathvariant="normal">k</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">y</mi><mtext> </mtext><mi mathvariant="normal">i</mi><mi mathvariant="normal">s</mi><mtext> </mtext></mrow><mi>p</mi><msub><mi>k</mi><mi>B</mi></msub><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">cert_{C\rightarrow B}=Sign_{sk_{C}}(\mathrm{&#x27;Bob&#x27;s~key~is~} pk_{B}\mathrm{&#x27;})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="mrel mtight">→</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.002197em;vertical-align:-0.250305em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.250305em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathrm">B</span><span class="mord mathrm">o</span><span class="mord"><span class="mord mathrm">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathrm">s</span><span class="mspace nobreak"> </span><span class="mord mathrm">k</span><span class="mord mathrm">e</span><span class="mord mathrm" style="margin-right:0.01389em;">y</span><span class="mspace nobreak"> </span><span class="mord mathrm">i</span><span class="mord mathrm">s</span><span class="mspace nobreak"> </span></span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">′</span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> and give this signature to Bob. <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>e</mi><mi>r</mi><msub><mi>t</mi><mrow><mi>C</mi><mo>→</mo><mi>B</mi></mrow></msub></mrow><annotation encoding="application/x-tex">cert_{C\rightarrow B}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="mrel mtight">→</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> is called a certificate for Bob’s key issued by Charlie.</p>
<p>When Bob wants to communicate with some other party Alice who already knows <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><msub><mi>k</mi><mi>C</mi></msub></mrow><annotation encoding="application/x-tex">pk_C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, Bob can send <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><msub><mi>k</mi><mi>B</mi></msub><mo separator="true">,</mo><mi>c</mi><mi>e</mi><mi>r</mi><msub><mi>t</mi><mrow><mi>C</mi><mo>→</mo><mi>B</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(pk_{B},cert_{C\rightarrow B})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="mrel mtight">→</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> to Alice, who can then verify that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>e</mi><mi>r</mi><msub><mi>t</mi><mrow><mi>C</mi><mo>→</mo><mi>B</mi></mrow></msub></mrow><annotation encoding="application/x-tex">cert_{C\rightarrow B}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="mrel mtight">→</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> is indeed a valid signature on the message &quot;Bob’s key is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><msub><mi>k</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">pk_{B}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>&quot; with respect to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><msub><mi>k</mi><mi>C</mi></msub></mrow><annotation encoding="application/x-tex">pk_{C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>. If verification succeeds, and Alice trusts Charlie, she can accept <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><msub><mi>k</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">pk_B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> as Bob’s legitimate public key. Note that all the communication between Bob and Alice can occur over an <em>insecure and unauthenticated</em> channel.</p>
<h3 id="details-of-a-certificate"><a class="markdownIt-Anchor" href="#details-of-a-certificate"></a> Details of a certificate</h3>
<p>Looking at the details of the certificate in Windows OS or Firefox Browser, we can see the digital certificate contains the following elements:</p>
<ul>
<li>
<p>Certificate</p>
<ul>
<li>Version: the version of the digital certificate. (X.509 v1, X.509 v2, X.509 v3)</li>
<li>Serial number: each certificate has a unique serial number.</li>
<li>Valid from: the certificate is not valid before that time.</li>
<li>Valid to: the certificate is not valid after that time.</li>
<li>Issued to (subject): the owner information of the certificate, including the name of owner, public key, etc.</li>
<li>Issued by (Issuer): whom this certificate is signed by (the root CAs are themselves).</li>
<li>Extensions: key usage, constraints, etc.</li>
</ul>
</li>
<li>
<p>Certificate signature algorithm: hash algorithm &amp; public-key encryption algorithm.</p>
</li>
<li>
<p>Certificate fingerprint: the encrypted hash value of the certificate, which is used to check the integrity of the certificate. (How the hash value is calculated: TBSCertificate content of the certificate. See <span class="exturl" data-url="aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMTI2NDUxMjgvY2VydGlmaWNhdGUtaGFzaC1jaGVja2luZw==">https://stackoverflow.com/questions/12645128/certificate-hash-checking<i class="fa fa-external-link-alt"></i></span>)</p>
</li>
</ul>
<h2 id="public-key-infrastructure-pki"><a class="markdownIt-Anchor" href="#public-key-infrastructure-pki"></a> Public-key infrastructure (PKI)</h2>
<h3 id="types"><a class="markdownIt-Anchor" href="#types"></a> Types</h3>
<p>The Public-key infrastructure (PKI) enables the widespread distribution of public keys. Some types of PKI are described as follows:</p>
<ul>
<li><strong>A single certificate authority</strong>. The simplest PKI assumes a single certificate authority (CA) who is completely trusted by everybody and who issues certificates for everyone’s public key. Anyone who wants to rely on the services of the CA would have to obtain a legitimate copy of the CA’s public key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><msub><mi>k</mi><mrow><mi>C</mi><mi>A</mi></mrow></msub></mrow><annotation encoding="application/x-tex">pk_{CA}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>. This step must be carried out in a secure fashion, i.e., <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><msub><mi>k</mi><mrow><mi>C</mi><mi>A</mi></mrow></msub></mrow><annotation encoding="application/x-tex">pk_{CA}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> must be distributed over an authenticated channel (e.g. via physical means like USB, bundle the public key with softwares). Only one CA is not very practical: it is unlikely for everyone to trust the same CA, the CA is a single point of failure for the entire system, it is inconvenient for all parties to have to contact only one CA, etc.</li>
<li><strong>Multiple certificate authorities</strong>. A party Bob who wants to obtain a certificate can choose which CA(s) he wants to issue a certificate. And a party Alice, who is presented with multiple certificates, can choose which CA’s certificates she trusts. In this way, the security of Alice’s communication is ultimately only as good as the least-secure CA she trusts.</li>
<li><strong>Delegation and certificate chains</strong>. Certificate chains can alleviate the burden on a single CA, but add more points of attack in the system. Say Charlie who acting as a CA issues a certificate <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>e</mi><mi>r</mi><msub><mi>t</mi><mrow><mi>C</mi><mo>→</mo><mi>B</mi></mrow></msub></mrow><annotation encoding="application/x-tex">cert_{C\rightarrow B}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="mrel mtight">→</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>for Bob, and trust him to issue other certificates at the same time. Then, Bob can issue a certificate <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>e</mi><mi>r</mi><msub><mi>t</mi><mrow><mi>B</mi><mo>→</mo><mi>A</mi></mrow></msub></mrow><annotation encoding="application/x-tex">cert_{B\rightarrow A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span><span class="mrel mtight">→</span><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> for Alice. When Alice wants to communicate with Dave who knows <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><msub><mi>k</mi><mi>C</mi></msub></mrow><annotation encoding="application/x-tex">pk_{C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, she can send <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><msub><mi>k</mi><mi>A</mi></msub><mo separator="true">,</mo><mi>c</mi><mi>e</mi><mi>r</mi><msub><mi>t</mi><mrow><mi>B</mi><mo>→</mo><mi>A</mi></mrow></msub><mo separator="true">,</mo><mi>p</mi><msub><mi>k</mi><mi>B</mi></msub><mo separator="true">,</mo><mi>c</mi><mi>e</mi><mi>r</mi><msub><mi>t</mi><mrow><mi>C</mi><mo>→</mo><mi>B</mi></mrow></msub></mrow><annotation encoding="application/x-tex">pk_{A},cert_{B\rightarrow A},pk_{B},cert_{C\rightarrow B}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span><span class="mrel mtight">→</span><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="mrel mtight">→</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> to Dave. If Dave trusts Charlie to issue certificates only to trustworthy people, then Dave may accept <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><msub><mi>k</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">pk_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> (need to certificate recursively). We say that Charlie is, in effect, delegating his ability to issue certificates to Bob.</li>
<li><strong>The “web of trust” model</strong>. This model is a fully distributed model with no central points of trust. In this model, anyone can issue certificates to anyone else, and each user has to make their own decision about how much trust to place in certificates issued by other users. So users need to collect both public keys of other parties and certificates on their own public key. This model might work well for users encrypting their email, but it is not appropriate for settings where security is more critical or for the distribution of organizational public keys.</li>
</ul>
<h3 id="pki-in-practice"><a class="markdownIt-Anchor" href="#pki-in-practice"></a> PKI in practice</h3>
<p>In practice, there are many root CAs in different countries, whose certificates validate themselves. And each CA will delegate their authority to some trust entities. For users, they have a certification database enlisting the trusted CAs. E.g., the certification database in Windows OS containing their expiration date, encryption algorithm, public key and so on, as the following figure shows.</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002930.png" alt="image-20201020000144220" /></p>
<p>The things described above form a disclosure of the certification chain. A simple example of certification scheme is shown as the following illustrations:</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002923.png" alt="image-20201020000253137" /></p>
<p>For Windows OS, the trust CAs could be preinstalled in the OS to ensure its security. Some softwares may also include their own CAs. For flexibility, CA could also be installed manually, but this could be dangerous. In some other situations, the trust CAs might be written into chips directly, or they might be installed from hardware.</p>
<h2 id="invalidating-certificates"><a class="markdownIt-Anchor" href="#invalidating-certificates"></a> Invalidating certificates</h2>
<p>The certificates should generally not be valid indefinitely. In some scenerios, we need a way to render previously issued certificates invalid.</p>
<ul>
<li><strong>Expiration</strong>. One method is to include an expiry date as part of the certificate. But this is a very corase-grained solution.</li>
<li><strong>Revocation</strong>. The CA can explicit revoke the certificate to make certificates become invalid as soon as possible. One way is to include a unique serial number in every certificate. And the CA needs to widely distribute a signed certificate revocation list (CRL) with the serial number of all revoked certificates and current date.</li>
</ul>
<h1 id="ssltls"><a class="markdownIt-Anchor" href="#ssltls"></a> SSL/TLS</h1>
<h2 id="overview-2"><a class="markdownIt-Anchor" href="#overview-2"></a> Overview</h2>
<p>Say two people, Alice and Bob, want to communicate with each other in a public and unauthenticated channel. Both of them have certificates from the same root CA. The communication between them can use each other’s public key to encrypt and use their own private key for signature, after sending and checking the certificates in advance. But this way could be time-consuming, and getting a certificate might be difficult sometimes. TLS/SSL offers a way to solve the two problems.</p>
<p>TLS is the protocol used by the browser any time when connect to a website using <code>https</code> rather than <code>http</code>. It is a standardized protocol based on a precursor called SSL (Secure Socket Layer).</p>
<p>The requirement of certificates differ from applications. In HTTPS and FTPS protocol, only the certificate of the server is required (one-way verification). And for some more straight situations like Web banking, the certificates from both sides are required (mutual verification).</p>
<p>TLS allows a client and a server to agree on a set of shared keys and then to use those keys to encrypt and authenticate their subsequent communications. It consists two parts: a <em>handshake protocol</em> that performs authenticated key exchange to establish the shared keys, and a <em>record-layer protocol</em> that uses those shared keys to encrypt/authenticate the parties’ communication.</p>
<h2 id="the-hand-shake-protocol"><a class="markdownIt-Anchor" href="#the-hand-shake-protocol"></a> The hand-shake protocol</h2>
<p>At the outset of the protocol, the client <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> holds a set of CA’s public keys <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><msub><mi>k</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>p</mi><msub><mi>k</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">{pk_{1},\dots,pk_{n}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span>, and the server <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span> has a key-pair <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><msub><mi>k</mi><mi>S</mi></msub><mo separator="true">,</mo><mi>s</mi><msub><mi>k</mi><mi>S</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(pk_{S},sk_{S})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> for a KEM along with a certificate <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>e</mi><mi>r</mi><msub><mi>t</mi><mrow><mi>i</mi><mo>→</mo><mi>S</mi></mrow></msub></mrow><annotation encoding="application/x-tex">cert_{i\rightarrow S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">→</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> issued by one of the CAs whose public key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> knows. To connect to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span>, the parties run the following steps:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> begins by sending a message to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span> that includes information about the versions of the protocol supported by the client, the ciphersuites supported by the client (the hash functions or block ciphers the client allows) and a uniform value <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>N</mi><mi>C</mi></msub></mrow><annotation encoding="application/x-tex">N_{C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span> responds by selecting the latest version of the protocol it supports as well as an appropriate ciphersuite. It also sends its public key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><msub><mi>k</mi><mi>S</mi></msub></mrow><annotation encoding="application/x-tex">pk_{S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, its certificate <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>e</mi><mi>r</mi><msub><mi>t</mi><mrow><mi>i</mi><mo>→</mo><mi>S</mi></mrow></msub></mrow><annotation encoding="application/x-tex">cert_{i\rightarrow S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">→</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and its own uniform value <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>N</mi><mi>S</mi></msub></mrow><annotation encoding="application/x-tex">N_{S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> checks whether one of the CA’s public keys <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><msub><mi>k</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">pk_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> matches the CA who issued <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span>'s certificate, also checks whether it has not expired or been revoked.  If so, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> verifies the certificate and learns that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><msub><mi>k</mi><mi>S</mi></msub></mrow><annotation encoding="application/x-tex">pk_{S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span>'s public key. Then it runs <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>c</mi><mo separator="true">,</mo><mi>p</mi><mi>m</mi><mi>k</mi><mo stretchy="false">)</mo><mo>←</mo><mi>E</mi><mi>n</mi><mi>c</mi><mi>a</mi><mi>p</mi><msub><mi>s</mi><mrow><mi>p</mi><msub><mi>k</mi><mi>S</mi></msub></mrow></msub><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(c,pmk)\leftarrow Encaps_{pk_{S}}(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">m</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> to obtain a ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span> and a so-called pre-master key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>m</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">pmk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">m</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> (used to derive a master key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">mk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> using a key-derivation function applied to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>m</mi><mi>k</mi><mo separator="true">,</mo><mtext> </mtext><msub><mi>N</mi><mi>C</mi></msub><mtext> and </mtext><msub><mi>N</mi><mi>S</mi></msub></mrow><annotation encoding="application/x-tex">pmk,~N_{C} ~\textrm{and}~N_{S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">m</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord text"><span class="mord textrm">and</span></span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, which is then used by the client in a pseudorandom generator to derive four keys <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>C</mi></msub><mo separator="true">,</mo><msubsup><mi>k</mi><mi>C</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msubsup><mo separator="true">,</mo><msub><mi>k</mi><mi>S</mi></msub><mo separator="true">,</mo><msubsup><mi>k</mi><mi>S</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msubsup></mrow><annotation encoding="application/x-tex">k_{C},k_{C}^{&#x27;},k_{S},k_{S}^{&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217811em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.424669em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.424669em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>) and then send <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span> to the server. Finally, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> computes <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>τ</mi><mi>C</mi></msub><mo>←</mo><mi>M</mi><mi>a</mi><msub><mi>c</mi><mrow><mi>m</mi><mi>k</mi></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi><mi>c</mi><mi>r</mi><mi>i</mi><mi>p</mi><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tau_{C}\leftarrow Mac_{mk}(transcript)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>, where <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi><mi>c</mi><mi>r</mi><mi>i</mi><mi>p</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">transcript</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span></span></span></span> denotes all messages exchanged between <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span> thus far, and send <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>τ</mi><mi>C</mi></msub></mrow><annotation encoding="application/x-tex">\tau_{C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span> computes <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>m</mi><mi>k</mi><mo>:</mo><mo>=</mo><mi>D</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>p</mi><msub><mi>s</mi><mrow><mi>s</mi><msub><mi>k</mi><mi>S</mi></msub></mrow></msub><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">pmk:=Decaps_{sk_{S}}(c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">m</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.000305em;vertical-align:-0.250305em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.250305em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span>, from which it can derive <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">mk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>C</mi></msub><mo separator="true">,</mo><msubsup><mi>k</mi><mi>C</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msubsup><mo separator="true">,</mo><msub><mi>k</mi><mi>S</mi></msub><mo separator="true">,</mo><msubsup><mi>k</mi><mi>S</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msubsup></mrow><annotation encoding="application/x-tex">k_{C},k_{C}^{&#x27;},k_{S},k_{S}^{&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217811em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.424669em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.424669em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span> as the client did. If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><msub><mi>y</mi><mrow><mi>m</mi><mi>k</mi></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi><mi>c</mi><mi>r</mi><mi>i</mi><mi>p</mi><mi>t</mi><mo separator="true">,</mo><msub><mi>τ</mi><mi>C</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">≠</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">Vrfy_{mk}(transcript,\tau_{C})\ne 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>, then <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span> aborts (If this happen, choose a uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>m</mi><mi>k</mi></mrow><annotation encoding="application/x-tex">pmk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">m</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> and continue running using that value, which can prevent Bleichenbacher-style attacks). Otherwise, it sets <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>τ</mi><mi>S</mi></msub><mo>←</mo><mi>M</mi><mi>a</mi><msub><mi>c</mi><mrow><mi>m</mi><mi>k</mi></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi><mi>c</mi><mi>r</mi><mi>i</mi><mi>p</mi><msup><mi>t</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tau_{S}\leftarrow Mac_{mk}(transcript&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>, where <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi><mi>c</mi><mi>r</mi><mi>i</mi><mi>p</mi><msup><mi>t</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">transcript&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> denotes all the messages exchanged between <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span> thus far. Then <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span> sends <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>τ</mi><mi>S</mi></msub></mrow><annotation encoding="application/x-tex">\tau_{S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span>.</li>
<li>If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>r</mi><mi>f</mi><msub><mi>y</mi><mrow><mi>m</mi><mi>k</mi></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi><mi>c</mi><mi>r</mi><mi>i</mi><mi>p</mi><msup><mi>t</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><msub><mi>τ</mi><mi>S</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">≠</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">Vrfy_{mk}(transcript&#x27;,\tau_{S})\ne 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">p</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.1132em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>, the client aborts.</li>
</ul>
<p>At the end of a successful executin of the handshake protocol, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span> share a set of four symmetric keys <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>C</mi></msub><mo separator="true">,</mo><msubsup><mi>k</mi><mi>C</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msubsup><mo separator="true">,</mo><msub><mi>k</mi><mi>S</mi></msub><mo separator="true">,</mo><msubsup><mi>k</mi><mi>S</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msubsup></mrow><annotation encoding="application/x-tex">k_{C},k_{C}^{&#x27;},k_{S},k_{S}^{&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217811em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.424669em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.424669em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>.</p>
<p>TLS 1.2 supports two KEMs: a CDH/DDH-based KEM, or the RSA-based encryption scheme PKCS #1 v1.5.</p>
<p>For situations need mutual verification, the handshake process is similar, except that the server will also check the identity of the user before sharing the symmetric key.</p>
<p>The following is an illustration of SSL handshake process:</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002916.png" alt="image-20201020001109274" /></p>
<h2 id="the-record-layer-protocol"><a class="markdownIt-Anchor" href="#the-record-layer-protocol"></a> The record-layer protocol</h2>
<p>once keys have been agreed upon by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span>, the parties use those keys to encrypt and authenticate all their subsequent communication. <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> uses <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>C</mi></msub></mrow><annotation encoding="application/x-tex">k_{C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> to encrypt and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>k</mi><mi>C</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msubsup></mrow><annotation encoding="application/x-tex">k_{C}^{&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217811em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.424669em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span> to authenticate all messages it sends to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span>; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span> uses <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>S</mi></msub></mrow><annotation encoding="application/x-tex">k_{S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>k</mi><mi>S</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msubsup></mrow><annotation encoding="application/x-tex">k_{S}^{&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217811em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.424669em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span> to encrypt and authenticate all the messages it sends. Sequence numbers are used to prevent replay attacks.</p>
<h2 id="pseudocode"><a class="markdownIt-Anchor" href="#pseudocode"></a> Pseudocode</h2>
<h3 id="client"><a class="markdownIt-Anchor" href="#client"></a> Client</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//construct communication with server</span></span><br><span class="line">server = socket_init()</span><br><span class="line"><span class="keyword">while</span> (!server)</span><br><span class="line">    <span class="built_in">connect</span>(server, server_address);</span><br><span class="line"></span><br><span class="line"><span class="comment">//handshake process</span></span><br><span class="line"><span class="built_in">buffer</span>=[]</span><br><span class="line">server.send(&#x27;Protocol version&#x27;, &#x27;Ciphersuites&#x27;, N_c = random()); //send information to server</span><br><span class="line"><span class="built_in">buffer</span>.push_back(server.last_sent_message);</span><br><span class="line">&#x27;Protocol version&#x27;, &#x27;Ciphersuites&#x27;, pk, Certificate, N_s = server.receive(); //get information from server</span><br><span class="line"><span class="built_in">buffer</span>.push_back(server.last_received_message);</span><br><span class="line"><span class="keyword">if</span> (Check_certificate(pk, certificate) != <span class="number">1</span>) <span class="comment">//check the validity of certificate</span></span><br><span class="line">    server.<span class="built_in">disconnect</span>();</span><br><span class="line">    <span class="keyword">return</span> error;</span><br><span class="line">(c, pmk) = Encaps(pk, <span class="number">1</span>^n); <span class="comment">//generate pre-master key</span></span><br><span class="line">mk = Key_derivation(pmk, N_c, N_s); <span class="comment">//generate masker key</span></span><br><span class="line">tau_c = Mac(mk, <span class="built_in">buffer</span>); <span class="comment">//transcript denotes all the messages exchanged above </span></span><br><span class="line">server.send((c, tau_c)); <span class="comment">//send message to server</span></span><br><span class="line"><span class="built_in">buffer</span>.push_back(server.last_sent_message);</span><br><span class="line">server.receive(tau_s);</span><br><span class="line"><span class="keyword">if</span> (Vrfy(mk, transcript_new, tau_s) != <span class="number">1</span>)</span><br><span class="line">    server.<span class="built_in">disconnect</span>();</span><br><span class="line">    <span class="keyword">return</span> error;</span><br><span class="line">k_c, k_c2, k_s, k_s2 = <span class="built_in">random</span>(mk);</span><br><span class="line"></span><br><span class="line"><span class="comment">//communication</span></span><br><span class="line">cnt_client = <span class="number">0</span>;</span><br><span class="line">cnt_server = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span>(input(send_messages))</span><br><span class="line">        server.send(Encrypt(k_c, send_messages) + MAC(k_c2, send_messages, cnt_client));</span><br><span class="line">        cnt_client++;</span><br><span class="line">    <span class="keyword">if</span>(server.receive(received_messages))</span><br><span class="line">        received_messages_encrypted, MAC_str=split(received_messages)</span><br><span class="line">        received_messages_decrypted = Decrypt(k_s, received_messages_encrypted)</span><br><span class="line">        <span class="keyword">if</span>(Vrfy(k_s2, received_messages_decrypted, cnt_server, MAC_str) != <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> error;</span><br><span class="line">        cnt_server++;</span><br></pre></td></tr></table></figure>
<h3 id="server"><a class="markdownIt-Anchor" href="#server"></a> Server</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//construct connection with client</span></span><br><span class="line">client = socket_init();</span><br><span class="line"><span class="keyword">while</span>(!client)</span><br><span class="line">    listen(client);</span><br><span class="line"></span><br><span class="line"><span class="comment">//handshake process</span></span><br><span class="line">buffer=[]</span><br><span class="line">&#x27;Protocol version&#x27;, &#x27;ciphersuites&#x27;, N_c = client.receive()</span><br><span class="line">buffer.push_back(client.last_received_message)</span><br><span class="line">client.send(&#x27;Protocol version&#x27;, &#x27;ciphersuites&#x27;, pk, certificate, N_s=rand())</span><br><span class="line">buffer.push_back(client.last_sent_message)</span><br><span class="line">c, tau_c = client.receive()</span><br><span class="line">buffer.push_back(client.last_received_message)</span><br><span class="line">pmk = Decap(sk, c)</span><br><span class="line">mk = Key_derivation(pmk, N_c, N_s) <span class="comment">//generate masker key</span></span><br><span class="line"><span class="keyword">if</span> (Vrfy(mk, transcript, tau_c) != <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> error;</span><br><span class="line">tau_s = Mac(mk, buffer);</span><br><span class="line">client.send(tau_s);</span><br><span class="line">k_c, k_c2, k_s, k_s2 = random(mk);</span><br><span class="line"></span><br><span class="line"><span class="comment">//communication</span></span><br><span class="line">cnt_client = <span class="number">0</span>;</span><br><span class="line">cnt_server = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span>(input(send_messages))</span><br><span class="line">        client.send(Encrypt(k_s, send_messages) + MAC(k_s2, send_messages, cnt_server));</span><br><span class="line">        cnt_server++;</span><br><span class="line">    <span class="keyword">if</span>(server.receive(received_messages))</span><br><span class="line">        received_messages_encrypted, MAC_str=split(received_messages)</span><br><span class="line">        received_messages_decrypted = Decrypt(k_c, received_messages_encrypted)</span><br><span class="line">        <span class="keyword">if</span>(Vrfy(k_c2, received_messages_decrypted, cnt_server, MAC_str) != <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> error;</span><br><span class="line">        cnt_client++;</span><br></pre></td></tr></table></figure>
<h1 id="references"><a class="markdownIt-Anchor" href="#references"></a> References</h1>
<ol>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzIyMjYwMDkwL2Fuc3dlci82NDg5MTA3MjA=">https://www.zhihu.com/question/22260090/answer/648910720<i class="fa fa-external-link-alt"></i></span></li>
<li>Jonathan Katz, Yehuda Lindell. Introduction to Modern Cryptography, Second Edition.</li>
<li><span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNDMyMjY0Mw==">https://zhuanlan.zhihu.com/p/34322643<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nhcm9semhhbmc4NDA2L2FydGljbGUvZGV0YWlscy83OTQ1ODIwNg==">https://blog.csdn.net/carolzhang8406/article/details/79458206<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9kZjkzNWE0NWM3ZTA=">https://www.jianshu.com/p/df935a45c7e0<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FkZXlpL2FydGljbGUvZGV0YWlscy84NTU2MTcw">https://blog.csdn.net/adeyi/article/details/8556170<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzI0Mjk0NDc3">https://www.zhihu.com/question/24294477<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vSmVmZnJleVN1bi9hcmNoaXZlLzIwMTAvMDYvMjQvMTYyNzI0Ny5odG1s">https://www.cnblogs.com/JeffreySun/archive/2010/06/24/1627247.html<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RjejEwMDEvYXJ0aWNsZS9kZXRhaWxzLzIyMTkyNjU1">https://blog.csdn.net/dcz1001/article/details/22192655<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vamlmZW5nL2FyY2hpdmUvMjAxMC8xMS8zMC8xODkxNzc5Lmh0bWw=">https://www.cnblogs.com/jifeng/archive/2010/11/30/1891779.html<i class="fa fa-external-link-alt"></i></span></li>
</ol>
]]></content>
      <categories>
        <category>信息安全</category>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>密码学</tag>
      </tags>
  </entry>
  <entry>
    <title>操作系统-CPU虚拟化</title>
    <url>/2021/01/09/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-CPU%E8%99%9A%E6%8B%9F%E5%8C%96/</url>
    <content><![CDATA[<p>​</p>
<h1 id="进程"><a class="markdownIt-Anchor" href="#进程"></a> 进程</h1>
<h2 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h2>
<p>进程（process）就是操作系统为正在运行的程序提供的抽象，一个进程就对应一个正在运行的程序。</p>
<p>为了理解构成进程的是什么，我们需要理解它的机器状态，也就是程序在运行时可以读取或更新的内容。进程的机器状态包括了内存、寄存器和持久存储设备。</p>
<h2 id="进程api"><a class="markdownIt-Anchor" href="#进程api"></a> 进程API</h2>
<p>所有的操作系统都需要以某种形式提供如下进程的API：</p>
<ul>
<li>创建：操作系统必须包含一些创建新进程的方法。</li>
<li>销毁：系统提供一个强制销毁进程的接口。</li>
<li>等待：有时等待进程停止运行是有用的，因此提供了等待接口。</li>
<li>其他控制：包括进程的暂停与恢复等。</li>
<li>状态：获取有关进程的状态信息。</li>
</ul>
<a id="more"></a>
<h3 id="fork系统调用"><a class="markdownIt-Anchor" href="#fork系统调用"></a> fork()系统调用</h3>
<p>操作系统提供的fork()函数被用于创建新的进程。在一个进程中调用fork()函数时，新创建的进程几乎与调用进程完全一样，对于操作系统来说，此时看起来有两个完全一样的程序在运行，并且都从fork()系统调用中返回。新创建的进程叫子进程（child），原来的进程被叫做父进程（parent）。</p>
<p>对于子进程来说，它拥有自己的地址空间（私有内存）、寄存器、程序计数器等。<strong>子进程不会从main()函数开始执行，而是直接从fork()系统调用中返回，并执行接下来的代码</strong>。需要注意的是，父进程与子进程从fork()函数返回的值是不同的，父进程获得的返回值是新创建子进程的PID（Process identifier，进程描述符），而子进程获得的返回值是0。</p>
<p>子进程被创建之后，它与父进程的执行顺序是不确定的。CPU调度程序决定了某个时刻哪个进程会被执行。</p>
<h3 id="wait系统调用"><a class="markdownIt-Anchor" href="#wait系统调用"></a> wait()系统调用</h3>
<p>操作系统提供的wait()函数用于进程的延迟执行。当父进程调用wait()函数时，它会延迟自己的执行直到子进程执行完毕。当子进程执行完毕之后，wait()返回父进程。</p>
<h3 id="exec系统调用"><a class="markdownIt-Anchor" href="#exec系统调用"></a> exec()系统调用</h3>
<p>exec()函数的输入参数为可执行程序的名称以及需要的参数，在调用这一函数之后，exec()便会从可执行程序中加载代码和静态数据，并用它覆写自己的代码段以及静态数据，堆、栈及其他内存空间也会被重新初始化。之后，操作系统便执行该程序，将程序执行时需要的参数通过exec()函数的参数传递给它。对exec()的成功调用永远不会返回。</p>
<p>因此，exec()函数并未创建新进程，而是直接将当前运行的程序替换为不同的运行程序。也就是说，在执行完exec()之后，几乎就像exec()执行之前的程序从来没有运行过一样。</p>
<h4 id="讨论fork与exec分离的原因"><a class="markdownIt-Anchor" href="#讨论fork与exec分离的原因"></a> 讨论：fork()与exec()分离的原因</h4>
<p>将fork()与exec()分离的做法在构建UNIX shell的时候非常有用。UNIX shell是一个用户程序，它显示一个提示符等待用户输入。可以向它输入一个命令（即一个可执行程序的名称以及其需要的参数），shell会在文件系统中找到这个可执行程序，调用fork()创建新进程，并调用exec()的某个变体来执行这个可执行程序，调用wait()等待该命令完成。子进程执行结束之后，shell从wait()返回并输出一个提示符，等待输入下一条命令。将二者分开的做法给了shell在fork之后exec之前运行代码的机会。这些代码可以在运行新程序之前改变环境，从而实现一些特殊的功能。例：</p>
<ul>
<li>shell通过在调用exec()之前关闭标准输出并打开文件，实现输出的重定向。</li>
<li>UNIX管道是通过将进程的输出链接到一个内核管道上（队列），同时将另一个进程的输入也链接到这条管道上。这样可以将命令串联在一起共同完成某项任务。</li>
</ul>
<h3 id="其他api"><a class="markdownIt-Anchor" href="#其他api"></a> 其他API</h3>
<p>UNIX中还有其他许多与进程交互的方式。比如kill()系统调用可以向进程发出信号，整个信号子系统提供了一套丰富的向进程传递外部事件的途径，包括接受与执行这些信号。</p>
<h2 id="进程的创建"><a class="markdownIt-Anchor" href="#进程的创建"></a> 进程的创建</h2>
<p>操作系统在运行程序时，首先要将代码和所有静态数据（如初始化变量）加载到内存中。程序最初以某种可执行格式被存放于磁盘当中，因此需要操作系统从磁盘中读取这些数据并放在内存中的某处。在现代操作系统中，仅在程序执行期间加载需要被加载的代码和数据片段。</p>
<p>在此之后，操作系统会为程序的运行时栈（runtime stack）分配内存。在C语言程序中，程序使用栈来存放局部变量、函数参数和返回地址。操作系统也可能会使用参数来初始化栈，对应于C语言中main()函数的参数argc和argv数组。</p>
<p>操作系统可能也会为程序的堆（heap）分配一些内存。在C程序中，堆用于显式请求的动态分配数据，使用malloc()函数申请得到的空间就分布在堆上，之后可以通过调用free()函数来释放掉这一部分空间。</p>
<p>操作系统还需要执行一些其他的初始化任务，特别是与输入/输出相关的任务。在UNIX系统中，默认情况下每个进程都有3个打开的文件描述符（file descriptor），用于标准输入、输出和错误，这些描述符可以让程序读取来自终端的输入以及打印输出到屏幕等。</p>
<p>通过上述步骤，操作系统为程序执行完成了所有的准备工作。接下来要启动程序时，从程序的入口处运行（即main()函数），OS便将CPU的控制权转移到这一进程，从而程序开始执行。</p>
<h2 id="进程状态"><a class="markdownIt-Anchor" href="#进程状态"></a> 进程状态</h2>
<p>一个进程可以处于如下的三种状态之一：</p>
<ul>
<li>运行（running）：此时进程正在处理器上运行，意味着它正在执行指令。</li>
<li>就绪（ready）：进行已经准备好运行，但是由于某种原因，操作系统不在此时运行它。</li>
<li>阻塞（blocked）：一个进程执行了某种操作，直到发生了其他事件时才准备运行。比如一个进程向磁盘发起I/O请求时，它便会被阻塞，其他进程可以使用处理器。</li>
</ul>
<h2 id="数据结构"><a class="markdownIt-Anchor" href="#数据结构"></a> 数据结构</h2>
<p>在XV6（MIT开发的用于教学的简易操作系统，但是包含了UNIX的重要概念）内核中，操作系统为一个进程定义的数据结构如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">context</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> eip;</span><br><span class="line">    <span class="keyword">int</span> esp;</span><br><span class="line">    <span class="keyword">int</span> ebx;</span><br><span class="line">    <span class="keyword">int</span> ecx;</span><br><span class="line">    <span class="keyword">int</span> edx;</span><br><span class="line">    <span class="keyword">int</span> esi;</span><br><span class="line">    <span class="keyword">int</span> edi;</span><br><span class="line">    <span class="keyword">int</span> ebp;</span><br><span class="line">&#125;; <span class="comment">//用于在程序中断后保存寄存器中的值，以及重新开始执行时恢复状态</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> proc_state&#123;</span><br><span class="line">    UNUSED, </span><br><span class="line">    EMBRYO, <span class="comment">//进程在创建时的初始状态</span></span><br><span class="line">    SLEEPING, <span class="comment">//阻塞状态</span></span><br><span class="line">    RUNABLE, <span class="comment">//就绪状态</span></span><br><span class="line">    RUNNING, <span class="comment">//运行状态</span></span><br><span class="line">    ZOMBIE <span class="comment">//僵尸状态，代表已经退出但是未被清理</span></span><br><span class="line">&#125;; <span class="comment">//程序可以处于的不同状态</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">proc</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span>* mem; <span class="comment">//进程起始的内存地址</span></span><br><span class="line">    uint sz; <span class="comment">//内存地址大小</span></span><br><span class="line">    <span class="keyword">char</span>* kstack; <span class="comment">//内核栈底部的地址</span></span><br><span class="line">    <span class="keyword">enum</span> proc_state state; <span class="comment">//进程状态</span></span><br><span class="line">    <span class="keyword">int</span> pid; <span class="comment">//进程ID号</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">proc</span>* <span class="title">parent</span>;</span> <span class="comment">//父进程</span></span><br><span class="line">    <span class="keyword">void</span>* chan; <span class="comment">//如果不为0，则休眠</span></span><br><span class="line">    <span class="keyword">int</span> killed; <span class="comment">//如果不为0，代表进程被杀掉</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">file</span>* <span class="title">ofile</span>[<span class="title">NOFILE</span>];</span> <span class="comment">//打开的文件</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">inode</span>* <span class="title">cwd</span>;</span> <span class="comment">//当前所处目录</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">context</span> <span class="title">context</span>;</span> <span class="comment">//用于保存上下文信息</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">trapframe</span>* <span class="title">tf</span>;</span> <span class="comment">//“陷阱”，用于中断</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="cpu虚拟化"><a class="markdownIt-Anchor" href="#cpu虚拟化"></a> CPU虚拟化</h1>
<h2 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h2>
<p>在操作系统中，常常同时运行着许多个进程，对于现代操作系统来说可能会有上百个进程同时运行（Windows可查看任务管理器，Linux系统为top或ps命令）。但是实际上只有少量的物理CPU可用，操作系统通过虚拟化CPU提供了几乎有无数个CPU可用的假象。</p>
<p>CPU虚拟化是通过时分共享的方式实现的：运行一个进程一段时间，然后运行另一个进程，如此轮换。这样可以允许用户运行多个进程，但是相应地也会使得每个进程的运行慢一些。</p>
<p>在构建虚拟化机制时，需要考虑两个重要的问题：一是如何在不增加系统开销的情况下实现虚拟化，二是如何有效控制进程并同时保留对CPU的控制权。</p>
<h2 id="受限直接执行"><a class="markdownIt-Anchor" href="#受限直接执行"></a> 受限直接执行</h2>
<p>受限的直接执行（Limited direct execution）包括两部分：<em>直接执行</em>指的是直接在CPU上运行程序；而<em>受限</em>指的是进程在运行时存在一些限制，用于确保OS对CPU的控制。</p>
<h3 id="直接执行"><a class="markdownIt-Anchor" href="#直接执行"></a> 直接执行</h3>
<p>当OS希望启动程序运行时，它会在进程列表里面为其创建一个进程条目，为其分配一些内存，将程序代码从磁盘加载到内存，找到程序的入口点并跳转到那里开始执行。这样，程序便直接在CPU上运行，从而取得快速的执行速度。</p>
<h3 id="受限操作"><a class="markdownIt-Anchor" href="#受限操作"></a> 受限操作</h3>
<p>在操作系统中，通过引入用户模式和内核模式，使得一个进程能够执行I/O和其他一些受限制的操作，同时又确保进程不能完全控制系统。在<strong>用户模式</strong>下，运行的代码会受到限制，比如进程不能发出I/O请求；而在<strong>内核模式</strong>下，运行的代码可以执行任何事情，操作系统就以这种模式运行。</p>
<p>为了让进程执行某些特权操作，几乎所有的现代硬件都提供了用户程序执行系统调用的能力；同时内核也会提供一些系统调用（大多数操作系统提供几百个调用），小心地向用户程序暴露一些关键功能。</p>
<p>要执行系统调用，程序需要执行特殊的<strong>陷阱指令</strong>。执行该指令将会跳到内核，并将特权级别提升为内核模式，此时程序可以执行被允许的特权操作。完成后，操作系统将会调用一个从陷阱返回的指令，返回到发起系统调用的用户程序中，并回到用户模式继续执行该程序。在执行陷阱时，硬件需要确保调用者寄存器中的值被保存下来，以便在操作系统发出从陷阱返回指令时能够正确返回。在X86上，处理器会将程序计数器、标志和一些其他寄存器推入每个进程的内核栈上，从陷阱返回时将这些值从内核栈中弹出。</p>
<blockquote>
<p>备注—内核栈与用户栈：</p>
<p>每个进程都有两个堆栈，用户栈和内核栈。用户栈位于用户地址空间，而内核栈位于内核地址空间，用于保存进程在内核态运行时所产生的相关信息。当CPU在用户态运行时，CPU栈指针寄存器（%rsp/%esp）保存的是用户栈的栈顶指针，此时使用用户栈；而CPU在内核态运行时，栈指针寄存器则使用内核栈的栈顶指针，相当于使用内核栈。在切换用户态与内核态时，通过保存与设置栈指针的值，便可完成栈的切换。</p>
</blockquote>
<p>当操作系统启动时，会设置一个陷阱表，告诉硬件在发生某些异常事件时应该运行哪些代码。操作系统会通过一些特殊的指令向硬件发送信息，使硬件知道这些陷阱处理程序的位置，以及发生系统调用和其他异常事件时应该跳转到哪一条代码。硬件会保存这些信息，直到重新启动机器。</p>
<h2 id="进程之间的切换"><a class="markdownIt-Anchor" href="#进程之间的切换"></a> 进程之间的切换</h2>
<h3 id="重获cpu的控制权"><a class="markdownIt-Anchor" href="#重获cpu的控制权"></a> 重获CPU的控制权</h3>
<p>当一个进程在CPU上运行时，操作系统无法采取任何行动，需要采取一些策略来重新获得对CPU的控制权。常用的方式有：</p>
<ul>
<li>协作方式：操作系统相信系统的进程会合理运行，OS通过等待系统调用或者某种非法操作发生，从而重新获得对CPU的控制权。当某个进程进入无限循环，这种方式便会出现问题。</li>
<li>非协作方式：通过使用时钟设备编程，每隔一段时间产生一次中断。在产生中断时，停止当前正在运行的进程，运行操作系统中预先配置好的中断处理程序。此时操作系统重新获得对CPU的控制权。</li>
</ul>
<h3 id="保存和恢复上下文"><a class="markdownIt-Anchor" href="#保存和恢复上下文"></a> 保存和恢复上下文</h3>
<p>当操作系统重新获得控制权之后，便可以决定是否切换进程（由操作系统的进程调度算法来决定）。如果要进行切换，OS会执行一些底层代码，即上下文切换。上下文切换指的是操作系统为当前正在执行的进程保存一些寄存器的值，并为即将执行的进程恢复一些寄存器的值。</p>
<p>具体来说，在上下文切换的过程中，操作系统会执行一些底层的汇编代码，保存通用寄存器、程序计数器、当前进程的内核栈指针，然后恢复寄存器、程序计数器并切换内核栈指针，供即将运行的进程使用。通过切换栈，内核便完成了进程的切换。（注意：在切换进程的时候，操作系统是在内核态下进行操作的，因此切换的栈指针是内核栈，而用户栈的指针则保存在内核栈中）</p>
<h1 id="进程调度"><a class="markdownIt-Anchor" href="#进程调度"></a> 进程调度</h1>
<h2 id="度量指标"><a class="markdownIt-Anchor" href="#度量指标"></a> 度量指标</h2>
<p><strong>周转时间</strong>：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mrow><mi mathvariant="normal">周</mi><mi mathvariant="normal">转</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi></mrow></msub><mo>=</mo><msub><mi>T</mi><mrow><mi mathvariant="normal">完</mi><mi mathvariant="normal">成</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi></mrow></msub><mo>−</mo><msub><mi>T</mi><mrow><mi mathvariant="normal">到</mi><mi mathvariant="normal">达</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{周转时间}=T_{完成时间}-T_{到达时间}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.15em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">周</span><span class="mord cjk_fallback mtight">转</span><span class="mord cjk_fallback mtight">时</span><span class="mord cjk_fallback mtight">间</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.15em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">完</span><span class="mord cjk_fallback mtight">成</span><span class="mord cjk_fallback mtight">时</span><span class="mord cjk_fallback mtight">间</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.15em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">到</span><span class="mord cjk_fallback mtight">达</span><span class="mord cjk_fallback mtight">时</span><span class="mord cjk_fallback mtight">间</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
<p><strong>响应时间</strong>：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mrow><mi mathvariant="normal">响</mi><mi mathvariant="normal">应</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi></mrow></msub><mo>=</mo><msub><mi>T</mi><mrow><mi mathvariant="normal">首</mi><mi mathvariant="normal">次</mi><mi mathvariant="normal">运</mi><mi mathvariant="normal">行</mi></mrow></msub><mo>−</mo><msub><mi>T</mi><mrow><mi mathvariant="normal">到</mi><mi mathvariant="normal">达</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{响应时间}=T_{首次运行}-T_{到达时间}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.15em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">响</span><span class="mord cjk_fallback mtight">应</span><span class="mord cjk_fallback mtight">时</span><span class="mord cjk_fallback mtight">间</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.15em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">首</span><span class="mord cjk_fallback mtight">次</span><span class="mord cjk_fallback mtight">运</span><span class="mord cjk_fallback mtight">行</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.15em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">到</span><span class="mord cjk_fallback mtight">达</span><span class="mord cjk_fallback mtight">时</span><span class="mord cjk_fallback mtight">间</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
<h2 id="调度方案及其分析"><a class="markdownIt-Anchor" href="#调度方案及其分析"></a> 调度方案及其分析</h2>
<h3 id="简单的调度算法"><a class="markdownIt-Anchor" href="#简单的调度算法"></a> 简单的调度算法</h3>
<h4 id="先进先出"><a class="markdownIt-Anchor" href="#先进先出"></a> 先进先出</h4>
<p>最基本的调度算法为先进先出（First In First Out, FIFO），或称为先到先服务（First Come First Served, FCFS）。这种方法简单易实现，但是会出现护航效应（Convoy effect），即一些耗时较少的资源消费者被排在耗时较多的资源消费者之后，造成周转时间的表现较差。</p>
<h4 id="最短任务优先"><a class="markdownIt-Anchor" href="#最短任务优先"></a> 最短任务优先</h4>
<p>最短任务优先（Shortest Job First, SJF）调度算法先执行最短的任务，再执行次短的任务，以此类推。如果假设所有任务同时到达，那么这种方法是最优的调度算法。但是这种假设是不切实际的，事实中，如果耗时较多的任务先到达，耗时较少的任务后到达，则会遇到同样的护航问题。</p>
<h4 id="最短完成时间优先"><a class="markdownIt-Anchor" href="#最短完成时间优先"></a> 最短完成时间优先</h4>
<p>如果我们允许抢占，向SJF调度算法中添加抢占则变成了最短完成时间优先（Shortest Time-to-Completion First, STCF）调度算法。每当一个新工作进入系统中时，它会确定剩余工作和新工作中谁的剩余时间最少，然后调度这一工作。这种方法的周转时间较少，但是却具有糟糕的响应时间和交互性。</p>
<h4 id="轮转"><a class="markdownIt-Anchor" href="#轮转"></a> 轮转</h4>
<p>轮转（Round-Robin, RR）调度算法在一个时间片（时间片的长度是计算机时钟中断周期的倍数）内运行一个工作，然后切换到运行队列中的下一个任务，而不是运行一个任务直到完成。反复这样执行，直到所有任务完成。考虑响应时间的话，RR算法的表现很好；但如果考虑周转时间的话，RR算法是最糟糕的策略之一。</p>
<p>时间片的长短对于RR算法来说十分重要，时间片越短则在响应时间上表现越好，但是也会造成上下文切换的次数增加，从而影响整体性能。</p>
<h4 id="结合io的调度"><a class="markdownIt-Anchor" href="#结合io的调度"></a> 结合I/O的调度</h4>
<p>由于进程在执行I/O操作期间不会使用CPU，此时调度算法可以在CPU上安排另外一项工作。通过这样可以实现重叠，一个进程在等待另一个进程的I/O完成时使用CPU，从而使得系统得到更好的利用。</p>
<h3 id="多级反馈队列"><a class="markdownIt-Anchor" href="#多级反馈队列"></a> 多级反馈队列</h3>
<p>在多级反馈队列（Multi-level Feedback Queue, MLFQ）算法中，同时维护了多个独立的队列。每个队列都有不同的优先级，同时每个队列也可以拥有不同长度的时间片，在任何时刻一个工作只能存在于一个队列中。MLFQ总是优先执行较高级队列中的工作；如果一个队列中有多个工作，就对这些工作采用轮转调度。</p>
<p>MLFQ调度策略的关键在于如何设置优先级，这种算法中对于优先级的设置有如下规则：</p>
<ul>
<li>工作进入系统时，放在最高优先级，即最上层队列。这一规则假设每个进入系统的工作都为短工作，如果确实是短工作则很快会执行完毕，否则它的优先级会降低，也就相当于被认为是长工作。</li>
<li>调度程序记录每个进程在某一层中消耗的总时间，一旦工作用完了在某一层中的时间配额（无论中间放弃过多少次CPU），就降低它的优先级，移动这个工作到下一级队列中去。这一做法主要是为了防止过多的交互型工作造成饥饿问题，使得长工作无法被执行；同时也防止一些进程通过添加I/O操作来愚弄调度程序。</li>
<li>经过一段时间<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span>，就将系统中的所有工作重新加入到最高级队列。这样可以防止出现饥饿问题，同时也能够使得进程的工作类型从CPU密集型变成交互型时，调度系统能够正确处理。对于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span>的值应当合理设置，太大会造成饥饿问题，太小则会影响交互型工作的执行。</li>
</ul>
<h3 id="比例份额算法"><a class="markdownIt-Anchor" href="#比例份额算法"></a> 比例份额算法</h3>
<p>比例份额（Proportional-share）调度算法的核心思想是确保每个工作获得一定比例的CPU时间，而不是优化周转时间和响应时间。</p>
<h4 id="彩票调度算法"><a class="markdownIt-Anchor" href="#彩票调度算法"></a> 彩票调度算法</h4>
<p>彩票调度（lottery scheduling）算法利用了随机性，这种方法运行速度快、占用空间少、同时也可以避免一些奇怪的边界情况。在彩票调度算法中，一个进程拥有的彩票数占总彩票数的百分比就是它占用资源的份额。拥有的彩票越多，则优先执行的可能性越大。</p>
<p>为了增加调度的灵活性，调度算法还提供了一些机制，以不同且有效的方式来调度彩票：</p>
<ul>
<li>彩票货币：用户可以按照不同的比例将自己持有的彩票分给不同的任务。调度系统会按照每个用户所拥有的彩票份额，自动计算出这些任务所对应的全局彩票份额。</li>
<li>彩票转让：一个进程可以临时将自己的彩票转移给另一个进程。</li>
<li>彩票通胀：一个进程可以临时提升或降低自己拥有的彩票数量。这种机制适用于进程之间相互信任的环境，如果在竞争环境中则可能会使得恶意进程占用全部资源。</li>
</ul>
<p>彩票调度算法的实现很简单，只需要一个随机数生成器来选择中奖彩票，一个链表记录系统中所有的进程，并记录所有彩票的总数。在任务调度时，首先选择出一个随机数（小于彩票总数），并将变量counter置为0。之后会从前向后遍历进程链表，并将每个进程所拥有的彩票数累加给counter，直到counter的值大于选出的随机数。</p>
<p>彩票算法也存在一些问题：首先是当工作执行时间很短时，可能无法做到公平调度，只有当执行很多时间片时才能够期望取得比较公平的调度结果；另一个问题是系统的运行严重依赖于彩票的分配。</p>
<h4 id="步长调度算法"><a class="markdownIt-Anchor" href="#步长调度算法"></a> 步长调度算法</h4>
<p>步长调度（stride scheduling）算法是一种确定性的公平分配算法。系统中的每个工作都有自己的步长，与彩票调度算法相对应的是，步长与票数值成反比，即步长越小的进程占用资源的份额越高。系统为每一个进程维护了一个行程值，用于记录它的总体进展。</p>
<p>调度的基本思路很简单：当需要调度时，选择目前拥有最小行程值的进程，并且在运行之后将该进程的形成值增加一个步长。如果最小行程值的进程有多个，则可以任意选择。</p>
<p>与彩票调度算法相比，步长算法可以在每个调度周期内做到完全正确，但是需要为每个进程维护一个全局状态。同时，对于中间加入的进程，步长调度算法需要合理地设置它的行程值，而彩票调度算法只需要使用它的票数去更新全局的总票数即可。</p>
<h3 id="多处理器调度"><a class="markdownIt-Anchor" href="#多处理器调度"></a> 多处理器调度</h3>
<h4 id="多处理器架构的影响"><a class="markdownIt-Anchor" href="#多处理器架构的影响"></a> 多处理器架构的影响</h4>
<p>对于多个CPU的计算机架构，每个CPU有自己的独立缓存，同时也可能有一块多个CPU共享的缓存，并且它们共享内存（参考计算机组成原理相关部分）。这就导致了一些不同于单CPU调度系统的地方：</p>
<ul>
<li>需要考虑读写数据时的缓存一致性问题，通常这一问题由硬件解决。</li>
<li>在跨CPU访问共享数据时，需要使用互斥原语才能保证其正确性。</li>
<li>需要考虑缓存亲和性，尽可能将同一个进程保持在同一个CPU上</li>
</ul>
<h4 id="单队列调度"><a class="markdownIt-Anchor" href="#单队列调度"></a> 单队列调度</h4>
<p>单队列多处理器调度（Single Queue Multiprocessor Scheduling, SQMS）算法将所有需要调度的工作放入一个单独的队列中。</p>
<p>优点：可以将单CPU中的一些调度方式直接用于多CPU系统，实现简单</p>
<p>缺点：</p>
<ul>
<li>缺乏可扩展性：需要在代码中加锁来保证原子性，这会带来性能损失，尤其是当CPU数目增加时。</li>
<li>缓存亲和性差：每个工作可能会不断地在不同的CPU中间执行，所以缓存亲和性较差。为了解决这一问题，可以引入一些亲和度机制。</li>
</ul>
<h4 id="多队列调度"><a class="markdownIt-Anchor" href="#多队列调度"></a> 多队列调度</h4>
<p>多队列多处理器调度（Multi-Queue Multiprocessor Scheduling, MQMS）算法包含了多个调度队列，每个队列可以使用不同的调度规则。当一个工作进入系统时，会按照一定的启发式规则将其放入某个调度队列。这样使得每个CPU的调度相互独立。</p>
<p>优点：具有可扩展性与良好的缓存亲和度。</p>
<p>缺点：可能会形成负载不均，通过工作的跨CPU迁移可以缓解这一现象。</p>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<ol>
<li>Operating Systems: Three Easy Pieces</li>
</ol>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>数据分析-datetime</title>
    <url>/2021/01/09/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-datetime/</url>
    <content><![CDATA[<h1 id="datetime数据类型"><a class="markdownIt-Anchor" href="#datetime数据类型"></a> datetime数据类型</h1>
<h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1>
<p>python自带的datetime模块包含了一些处理时间的数据类型和函数。其中，datetime模块中包含的数据类型如下：</p>
<ul>
<li>date：存储由年、月、日组成的日期</li>
<li>time：存储由小时、分钟、秒、微秒组成的时间</li>
<li>datetime：同时存储date和time</li>
<li>timedelta：表示两个datetime之间的差值</li>
</ul>
<a id="more"></a>
<p>下面为一些使用示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">now=datetime.datetime.now() <span class="comment">#获取这段代码运行时的时间</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">now <span class="comment">#获取的是一个datetime数据类型</span></span><br></pre></td></tr></table></figure>
<pre><code>datetime.datetime(2021, 1, 9, 15, 47, 27, 207732)
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(now.year, <span class="comment">#查看datetime中的年</span></span><br><span class="line">    now.month, <span class="comment">#查看datetime中的月份</span></span><br><span class="line">    now.day, <span class="comment">#查看datetime中的日</span></span><br><span class="line">    now.hour,<span class="comment">#查看datetime中的小时</span></span><br><span class="line">    now.minute, <span class="comment">#查看datetime中的分钟</span></span><br><span class="line">    now.second, <span class="comment">#查看datetime中的秒</span></span><br><span class="line">    now.microsecond) <span class="comment">#查看datetime中的微秒</span></span><br></pre></td></tr></table></figure>
<pre><code>2021 1 9 15 47 27 207732
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">now.date() <span class="comment">#查看datetime中的date部分</span></span><br></pre></td></tr></table></figure>
<pre><code>datetime.date(2021, 1, 9)
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">now.time() <span class="comment">#查看datetime中的time部分</span></span><br></pre></td></tr></table></figure>
<pre><code>datetime.time(15, 47, 27, 207732)
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">delta=datetime.datetime(<span class="number">2011</span>,<span class="number">1</span>,<span class="number">7</span>)-datetime.datetime(<span class="number">2008</span>,<span class="number">6</span>,<span class="number">24</span>,<span class="number">8</span>,<span class="number">15</span>) <span class="comment">#计算两个datetime的时间差</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(delta.days, <span class="comment">#时间差中的天数</span></span><br><span class="line">    delta.seconds) <span class="comment">#时间差中的秒数（不够一天）</span></span><br></pre></td></tr></table></figure>
<pre><code>926 56700
</code></pre>
<h2 id="字符串与datetime的转换"><a class="markdownIt-Anchor" href="#字符串与datetime的转换"></a> 字符串与datetime的转换</h2>
<p>一个datetime类型的变量，可以通过str或者strftime函数将其转换为字符串，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str(now) <span class="comment">#将datetime转换为字符串</span></span><br></pre></td></tr></table></figure>
<pre><code>'2021-01-09 15:47:27.207732'
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">now.strftime(<span class="string">&#x27;%Y-%m-%d&#x27;</span>) <span class="comment">#按照给定的格式，将datetime转换为字符串</span></span><br></pre></td></tr></table></figure>
<pre><code>'2021-01-09'
</code></pre>
<p>在上述操作中，可以使用的格式化符号包括：</p>
<ul>
<li>%Y：4位数表示的年份</li>
<li>%y：2位数表示的年份</li>
<li>%m：2位数表示的月份（01至12）</li>
<li>%d：2位数表示的日期（01至31）</li>
<li>%H：24小时制小时（00至23）</li>
<li>%I：12小时制小时（01至12）</li>
<li>%M：2位数表示的分钟（00至59）</li>
<li>%S：秒数（00至61，60和61为了表示时间调整时的重复计秒）</li>
<li>%w：表示周日到周六（0至6，0为周日）</li>
<li>%U：表示每一年的星期数（00至53，周日作为每周的第一天，在第一个周日之前的所有天数被认为是第0周）</li>
<li>%W：与%U类似，但是将周一作为每周的第一天</li>
<li>%z：UTC时区的偏移量，如果没有设置时区则为空</li>
<li>%F：’%Y-%m-%d’格式的简写</li>
<li>%D：’%m/%d/%y’格式的简写</li>
<li>%a：简写的星期名称</li>
<li>%A：全拼的星期名称</li>
<li>%b：简写的月份名称</li>
<li>%B：全拼的月份名称</li>
<li>%c：输入全部的日期和时间，例如&quot;Tue 01 May 2012 04:20:57 PM&quot;</li>
<li>%p：输出时间对应的是AM或PM</li>
<li>%x：输出’month/day/year’格式的时间</li>
<li>%X：输出’hour:min:sec’格式的时间</li>
</ul>
<p>同时，datetime也提供了将字符串转换为datetime类型变量的函数，这一函数接收两个字符串作为参数，第一个字符串表示时间，第二个字符串表示第一个字符串对应的时间格式：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">datetime.datetime.strptime(<span class="string">&#x27;2011-01-03&#x27;</span>, <span class="string">&#x27;%Y-%m-%d&#x27;</span>) <span class="comment">#需要同时传入一个字符串并且传入字符串对应的时间格式</span></span><br></pre></td></tr></table></figure>
<pre><code>datetime.datetime(2011, 1, 3, 0, 0)
</code></pre>
<p>也可以借助第三方库dateutil，完成字符串自动转换为datetime的操作。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> dateutil.parser <span class="keyword">import</span> parse</span><br><span class="line">parse(<span class="string">&#x27;Jan 31, 1997 10:45 PM&#x27;</span>)</span><br></pre></td></tr></table></figure>
<pre><code>datetime.datetime(1997, 1, 31, 22, 45)
</code></pre>
<p>Pandas库中包含了一个to_datetime函数，可以将一个包含时间格式字符串的list转换为datetime格式的index：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">pd.to_datetime([<span class="string">&#x27;7/6/2011&#x27;</span>, <span class="string">&#x27;8/6/2011&#x27;</span>])</span><br></pre></td></tr></table></figure>
<pre><code>DatetimeIndex(['2011-07-06', '2011-08-06'], dtype='datetime64[ns]', freq=None)
</code></pre>
<h1 id="时间序列"><a class="markdownIt-Anchor" href="#时间序列"></a> 时间序列</h1>
<h2 id="简介-2"><a class="markdownIt-Anchor" href="#简介-2"></a> 简介</h2>
<p>在Pandas的数据格式中，可以使用一系列字符串或datetime类型的变量，来生成一个TimeSeries类型的变量。例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ts = pd.Series(np.random.randn(<span class="number">6</span>), index=[datetime.datetime(<span class="number">2011</span>, <span class="number">1</span>, <span class="number">2</span>), datetime.datetime(<span class="number">2011</span>, <span class="number">1</span>, <span class="number">5</span>), datetime.datetime(<span class="number">2011</span>, <span class="number">1</span>, <span class="number">7</span>),datetime.datetime(<span class="number">2011</span>, <span class="number">2</span>, <span class="number">8</span>), datetime.datetime(<span class="number">2011</span>, <span class="number">1</span>, <span class="number">10</span>), datetime.datetime(<span class="number">2011</span>, <span class="number">2</span>, <span class="number">12</span>)])</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ts</span><br></pre></td></tr></table></figure>
<pre><code>2011-01-02   -1.516700
2011-01-05   -0.509528
2011-01-07    0.484152
2011-02-08   -1.096136
2011-01-10    0.721982
2011-02-12   -0.789547
dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ts.index <span class="comment">#查看index的属性，可以看到此时为datetime类型的index</span></span><br></pre></td></tr></table></figure>
<pre><code>DatetimeIndex(['2011-01-02', '2011-01-05', '2011-01-07', '2011-02-08',
               '2011-01-10', '2011-02-12'],
              dtype='datetime64[ns]', freq=None)
</code></pre>
<h2 id="index操作"><a class="markdownIt-Anchor" href="#index操作"></a> index操作</h2>
<p>如果一个DataFrame或Series使用了DatetimeIndex，那么可以使用一些特殊的index方式：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ts[<span class="string">&#x27;1/10/2011&#x27;</span>] <span class="comment">#传入一个可以转换为时间的字符串</span></span><br></pre></td></tr></table></figure>
<pre><code>2011-01-10    0.721982
dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ts[<span class="string">&#x27;20110110&#x27;</span>] <span class="comment">#原理同上</span></span><br></pre></td></tr></table></figure>
<pre><code>2011-01-10    0.721982
dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ts[<span class="string">&#x27;2011&#x27;</span>] <span class="comment">#使用年份进行索引</span></span><br></pre></td></tr></table></figure>
<pre><code>2011-01-02   -1.516700
2011-01-05   -0.509528
2011-01-07    0.484152
2011-02-08   -1.096136
2011-01-10    0.721982
2011-02-12   -0.789547
dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ts[<span class="string">&#x27;2011-01&#x27;</span>] <span class="comment">#使用年份和月份的结合进行索引</span></span><br></pre></td></tr></table></figure>
<pre><code>2011-01-02   -1.516700
2011-01-05   -0.509528
2011-01-07    0.484152
2011-01-10    0.721982
dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ts[<span class="string">&#x27;20110107&#x27;</span>:] <span class="comment">#切片操作时也可以使用表示时间的字符串</span></span><br></pre></td></tr></table></figure>
<pre><code>2011-01-07    0.484152
2011-02-08   -1.096136
2011-01-10    0.721982
2011-02-12   -0.789547
dtype: float64
</code></pre>
<h2 id="时间序列的生成"><a class="markdownIt-Anchor" href="#时间序列的生成"></a> 时间序列的生成</h2>
<p>Pandas中的函数data_range()函数可以生成一个时间序列。例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.date_range(<span class="string">&#x27;4/1/2012&#x27;</span>, <span class="string">&#x27;6/1/2012&#x27;</span>) <span class="comment">#传入两个时间，一个代表开始时间，另一个代表结束时间，默认的间隔为1天</span></span><br></pre></td></tr></table></figure>
<pre><code>DatetimeIndex(['2012-04-01', '2012-04-02', '2012-04-03', '2012-04-04',
               '2012-04-05', '2012-04-06', '2012-04-07', '2012-04-08',
               '2012-04-09', '2012-04-10', '2012-04-11', '2012-04-12',
               '2012-04-13', '2012-04-14', '2012-04-15', '2012-04-16',
               '2012-04-17', '2012-04-18', '2012-04-19', '2012-04-20',
               '2012-04-21', '2012-04-22', '2012-04-23', '2012-04-24',
               '2012-04-25', '2012-04-26', '2012-04-27', '2012-04-28',
               '2012-04-29', '2012-04-30', '2012-05-01', '2012-05-02',
               '2012-05-03', '2012-05-04', '2012-05-05', '2012-05-06',
               '2012-05-07', '2012-05-08', '2012-05-09', '2012-05-10',
               '2012-05-11', '2012-05-12', '2012-05-13', '2012-05-14',
               '2012-05-15', '2012-05-16', '2012-05-17', '2012-05-18',
               '2012-05-19', '2012-05-20', '2012-05-21', '2012-05-22',
               '2012-05-23', '2012-05-24', '2012-05-25', '2012-05-26',
               '2012-05-27', '2012-05-28', '2012-05-29', '2012-05-30',
               '2012-05-31', '2012-06-01'],
              dtype='datetime64[ns]', freq='D')
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.date_range(start=<span class="string">&#x27;4/1/2012&#x27;</span>, periods=<span class="number">20</span>) <span class="comment">#设置开始时间和天数</span></span><br></pre></td></tr></table></figure>
<pre><code>DatetimeIndex(['2012-04-01', '2012-04-02', '2012-04-03', '2012-04-04',
               '2012-04-05', '2012-04-06', '2012-04-07', '2012-04-08',
               '2012-04-09', '2012-04-10', '2012-04-11', '2012-04-12',
               '2012-04-13', '2012-04-14', '2012-04-15', '2012-04-16',
               '2012-04-17', '2012-04-18', '2012-04-19', '2012-04-20'],
              dtype='datetime64[ns]', freq='D')
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.date_range(end=<span class="string">&#x27;6/1/2012&#x27;</span>, periods=<span class="number">20</span>) <span class="comment">#设置结束时间和天数</span></span><br></pre></td></tr></table></figure>
<pre><code>DatetimeIndex(['2012-05-13', '2012-05-14', '2012-05-15', '2012-05-16',
               '2012-05-17', '2012-05-18', '2012-05-19', '2012-05-20',
               '2012-05-21', '2012-05-22', '2012-05-23', '2012-05-24',
               '2012-05-25', '2012-05-26', '2012-05-27', '2012-05-28',
               '2012-05-29', '2012-05-30', '2012-05-31', '2012-06-01'],
              dtype='datetime64[ns]', freq='D')
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.date_range(<span class="string">&#x27;1/1/2000&#x27;</span>, <span class="string">&#x27;1/3/2000 23:59&#x27;</span>, freq=<span class="string">&#x27;4h&#x27;</span>) <span class="comment">#通过设置freq参数表示时间序列的间隔</span></span><br></pre></td></tr></table></figure>
<pre><code>DatetimeIndex(['2000-01-01 00:00:00', '2000-01-01 04:00:00',
               '2000-01-01 08:00:00', '2000-01-01 12:00:00',
               '2000-01-01 16:00:00', '2000-01-01 20:00:00',
               '2000-01-02 00:00:00', '2000-01-02 04:00:00',
               '2000-01-02 08:00:00', '2000-01-02 12:00:00',
               '2000-01-02 16:00:00', '2000-01-02 20:00:00',
               '2000-01-03 00:00:00', '2000-01-03 04:00:00',
               '2000-01-03 08:00:00', '2000-01-03 12:00:00',
               '2000-01-03 16:00:00', '2000-01-03 20:00:00'],
              dtype='datetime64[ns]', freq='4H')
</code></pre>
<p>freq参数中可以使用的字母符号如下但不限于：</p>
<ul>
<li>D：日历天（包含周末）</li>
<li>B：工作日（不含周末）</li>
<li>H：每小时</li>
<li>T or min：每分钟</li>
<li>S：每秒钟</li>
<li>L or ms：毫秒（1/1000秒）</li>
<li>U：微秒</li>
<li>M：每个月最后一天</li>
<li>BM：每个月的最后一个工作日</li>
<li>MS：每个月的第一天</li>
<li>BMS：每个月的第一个工作日</li>
<li>W-MON，W-TUE，……：每周的周几</li>
<li>WOM-1MON，WOM-2MON，……：每个月的第几个周几</li>
<li>……</li>
</ul>
<h2 id="时移"><a class="markdownIt-Anchor" href="#时移"></a> 时移</h2>
<p>shift函数可以将数据对应的时间上移或下移。例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ts.shift(<span class="number">2</span>) <span class="comment">#默认情况下保持index不变，将数据进行上下移动</span></span><br></pre></td></tr></table></figure>
<pre><code>2011-01-02         NaN
2011-01-05         NaN
2011-01-07   -1.516700
2011-02-08   -0.509528
2011-01-10    0.484152
2011-02-12   -1.096136
dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ts.shift(<span class="number">2</span>,freq=<span class="string">&#x27;M&#x27;</span>) <span class="comment">#传入freq参数，则可以对index进行修改，但是数据保持不变</span></span><br></pre></td></tr></table></figure>
<pre><code>2011-02-28   -1.516700
2011-02-28   -0.509528
2011-02-28    0.484152
2011-03-31   -1.096136
2011-02-28    0.721982
2011-03-31   -0.789547
dtype: float64
</code></pre>
<p>Pandas中的时间也可以用offsets变量做修改：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">now+<span class="number">3</span>*pd.tseries.offsets.Day()</span><br></pre></td></tr></table></figure>
<pre><code>Timestamp('2021-01-12 15:47:27.207732')
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">now+pd.tseries.offsets.MonthEnd(<span class="number">2</span>)</span><br></pre></td></tr></table></figure>
<pre><code>Timestamp('2021-02-28 15:47:27.207732')
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.tseries.offsets.MonthEnd(<span class="number">2</span>).rollback(now) </span><br></pre></td></tr></table></figure>
<pre><code>Timestamp('2020-12-31 15:47:27.207732')
</code></pre>
<h1 id="时区"><a class="markdownIt-Anchor" href="#时区"></a> 时区</h1>
<p>Python的第三方库pytz包含了时区的数据库，可以用它来设置时间的时区。使用pytz中的timezone函数，可以生成一个表示时区的变量。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pytz</span><br><span class="line">tz = pytz.timezone(<span class="string">&#x27;US/Eastern&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>在默认情况下，Pandas生成的时间序列是没有时区的。如果想设置时区，需要传入额外参数tz。例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.date_range(<span class="string">&#x27;3/9/2012 9:30&#x27;</span>, periods=<span class="number">10</span>, freq=<span class="string">&#x27;D&#x27;</span>, tz=<span class="string">&#x27;UTC&#x27;</span>)</span><br></pre></td></tr></table></figure>
<pre><code>DatetimeIndex(['2012-03-09 09:30:00+00:00', '2012-03-10 09:30:00+00:00',
               '2012-03-11 09:30:00+00:00', '2012-03-12 09:30:00+00:00',
               '2012-03-13 09:30:00+00:00', '2012-03-14 09:30:00+00:00',
               '2012-03-15 09:30:00+00:00', '2012-03-16 09:30:00+00:00',
               '2012-03-17 09:30:00+00:00', '2012-03-18 09:30:00+00:00'],
              dtype='datetime64[ns, UTC]', freq='D')
</code></pre>
<p>使用tz_localize函数可以将一个没有时区的时间序列转换为一个有时区的时间序列。这样，在使用tz_convert函数对这个时间序列转换时区的时候，则会指定UTC作为时区的基准。例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ts_utc = ts.tz_localize(<span class="string">&#x27;UTC&#x27;</span>) <span class="comment">#tz_localize中的时区可以任意设定，在设定完成之后便作为时区的基准</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ts_utc</span><br></pre></td></tr></table></figure>
<pre><code>2011-01-02 00:00:00+00:00   -1.516700
2011-01-05 00:00:00+00:00   -0.509528
2011-01-07 00:00:00+00:00    0.484152
2011-02-08 00:00:00+00:00   -1.096136
2011-01-10 00:00:00+00:00    0.721982
2011-02-12 00:00:00+00:00   -0.789547
dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ts_utc.tz_convert(<span class="string">&#x27;US/Eastern&#x27;</span>)</span><br></pre></td></tr></table></figure>
<pre><code>2011-01-01 19:00:00-05:00   -1.516700
2011-01-04 19:00:00-05:00   -0.509528
2011-01-06 19:00:00-05:00    0.484152
2011-02-07 19:00:00-05:00   -1.096136
2011-01-09 19:00:00-05:00    0.721982
2011-02-11 19:00:00-05:00   -0.789547
dtype: float64
</code></pre>
<p>当创建一个timestamp类型变量的时候，可以直接传入时区。例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.Timestamp(<span class="string">&#x27;2011-03-12 04:00&#x27;</span>, tz=<span class="string">&#x27;Europe/Moscow&#x27;</span>)</span><br></pre></td></tr></table></figure>
<pre><code>Timestamp('2011-03-12 04:00:00+0300', tz='Europe/Moscow')
</code></pre>
<p>如果两个不同时区的时间序列进行合并，那么合并的结果会被自动转换为UTC时区。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ts.tz_localize(<span class="string">&#x27;Europe/London&#x27;</span>)+ts.tz_localize(<span class="string">&#x27;Asia/Shanghai&#x27;</span>)</span><br></pre></td></tr></table></figure>
<pre><code>2011-01-01 16:00:00+00:00   NaN
2011-01-02 00:00:00+00:00   NaN
2011-01-04 16:00:00+00:00   NaN
2011-01-05 00:00:00+00:00   NaN
2011-01-06 16:00:00+00:00   NaN
2011-01-07 00:00:00+00:00   NaN
2011-01-09 16:00:00+00:00   NaN
2011-01-10 00:00:00+00:00   NaN
2011-02-07 16:00:00+00:00   NaN
2011-02-08 00:00:00+00:00   NaN
2011-02-11 16:00:00+00:00   NaN
2011-02-12 00:00:00+00:00   NaN
dtype: float64
</code></pre>
<h1 id="时间周期"><a class="markdownIt-Anchor" href="#时间周期"></a> 时间周期</h1>
<h2 id="period类和periodindex类"><a class="markdownIt-Anchor" href="#period类和periodindex类"></a> Period类和PeriodIndex类</h2>
<p>Pandas中有一个period类，可以创建一个period类型的变量，对应一个时间跨度。例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p = pd.Period(<span class="number">2007</span>, freq=<span class="string">&#x27;A-DEC&#x27;</span>) <span class="comment">#表示时间跨度为2017全年</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p</span><br></pre></td></tr></table></figure>
<pre><code>Period('2007', 'A-DEC')
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p+<span class="number">5</span> <span class="comment">#对一个period类型变量做加减法，会相应地在这个时间周期的基础上对时间进行调整</span></span><br></pre></td></tr></table></figure>
<pre><code>Period('2012', 'A-DEC')
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.Period(<span class="number">2027</span>, freq=<span class="string">&#x27;A-DEC&#x27;</span>)-p</span><br></pre></td></tr></table></figure>
<pre><code>&lt;20 * YearEnds: month=12&gt;
</code></pre>
<p>使用period_range函数，可以生成一个PeriodIndex类型的变量，是一组具有规则的时间序列：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">rng = pd.period_range(<span class="string">&#x27;1/1/2000&#x27;</span>, <span class="string">&#x27;6/30/2000&#x27;</span>, freq=<span class="string">&#x27;M&#x27;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">rng</span><br></pre></td></tr></table></figure>
<pre><code>PeriodIndex(['2000-01', '2000-02', '2000-03', '2000-04', '2000-05', '2000-06'], dtype='period[M]', freq='M')
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.Series(np.random.randn(<span class="number">6</span>), index=rng)</span><br></pre></td></tr></table></figure>
<pre><code>2000-01    1.155621
2000-02   -0.949274
2000-03    1.474354
2000-04    1.653150
2000-05    0.976651
2000-06    1.849326
Freq: M, dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.PeriodIndex([<span class="string">&#x27;2001Q3&#x27;</span>, <span class="string">&#x27;2002Q2&#x27;</span>, <span class="string">&#x27;2003Q1&#x27;</span>], freq=<span class="string">&#x27;Q-DEC&#x27;</span>) <span class="comment">#用字符串表示的时间序列也可以用于构造periodindex类型的变量</span></span><br></pre></td></tr></table></figure>
<pre><code>PeriodIndex(['2001Q3', '2002Q2', '2003Q1'], dtype='period[Q-DEC]', freq='Q-DEC')
</code></pre>
<h2 id="period和periodindex时间频率的转换"><a class="markdownIt-Anchor" href="#period和periodindex时间频率的转换"></a> Period和PeriodIndex时间频率的转换</h2>
<p>使用asfreq函数，可以对一个Period或PeriodIndex类型的变量转换时间频率。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p = pd.Period(<span class="string">&#x27;2007&#x27;</span>, freq=<span class="string">&#x27;A-DEC&#x27;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p</span><br></pre></td></tr></table></figure>
<pre><code>Period('2007', 'A-DEC')
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p.asfreq(<span class="string">&#x27;M&#x27;</span>,how=<span class="string">&#x27;start&#x27;</span>) <span class="comment">#将时间跨度变小</span></span><br></pre></td></tr></table></figure>
<pre><code>Period('2007-01', 'M')
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p.asfreq(<span class="string">&#x27;A-JUN&#x27;</span>) <span class="comment">#将时间跨度变大，之前的那个时间包含在这个更大的时间跨度内</span></span><br></pre></td></tr></table></figure>
<pre><code>Period('2008', 'A-JUN')
</code></pre>
<h2 id="时间序列与时间周期的互相转换"><a class="markdownIt-Anchor" href="#时间序列与时间周期的互相转换"></a> 时间序列与时间周期的互相转换</h2>
<p>使用to_period函数，可以把一个时间序列timestamp转换为一个时间周期PeriodIndex。在转换时，会将原来时间序列中的时间自动划分到它所在的那个时间周期内。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">rng = pd.date_range(<span class="string">&#x27;1/1/2000&#x27;</span>, periods=<span class="number">3</span>, freq=<span class="string">&#x27;M&#x27;</span>)</span><br><span class="line">ts = pd.Series(np.random.randn(<span class="number">3</span>), index=rng)</span><br><span class="line">pts = ts.to_period() <span class="comment">#如果没有使用额外参数，则自动选取合适的时间周期</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pts</span><br></pre></td></tr></table></figure>
<pre><code>2000-01    1.739193
2000-02   -0.201334
2000-03   -0.076694
Freq: M, dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pts2=ts.to_period(<span class="string">&#x27;D&#x27;</span>)</span><br><span class="line">pts2</span><br></pre></td></tr></table></figure>
<pre><code>2000-01-31    1.739193
2000-02-29   -0.201334
2000-03-31   -0.076694
Freq: D, dtype: float64
</code></pre>
<p>使用to_timestamp()函数，可以将PeriodIndex转换回timestamp。例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pts.to_timestamp(how=<span class="string">&#x27;end&#x27;</span>)</span><br></pre></td></tr></table></figure>
<pre><code>2000-01-31 23:59:59.999999999    1.739193
2000-02-29 23:59:59.999999999   -0.201334
2000-03-31 23:59:59.999999999   -0.076694
Freq: M, dtype: float64
</code></pre>
<h1 id="时间序列相关的统计"><a class="markdownIt-Anchor" href="#时间序列相关的统计"></a> 时间序列相关的统计</h1>
<p>以时间序列作为index的series或dataframe变量，可以调用pandas中一些相关的统计函数做一些相关的统计数据。</p>
<p>可以使用的相关函数包括：</p>
<ul>
<li>rolling_count：返回移动窗口的非NaN数目</li>
<li>rolling_sum：计算移动窗口内的和</li>
<li>rolling_mean：计算移动窗口内的平均值</li>
<li>rolling_median：计算移动窗口内的中位数</li>
<li>rolling_var, rolling_std：计算移动窗口内的方差、标准差</li>
<li>rolling_skew, rolling_kurt：计算移动窗口内的偏度、峰度</li>
<li>rolling_min, rolling_max：计算移动窗口内的最值</li>
<li>rolling_quantile：计算移动窗口内的某个百分位数</li>
<li>rolling_corr, rolling_cov：计算移动窗口内的协方差和相关系数</li>
<li>rolling_apply：将移动窗口内的数值用到某个函数内</li>
<li>ewma：指数权重的移动平均</li>
<li>ewmvar, ewmstd：指数权重的移动方差、标准差</li>
<li>ewmcorr, ewmcov：指数权重的相关系数、协方差</li>
</ul>
<p>同时，对于一个以时间序列为index的series或dataframe，可以对其调用plot函数来做图。横坐标会被自动设置为时间序列中的值。</p>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<ol>
<li>Python for Data Analysis, 2nd Edition.</li>
</ol>
]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>数据分析</tag>
      </tags>
  </entry>
  <entry>
    <title>数据分析-matplotlib</title>
    <url>/2021/01/09/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-matplotlib/</url>
    <content><![CDATA[<h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1>
<h2 id="常用网址"><a class="markdownIt-Anchor" href="#常用网址"></a> 常用网址</h2>
<p>官网主页：<span class="exturl" data-url="aHR0cHM6Ly9tYXRwbG90bGliLm9yZy9pbmRleC5odG1s">https://matplotlib.org/index.html<i class="fa fa-external-link-alt"></i></span> （文中一些函数的具体用法可以在这一页面内查找其详细用法）</p>
<p>教程：<span class="exturl" data-url="aHR0cHM6Ly9tYXRwbG90bGliLm9yZy90dXRvcmlhbHMvaW5kZXguaHRtbA==">https://matplotlib.org/tutorials/index.html<i class="fa fa-external-link-alt"></i></span> （提供了一些常见图像的绘图示例）</p>
<p>示例库：<span class="exturl" data-url="aHR0cHM6Ly9tYXRwbG90bGliLm9yZy9nYWxsZXJ5L2luZGV4Lmh0bWw=">https://matplotlib.org/gallery/index.html<i class="fa fa-external-link-alt"></i></span> （包含了更多种类的绘图示例）</p>
<a id="more"></a>
<h2 id="图像结构"><a class="markdownIt-Anchor" href="#图像结构"></a> 图像结构</h2>
<p>下图所示为matplotlib中的一副图像的结构。可以看到整个图被称为一个<strong>figure</strong>，可以把它看作是一张画布。在figure内，又可以分布着一个或者多个<strong>Axes</strong>（坐标系），相当于是画布上的一个个区域。而一个Axes又是由很多个不同的<strong>元素</strong>组成的。</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210109161129.jpg" alt="图像结构" /></p>
<h2 id="面向对象作图"><a class="markdownIt-Anchor" href="#面向对象作图"></a> 面向对象作图</h2>
<p>Matplotlib提供了两种接口：</p>
<ul>
<li>基于Matlab的：自动创建和管理图和坐标系；</li>
<li>基于面向对象的：显式创建图和坐标系。</li>
</ul>
<p>基于Matlab的方法由matplotlib.pyplot提供，这样绘图比较简单，但是却容易混乱。因此，为了作图的高效，推荐以面向对象的思想进行作图。</p>
<p>Matplotlib中的对象共分为两大类（可参照图像结构）：</p>
<ul>
<li>容器类：图(figure)、坐标系(axes)、坐标轴(axis)、刻度(tick)。</li>
<li>基础类：线(line)、点(marker)、文字(text)、图例(legend)、网格(grid)、标题(title)。</li>
</ul>
<p>面向对象的作图方式大致可以分为下面三个步骤：</p>
<ol>
<li>创建figure实例</li>
<li>在figure上创建axes</li>
<li>在axes上添加基础类对象</li>
</ol>
<h2 id="作图步骤"><a class="markdownIt-Anchor" href="#作图步骤"></a> 作图步骤</h2>
<h3 id="创建容器类对象"><a class="markdownIt-Anchor" href="#创建容器类对象"></a> 创建容器类对象</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment">#方法1：同时创建figure和axes</span></span><br><span class="line">fig, axes=plt.subplots(<span class="number">2</span>,<span class="number">3</span>) <span class="comment">#创建一幅图以及其中的坐标系，其中subplots函数可以传入两个正整数（可选，如果不传入则默认为1），代表在竖向和横向上将figure均分成若干份。</span></span><br><span class="line">ax1=axes[<span class="number">0</span>][<span class="number">1</span>] <span class="comment">#可以通过索引来获得其中一个坐标系</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#注意：如果两个参数都为1，那么axes就直接是一个坐标系；如果subplots中的某一个或者两个参数不为1，那么axes就是一个一维或者二维的list，list中的元素即为对应的坐标系。</span></span><br><span class="line"><span class="comment">#错误操作1：</span></span><br><span class="line"><span class="comment">#fig, axes=plt.subplots(1,1)</span></span><br><span class="line"><span class="comment">#ax1=axes[0] axes已经是一个object，不能再索引</span></span><br><span class="line"><span class="comment">#错误操作2：</span></span><br><span class="line"><span class="comment">#fig, axes=plt.subplots(1,5)</span></span><br><span class="line"><span class="comment">#ax1=axes[0][0] axes是一个一维的list，不能索引两次</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210109161141.png" alt="png" /></p>
<p>在上图中，我们可以看到子图的一些内容有重叠，这是因为默认情况下<code>constrained_layout</code>参数为<code>False</code>。因此绘图时不会自动对图像的元素进行位置和大小的调整，从而导致子图的一些元素放置在了subplot之外。</p>
<p>如果要避免这一现象，可以在创建subplot的时候传入<code>constrained_layout=True</code>，这样便会自动对图像元素进行调整，从而保证图像内容可以全部处于subplot之内。更加详细的说明参考https://matplotlib.org/tutorials/intermediate/constrainedlayout_guide.html#sphx-glr-tutorials-intermediate-constrainedlayout-guide-py</p>
<p>当然，也可以直接通过<code>plt.rcParams['figure.constrained_layout.use'] = True</code>这一语句完成全局设置，这样的话之后创建的每一幅图都会自动调整图像布局。</p>
<p>另外一种类似的用法叫做Tight Layout：<span class="exturl" data-url="aHR0cHM6Ly9tYXRwbG90bGliLm9yZy90dXRvcmlhbHMvaW50ZXJtZWRpYXRlL3RpZ2h0X2xheW91dF9ndWlkZS5odG1sI3NwaHgtZ2xyLXR1dG9yaWFscy1pbnRlcm1lZGlhdGUtdGlnaHQtbGF5b3V0LWd1aWRlLXB5">https://matplotlib.org/tutorials/intermediate/tight_layout_guide.html#sphx-glr-tutorials-intermediate-tight-layout-guide-py<i class="fa fa-external-link-alt"></i></span> 。但是这种用法相比于Constrained Layout更容易出错，不推荐使用。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">fig, axes=plt.subplots(<span class="number">2</span>,<span class="number">3</span>,constrained_layout=<span class="literal">True</span>) </span><br></pre></td></tr></table></figure>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210109161205.png" alt="png" /></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#方法2：将figure和axes的创建分开</span></span><br><span class="line"><span class="comment">#figure更细致的划分需要用到GridSpec，参考https://matplotlib.org/tutorials/intermediate/gridspec.html#sphx-glr-tutorials-intermediate-gridspec-py</span></span><br><span class="line">fig=plt.figure(num=<span class="number">1</span>,figsize=(<span class="number">4</span>,<span class="number">4</span>)) <span class="comment">#相当于创建一张白纸</span></span><br><span class="line">ax1=fig.add_subplot(<span class="number">221</span>) <span class="comment">#前两个数字代表分成m*n的小块，第三个数字代表axes在第几个小块中绘制</span></span><br><span class="line">ax2=fig.add_subplot(<span class="number">222</span>) </span><br><span class="line">ax3=fig.add_subplot(<span class="number">111</span>) <span class="comment">#后添加的axes会覆盖之前已经添加的axes，不受之前add_subplot()函数的影响</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210109161214.png" alt="png" /></p>
<h3 id="添加基础类对象"><a class="markdownIt-Anchor" href="#添加基础类对象"></a> 添加基础类对象</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#方法1：调用函数添加</span></span><br><span class="line">fig, ax=plt.subplots()</span><br><span class="line"><span class="comment">#图</span></span><br><span class="line">fig.legend(<span class="string">&quot;This is a test&quot;</span>) <span class="comment">#图-图例</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#坐标系</span></span><br><span class="line">ax.plot(np.array([(<span class="number">0</span>,<span class="number">0</span>),(<span class="number">0.2</span>,<span class="number">0.5</span>),(<span class="number">0.4</span>,<span class="number">0.6</span>)]),label=<span class="string">&#x27;label&#x27;</span>) <span class="comment">#坐标系-线</span></span><br><span class="line">ax.scatter(np.array([<span class="number">0</span>,<span class="number">0.3</span>,<span class="number">0.6</span>]),np.array([<span class="number">0.5</span>,<span class="number">0.2</span>,<span class="number">0.4</span>])) <span class="comment">#坐标系-点</span></span><br><span class="line">ax.grid() <span class="comment">#坐标系-网格</span></span><br><span class="line">ax.legend() <span class="comment">#坐标系-图例</span></span><br><span class="line"><span class="comment">#图例的详细设置参考：</span></span><br><span class="line"><span class="comment">#https://matplotlib.org/tutorials/intermediate/legend_guide.html#sphx-glr-tutorials-intermediate-legend-guide-py</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#插入文本（包括标题、坐标轴名称等），在图像内插入的文本支持Tex语法</span></span><br><span class="line"><span class="comment">#matplotlib.rcParams[&#x27;text.usetex&#x27;] = True #注：如果要在图片中插入Tex格式的文本，需要先打开这一功能</span></span><br><span class="line">ax.text(<span class="number">0.5</span>,<span class="number">0.2</span>,<span class="string">r&#x27;$\mu=100$ test&#x27;</span>) <span class="comment">#坐标系-文字，前两个参数代表文字在x和y方向的相对位置，第三个参数代表插入的文字内容。</span></span><br><span class="line">ax.set_title(<span class="string">r&#x27;Title $\frac&#123;1&#125;&#123;1&#125;$&#x27;</span>) <span class="comment">#坐标系-标题</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#坐标轴</span></span><br><span class="line">ax.set_xlabel(<span class="string">r&#x27;xlabel $\sqrt&#123;2&#125;,\ \sqrt[3]&#123;x&#125;,\ \ldots$&#x27;</span>) <span class="comment">#坐标系-坐标轴-x轴标签</span></span><br><span class="line">ax.set_ylabel(<span class="string">&#x27;ylabel&#x27;</span>) <span class="comment">#坐标系-坐标轴-y轴标签</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#刻度</span></span><br><span class="line">ax.set_xticklabels([<span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;two&#x27;</span>, <span class="string">&#x27;three&#x27;</span>, <span class="string">&#x27;four&#x27;</span>, <span class="string">&#x27;five&#x27;</span>, <span class="string">r&#x27;$\coprod$&#x27;</span>, <span class="string">r&#x27;$\int$&#x27;</span>]) <span class="comment"># 坐标系-坐标轴-刻度-x轴刻度标签</span></span><br><span class="line">ax.set_yticklabels([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]) <span class="comment"># 坐标系-坐标轴-刻度-y轴刻度标签</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#图像的注解</span></span><br><span class="line">ax.annotate(<span class="string">&#x27;local max&#x27;</span>, xy=(<span class="number">0.2</span>, <span class="number">0.2</span>),  xycoords=<span class="string">&#x27;data&#x27;</span>,</span><br><span class="line">            xytext=(<span class="number">0.8</span>, <span class="number">0.95</span>), textcoords=<span class="string">&#x27;axes fraction&#x27;</span>,</span><br><span class="line">            arrowprops=dict(facecolor=<span class="string">&#x27;black&#x27;</span>, shrink=<span class="number">0.05</span>),</span><br><span class="line">            horizontalalignment=<span class="string">&#x27;right&#x27;</span>, verticalalignment=<span class="string">&#x27;top&#x27;</span>,</span><br><span class="line">            )</span><br><span class="line"><span class="comment">#关于注解的详细设置可参考：</span></span><br><span class="line"><span class="comment">#https://matplotlib.org/tutorials/text/annotations.html#sphx-glr-tutorials-text-annotations-py</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210109161339.png" alt="png" /></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#方法2：构造一个字典，包含对应的关键词，然后将其作为参数传入到ax.set()函数</span></span><br><span class="line">fig, ax=plt.subplots()</span><br><span class="line">props = &#123;<span class="string">&#x27;title&#x27;</span>: <span class="string">&#x27;Title&#x27;</span>, <span class="comment"># 坐标系-标题</span></span><br><span class="line">      <span class="string">&#x27;xlabel&#x27;</span>: <span class="string">&#x27;xlabel&#x27;</span>, <span class="comment"># 坐标系-坐标轴-标签</span></span><br><span class="line">      <span class="string">&#x27;xticklabels&#x27;</span>:[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]&#125; <span class="comment"># 坐标系-坐标轴-刻度-标签</span></span><br><span class="line">ax.set(**props)</span><br></pre></td></tr></table></figure>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210109161429.png" alt="png" /></p>
<h3 id="图像美化"><a class="markdownIt-Anchor" href="#图像美化"></a> 图像美化</h3>
<p>图像美化的方法有两种：一种是调用<code>plt.style.use()</code>，使用官方预定义的格式；另外一种方法是通过<code>matplotlib.rcParams</code>自定义。</p>
<p>方法一：通过<code>rcParams</code>手动设置。一些参数的含义可以查看https://matplotlib.org/tutorials/introductory/customizing.html#matplotlibrc-sample</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#matplotlib.rcParams.keys() #用matplotlib.rcParams.keys()可以查看所有可以全局定义的属性，因为属性太多故此处不做显示</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">params = &#123;</span><br><span class="line">        <span class="string">&quot;font.size&quot;</span>: <span class="number">12</span>,     <span class="comment"># 全局字号</span></span><br><span class="line">        <span class="string">&#x27;font.family&#x27;</span>:<span class="string">&#x27;Arial&#x27;</span>, <span class="comment"># 全局字体</span></span><br><span class="line">        <span class="string">&quot;axes.spines.right&quot;</span>:<span class="literal">True</span>,  <span class="comment"># 坐标系-右侧线</span></span><br><span class="line">        <span class="string">&quot;axes.spines.top&quot;</span>:<span class="literal">True</span>,   <span class="comment"># 坐标系-上侧线</span></span><br><span class="line">        <span class="string">&quot;axes.titlesize&quot;</span>:<span class="number">12</span>,   <span class="comment"># 坐标系-标题-字号</span></span><br><span class="line">        <span class="string">&quot;axes.labelsize&quot;</span>: <span class="number">12</span>,  <span class="comment"># 坐标系-标签-字号</span></span><br><span class="line">        <span class="string">&quot;legend.fontsize&quot;</span>: <span class="number">12</span>,  <span class="comment"># 图例-字号</span></span><br><span class="line">        <span class="string">&quot;xtick.labelsize&quot;</span>: <span class="number">10</span>,  <span class="comment"># 刻度-标签-字号</span></span><br><span class="line">        <span class="string">&quot;ytick.labelsize&quot;</span>: <span class="number">10</span>,  <span class="comment"># 刻度-标签-字号</span></span><br><span class="line">        <span class="string">&quot;xtick.direction&quot;</span>:<span class="string">&#x27;in&#x27;</span>,   <span class="comment"># 刻度-方向</span></span><br><span class="line">        <span class="string">&quot;ytick.direction&quot;</span>:<span class="string">&#x27;in&#x27;</span>  <span class="comment"># 刻度-方向</span></span><br><span class="line">&#125;</span><br><span class="line">matplotlib.rcParams.update(**params)</span><br><span class="line"><span class="comment">#或者按照matplotlib.rcParams[&#x27;key&#x27;]=value这种格式也可以进行调整</span></span><br><span class="line"></span><br><span class="line">matplotlib.rc_file_defaults() <span class="comment">#还原为本次导入matplotlib时的默认设置</span></span><br><span class="line"><span class="comment">#matplotlib.rcdefaults() #还原为matplotlib的默认绘图设置，类似于恢复出厂设置</span></span><br></pre></td></tr></table></figure>
<p>方法二：使用预定义格式。预定义格式的效果图可以参考https://matplotlib.org/gallery/style_sheets/style_sheets_reference.html#sphx-glr-gallery-style-sheets-style-sheets-reference-py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#plt.style.available #plt.style.available可以查看所有的可用样式</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.style.use(<span class="string">&#x27;seaborn-paper&#x27;</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">#如果只想对于某幅图片使用一种格式，可以用下面的命令，将绘图操作写入with代码块里面</span></span><br><span class="line"><span class="comment">#with plt.style.context(&#x27;seaborn&#x27;):  #将use换成context</span></span><br><span class="line">    <span class="comment">#plotting commands</span></span><br></pre></td></tr></table></figure>
<h3 id="保存图像"><a class="markdownIt-Anchor" href="#保存图像"></a> 保存图像</h3>
<p>要保存生成的图像，可以使用如下命令。图像支持多种格式的保存，可以使用<code>fig.canvas.get_supported_filetypes()</code>来查看支持的图片格式类型。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">fig.savefig(<span class="string">&#x27;sales.png&#x27;</span>, transparent=<span class="literal">False</span>, dpi=<span class="number">80</span>, bbox_inches=<span class="string">&quot;tight&quot;</span>) </span><br><span class="line"><span class="comment">#上面几个为常用的参数，它们的含义如下：</span></span><br><span class="line"><span class="comment">#transparent：代表图片背景是否透明</span></span><br><span class="line"><span class="comment">#dpi：输出图像的分辨率</span></span><br><span class="line"><span class="comment">#bbox_inches：代表图片边缘的留白如何处理，&#x27;tight&#x27;表示除去图片边缘的所有留白</span></span><br></pre></td></tr></table></figure>
<h1 id="图像格式"><a class="markdownIt-Anchor" href="#图像格式"></a> 图像格式</h1>
<h2 id="色彩"><a class="markdownIt-Anchor" href="#色彩"></a> 色彩</h2>
<h3 id="色彩表示"><a class="markdownIt-Anchor" href="#色彩表示"></a> 色彩表示</h3>
<p>在绘图或者是添加文字时，可以加入<code>color=</code>参数，来表明文字/散点/曲线等的颜色。颜色的定义方法有很多，包括但不限于：</p>
<ul>
<li>传入一个表示RGB或者RGBA的tuple，其中的每个元素为0到1中间的浮点数，例如[0.2,0.5,0.6,0.9]</li>
<li>传入一个表示RGB或者RGBA的十六进制格式字符串，例如’#aabbccdd’</li>
<li>传入{‘b’, ‘g’, ‘r’, ‘c’, ‘m’, ‘y’, ‘k’, ‘w’}的其中一个，它们对应于blue, green, red, cyan, magenta, yellow, black, and white.</li>
</ul>
<p>更多的颜色表示方法可参考：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9tYXRwbG90bGliLm9yZy90dXRvcmlhbHMvY29sb3JzL2NvbG9ycy5odG1sI3NwaHgtZ2xyLXR1dG9yaWFscy1jb2xvcnMtY29sb3JzLXB5">https://matplotlib.org/tutorials/colors/colors.html#sphx-glr-tutorials-colors-colors-py<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9tYXRwbG90bGliLm9yZy9nYWxsZXJ5L2NvbG9yL25hbWVkX2NvbG9ycy5odG1sI3NwaHgtZ2xyLWdhbGxlcnktY29sb3ItbmFtZWQtY29sb3JzLXB5">https://matplotlib.org/gallery/color/named_colors.html#sphx-glr-gallery-color-named-colors-py<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">t = np.linspace(<span class="number">0.0</span>, <span class="number">2.0</span>, <span class="number">201</span>)</span><br><span class="line">s = np.sin(<span class="number">2</span> * np.pi * t)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1) RGB tuple:</span></span><br><span class="line">fig, ax = plt.subplots(facecolor=(<span class="number">.18</span>, <span class="number">.31</span>, <span class="number">.31</span>))</span><br><span class="line"><span class="comment"># 2) hex string:</span></span><br><span class="line">ax.set_facecolor(<span class="string">&#x27;#eafff5&#x27;</span>)</span><br><span class="line"><span class="comment"># 3) gray level string:</span></span><br><span class="line">ax.set_title(<span class="string">&#x27;Voltage vs. time chart&#x27;</span>, color=<span class="string">&#x27;0.7&#x27;</span>)</span><br><span class="line"><span class="comment"># 4) single letter color string</span></span><br><span class="line">ax.set_xlabel(<span class="string">&#x27;time (s)&#x27;</span>, color=<span class="string">&#x27;c&#x27;</span>)</span><br><span class="line"><span class="comment"># 5) a named color:</span></span><br><span class="line">ax.set_ylabel(<span class="string">&#x27;voltage (mV)&#x27;</span>, color=<span class="string">&#x27;peachpuff&#x27;</span>)</span><br><span class="line"><span class="comment"># 6) a named xkcd color:</span></span><br><span class="line">ax.plot(t, s, <span class="string">&#x27;xkcd:crimson&#x27;</span>)</span><br><span class="line"><span class="comment"># 7) Cn notation:</span></span><br><span class="line">ax.plot(t, <span class="number">.7</span>*s, color=<span class="string">&#x27;C4&#x27;</span>, linestyle=<span class="string">&#x27;--&#x27;</span>)</span><br><span class="line"><span class="comment"># 8) tab notation:</span></span><br><span class="line">ax.tick_params(labelcolor=<span class="string">&#x27;tab:orange&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210109161422.png" alt="png" /></p>
<h3 id="colormap"><a class="markdownIt-Anchor" href="#colormap"></a> colormap</h3>
<p>在绘制一些图像如轮廓图、流形图等的时候，需要传入<code>cmap</code>参数，即使用一个colormap。colormap有一些系统定义好的，也可以自己定义。详细的用法可参考：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9tYXRwbG90bGliLm9yZy90dXRvcmlhbHMvY29sb3JzL2NvbG9yYmFyX29ubHkuaHRtbCNzcGh4LWdsci10dXRvcmlhbHMtY29sb3JzLWNvbG9yYmFyLW9ubHktcHk=">https://matplotlib.org/tutorials/colors/colorbar_only.html#sphx-glr-tutorials-colors-colorbar-only-py<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9tYXRwbG90bGliLm9yZy90dXRvcmlhbHMvY29sb3JzL2NvbG9ybWFwLW1hbmlwdWxhdGlvbi5odG1sI3NwaHgtZ2xyLXR1dG9yaWFscy1jb2xvcnMtY29sb3JtYXAtbWFuaXB1bGF0aW9uLXB5">https://matplotlib.org/tutorials/colors/colormap-manipulation.html#sphx-glr-tutorials-colors-colormap-manipulation-py<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9tYXRwbG90bGliLm9yZy90dXRvcmlhbHMvY29sb3JzL2NvbG9ybWFwbm9ybXMuaHRtbCNzcGh4LWdsci10dXRvcmlhbHMtY29sb3JzLWNvbG9ybWFwbm9ybXMtcHk=">https://matplotlib.org/tutorials/colors/colormapnorms.html#sphx-glr-tutorials-colors-colormapnorms-py<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9tYXRwbG90bGliLm9yZy90dXRvcmlhbHMvY29sb3JzL2NvbG9ybWFwcy5odG1sI3NwaHgtZ2xyLXR1dG9yaWFscy1jb2xvcnMtY29sb3JtYXBzLXB5">https://matplotlib.org/tutorials/colors/colormaps.html#sphx-glr-tutorials-colors-colormaps-py<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9tYXRwbG90bGliLm9yZy9nYWxsZXJ5L2NvbG9yL2N1c3RvbV9jbWFwLmh0bWwjc3BoeC1nbHItZ2FsbGVyeS1jb2xvci1jdXN0b20tY21hcC1weQ==">https://matplotlib.org/gallery/color/custom_cmap.html#sphx-glr-gallery-color-custom-cmap-py<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="色彩循环"><a class="markdownIt-Anchor" href="#色彩循环"></a> 色彩循环</h3>
<p>如果在一幅图里面同时绘制多条曲线或者多种散点，同时绘图时又没有手动指定颜色的话，那么系统会使用默认的色彩循环方式，将它们区分开来。如果要对这些设置进行调整，可以参考：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9tYXRwbG90bGliLm9yZy9nYWxsZXJ5L2NvbG9yL2NvbG9yX2N5Y2xlX2RlZmF1bHQuaHRtbCNzcGh4LWdsci1nYWxsZXJ5LWNvbG9yLWNvbG9yLWN5Y2xlLWRlZmF1bHQtcHk=">https://matplotlib.org/gallery/color/color_cycle_default.html#sphx-glr-gallery-color-color-cycle-default-py<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9tYXRwbG90bGliLm9yZy90dXRvcmlhbHMvaW50ZXJtZWRpYXRlL2NvbG9yX2N5Y2xlLmh0bWwjc3BoeC1nbHItdHV0b3JpYWxzLWludGVybWVkaWF0ZS1jb2xvci1jeWNsZS1weQ==">https://matplotlib.org/tutorials/intermediate/color_cycle.html#sphx-glr-tutorials-intermediate-color-cycle-py<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="线形"><a class="markdownIt-Anchor" href="#线形"></a> 线形</h2>
<p>在绘制曲线的时候，可以使用<code>linestyle</code>参数设置不同的线型，这些不同的线形可以参考：<span class="exturl" data-url="aHR0cHM6Ly9tYXRwbG90bGliLm9yZy9nYWxsZXJ5L2xpbmVzX2JhcnNfYW5kX21hcmtlcnMvbGluZXN0eWxlcy5odG1sI3NwaHgtZ2xyLWdhbGxlcnktbGluZXMtYmFycy1hbmQtbWFya2Vycy1saW5lc3R5bGVzLXB5">https://matplotlib.org/gallery/lines_bars_and_markers/linestyles.html#sphx-glr-gallery-lines-bars-and-markers-linestyles-py<i class="fa fa-external-link-alt"></i></span></p>
<p>对于四种比较常见的线形，专门设置了比较简便的表示方法：’-‘表示直线，’.‘表示点，’–‘表示虚线，’-.'表示点划线</p>
<h2 id="标记"><a class="markdownIt-Anchor" href="#标记"></a> 标记</h2>
<p>在绘制点的时候（例如散点图），可以使用<code>marker</code>参数设置不同的标记形状。标记形状可以自己定义，也可以使用系统自带的一些标记，可参考https://matplotlib.org/gallery/lines_bars_and_markers/marker_reference.html#sphx-glr-gallery-lines-bars-and-markers-marker-reference-py</p>
<p>对于标记来说，它们的大小、颜色、填充方式等信息可以自己设置，可以通过参数<code>markersize</code>, <code>markerfacecolor</code>, <code>markeredgecolor</code>, <code>fillstyle</code>, <code>markerfacecoloralt</code>等进行调整。</p>
<h2 id="文本"><a class="markdownIt-Anchor" href="#文本"></a> 文本</h2>
<p>在图中插入的图注、坐标轴、文本、标题等都属于文本。这些文本的颜色、字体、大小等信息都可以调整。关于文本内容的详细设置可以参考：</p>
<ul>
<li>不同种类的文本：<span class="exturl" data-url="aHR0cHM6Ly9tYXRwbG90bGliLm9yZy90dXRvcmlhbHMvdGV4dC90ZXh0X2ludHJvLmh0bWwjc3BoeC1nbHItdHV0b3JpYWxzLXRleHQtdGV4dC1pbnRyby1weQ==">https://matplotlib.org/tutorials/text/text_intro.html#sphx-glr-tutorials-text-text-intro-py<i class="fa fa-external-link-alt"></i></span></li>
<li>文本格式设置：<span class="exturl" data-url="aHR0cHM6Ly9tYXRwbG90bGliLm9yZy90dXRvcmlhbHMvdGV4dC90ZXh0X3Byb3BzLmh0bWwjc3BoeC1nbHItdHV0b3JpYWxzLXRleHQtdGV4dC1wcm9wcy1weQ==">https://matplotlib.org/tutorials/text/text_props.html#sphx-glr-tutorials-text-text-props-py<i class="fa fa-external-link-alt"></i></span></li>
<li>Tex写数学表达式：<span class="exturl" data-url="aHR0cHM6Ly9tYXRwbG90bGliLm9yZy90dXRvcmlhbHMvdGV4dC9tYXRodGV4dC5odG1sI3NwaHgtZ2xyLXR1dG9yaWFscy10ZXh0LW1hdGh0ZXh0LXB5">https://matplotlib.org/tutorials/text/mathtext.html#sphx-glr-tutorials-text-mathtext-py<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">fig = plt.figure()</span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>)</span><br><span class="line">fig.subplots_adjust(top=<span class="number">0.85</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set titles for the figure and the subplot respectively</span></span><br><span class="line">fig.suptitle(<span class="string">&#x27;bold figure suptitle&#x27;</span>, fontsize=<span class="number">14</span>, fontweight=<span class="string">&#x27;bold&#x27;</span>)</span><br><span class="line">ax.set_title(<span class="string">&#x27;axes title&#x27;</span>)</span><br><span class="line"></span><br><span class="line">ax.set_xlabel(<span class="string">&#x27;xlabel&#x27;</span>)</span><br><span class="line">ax.set_ylabel(<span class="string">&#x27;ylabel&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set both x- and y-axis limits to [0, 10] instead of default [0, 1]</span></span><br><span class="line">ax.axis([<span class="number">0</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">10</span>])</span><br><span class="line"></span><br><span class="line">ax.text(<span class="number">3</span>, <span class="number">8</span>, <span class="string">&#x27;boxed italics text in data coords&#x27;</span>, style=<span class="string">&#x27;italic&#x27;</span>,</span><br><span class="line">        bbox=&#123;<span class="string">&#x27;facecolor&#x27;</span>: <span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;alpha&#x27;</span>: <span class="number">0.5</span>, <span class="string">&#x27;pad&#x27;</span>: <span class="number">10</span>&#125;)</span><br><span class="line"></span><br><span class="line">ax.text(<span class="number">2</span>, <span class="number">6</span>, <span class="string">r&#x27;an equation: $E=mc^2$&#x27;</span>, fontsize=<span class="number">15</span>)</span><br><span class="line"></span><br><span class="line">ax.text(<span class="number">3</span>, <span class="number">2</span>, <span class="string">&#x27;unicode: Institut für Festkörperphysik&#x27;</span>)</span><br><span class="line"></span><br><span class="line">ax.text(<span class="number">0.95</span>, <span class="number">0.01</span>, <span class="string">&#x27;colored text in axes coords&#x27;</span>,</span><br><span class="line">        verticalalignment=<span class="string">&#x27;bottom&#x27;</span>, horizontalalignment=<span class="string">&#x27;right&#x27;</span>,</span><br><span class="line">        transform=ax.transAxes,</span><br><span class="line">        color=<span class="string">&#x27;green&#x27;</span>, fontsize=<span class="number">15</span>)</span><br><span class="line"></span><br><span class="line">ax.plot([<span class="number">2</span>], [<span class="number">1</span>], <span class="string">&#x27;o&#x27;</span>)</span><br><span class="line">ax.annotate(<span class="string">&#x27;annotate&#x27;</span>, xy=(<span class="number">2</span>, <span class="number">1</span>), xytext=(<span class="number">3</span>, <span class="number">4</span>),</span><br><span class="line">            arrowprops=dict(facecolor=<span class="string">&#x27;black&#x27;</span>, shrink=<span class="number">0.05</span>))</span><br></pre></td></tr></table></figure>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210109161441.png" alt="png" /></p>
<h1 id="绘图示例"><a class="markdownIt-Anchor" href="#绘图示例"></a> 绘图示例</h1>
<p>下面这些绘图的代码示例来自于官方教程，包含了一些比较常见的绘图操作。在https://matplotlib.org/gallery/index.html#color-examples 中可以找到更多更全的绘图示例。</p>
<h2 id="曲线图"><a class="markdownIt-Anchor" href="#曲线图"></a> 曲线图</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x1 = np.linspace(<span class="number">0.0</span>, <span class="number">5.0</span>)</span><br><span class="line">x2 = np.linspace(<span class="number">0.0</span>, <span class="number">2.0</span>)</span><br><span class="line"></span><br><span class="line">y1 = np.cos(<span class="number">2</span> * np.pi * x1) * np.exp(-x1)</span><br><span class="line">y2 = np.cos(<span class="number">2</span> * np.pi * x2)</span><br><span class="line"></span><br><span class="line">fig, (ax1, ax2) = plt.subplots(<span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">fig.suptitle(<span class="string">&#x27;A tale of 2 subplots&#x27;</span>)</span><br><span class="line"></span><br><span class="line">ax1.plot(x1, y1, <span class="string">&#x27;o-&#x27;</span>) <span class="comment">#第三个参数对应于点和线的格式，下同</span></span><br><span class="line">ax1.set_ylabel(<span class="string">&#x27;Damped oscillation&#x27;</span>)</span><br><span class="line"></span><br><span class="line">ax2.plot(x2, y2, <span class="string">&#x27;.-&#x27;</span>)</span><br><span class="line">ax2.set_xlabel(<span class="string">&#x27;time (s)&#x27;</span>)</span><br><span class="line">ax2.set_ylabel(<span class="string">&#x27;Undamped&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210109161447.png" alt="png" /></p>
<h2 id="伪彩色图与轮廓图"><a class="markdownIt-Anchor" href="#伪彩色图与轮廓图"></a> 伪彩色图与轮廓图</h2>
<p>在绘制伪彩色图时，传入的x和y对应的是网格的边界，之后会自动根据传入的网格边界将二维平面进行划分（边界可以为斜线）。而传入的z值则对应于每个网格的值，网格颜色便会使用这些值来进行染色。</p>
<p>而绘制轮廓图时，传入的x和y对应的是二维平面的一个个点，z对应的是这些点的值。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># make these smaller to increase the resolution</span></span><br><span class="line">dx, dy = <span class="number">0.05</span>, <span class="number">0.05</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># generate 2 2d grids for the x &amp; y bounds</span></span><br><span class="line">y, x = np.mgrid[slice(<span class="number">1</span>, <span class="number">5</span> + dy, dy), slice(<span class="number">1</span>, <span class="number">5</span> + dx, dx)]</span><br><span class="line"></span><br><span class="line">z = np.sin(x)**<span class="number">10</span> + np.cos(<span class="number">10</span> + y*x) * np.cos(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x and y are bounds, so z should be the value *inside* those bounds.</span></span><br><span class="line"><span class="comment"># Therefore, remove the last value from the z array.</span></span><br><span class="line">z = z[:<span class="number">-1</span>, :<span class="number">-1</span>]</span><br><span class="line">levels = matplotlib.ticker.MaxNLocator(nbins=<span class="number">15</span>).tick_values(z.min(), z.max())</span><br><span class="line"></span><br><span class="line"><span class="comment"># pick the desired colormap, sensible levels, and define a normalization</span></span><br><span class="line"><span class="comment"># instance which takes data values and translates those into levels.</span></span><br><span class="line">cmap = plt.get_cmap(<span class="string">&#x27;PiYG&#x27;</span>)</span><br><span class="line">norm = matplotlib.colors.BoundaryNorm(levels, ncolors=cmap.N, clip=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">fig, (ax0, ax1) = plt.subplots(nrows=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">im = ax0.pcolormesh(x, y, z, cmap=cmap, norm=norm)</span><br><span class="line">fig.colorbar(im, ax=ax0)</span><br><span class="line">ax0.set_title(<span class="string">&#x27;pcolormesh with levels&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># contours are *point* based plots, so convert our bound into point centers</span></span><br><span class="line">cf = ax1.contourf(x[:<span class="number">-1</span>, :<span class="number">-1</span>] + dx/<span class="number">2.</span>, y[:<span class="number">-1</span>, :<span class="number">-1</span>] + dy/<span class="number">2.</span>, z, levels=levels, cmap=cmap)</span><br><span class="line">fig.colorbar(cf, ax=ax1)</span><br><span class="line">ax1.set_title(<span class="string">&#x27;contourf with levels&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># adjust spacing between subplots so `ax1` title and `ax0` tick labels</span></span><br><span class="line"><span class="comment"># don&#x27;t overlap</span></span><br><span class="line">fig.tight_layout()</span><br></pre></td></tr></table></figure>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210109161500.png" alt="png" /></p>
<h2 id="直方图"><a class="markdownIt-Anchor" href="#直方图"></a> 直方图</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># example data</span></span><br><span class="line">mu = <span class="number">100</span>  <span class="comment"># mean of distribution</span></span><br><span class="line">sigma = <span class="number">15</span>  <span class="comment"># standard deviation of distribution</span></span><br><span class="line">x = mu + sigma * np.random.randn(<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line">num_bins = <span class="number">50</span></span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots()</span><br><span class="line"></span><br><span class="line"><span class="comment"># the histogram of the data</span></span><br><span class="line">n, bins, patches = ax.hist(x, num_bins, density=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add a &#x27;best fit&#x27; line</span></span><br><span class="line">y = ((<span class="number">1</span> / (np.sqrt(<span class="number">2</span> * np.pi) * sigma)) * np.exp(<span class="number">-0.5</span> * (<span class="number">1</span> / sigma * (bins - mu))**<span class="number">2</span>))</span><br><span class="line">ax.plot(bins, y, <span class="string">&#x27;--&#x27;</span>)</span><br><span class="line">ax.set_xlabel(<span class="string">&#x27;Smarts&#x27;</span>)</span><br><span class="line">ax.set_ylabel(<span class="string">&#x27;Probability density&#x27;</span>)</span><br><span class="line">ax.set_title(<span class="string">r&#x27;Histogram of IQ: $\mu=100$, $\sigma=15$&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Tweak spacing to prevent clipping of ylabel</span></span><br><span class="line">fig.tight_layout()</span><br></pre></td></tr></table></figure>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210109161505.png" alt="png" /></p>
<h2 id="三维图"><a class="markdownIt-Anchor" href="#三维图"></a> 三维图</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</span><br><span class="line">fig, ax = plt.subplots(subplot_kw=&#123;<span class="string">&quot;projection&quot;</span>: <span class="string">&quot;3d&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Make data.</span></span><br><span class="line">X = np.arange(<span class="number">-5</span>, <span class="number">5</span>, <span class="number">0.25</span>)</span><br><span class="line">Y = np.arange(<span class="number">-5</span>, <span class="number">5</span>, <span class="number">0.25</span>)</span><br><span class="line">X, Y = np.meshgrid(X, Y)</span><br><span class="line">R = np.sqrt(X**<span class="number">2</span> + Y**<span class="number">2</span>)</span><br><span class="line">Z = np.sin(R)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot the surface.</span></span><br><span class="line">surf = ax.plot_surface(X, Y, Z, cmap=matplotlib.cm.coolwarm, linewidth=<span class="number">0</span>, antialiased=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Customize the z axis.</span></span><br><span class="line">ax.set_zlim(<span class="number">-1.01</span>, <span class="number">1.01</span>)</span><br><span class="line">ax.zaxis.set_major_locator(matplotlib.ticker.LinearLocator(<span class="number">10</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add a color bar which maps values to colors.</span></span><br><span class="line">fig.colorbar(surf, shrink=<span class="number">0.5</span>, aspect=<span class="number">5</span>)</span><br></pre></td></tr></table></figure>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210109161517.png" alt="png" /></p>
<h2 id="流形图"><a class="markdownIt-Anchor" href="#流形图"></a> 流形图</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">w = <span class="number">3</span></span><br><span class="line">Y, X = np.mgrid[-w:w:<span class="number">100j</span>, -w:w:<span class="number">100j</span>]</span><br><span class="line">U = <span class="number">-1</span> - X**<span class="number">2</span> + Y</span><br><span class="line">V = <span class="number">1</span> + X - Y**<span class="number">2</span></span><br><span class="line">speed = np.sqrt(U**<span class="number">2</span> + V**<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">7</span>, <span class="number">9</span>))</span><br><span class="line">gs = matplotlib.gridspec.GridSpec(nrows=<span class="number">3</span>, ncols=<span class="number">2</span>, height_ratios=[<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#  Varying density along a streamline</span></span><br><span class="line">ax0 = fig.add_subplot(gs[<span class="number">0</span>, <span class="number">0</span>])</span><br><span class="line">ax0.streamplot(X, Y, U, V, density=[<span class="number">0.5</span>, <span class="number">1</span>])</span><br><span class="line">ax0.set_title(<span class="string">&#x27;Varying Density&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Varying color along a streamline</span></span><br><span class="line">ax1 = fig.add_subplot(gs[<span class="number">0</span>, <span class="number">1</span>])</span><br><span class="line">strm = ax1.streamplot(X, Y, U, V, color=U, linewidth=<span class="number">2</span>, cmap=<span class="string">&#x27;autumn&#x27;</span>)</span><br><span class="line">fig.colorbar(strm.lines)</span><br><span class="line">ax1.set_title(<span class="string">&#x27;Varying Color&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#  Varying line width along a streamline</span></span><br><span class="line">ax2 = fig.add_subplot(gs[<span class="number">1</span>, <span class="number">0</span>])</span><br><span class="line">lw = <span class="number">5</span>*speed / speed.max()</span><br><span class="line">ax2.streamplot(X, Y, U, V, density=<span class="number">0.6</span>, color=<span class="string">&#x27;k&#x27;</span>, linewidth=lw)</span><br><span class="line">ax2.set_title(<span class="string">&#x27;Varying Line Width&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Controlling the starting points of the streamlines</span></span><br><span class="line">seed_points = np.array([[<span class="number">-2</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">-1</span>], [<span class="number">-2</span>, <span class="number">-1</span>,  <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>]])</span><br><span class="line"></span><br><span class="line">ax3 = fig.add_subplot(gs[<span class="number">1</span>, <span class="number">1</span>])</span><br><span class="line">strm = ax3.streamplot(X, Y, U, V, color=U, linewidth=<span class="number">2</span>,</span><br><span class="line">                      cmap=<span class="string">&#x27;autumn&#x27;</span>, start_points=seed_points.T)</span><br><span class="line">fig.colorbar(strm.lines)</span><br><span class="line">ax3.set_title(<span class="string">&#x27;Controlling Starting Points&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Displaying the starting points with blue symbols.</span></span><br><span class="line">ax3.plot(seed_points[<span class="number">0</span>], seed_points[<span class="number">1</span>], <span class="string">&#x27;bo&#x27;</span>)</span><br><span class="line">ax3.set(xlim=(-w, w), ylim=(-w, w))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a mask</span></span><br><span class="line">mask = np.zeros(U.shape, dtype=bool)</span><br><span class="line">mask[<span class="number">40</span>:<span class="number">60</span>, <span class="number">40</span>:<span class="number">60</span>] = <span class="literal">True</span></span><br><span class="line">U[:<span class="number">20</span>, :<span class="number">20</span>] = np.nan</span><br><span class="line">U = np.ma.array(U, mask=mask)</span><br><span class="line"></span><br><span class="line">ax4 = fig.add_subplot(gs[<span class="number">2</span>:, :])</span><br><span class="line">ax4.streamplot(X, Y, U, V, color=<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">ax4.set_title(<span class="string">&#x27;Streamplot with Masking&#x27;</span>)</span><br><span class="line"></span><br><span class="line">ax4.imshow(~mask, extent=(-w, w, -w, w), alpha=<span class="number">0.5</span>, cmap=<span class="string">&#x27;gray&#x27;</span>, aspect=<span class="string">&#x27;auto&#x27;</span>)</span><br><span class="line">ax4.set_aspect(<span class="string">&#x27;equal&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.tight_layout()</span><br></pre></td></tr></table></figure>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210109161523.png" alt="png" /></p>
<h2 id="条形图"><a class="markdownIt-Anchor" href="#条形图"></a> 条形图</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data = [[ <span class="number">66386</span>, <span class="number">174296</span>,  <span class="number">75131</span>, <span class="number">577908</span>,  <span class="number">32015</span>],</span><br><span class="line">        [ <span class="number">58230</span>, <span class="number">381139</span>,  <span class="number">78045</span>,  <span class="number">99308</span>, <span class="number">160454</span>],</span><br><span class="line">        [ <span class="number">89135</span>,  <span class="number">80552</span>, <span class="number">152558</span>, <span class="number">497981</span>, <span class="number">603535</span>],</span><br><span class="line">        [ <span class="number">78415</span>,  <span class="number">81858</span>, <span class="number">150656</span>, <span class="number">193263</span>,  <span class="number">69638</span>],</span><br><span class="line">        [<span class="number">139361</span>, <span class="number">331509</span>, <span class="number">343164</span>, <span class="number">781380</span>,  <span class="number">52269</span>]]</span><br><span class="line"></span><br><span class="line">columns = (<span class="string">&#x27;Freeze&#x27;</span>, <span class="string">&#x27;Wind&#x27;</span>, <span class="string">&#x27;Flood&#x27;</span>, <span class="string">&#x27;Quake&#x27;</span>, <span class="string">&#x27;Hail&#x27;</span>)</span><br><span class="line">rows = [<span class="string">&#x27;%d year&#x27;</span> % x <span class="keyword">for</span> x <span class="keyword">in</span> (<span class="number">100</span>, <span class="number">50</span>, <span class="number">20</span>, <span class="number">10</span>, <span class="number">5</span>)]</span><br><span class="line"></span><br><span class="line">values = np.arange(<span class="number">0</span>, <span class="number">2500</span>, <span class="number">500</span>)</span><br><span class="line">value_increment = <span class="number">1000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Get some pastel shades for the colors</span></span><br><span class="line">colors = plt.cm.BuPu(np.linspace(<span class="number">0</span>, <span class="number">0.5</span>, len(rows)))</span><br><span class="line">n_rows = len(data)</span><br><span class="line"></span><br><span class="line">index = np.arange(len(columns)) + <span class="number">0.3</span></span><br><span class="line">bar_width = <span class="number">0.4</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Initialize the vertical-offset for the stacked bar chart.</span></span><br><span class="line">y_offset = np.zeros(len(columns))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot bars and create text labels for the table</span></span><br><span class="line">cell_text = []</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> range(n_rows):</span><br><span class="line">    plt.bar(index, data[row], bar_width, bottom=y_offset, color=colors[row])</span><br><span class="line">    <span class="comment">#plt.bar(index, data[row], bar_width, bottom=y_offset, color=colors[row], tick_label=columns) #绘制正常的条形图</span></span><br><span class="line">    <span class="comment">#plt.barh(index, data[row], bar_width, left=y_offset, color=colors[row], tick_label=columns) #绘制水平条形图，下面代码中的x、y轴标签等信息也需要修改</span></span><br><span class="line">    y_offset = y_offset + data[row]</span><br><span class="line">    cell_text.append([<span class="string">&#x27;%1.1f&#x27;</span> % (x / <span class="number">1000.0</span>) <span class="keyword">for</span> x <span class="keyword">in</span> y_offset])</span><br><span class="line"><span class="comment"># Reverse colors and text labels to display the last value at the top.</span></span><br><span class="line">colors = colors[::<span class="number">-1</span>]</span><br><span class="line">cell_text.reverse()</span><br><span class="line"></span><br><span class="line"><span class="comment">#在横轴下方加入表格，不想加入表格的话可以注释掉</span></span><br><span class="line">the_table = plt.table(cellText=cell_text,</span><br><span class="line">                      rowLabels=rows,</span><br><span class="line">                      rowColours=colors,</span><br><span class="line">                      colLabels=columns,</span><br><span class="line">                      loc=<span class="string">&#x27;bottom&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Adjust layout to make room for the table:</span></span><br><span class="line">plt.subplots_adjust(left=<span class="number">0.2</span>, bottom=<span class="number">0.2</span>)</span><br><span class="line"></span><br><span class="line">plt.ylabel(<span class="string">&quot;Loss in $&#123;0&#125;&#x27;s&quot;</span>.format(value_increment))</span><br><span class="line">plt.yticks(values * value_increment, [<span class="string">&#x27;%d&#x27;</span> % val <span class="keyword">for</span> val <span class="keyword">in</span> values])</span><br><span class="line">plt.xticks([]) <span class="comment">#如果不加入表格的话，可以注释掉这一行</span></span><br><span class="line">plt.title(<span class="string">&#x27;Loss by Disaster&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210109161530.png" alt="png" /></p>
<h2 id="饼图"><a class="markdownIt-Anchor" href="#饼图"></a> 饼图</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Pie chart, where the slices will be ordered and plotted counter-clockwise:</span></span><br><span class="line">labels = <span class="string">&#x27;Frogs&#x27;</span>, <span class="string">&#x27;Hogs&#x27;</span>, <span class="string">&#x27;Dogs&#x27;</span>, <span class="string">&#x27;Logs&#x27;</span></span><br><span class="line">sizes = [<span class="number">15</span>, <span class="number">30</span>, <span class="number">45</span>, <span class="number">10</span>]</span><br><span class="line">explode = (<span class="number">0</span>, <span class="number">0.1</span>, <span class="number">0.2</span>, <span class="number">0</span>) <span class="comment">#代表是否将某一个扇形区域分开</span></span><br><span class="line"></span><br><span class="line">fig1, ax1 = plt.subplots()</span><br><span class="line">ax1.pie(sizes, explode=explode, labels=labels, autopct=<span class="string">&#x27;%1.1f%%&#x27;</span>,</span><br><span class="line">        shadow=<span class="literal">True</span>, startangle=<span class="number">90</span>)</span><br><span class="line">ax1.axis(<span class="string">&#x27;equal&#x27;</span>)  <span class="comment"># Equal aspect ratio ensures that pie is drawn as a circle.</span></span><br></pre></td></tr></table></figure>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210109161535.png" alt="png" /></p>
<h2 id="散点图"><a class="markdownIt-Anchor" href="#散点图"></a> 散点图</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">volume = np.random.rayleigh(<span class="number">27</span>, size=<span class="number">40</span>)</span><br><span class="line">amount = np.random.poisson(<span class="number">10</span>, size=<span class="number">40</span>)</span><br><span class="line">ranking = np.random.normal(size=<span class="number">40</span>)</span><br><span class="line">price = np.random.uniform(<span class="number">1</span>, <span class="number">10</span>, size=<span class="number">40</span>)</span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Because the price is much too small when being provided as size for ``s``, </span></span><br><span class="line"><span class="comment"># we normalize it to some useful point sizes, s=0.3*(price*3)**2</span></span><br><span class="line">scatter = ax.scatter(volume, amount, c=ranking, s=<span class="number">0.3</span>*(price*<span class="number">3</span>)**<span class="number">2</span>, vmin=<span class="number">-3</span>, vmax=<span class="number">3</span>, cmap=<span class="string">&quot;Spectral&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Produce a legend for the ranking (colors). Even though there are 40 different</span></span><br><span class="line"><span class="comment"># rankings, we only want to show 5 of them in the legend.</span></span><br><span class="line">legend1 = ax.legend(*scatter.legend_elements(num=<span class="number">5</span>), loc=<span class="string">&quot;upper left&quot;</span>, title=<span class="string">&quot;Ranking&quot;</span>)</span><br><span class="line">ax.add_artist(legend1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Produce a legend for the price (sizes). Because we want to show the prices</span></span><br><span class="line"><span class="comment"># in dollars, we use the *func* argument to supply the inverse of the function</span></span><br><span class="line"><span class="comment"># used to calculate the sizes from above. The *fmt* ensures to show the price</span></span><br><span class="line"><span class="comment"># in dollars. Note how we target at 5 elements here, but obtain only 4 in the</span></span><br><span class="line"><span class="comment"># created legend due to the automatic round prices that are chosen for us.</span></span><br><span class="line">kw = dict(prop=<span class="string">&quot;sizes&quot;</span>, num=<span class="number">5</span>, color=scatter.cmap(<span class="number">0.7</span>), fmt=<span class="string">&quot;$ &#123;x:.2f&#125;&quot;</span>, func=<span class="keyword">lambda</span> s: np.sqrt(s/<span class="number">.3</span>)/<span class="number">3</span>)</span><br><span class="line">legend2 = ax.legend(*scatter.legend_elements(**kw), loc=<span class="string">&quot;lower right&quot;</span>, title=<span class="string">&quot;Price&quot;</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210109161549.png" alt="png" /></p>
<h2 id="对数坐标"><a class="markdownIt-Anchor" href="#对数坐标"></a> 对数坐标</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 注：成功运行这段程序需要更新matplotlib的版本</span></span><br><span class="line"><span class="comment"># Data for plotting</span></span><br><span class="line">t = np.arange(<span class="number">0.01</span>, <span class="number">20.0</span>, <span class="number">0.01</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create figure</span></span><br><span class="line">fig, ((ax1, ax2), (ax3, ax4)) = plt.subplots(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># log y axis</span></span><br><span class="line">ax1.semilogy(t, np.exp(-t / <span class="number">5.0</span>))</span><br><span class="line">ax1.set(title=<span class="string">&#x27;semilogy&#x27;</span>)</span><br><span class="line">ax1.grid()</span><br><span class="line"></span><br><span class="line"><span class="comment"># log x axis</span></span><br><span class="line">ax2.semilogx(t, np.sin(<span class="number">2</span> * np.pi * t))</span><br><span class="line">ax2.set(title=<span class="string">&#x27;semilogx&#x27;</span>)</span><br><span class="line">ax2.grid()</span><br><span class="line"></span><br><span class="line"><span class="comment"># log x and y axis</span></span><br><span class="line">ax3.loglog(t, <span class="number">20</span> * np.exp(-t / <span class="number">10.0</span>))</span><br><span class="line">ax3.set_xscale(<span class="string">&#x27;log&#x27;</span>, base=<span class="number">2</span>)</span><br><span class="line">ax3.set(title=<span class="string">&#x27;loglog base 2 on x&#x27;</span>)</span><br><span class="line">ax3.grid()</span><br><span class="line"></span><br><span class="line"><span class="comment"># With errorbars: clip non-positive values</span></span><br><span class="line"><span class="comment"># Use new data for plotting</span></span><br><span class="line">x = <span class="number">10.0</span>**np.linspace(<span class="number">0.0</span>, <span class="number">2.0</span>, <span class="number">20</span>)</span><br><span class="line">y = x**<span class="number">2.0</span></span><br><span class="line"></span><br><span class="line">ax4.set_xscale(<span class="string">&quot;log&quot;</span>, nonpositive=<span class="string">&#x27;clip&#x27;</span>)</span><br><span class="line">ax4.set_yscale(<span class="string">&quot;log&quot;</span>, nonpositive=<span class="string">&#x27;clip&#x27;</span>)</span><br><span class="line">ax4.set(title=<span class="string">&#x27;Errorbars go negative&#x27;</span>)</span><br><span class="line">ax4.errorbar(x, y, xerr=<span class="number">0.1</span> * x, yerr=<span class="number">5.0</span> + <span class="number">0.75</span> * y)</span><br><span class="line"><span class="comment"># ylim must be set after errorbar to allow errorbar to autoscale limits</span></span><br><span class="line">ax4.set_ylim(bottom=<span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line">fig.tight_layout()</span><br></pre></td></tr></table></figure>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210109161557.png" alt="png" /></p>
<h2 id="极坐标"><a class="markdownIt-Anchor" href="#极坐标"></a> 极坐标</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">r = np.arange(<span class="number">0</span>, <span class="number">2</span>, <span class="number">0.01</span>)</span><br><span class="line">theta = <span class="number">2</span> * np.pi * r</span><br><span class="line"></span><br><span class="line">fig, ax = plt.subplots(subplot_kw=&#123;<span class="string">&#x27;projection&#x27;</span>: <span class="string">&#x27;polar&#x27;</span>&#125;)</span><br><span class="line">ax.plot(theta, r)</span><br><span class="line">ax.set_rmax(<span class="number">2</span>)</span><br><span class="line">ax.set_rticks([<span class="number">0.5</span>, <span class="number">1</span>, <span class="number">1.5</span>, <span class="number">2</span>])  <span class="comment"># Less radial ticks</span></span><br><span class="line">ax.set_rlabel_position(<span class="number">-22.5</span>)  <span class="comment"># Move radial labels away from plotted line</span></span><br><span class="line">ax.grid(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">ax.set_title(<span class="string">&quot;A line plot on a polar axis&quot;</span>, va=<span class="string">&#x27;bottom&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210109161605.png" alt="png" /></p>
<h1 id="相关绘图工具"><a class="markdownIt-Anchor" href="#相关绘图工具"></a> 相关绘图工具</h1>
<h2 id="seaborn"><a class="markdownIt-Anchor" href="#seaborn"></a> Seaborn</h2>
<p>Seaborn是一个基于matplotlib的绘图函数库，它在牺牲了一定灵活性的前提下，将一些统计相关的常用绘图操作封装为一个函数，从而使得作图变得更加方便。例如使用seaborn可以容易地绘制出箱线图、矩阵散点图、热力图、（广义的）线性回归图等多种复杂的图像。</p>
<p>由于seaborn是基于matplotlib的上层函数，因此设置matplotlib的一些绘图格式也一样会影响到seaborn的绘图效果。</p>
<p>seaborn的官网：<span class="exturl" data-url="aHR0cDovL3NlYWJvcm4ucHlkYXRhLm9yZy8=">http://seaborn.pydata.org/<i class="fa fa-external-link-alt"></i></span></p>
<p>官方教程：<span class="exturl" data-url="aHR0cDovL3NlYWJvcm4ucHlkYXRhLm9yZy90dXRvcmlhbC5odG1s">http://seaborn.pydata.org/tutorial.html<i class="fa fa-external-link-alt"></i></span></p>
<p>下面的代码示例是使用seaborn绘制线性回归图（摘自官网的示例）：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line">sns.set_theme(color_codes=<span class="literal">True</span>)</span><br><span class="line">tips = sns.load_dataset(<span class="string">&quot;tips&quot;</span>)</span><br><span class="line">sns.regplot(x=<span class="string">&quot;total_bill&quot;</span>, y=<span class="string">&quot;tip&quot;</span>, data=tips)</span><br></pre></td></tr></table></figure>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210109170725.png" alt="img" /></p>
<p>从图中可以看到，<code>regplot</code>函数自动将数据绘制为散点图，并同时在图中绘制出了这些数据点的回归直线以及95%的置信区间。这一操作要比matplotlib简便地多。</p>
<p>此外，官网给出了一些不同种类图像的绘图示例，可以参考：<span class="exturl" data-url="aHR0cDovL3NlYWJvcm4ucHlkYXRhLm9yZy9leGFtcGxlcy9pbmRleC5odG1s">http://seaborn.pydata.org/examples/index.html<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="地理绘图"><a class="markdownIt-Anchor" href="#地理绘图"></a> 地理绘图</h2>
<p>如果要绘制与地理相关的一些图像，可以使用一些基于matplotlib的上层工具，例如：</p>
<p>geoplot：<span class="exturl" data-url="aHR0cHM6Ly9yZXNpZGVudG1hcmlvLmdpdGh1Yi5pby9nZW9wbG90L3F1aWNrc3RhcnQvcXVpY2tzdGFydC5odG1s">https://residentmario.github.io/geoplot/quickstart/quickstart.html<i class="fa fa-external-link-alt"></i></span></p>
<p>Basemap：<span class="exturl" data-url="aHR0cHM6Ly9tYXRwbG90bGliLm9yZy9iYXNlbWFwLw==">https://matplotlib.org/basemap/<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<ol>
<li>Python for Data Analysis, 2nd Edition.</li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cua2VzY2kuY29tL2hvbWUvY29sdW1uLzViODdhNzgxMzE5MDJmMDAwZjY2ODU0OQ==">https://www.kesci.com/home/column/5b87a78131902f000f668549<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMTM4NDIyNzA=">https://zhuanlan.zhihu.com/p/113842270<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI3ODI1NDUxL2FydGljbGUvZGV0YWlscy84MTQ4MTUzNA==">https://blog.csdn.net/qq_27825451/article/details/81481534<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8zOTM3Nzk4ZDY0NWI=">https://www.jianshu.com/p/3937798d645b<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC84MzU4ODY1MQ==">https://zhuanlan.zhihu.com/p/83588651<i class="fa fa-external-link-alt"></i></span></li>
</ol>
]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>数据分析</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机组成原理-数据的表示与运算</title>
    <url>/2021/01/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E4%B8%8E%E8%BF%90%E7%AE%97/</url>
    <content><![CDATA[<h1 id="数据的存储"><a class="markdownIt-Anchor" href="#数据的存储"></a> 数据的存储</h1>
<h2 id="数据的字长"><a class="markdownIt-Anchor" href="#数据的字长"></a> 数据的字长</h2>
<p>计算机中，数据存储与访问的最小单位是字节。一个字节对应于8个二进制比特。一个字节可以表示的范围从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0000000</mn><msub><mn>0</mn><mn>2</mn></msub><mo>∼</mo><mn>1111111</mn><msub><mn>1</mn><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">00000000_2\sim 11111111_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，这相当于十进制数的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>∼</mo><mn>255</mn></mrow><annotation encoding="application/x-tex">0\sim255</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">5</span></span></span></span>，或是十六进制数的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>00</mn><mo>∼</mo><mi>F</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">00\sim FF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>。</p>
<p>每台计算机都有一个字长，对应于指针类型数据的大小。由于指针的值是一个虚拟地址，因此字长也决定了虚拟地址空间的大小。例如32位的字长所能表示的虚拟空间为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>4</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">4\times 10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span>字节(约4GB)，而64位字长能表示的虚拟空间大小达<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.84</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>19</mn></msup></mrow><annotation encoding="application/x-tex">1.84\times 10^{19}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">8</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span></span>字节。64位的计算机上可以运行64位的程序，同时也可以兼容32位程序，而32位的计算机上只能运行32位的程序。</p>
<a id="more"></a>
<p>在C语言中，常见数据类型的字长如下表所示：</p>
<table>
<thead>
<tr>
<th style="text-align:center">有符号数</th>
<th style="text-align:center">无符号数</th>
<th style="text-align:center">32位程序</th>
<th style="text-align:center">64位程序</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">char</td>
<td style="text-align:center">unsigned char</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">short</td>
<td style="text-align:center">unsigned short</td>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:center">int</td>
<td style="text-align:center">unsigned</td>
<td style="text-align:center">4</td>
<td style="text-align:center">4</td>
</tr>
<tr>
<td style="text-align:center">long</td>
<td style="text-align:center">unsigned long</td>
<td style="text-align:center">4</td>
<td style="text-align:center">8</td>
</tr>
<tr>
<td style="text-align:center">int32_t</td>
<td style="text-align:center">uint32_t</td>
<td style="text-align:center">4</td>
<td style="text-align:center">4</td>
</tr>
<tr>
<td style="text-align:center">int64_t</td>
<td style="text-align:center">uint64_t</td>
<td style="text-align:center">8</td>
<td style="text-align:center">8</td>
</tr>
<tr>
<td style="text-align:center">char*</td>
<td style="text-align:center"></td>
<td style="text-align:center">4</td>
<td style="text-align:center">8</td>
</tr>
<tr>
<td style="text-align:center">float</td>
<td style="text-align:center"></td>
<td style="text-align:center">4</td>
<td style="text-align:center">4</td>
</tr>
<tr>
<td style="text-align:center">double</td>
<td style="text-align:center"></td>
<td style="text-align:center">8</td>
<td style="text-align:center">8</td>
</tr>
</tbody>
</table>
<h2 id="大端法与小端法"><a class="markdownIt-Anchor" href="#大端法与小端法"></a> 大端法与小端法</h2>
<p>程序中的变量常常需要使用多个字节进行表示，因此需要考虑在内存中如何保存这些字节。常见的方式有两种：大端法(Big endian)和小端法(Little endian)。大端法按照数据的低字节到高字节存放于内存中，而小端法则刚好相反。</p>
<p>假设有一个int类型的数据，值为0x01234567，保存在内存的0x100~0x103处。使用大端法存放时，内存的0x100~0x103位置分别存放的是0x01,0x23,0x45,0x67；而使用小端法时，内存的0x100~0x103位置分别存放的是0x67,0x45,0x23,0x01。</p>
<h2 id="布尔运算"><a class="markdownIt-Anchor" href="#布尔运算"></a> 布尔运算</h2>
<p>在C语言中，有四种布尔运算符，其中非运算为一元运算符，另外三种为二元运算符。它们的运算规则如下：</p>
<table>
<thead>
<tr>
<th style="text-align:center">~(非)</th>
<th style="text-align:center"></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:center">&amp;(与)</th>
<th style="text-align:center">0</th>
<th style="text-align:center">1</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:center">|(或)</th>
<th style="text-align:center">0</th>
<th style="text-align:center">1</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:center">^(异或)</th>
<th style="text-align:center">0</th>
<th style="text-align:center">1</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
</tr>
</tbody>
</table>
<p>上述的运算可以扩展到布尔向量的操作，布尔向量上的布尔运算相当于是对向量中的每一个布尔值按位进行运算。因此，在C语言中，布尔运算可以用于任何整型的数据，相当于是对数据所对应的布尔向量进行布尔运算操作。例：</p>
<ul>
<li>
<p>~0x00 → 0xFF</p>
</li>
<li>
<p>0x69&amp;0x55 → 0x41</p>
</li>
<li>
<p>0x69|0x55 → 0x7D</p>
</li>
</ul>
<p>C语言中，还有一组相似的逻辑运算符：||，&amp;&amp;和！，对应于逻辑运算中的或，与和非运算。逻辑运算是将任何非零表达式当成True，而将等于0的表达式当成False。逻辑运算的返回值是一个布尔值1或0，对应于结果是True或False。例：</p>
<ul>
<li>
<p>!0x00 → 0x01</p>
</li>
<li>
<p>!!0x41 → 0x01</p>
</li>
<li>
<p>0x69&amp;&amp;0x55 → 0x01</p>
</li>
<li>
<p>0x69||0x55 → 0x01</p>
</li>
</ul>
<p>C语言在对逻辑表达式进行判断时，先计算第一个表达式，如果此时已经可以确定结果，则不再计算第二个表达式。</p>
<h2 id="移位运算"><a class="markdownIt-Anchor" href="#移位运算"></a> 移位运算</h2>
<p>C语言提供了左移和右移两种运算，用于将数据的比特位整体向左或是向右平移。</p>
<p>左移的表达式为x&gt;&gt;k。对于左移来说，无论被操作数是有符号数还是无符号数，其操作都一样，都是将x的比特位整体向左平移k位，丢掉其高位的k个比特，并将低位的k个比特补成0。</p>
<p>右移的表达式为x&lt;&lt;k。右移操作对于无符号数和有符号数是不同的。在右移时，x低位的k个比特会被丢掉，但是在补高位数据的时候，无符号数直接补0，有符号数则要根据x右移之前最高位是0或1，补上相应的数字。</p>
<h1 id="整数的表示"><a class="markdownIt-Anchor" href="#整数的表示"></a> 整数的表示</h1>
<h2 id="数据的表示范围"><a class="markdownIt-Anchor" href="#数据的表示范围"></a> 数据的表示范围</h2>
<p>C语言提供了不同的整型数据类型，它们可以表示有限范围内的整数。对于32位的程序来说，这些数据类型可以表示的数值范围如下表所示：</p>
<table>
<thead>
<tr>
<th style="text-align:center">数据类型</th>
<th style="text-align:center">最小值</th>
<th style="text-align:center">最大值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">char</td>
<td style="text-align:center">-128</td>
<td style="text-align:center">127</td>
</tr>
<tr>
<td style="text-align:center">unsigned char</td>
<td style="text-align:center">0</td>
<td style="text-align:center">255</td>
</tr>
<tr>
<td style="text-align:center">short</td>
<td style="text-align:center">-32,768</td>
<td style="text-align:center">32,767</td>
</tr>
<tr>
<td style="text-align:center">unsigned short</td>
<td style="text-align:center">0</td>
<td style="text-align:center">65,535</td>
</tr>
<tr>
<td style="text-align:center">int/long/int32_t</td>
<td style="text-align:center">-2,147,483,648</td>
<td style="text-align:center">2,147,483,647</td>
</tr>
<tr>
<td style="text-align:center">unsigned/unsigned long/uint32_t</td>
<td style="text-align:center">0</td>
<td style="text-align:center">4,294,967,295</td>
</tr>
<tr>
<td style="text-align:center">int64_t</td>
<td style="text-align:center">−9,223,372,036,854,775,808</td>
<td style="text-align:center">9,223,372,036,854,775,807</td>
</tr>
<tr>
<td style="text-align:center">uint64_t</td>
<td style="text-align:center">0</td>
<td style="text-align:center">18,446,744,073,709,551,615</td>
</tr>
</tbody>
</table>
<p>在64位程序中，数据类型可以表示的数值范围如下表所示：</p>
<table>
<thead>
<tr>
<th style="text-align:center">数据类型</th>
<th style="text-align:center">最小值</th>
<th style="text-align:center">最大值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">char</td>
<td style="text-align:center">-128</td>
<td style="text-align:center">127</td>
</tr>
<tr>
<td style="text-align:center">unsigned char</td>
<td style="text-align:center">0</td>
<td style="text-align:center">255</td>
</tr>
<tr>
<td style="text-align:center">short</td>
<td style="text-align:center">-32,768</td>
<td style="text-align:center">32,767</td>
</tr>
<tr>
<td style="text-align:center">unsigned short</td>
<td style="text-align:center">0</td>
<td style="text-align:center">65,535</td>
</tr>
<tr>
<td style="text-align:center">int/int32_t</td>
<td style="text-align:center">-2,147,483,648</td>
<td style="text-align:center">2,147,483,647</td>
</tr>
<tr>
<td style="text-align:center">unsigned/uint32_t</td>
<td style="text-align:center">0</td>
<td style="text-align:center">4,294,967,295</td>
</tr>
<tr>
<td style="text-align:center">long/int64_t</td>
<td style="text-align:center">−9,223,372,036,854,775,808</td>
<td style="text-align:center">9,223,372,036,854,775,807</td>
</tr>
<tr>
<td style="text-align:center">unsigned long/uint64_t</td>
<td style="text-align:center">0</td>
<td style="text-align:center">18,446,744,073,709,551,615</td>
</tr>
</tbody>
</table>
<h2 id="无符号数"><a class="markdownIt-Anchor" href="#无符号数"></a> 无符号数</h2>
<p>对于一个布尔向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo>=</mo><mo stretchy="false">[</mo><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\vec{x}=[x_{w-1},x_{w-2},\dots,x_0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>，它表示的无符号整数为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mn>2</mn><msub><mi>U</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msubsup><msub><mi>x</mi><mi>i</mi></msub><msup><mn>2</mn><mi>i</mi></msup></mrow><annotation encoding="application/x-tex">B2U_{w}(\vec{x})=\sum_{i=0}^{w-1}x_i2^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.253718em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span></span></span></p>
<h2 id="有符号数"><a class="markdownIt-Anchor" href="#有符号数"></a> 有符号数</h2>
<p>现代计算机使用补码(two’s complement)来表示一个有符号数。对于一个布尔向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo>=</mo><mo stretchy="false">[</mo><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\vec{x}=[x_{w-1},x_{w-2},\dots,x_0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>，它表示的补码数值为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mn>2</mn><msub><mi>T</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msub><msup><mn>2</mn><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>+</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>w</mi><mo>−</mo><mn>2</mn></mrow></msubsup><msub><mi>x</mi><mi>i</mi></msub><msup><mn>2</mn><mi>i</mi></msup></mrow><annotation encoding="application/x-tex">B2T_{w}(\vec{x})=-x_{w-1}2^{w-1}+\sum_{i=0}^{w-2}x_i2^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0224389999999999em;vertical-align:-0.208331em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.253718em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span></span></span></p>
<p>此外，有符号数也可以用反码(又称one’s complement)来表示：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mn>2</mn><msub><mi>O</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><msup><mn>2</mn><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>w</mi><mo>−</mo><mn>2</mn></mrow></msubsup><msub><mi>x</mi><mi>i</mi></msub><msup><mn>2</mn><mi>i</mi></msup></mrow><annotation encoding="application/x-tex">B2O_{w}(\vec{x})=-x_{w-1}(2^{w-1}-1)+\sum_{i=0}^{w-2}x_i2^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.253718em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span></span></span>，或是用原码来表示：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mn>2</mn><msub><mi>S</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msub></msup><mo>⋅</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>w</mi><mo>−</mo><mn>2</mn></mrow></msubsup><msub><mi>x</mi><mi>i</mi></msub><msup><mn>2</mn><mi>i</mi></msup></mrow><annotation encoding="application/x-tex">B2S_{w}(\vec{x})=(-1)^{x_{w-1}}\cdot\sum_{i=0}^{w-2}x_i2^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173142857142857em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.20252142857142857em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.253718em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span></span></span>。</p>
<h2 id="有符号数和无符号数的转换"><a class="markdownIt-Anchor" href="#有符号数和无符号数的转换"></a> 有符号数和无符号数的转换</h2>
<p>在C语言中，对于字长相等的有符号数和无符号数之间的转换，仅仅是改变数据类型(有无符号之间的转换)，数字的比特表示并不改变。对于有符号数来说，其最高位比特表示<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><msup><mn>2</mn><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">-2^{w-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>，而无符号数的最高位比特为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">2^{w-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>，因此二者之间的转换关系如下：</p>
<ul>
<li>有符号数向无符号数的转换：</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mn>2</mn><msub><mi>U</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>B</mi><mn>2</mn><msub><mi>U</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>T</mi><mn>2</mn><msub><mi>B</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mo>+</mo><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msub><msup><mn>2</mn><mi>w</mi></msup></mrow><annotation encoding="application/x-tex">T2U_{w}(x)=B2U_{w}(T2B_{w}(x))=x+x_{w-1}2^{w}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.922723em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>也就是说，当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>为正时，将其转换为无符号数时数值保持不变；而当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>为负时，将其转换为有符号数时相当于是将原来的值加上<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>w</mi></msup></mrow><annotation encoding="application/x-tex">2^w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span></span></span></p>
<ul>
<li>无符号数向有符号数的转换：</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>U</mi><mn>2</mn><msub><mi>T</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo><mo>=</mo><mi>B</mi><mn>2</mn><msub><mi>T</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>T</mi><mn>2</mn><msub><mi>B</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mi>u</mi><mo>−</mo><msub><mi>u</mi><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msub><msup><mn>2</mn><mi>w</mi></msup></mrow><annotation encoding="application/x-tex">U2T_{w}(u)=B2T_{w}(T2B_{w}(u))=u-u_{w-1}2^{w}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">u</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.922723em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">u</span></span></span></span>的值不大于有符号数所能表示的最大值时，将其转换为有符号数之后数值保持不变；否则会变为负数，相当于是将原来的无符号数减去<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>w</mi></msup></mrow><annotation encoding="application/x-tex">2^w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span></span></span>。</p>
<h2 id="字长的扩展"><a class="markdownIt-Anchor" href="#字长的扩展"></a> 字长的扩展</h2>
<p>C语言可以将一个变量从字长较小的数据类型转换为一个字长较大的数据类型。在转换前后，其数值的大小保持不变。</p>
<p>无符号数的字长扩展：假设原来的比特向量为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>u</mi><mo>⃗</mo></mover><mo>=</mo><mo stretchy="false">[</mo><msub><mi>u</mi><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><mi>w</mi><mo>−</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>u</mi><mn>0</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\vec{u}=[u_{w-1},u_{w-2},\dots,u_0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">u</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>，其长度为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>，将其扩展为更大的字长<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>w</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">w&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>之后，它的比特向量表示为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><msup><mi>u</mi><mo mathvariant="normal">′</mo></msup><mo>⃗</mo></mover><mo>=</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mn>0</mn><mo separator="true">,</mo><msub><mi>u</mi><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><mi>w</mi><mo>−</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>u</mi><mn>0</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\vec{u&#x27;}=[0,\dots,0,u_{w-1},u_{w-2},\dots,u_0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9608919999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9608919999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6778919999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.246892em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span></p>
<p>有符号数的字长扩展：假设原来的比特向量为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo>=</mo><mo stretchy="false">[</mo><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\vec{x}=[x_{w-1},x_{w-2},\dots,x_0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>，其长度为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>，将其扩展为更大的字长<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>w</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">w&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>之后，它的比特向量表示为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><msup><mi>x</mi><mo mathvariant="normal">′</mo></msup><mo>⃗</mo></mover><mo>=</mo><mo stretchy="false">[</mo><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\vec{x&#x27;}=[x_{w-1},\dots,x_{w-1},x_{w-1},x_{w-2},\dots,x_0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9608919999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9608919999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6778919999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.246892em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span></p>
<h2 id="字长的减小"><a class="markdownIt-Anchor" href="#字长的减小"></a> 字长的减小</h2>
<p>在C语言中，也可以强制将一个字长较长的数据类型转换为一个字长较短的数据类型。假设我们要将一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>字节的数据<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo>=</mo><mo stretchy="false">[</mo><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>w</mi><mo>−</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\vec{x}=[x_{w-1},x_{w-2},\dots,x_0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>转换为一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>字节的数据，则直接丢掉<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>的高位<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mo>−</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">w-k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>个比特，得到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><msup><mi>x</mi><mo mathvariant="normal">′</mo></msup><mo>⃗</mo></mover><mo>=</mo><mo stretchy="false">[</mo><msub><mi>x</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>k</mi><mo>−</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\vec{x&#x27;}=[x_{k-1},x_{k-2},\dots,x_0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9608919999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9608919999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6778919999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.246892em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>。因此，字长减小可能会导致数据的溢出。</p>
<h1 id="整数的算数运算"><a class="markdownIt-Anchor" href="#整数的算数运算"></a> 整数的算数运算</h1>
<h2 id="加法"><a class="markdownIt-Anchor" href="#加法"></a> 加法</h2>
<h3 id="无符号加法"><a class="markdownIt-Anchor" href="#无符号加法"></a> 无符号加法</h3>
<p>对于无符号数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>满足<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>≤</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>&lt;</mo><msup><mn>2</mn><mi>w</mi></msup></mrow><annotation encoding="application/x-tex">0\le x,y&lt;2^w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span></span></span>，它们的加法运算定义如下：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><msubsup><mo>+</mo><mi>w</mi><mi>u</mi></msubsup><mi>y</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo separator="true">,</mo><mtext> </mtext><mi>x</mi><mo>+</mo><mi>y</mi><mo>&lt;</mo><msup><mn>2</mn><mi>w</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>−</mo><msup><mn>2</mn><mi>w</mi></msup><mo separator="true">,</mo><mtext> </mtext><msup><mn>2</mn><mi>w</mi></msup><mo>≤</mo><mo>&lt;</mo><mi>x</mi><mo>+</mo><mi>y</mi><mo>&lt;</mo><msup><mn>2</mn><mrow><mi>w</mi><mo>+</mo><mn>1</mn></mrow></msup></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">x+_{w}^{u}y=\begin{cases}x+y,~x+y&lt;2^w\\
x+y-2^w,~2^w\le&lt;x+y&lt;2^{w+1}\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9613919999999999em;vertical-align:-0.247em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mbin">+</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace nobreak"> </span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace nobreak"> </span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x+y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>的最高位发生进位时，则会因为字长的限制无法表示进位，从而出现溢出的现象。可以理解为无符号数加法运算的结果是对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>w</mi></msup></mrow><annotation encoding="application/x-tex">2^w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span></span></span>取模的值。</p>
<p>溢出的判断：假设两个无符号数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>相加的结果为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span>，当且仅当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>&lt;</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">s&lt;x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>或是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>&lt;</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">s&lt;y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>时发生溢出。<br />
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002330.png" alt="image-20201009210659836" /><br />
通过无符号数加法的规则，我们也可以通过表达式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>−</mo><mi>w</mi><mi>u</mi></msubsup><mi>x</mi><msubsup><mo>+</mo><mi>w</mi><mi>u</mi></msubsup><mi>x</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">-_{w}^{u}x+_{w}^{u}x=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.911392em;vertical-align:-0.247em;"></span><span class="mord"><span class="mbin">−</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mbin">+</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>来定义无符号数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>取反之后的值<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>−</mo><mi>w</mi><mi>u</mi></msubsup><mi>x</mi></mrow><annotation encoding="application/x-tex">-_{w}^{u}x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.911392em;vertical-align:-0.247em;"></span><span class="mord"><span class="mbin">−</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span></span></span></span>：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>−</mo><mi>w</mi><mi>u</mi></msubsup><mi>x</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo separator="true">,</mo><mtext> </mtext><mi>x</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mn>2</mn><mi>w</mi></msup><mo>−</mo><mi>x</mi><mo separator="true">,</mo><mtext> </mtext><mi>x</mi><mo>&gt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">-_{w}^{u}x=\begin{cases}x,~x=0\\2^w-x,~x&gt;0\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9613919999999999em;vertical-align:-0.247em;"></span><span class="mord"><span class="mbin">−</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace nobreak"> </span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace nobreak"> </span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>因此，无符号数的取反相当于是对数字的所有比特位取反。</p>
<h3 id="补码的加法"><a class="markdownIt-Anchor" href="#补码的加法"></a> 补码的加法</h3>
<p>补码的加法情况更加复杂，假设有两个用补码表示的有符号数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>满足<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><msup><mn>2</mn><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>≤</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>≤</mo><msup><mn>2</mn><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-2^{w-1}\le x,y\le 2^{w-1}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.950078em;vertical-align:-0.13597em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，它们的和满足<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><msup><mn>2</mn><mi>w</mi></msup><mo>≤</mo><mi>x</mi><mo>+</mo><mi>y</mi><mo>≤</mo><msup><mn>2</mn><mi>w</mi></msup><mo>−</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">-2^w\le x+y\le 2^w-2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.800362em;vertical-align:-0.13597em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>。因此，在补码的加法运算中可能会出现上溢或者是下溢。</p>
<p>对于两个满足<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><msup><mn>2</mn><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>≤</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>≤</mo><msup><mn>2</mn><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-2^{w-1}\le x,y\le 2^{w-1}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.950078em;vertical-align:-0.13597em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>的有符号数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>，补码的加法定义如下：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><msubsup><mo>+</mo><mi>w</mi><mi>t</mi></msubsup><mi>y</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>−</mo><msup><mn>2</mn><mi>w</mi></msup><mo separator="true">,</mo><mtext> </mtext><msup><mn>2</mn><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>≤</mo><mi>x</mi><mo>+</mo><mi>y</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo separator="true">,</mo><mtext> </mtext><mo>−</mo><msup><mn>2</mn><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>≤</mo><mi>x</mi><mo>+</mo><mi>y</mi><mo>&lt;</mo><msup><mn>2</mn><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>+</mo><msup><mn>2</mn><mi>w</mi></msup><mo separator="true">,</mo><mtext> </mtext><mi>x</mi><mo>+</mo><mi>y</mi><mo>&lt;</mo><mo>−</mo><msup><mn>2</mn><mrow><mi>w</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">x+_{w}^{t}y=\begin{cases}x+y-2^w,~2^{w-1}\le x+y\\
x+y,~-2^{w-1}\le x+y&lt;2^{w-1}\\
x+y+2^w,~x+y&lt;-2^{w-1}\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0905559999999999em;vertical-align:-0.247em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mbin">+</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8435559999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace nobreak"> </span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace nobreak"> </span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace nobreak"> </span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>或是使用更简略的表示方法：<br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><msubsup><mo>+</mo><mi>w</mi><mi>t</mi></msubsup><mi>y</mi><mo>=</mo><mi>U</mi><mn>2</mn><msub><mi>T</mi><mi>w</mi></msub><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>y</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><msup><mn>2</mn><mi>w</mi></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">x+_{w}^{t}y=U2T_w[(x+y)~mod~2^w]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.040556em;vertical-align:-0.247em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mbin">+</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span><br />
上溢的判断：设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>=</mo><mi>x</mi><msubsup><mo>+</mo><mi>w</mi><mi>t</mi></msubsup><mi>y</mi></mrow><annotation encoding="application/x-tex">s=x+_{w}^{t}y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.040556em;vertical-align:-0.247em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mbin">+</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>，当且仅当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><mtext> </mtext><mi>y</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x&gt;0,~y&gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>但是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>≤</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">s\le 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>时发生上溢。<br />
下溢的判断：设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>=</mo><mi>x</mi><msubsup><mo>+</mo><mi>w</mi><mi>t</mi></msubsup><mi>y</mi></mrow><annotation encoding="application/x-tex">s=x+_{w}^{t}y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.040556em;vertical-align:-0.247em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mbin">+</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>，当且仅当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>&lt;</mo><mn>0</mn><mo separator="true">,</mo><mtext> </mtext><mi>y</mi><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x&lt;0,~y&lt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>但是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">s\ge 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>时发生下溢。<br />
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002336.png" alt="image-20201009210820718" /></p>
<p>与无符号数类似，我们可以通过表达式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>−</mo><mi>w</mi><mi>t</mi></msubsup><mi>x</mi><msubsup><mo>+</mo><mi>w</mi><mi>t</mi></msubsup><mi>x</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">-_{w}^{t}x+_{w}^{t}x=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.040556em;vertical-align:-0.247em;"></span><span class="mord"><span class="mbin">−</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mbin">+</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>来定义补码表示的有符号数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>取反之后的值<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>−</mo><mi>w</mi><mi>t</mi></msubsup><mi>x</mi></mrow><annotation encoding="application/x-tex">-_{w}^{t}x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.040556em;vertical-align:-0.247em;"></span><span class="mord"><span class="mbin">−</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span></span></span></span>：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>−</mo><mi>w</mi><mi>t</mi></msubsup><mi>x</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>T</mi><mi>M</mi><mi>i</mi><msub><mi>n</mi><mi>w</mi></msub><mo separator="true">,</mo><mtext> </mtext><mi>x</mi><mo>=</mo><mi>T</mi><mi>M</mi><mi>i</mi><msub><mi>n</mi><mi>w</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>x</mi><mo separator="true">,</mo><mtext> </mtext><mi>x</mi><mo>&gt;</mo><mi>T</mi><mi>M</mi><mi>i</mi><msub><mi>n</mi><mi>w</mi></msub></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">-_{w}^{t}x=\begin{cases}TMin_w,~x=TMin_w\\-x,~x&gt;TMin_w\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0905559999999999em;vertical-align:-0.247em;"></span><span class="mord"><span class="mbin">−</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8435559999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">i</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace nobreak"> </span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">i</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace nobreak"> </span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">i</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mi>M</mi><mi>i</mi><msub><mi>n</mi><mi>w</mi></msub></mrow><annotation encoding="application/x-tex">TMin_w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">i</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>指的是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>所能够取得的最小值。</p>
<p>从中也可以得出，补码的取反相当于是对数字的所有比特位取反再加1。</p>
<p>对于减法来说，相当于是对数字取反之后再做加法，因此不再赘述。</p>
<h2 id="乘法"><a class="markdownIt-Anchor" href="#乘法"></a> 乘法</h2>
<h3 id="无符号数乘法"><a class="markdownIt-Anchor" href="#无符号数乘法"></a> 无符号数乘法</h3>
<p>在无符号数的乘法运算中，假设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>都为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>比特，它们的乘法计算结果如果不溢出的话需要<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mi>w</mi></mrow><annotation encoding="application/x-tex">2w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>个比特来存放。在C语言中，两个无符号数乘积的高<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>位会被舍去，只留下低<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>位。</p>
<p>因此，对于两个无符号数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>满足<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>≤</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>≤</mo><mi>U</mi><mi>M</mi><mi>a</mi><msub><mi>x</mi><mi>w</mi></msub></mrow><annotation encoding="application/x-tex">0\le x,y \le UMax_w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，它们的乘法运算定义如下：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><msubsup><mo>∗</mo><mi>w</mi><mi>u</mi></msubsup><mi>y</mi><mo>=</mo><mo stretchy="false">(</mo><mi>x</mi><mo>⋅</mo><mi>y</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><msup><mn>2</mn><mi>w</mi></msup></mrow><annotation encoding="application/x-tex">x*_{w}^{u}y=(x\cdot y)~mod~2^w
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9613919999999999em;vertical-align:-0.247em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mbin">∗</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>在计算机中，无符号数的乘法是通过加法和移位运算来进行的。在初始状态下，乘数放在32位的乘数寄存器中，被乘数放在64位被乘数寄存器的右半部分，64位积寄存器为0，重复以下步骤32次：</p>
<ol>
<li>测试乘数的最低位，如果最低位为1，则给乘积寄存器加上被乘数</li>
<li>被乘数寄存器左移1位，乘数寄存器右移1位</li>
</ol>
<h3 id="补码的乘法"><a class="markdownIt-Anchor" href="#补码的乘法"></a> 补码的乘法</h3>
<p>与无符号数的乘法运算类似，假设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>都为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>比特，如果乘法运算的结果不溢出也需要<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mi>w</mi></mrow><annotation encoding="application/x-tex">2w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>个比特来存放。C语言对补码乘积同样只保留低<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>位。</p>
<p>因此，对于两个有符号数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>满足<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mi>M</mi><mi>i</mi><msub><mi>n</mi><mi>w</mi></msub><mo>≤</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>≤</mo><mi>T</mi><mi>M</mi><mi>a</mi><msub><mi>x</mi><mi>w</mi></msub></mrow><annotation encoding="application/x-tex">TMin_w\le x,y \le TMax_w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">i</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，它们的乘法运算定义如下：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><msubsup><mo>∗</mo><mi>w</mi><mi>t</mi></msubsup><mi>y</mi><mo>=</mo><mi>U</mi><mn>2</mn><msub><mi>T</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>x</mi><mo>⋅</mo><mi>y</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><msup><mn>2</mn><mi>w</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x*_{w}^{t}y=U2T_w((x\cdot y)~mod~2^w)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0905559999999999em;vertical-align:-0.247em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mbin">∗</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8435559999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>由于无符号数和补码乘积的结果都要对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>w</mi></msup></mrow><annotation encoding="application/x-tex">2^w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span></span></span></span></span></span></span>取余(相当于与二进制中最高位有关的计算结果直接被舍弃)，因此如果两个无符号数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x,y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>和两个有符号数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><msup><mi>y</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">x&#x27;,y&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>具有相同的二进制表示，则它们的乘积也具有相同的二进制表示，即使用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mi>w</mi></mrow><annotation encoding="application/x-tex">2w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>表示它们乘积的结果时可能并不相同。</p>
<p>在计算补码乘法时，如果按照与无符号数乘法类似的办法，需要先对被乘数做有符号的字长扩充，然后再进行重复移位和累加计算（相比于无符号数的计算少重复一次）。并且当乘数的符号位为负时，对结果进行修正：以32位为例，最后要对结果加上左移了31位的被乘数的补码。这一方法的数学原理是，我们假设被乘数为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>，乘数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><msup><mi>y</mi><mo mathvariant="normal">′</mo></msup><mo>−</mo><msub><mi>y</mi><mrow><mi>ω</mi><mo>−</mo><mn>1</mn></mrow></msub><msup><mn>2</mn><mrow><mi>ω</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">y=y&#x27;-y_{\omega-1}2^{\omega-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0224389999999999em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>y</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">y&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>为除去最高位之外的剩余部分的值，则它们的乘积<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>⋅</mo><mi>y</mi><mo>=</mo><mi>x</mi><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><msub><mi>y</mi><mrow><mi>ω</mi><mo>−</mo><mn>1</mn></mrow></msub><msup><mn>2</mn><mrow><mi>ω</mi><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><msup><mi>y</mi><mo mathvariant="normal">′</mo></msup><mo>−</mo><mo stretchy="false">(</mo><msup><mn>2</mn><mrow><mi>ω</mi><mo>−</mo><mn>1</mn></mrow></msup><mi>x</mi><mo stretchy="false">)</mo><msub><mi>y</mi><mrow><mi>ω</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">x\cdot y=x(y-y_{\omega-1}2^{\omega-1})=xy&#x27;-(2^{\omega-1}x)y_{\omega-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>，</p>
<p>但是这样计算比较麻烦，因为在做有符号的字长扩充时，经常会因此产生大量的1，因此常用Booth算法进行计算。Booth算法的数学原理如下：假设有补码表示的被乘数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>和乘数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mo>−</mo><msup><mn>2</mn><mrow><mi>ω</mi><mo>−</mo><mn>1</mn></mrow></msup><msub><mi>y</mi><mrow><mi>ω</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msup><mn>2</mn><mrow><mi>ω</mi><mo>−</mo><mn>2</mn></mrow></msup><msub><mi>y</mi><mrow><mi>ω</mi><mo>−</mo><mn>2</mn></mrow></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msup><mn>2</mn><mn>0</mn></msup><msub><mi>y</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">y=-2^{\omega-1}y_{\omega-1}+2^{\omega-2}y_{\omega-2}+\dots+2^0y_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0224389999999999em;vertical-align:-0.208331em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0224389999999999em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>可以写成另一种表示形式：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><msup><mn>2</mn><mrow><mi>ω</mi><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><mo>−</mo><msub><mi>y</mi><mrow><mi>ω</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><msub><mi>y</mi><mrow><mi>ω</mi><mo>−</mo><mn>2</mn></mrow></msub><mo stretchy="false">)</mo><mo>+</mo><msup><mn>2</mn><mrow><mi>ω</mi><mo>−</mo><mn>2</mn></mrow></msup><mo stretchy="false">(</mo><mo>−</mo><msub><mi>y</mi><mrow><mi>ω</mi><mo>−</mo><mn>2</mn></mrow></msub><mo>+</mo><msub><mi>y</mi><mrow><mi>ω</mi><mo>−</mo><mn>3</mn></mrow></msub><mo stretchy="false">)</mo><mo>+</mo><mo>⋯</mo><mo>+</mo><mo stretchy="false">(</mo><mo>−</mo><msub><mi>y</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y=2^{\omega-1}(-y_{\omega-1}+y_{\omega-2})+2^{\omega-2}(-y_{\omega-2}+y_{\omega-3})+\dots+(-y_0)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mbin mtight">−</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>通过这种变换，我们便可以将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>的乘法计算变成如下的步骤：</p>
<ol>
<li>
<p>在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>的右侧补一位<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mrow><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">y_{-1}=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，同时对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>做有符号数的字长扩充，初始化乘积<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">z=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></p>
</li>
<li>
<p>当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>从0循环累加到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ω</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\omega-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>时，每一次循环做如下操作：</p>
<ul>
<li>
<p>如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">y_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>符号相同，则只做<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><mi>x</mi><mo>&lt;</mo><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x=x&lt;&lt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>操作</p>
</li>
<li>
<p>如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">y_i=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">y_{i-1}=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi><mo>=</mo><mi>z</mi><mo>−</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">z=z-x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>，然后做<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><mi>x</mi><mo>&lt;</mo><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x=x&lt;&lt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
</li>
<li>
<p>如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">y_i=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">y_{i-1}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi><mo>=</mo><mi>z</mi><mo>+</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">z=z+x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>，然后做<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><mi>x</mi><mo>&lt;</mo><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x=x&lt;&lt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
</li>
</ul>
</li>
</ol>
<h3 id="与常数相乘"><a class="markdownIt-Anchor" href="#与常数相乘"></a> 与常数相乘</h3>
<p>如果计算的是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">2^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>相乘，则直接对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>做左移<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>位的操作即可得到乘积，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>的高<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>位会被直接丢弃。</p>
<p>由于计算机中的移位操作与加法操作比起乘法操作要快得多，因此C编译器在遇到不是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">2^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>这样的常数时，会将其拆成若干个移位与加法操作的结合来实现乘法。</p>
<h2 id="除法操作"><a class="markdownIt-Anchor" href="#除法操作"></a> 除法操作</h2>
<h3 id="2的幂指数的除法"><a class="markdownIt-Anchor" href="#2的幂指数的除法"></a> 2的幂指数的除法</h3>
<p>要对一个无符号数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>除以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">2^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>，可以直接对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>做算数右移<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>位的操作。由于右移时要丢掉低位的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>个比特，因此如果低位的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>个比特中有1的话，则意味着除法计算结果产生了小数点，这一部分会被直接舍去，相当于对计算结果做向下舍去。同时，右移的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>个比特便是除法计算的余数部分。<br />
而对于有符号数来说，如果直接做算数右移<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>位的操作，在产生小数的时候同样相当于是做向下舍去。此时，无论是正数还是负数，其结果都是向下取整。</p>
<p>在C语言中，对于有符号数除法使用的是向零取整的策略，即正数向下取整，负数向上取整。因此要对一个有符号数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>除以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">2^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>，如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>是正数，则直接右移<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>位；如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>是负数，则将其转换为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>&lt;</mo><mo>&lt;</mo><mi>k</mi><mo stretchy="false">)</mo><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>&gt;</mo><mo>&gt;</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">(x+(1&lt;&lt;k)-1)&gt;&gt;k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>的操作。</p>
<h3 id="不是2的幂指数的除法"><a class="markdownIt-Anchor" href="#不是2的幂指数的除法"></a> 不是2的幂指数的除法</h3>
<p>计算机计算除法的步骤与人计算十进制除法的步骤类似。以无符号数为例，在计算开始时，商寄存器为0，除数被放在64位除数寄存器的左半边，余数寄存器为被除数。接下来重复以下步骤33次：</p>
<ol>
<li>从余数寄存器中减去除数寄存器的内容，将结果放在余数寄存器中</li>
<li>如果余数小于0，则给余数寄存器加上除数寄存器的内容来恢复原值，同时将商左移，并把最低位设为0；如果余数大于0，则将商寄存器左移，最低位设为1</li>
<li>将除数寄存器右移1位</li>
</ol>
<p>如果是有符号数，则可以先确定商和余数的符号，商的符号取决于除数和被除数的符号是否相同，余数的符号与被除数相同。接下来，便可以将有符号数转换为无符号数，按照无符号数的除法计算商和余数。</p>
<h1 id="浮点数"><a class="markdownIt-Anchor" href="#浮点数"></a> 浮点数</h1>
<h2 id="ieee浮点数标准"><a class="markdownIt-Anchor" href="#ieee浮点数标准"></a> IEEE浮点数标准</h2>
<p>IEEE浮点数标准规定了格式为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mi>s</mi></msup><mo>×</mo><mi>M</mi><mo>×</mo><msup><mn>2</mn><mi>E</mi></msup></mrow><annotation encoding="application/x-tex">V=(-1)^s\times M \times 2^E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span></span></span></span></span></span></span></span></span></span></span>的数字如何表示：</p>
<ul>
<li>符号<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span>决定了数字的符号，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">s=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>代表负数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">s=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>代表正数。</li>
<li>尾数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>是一个二进制表示的分数，它的大小范围为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>∼</mo><mn>2</mn><mo>−</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">1\sim 2-\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>(非规格化数字)或是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>∼</mo><mn>1</mn><mo>−</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">0\sim 1-\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>(规格化数字)。</li>
<li>阶码<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>是对浮点数加权，以2的幂指数倍对数字做放大或缩小</li>
</ul>
<p>上述的三个变量对应了浮点数二进制表示中，从高位到低位的三个部分：</p>
<ul>
<li>最高位的一个比特为符号位<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span>。</li>
<li>中间的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>位对应于阶码<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>的二进制编码exp，在C语言中，float类型对应的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>=</mo><mn>8</mn></mrow><annotation encoding="application/x-tex">k=8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span></span></span></span>，double类型对应的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>=</mo><mn>11</mn></mrow><annotation encoding="application/x-tex">k=11</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span></span></span></span>。</li>
<li>最低的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>位对应于尾数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>的二进制编码frac，在C语言中，float类型对应的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>=</mo><mn>23</mn></mrow><annotation encoding="application/x-tex">n=23</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">3</span></span></span></span>，double类型对应的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>=</mo><mn>52</mn></mrow><annotation encoding="application/x-tex">n=52</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">2</span></span></span></span>。<br />
根据exp部分的值，二进制编码所对应的浮点数值分为如下的三种情况：</li>
</ul>
<h3 id="规格化数"><a class="markdownIt-Anchor" href="#规格化数"></a> 规格化数</h3>
<p>当exp部分不全为0也不全为1时，此时的浮点数为规格化数。在这种情况下，阶码部分<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>是一个加入偏置之后的值，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>=</mo><mi>e</mi><mo>−</mo><mi>B</mi><mi>i</mi><mi>a</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">E=e-Bias</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">i</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span></span></span></span>。其中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">e</span></span></span></span>是exp所对应的无符号数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mi>i</mi><mi>a</mi><mi>s</mi><mo>=</mo><msup><mn>2</mn><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">Bias=2^{k-1}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">i</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9324379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>(float类型为127，double类型为1023)。因此，在单精度数中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>的范围是-126~127，双精度数中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>的范围是-1022~1023。</p>
<p>而frac部分则被表示为一个分数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span>，它的取值范围为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>≤</mo><mi>f</mi><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0\le f&lt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，对应的二进制表示为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0.</mn><msub><mi>f</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>⋯</mo><msub><mi>f</mi><mn>1</mn></msub><msub><mi>f</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">0.f_{n-1}\cdots f_1f_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。而尾数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>则被表示为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>=</mo><mn>1</mn><mo>+</mo><mi>f</mi></mrow><annotation encoding="application/x-tex">M=1+f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span>。总的来说，相当于此时<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>的二进制表示为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.</mn><msub><mi>f</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>⋯</mo><msub><mi>f</mi><mn>1</mn></msub><msub><mi>f</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">1.f_{n-1}\cdots f_1f_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p>
<h3 id="非规格化数"><a class="markdownIt-Anchor" href="#非规格化数"></a> 非规格化数</h3>
<p>当exp部分全部为0时，此时的浮点数是非规格化数字。在这种情况下，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>=</mo><mn>1</mn><mo>−</mo><mi>B</mi><mi>i</mi><mi>a</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">E=1-Bias</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">i</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>=</mo><mi>f</mi></mrow><annotation encoding="application/x-tex">M=f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span>。此时相当于是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>取它能够表示的最小值，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>的二进制表示为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0.</mn><msub><mi>f</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>⋯</mo><msub><mi>f</mi><mn>1</mn></msub><msub><mi>f</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">0.f_{n-1}\cdots f_1f_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p>
<p>当frac部分也全部都为0时，浮点数的值为0，无论符号位<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span>是0还是1。因此，在浮点数中的0有-0.0和+0.0两种。在一部分情况下，它们被认为是相同的，而也有一些情况下它们被认为是不同的。</p>
<h3 id="特殊值"><a class="markdownIt-Anchor" href="#特殊值"></a> 特殊值</h3>
<p>当exp部分全部为1时，表示的浮点数中的特殊值。</p>
<p>当frac部分全部为0时，表示的是无穷，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">s=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>对应正无穷，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">s=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>对应负无穷。这种情况在两个大数相乘，或是除以0的时候会出现。<br />
而当frac部分不全为0时，对应的结果是NaN(Not a number)。这种情况在两个无穷数进行运算，或是对负数开方的时候会出现，有时也用它来表示未初始化的数或是缺失值。</p>
<h3 id="一些典型值"><a class="markdownIt-Anchor" href="#一些典型值"></a> 一些典型值</h3>
<p>下表给出了单精度与双精度数字中的一些典型数值：</p>
<table>
<thead>
<tr>
<th style="text-align:center">描述</th>
<th style="text-align:center">exp</th>
<th style="text-align:center">frac</th>
<th style="text-align:center">单精度值</th>
<th style="text-align:center">十进制表示</th>
<th style="text-align:center">双精度值</th>
<th style="text-align:center">十进制表示</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">零</td>
<td style="text-align:center">00…00</td>
<td style="text-align:center">0…00</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0.0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0.0</td>
</tr>
<tr>
<td style="text-align:center">最小非规格化数</td>
<td style="text-align:center">00…00</td>
<td style="text-align:center">0…01</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mo>−</mo><mn>23</mn></mrow></msup><mo>×</mo><msup><mn>2</mn><mrow><mo>−</mo><mn>126</mn></mrow></msup></mrow><annotation encoding="application/x-tex">2^{-23}\times 2^{-126}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">2</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.4</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mn>45</mn></mrow></msup></mrow><annotation encoding="application/x-tex">1.4\times 10^{-45}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">4</span><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mo>−</mo><mn>52</mn></mrow></msup><mo>×</mo><msup><mn>2</mn><mrow><mo>−</mo><mn>1022</mn></mrow></msup></mrow><annotation encoding="application/x-tex">2^{-52}\times 2^{-1022}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">5</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>4.9</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mrow><mi mathvariant="normal">−</mi><mn>324</mn></mrow></msup></mrow><annotation encoding="application/x-tex">4.9\times 10^{−324}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mord">.</span><span class="mord">9</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">3</span><span class="mord mtight">2</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></span></td>
</tr>
<tr>
<td style="text-align:center">最大非规格化数</td>
<td style="text-align:center">00…00</td>
<td style="text-align:center">1…11</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>×</mo><msup><mn>2</mn><mrow><mo>−</mo><mn>126</mn></mrow></msup></mrow><annotation encoding="application/x-tex">(1- \epsilon)\times 2^{-126}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.2</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mn>38</mn></mrow></msup></mrow><annotation encoding="application/x-tex">1.2\times 10^{-38}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">3</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>×</mo><msup><mn>2</mn><mrow><mo>−</mo><mn>1022</mn></mrow></msup></mrow><annotation encoding="application/x-tex">(1- \epsilon)\times 2^{-1022}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2.2</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mrow><mi mathvariant="normal">−</mi><mn>308</mn></mrow></msup></mrow><annotation encoding="application/x-tex">2.2\times 10^{−308}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">3</span><span class="mord mtight">0</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span></span></td>
</tr>
<tr>
<td style="text-align:center">最小规格化数</td>
<td style="text-align:center">00…01</td>
<td style="text-align:center">0…00</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>×</mo><msup><mn>2</mn><mrow><mo>−</mo><mn>126</mn></mrow></msup></mrow><annotation encoding="application/x-tex">1\times 2^{-126}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.2</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mn>38</mn></mrow></msup></mrow><annotation encoding="application/x-tex">1.2\times 10^{-38}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">3</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>×</mo><msup><mn>2</mn><mrow><mo>−</mo><mn>1022</mn></mrow></msup></mrow><annotation encoding="application/x-tex">1\times 2^{-1022}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2.2</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mrow><mi mathvariant="normal">−</mi><mn>308</mn></mrow></msup></mrow><annotation encoding="application/x-tex">2.2\times 10^{−308}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">3</span><span class="mord mtight">0</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span></span></td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">01…11</td>
<td style="text-align:center">0…00</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>×</mo><msup><mn>2</mn><mn>0</mn></msup></mrow><annotation encoding="application/x-tex">1\times 2^{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center">1.0</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>×</mo><msup><mn>2</mn><mn>0</mn></msup></mrow><annotation encoding="application/x-tex">1\times 2^{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center">1.0</td>
</tr>
<tr>
<td style="text-align:center">最大规格化数</td>
<td style="text-align:center">11…10</td>
<td style="text-align:center">1…11</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>2</mn><mo>−</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>×</mo><msup><mn>2</mn><mn>127</mn></msup></mrow><annotation encoding="application/x-tex">(2-\epsilon)\times 2^{127}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">7</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>3.4</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>38</mn></msup></mrow><annotation encoding="application/x-tex">3.4\times 10^{38}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mord">.</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>2</mn><mo>−</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>×</mo><msup><mn>2</mn><mn>1023</mn></msup></mrow><annotation encoding="application/x-tex">(2 - \epsilon)\times 2^{1023}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1.8</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>308</mn></msup></mrow><annotation encoding="application/x-tex">1.8\times 10^{308}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">0</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span></span></td>
</tr>
</tbody>
</table>
<h3 id="十进制数转换为浮点数"><a class="markdownIt-Anchor" href="#十进制数转换为浮点数"></a> 十进制数转换为浮点数</h3>
<p>对于一个十进制数，要将其转换为浮点数，可以按照以下步骤操作：</p>
<ol>
<li>先把十进制数的整数和小数部分转化为二进制</li>
<li>根据十进制数的大小，判断它转换成的浮点数是规格化数还是非规格化数字。如果是规格化数字，则通过对小数点进行移动，将整数部分变为只有1，并记录下小数点左移或右移的位数；如果是非规格化数字，则小数点直接右移126位。</li>
<li>根据上一步转换的结果，分别设置符号位、阶码和尾数，尾数部分多余的直接舍去。</li>
</ol>
<h2 id="浮点数在数轴上的分布"><a class="markdownIt-Anchor" href="#浮点数在数轴上的分布"></a> 浮点数在数轴上的分布</h2>
<p>对于浮点数来说，所有可以表示的数字在数轴上的分布不是均匀的，越靠近0的地方分布地越密集，而越远离0的地方分布地越稀疏，如下图所示<br />
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105001427.png" alt="image-20201009210124712" /></p>
<h2 id="浮点数的舍入"><a class="markdownIt-Anchor" href="#浮点数的舍入"></a> 浮点数的舍入</h2>
<p>由于浮点数的表示范围和精度都有限，因此对于浮点数不能精确表示的实数，浮点数只能通过近似的方式去表示。</p>
<p>IEEE标准中规定了浮点数有4种不同的近似方式：</p>
<ul>
<li>
<p>舍入为偶数(又称舍入为最近)：使用与真实值差值最小的近似值</p>
</li>
<li>
<p>向0舍入：将正数向下舍入，负数向上舍入</p>
</li>
<li>
<p>向下舍入：无论正数和负数都向下舍入</p>
</li>
<li>
<p>向上舍入：无论正数和负数都向上舍入</p>
</li>
</ul>
<p>例：</p>
<table>
<thead>
<tr>
<th style="text-align:center">Mode</th>
<th style="text-align:center">1.40</th>
<th style="text-align:center">1.60</th>
<th style="text-align:center">1.50</th>
<th style="text-align:center">2.50</th>
<th style="text-align:center">-1.50</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Round-to-even</td>
<td style="text-align:center">1</td>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
<td style="text-align:center">-2</td>
</tr>
<tr>
<td style="text-align:center">Round-toward-zero</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">2</td>
<td style="text-align:center">-1</td>
</tr>
<tr>
<td style="text-align:center">Round-down</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">2</td>
<td style="text-align:center">-2</td>
</tr>
<tr>
<td style="text-align:center">Round-up</td>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
<td style="text-align:center">3</td>
<td style="text-align:center">-1</td>
</tr>
</tbody>
</table>
<h2 id="浮点数运算"><a class="markdownIt-Anchor" href="#浮点数运算"></a> 浮点数运算</h2>
<p>浮点数的运算过程比起整型数要复杂，此处仅仅是简单介绍浮点数的运算步骤，更详细的步骤需要查阅相关资料。</p>
<h3 id="结果的近似"><a class="markdownIt-Anchor" href="#结果的近似"></a> 结果的近似</h3>
<p>对于浮点数的计算，它的计算结果是实际运算的精确结果进行舍入之后的结果。以加法为例，浮点数的运算可以表示为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>d</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Round(x+y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">o</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>，对于其他的任何运算也都采用此规则。因此，浮点数运算满足交换律，但是不满足结合律。</p>
<h3 id="加减法"><a class="markdownIt-Anchor" href="#加减法"></a> 加减法</h3>
<p>浮点数加法的步骤如下（假设符号位相同，且都为规格化数字）：</p>
<ol>
<li>对阶：将两个浮点数的阶码变得相同。对阶的原则是小的阶码向大的阶码对齐，阶码左移1位，对应于尾数要右移1位</li>
<li>尾数求和</li>
<li>规格化：当尾数溢出时，需要对尾数进行右移，并对阶码加1，在这一过程中可能会发生舍入</li>
</ol>
<p>减法的步骤类似，只是此时在对尾数求和的时候需要考虑符号位</p>
<h3 id="乘除法"><a class="markdownIt-Anchor" href="#乘除法"></a> 乘除法</h3>
<p>浮点数乘除法的步骤如下（假设参与运算的都为规格化数字）：</p>
<ol>
<li>将两操作数的阶码相加（乘法）或相减（除法）作为新的阶码</li>
<li>计算尾数的乘积或商，并对结果做舍入</li>
<li>如果有需要，对结果进行规格化，在这一过程中可能会发生舍入</li>
<li>确定符号位</li>
</ol>
<h2 id="浮点数的类型转换"><a class="markdownIt-Anchor" href="#浮点数的类型转换"></a> 浮点数的类型转换</h2>
<p>在C语言中，浮点数和整型数之间可以相互转换，规则如下：</p>
<ul>
<li>将int转换为float时，不会发生上溢，但是可能会被近似</li>
<li>将int或float转换为double时，可以做到精确转换</li>
<li>将double转为float时，数字要么因为浮点数的表示范围小而发生上溢，要么因为浮点数的精度低被近似</li>
<li>将float或double转成int时，数字将会被向0近似为整数。而且也有可能会发生上溢。</li>
</ul>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<p>[1] 深入理解计算机系统(第三版)</p>
<p>[2] 哈尔滨工业大学 计算机组成原理公开课</p>
<p>[3] 计算机组成与设计：硬件/软件接口</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机组成原理-计算机的硬件组成</title>
    <url>/2021/01/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E7%A1%AC%E4%BB%B6%E7%BB%84%E6%88%90/</url>
    <content><![CDATA[<h1 id="中央处理器cpu"><a class="markdownIt-Anchor" href="#中央处理器cpu"></a> 中央处理器（CPU）</h1>
<h2 id="cpu组成"><a class="markdownIt-Anchor" href="#cpu组成"></a> CPU组成</h2>
<p>冯·诺依曼结构CPU的组成部件包括算术逻辑部件（ALU），寄存器，和连接它们的内部总线。从逻辑上说，这些组成部件可以被划分为运算器和控制器两大部分。</p>
<p>运算器接收控制器送来的命令并执行相应的动作，对数据进行加工和处理。它主要由算术逻辑单元（ALU，进行算数和逻辑运算）、暂存寄存器（暂存从主存中得到的数据）、通用寄存器（存放操作数和各种地址信息）、状态字寄存器（PSW，保存算术逻辑运算指令或测试指令产生的状态信息）、移位器（对操作数或计算结果进行移位运算）和计数器（CT，控制乘除运算的操作步骤）组成。</p>
<p>控制器分为硬布线控制器和微程序控制器两种，它的功能是执行指令，每条指令的执行是由控制器发出的一组微操作实现的。控制器包括程序计数器（PC，指向下一条指令在主存内的存放地址）、指令寄存器（IR，保存当前执行的指令）、指令译码器（对操作码字段进行译码，从而向控制器提供特定的操作信号）、存储器地址寄存器（MAR，存放要访问的主存单元的地址）、存储器数据寄存器（MDR，存放向主存写入的信息或是从主存读取到的信息）、时序系统（产生各种时序信号）、微操作信号发生器（根据IR、PSW的内容和时序信号，产生控制信号）。注意MAR、MDR和IR是用户不可见的。控制器的工作原理是根据指令操作码、微指令序列和条件信号来形成计算机各部件需要用到的控制信号。</p>
<p>另外，在现代处理器中，为了实现操作系统的虚拟内存功能，在CPU内部封装了一个内存管理单元（Memory Management Unit, MMU），用于实现虚拟地址和物理地址之间的相互转化。</p>
<a id="more"></a>
<h2 id="指令"><a class="markdownIt-Anchor" href="#指令"></a> 指令</h2>
<h3 id="机器指令"><a class="markdownIt-Anchor" href="#机器指令"></a> 机器指令</h3>
<p>对于一条汇编指令，它的机器码分为两部分：操作码字段（对应于汇编指令的类型）和地址码字段（对应于汇编指令的操作数）。指令字长由操作码长度、操作数地址的长度和个数共同决定。</p>
<p>CPU支持的所有操作指令（即所有的汇编指令）组成指令集。指令集的一个重要性质就是字节编码必须有唯一的解释，任意一个字节序列要么是一个唯一的指令序列的编码，要么就不是一个合法的字节序列。</p>
<p>根据指令集大小的不同，分为CISC（复杂指令集计算机，如x86-64）和RISC（精简指令集计算机，如嵌入式系统）指令集。它们的主要区别如下：</p>
<table>
<thead>
<tr>
<th style="text-align:left">CISC</th>
<th style="text-align:left">RISC</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">指令数量很多（可达1000以上），各个指令使用频率相差很大</td>
<td style="text-align:left">指令数量少得多（通常少于100），复杂指令用简单指令组合</td>
</tr>
<tr>
<td style="text-align:left">有些指令的延迟很长</td>
<td style="text-align:left">没有较长延迟的指令</td>
</tr>
<tr>
<td style="text-align:left">编码可变长度</td>
<td style="text-align:left">编码固定长度</td>
</tr>
<tr>
<td style="text-align:left">指定操作数的方式很多样</td>
<td style="text-align:left">简单寻址方式</td>
</tr>
<tr>
<td style="text-align:left">可以对内存和寄存器操作数做运算</td>
<td style="text-align:left">只能对寄存器操作数做运算</td>
</tr>
<tr>
<td style="text-align:left">对机器级程序来说实现细节不可见</td>
<td style="text-align:left">对机器级程序来说实现细节可见</td>
</tr>
<tr>
<td style="text-align:left">有条件码</td>
<td style="text-align:left">没有条件码</td>
</tr>
<tr>
<td style="text-align:left">栈密集的过程链接</td>
<td style="text-align:left">寄存器密集的过程链接</td>
</tr>
<tr>
<td style="text-align:left">采用微程序控制器</td>
<td style="text-align:left">采用组合逻辑实现控制器</td>
</tr>
<tr>
<td style="text-align:left">有专用寄存器</td>
<td style="text-align:left">多个通用寄存器</td>
</tr>
</tbody>
</table>
<p>RISC指令集能够充分利用VLSI芯片的面积，便于实现指令流水，也便于设计，但是不易实现指令系统的兼容。在现代处理器中，常常将二者结合使用。</p>
<h3 id="指令周期"><a class="markdownIt-Anchor" href="#指令周期"></a> 指令周期</h3>
<p>指令周期指的是取出并执行一条指令所需的全部时间，一个指令周期最多包含4个工作周期：取指周期（取出指令并分析）、间址周期（可能有，如果指令中包含主存单元的地址则需要从主存单元寻址）、执行周期（不同指令的执行时间不等，且数据流也不同）、中断周期（可能有，如果有则需要保存程序断点）。一个工作周期包含了若干个时钟周期（CPU操作的最基本单位）</p>
<h3 id="指令流水"><a class="markdownIt-Anchor" href="#指令流水"></a> 指令流水</h3>
<p>指令流水将指令执行的过程分解为许多部分，每一部分由精心设计的硬件分别执行，都可以并行运行。这样，便可以像流水线一样执行这些指令（时钟周期必须能够满足最慢操作的执行需要），实现指令级并行。如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105000106.png" alt="image-20201012233537897" /></p>
<h4 id="冒险"><a class="markdownIt-Anchor" href="#冒险"></a> 冒险</h4>
<p>流水线中可能会出现下一个时钟周期中下一条指令不能执行的情况，这种情况被称为冒险，它会显著影响流水线性能。主要分为三种情况：</p>
<ol>
<li>结构冒险：硬件不支持多条指令在同一时钟周期执行</li>
<li>数据冒险：一条指令必须等待另一条指令的完成而造成流水线暂停。解决数据冒险可以采用旁路的办法，即提前从内部寄存器中取出数据；对于取数—使用型数据冒险，也可以通过重新安排代码顺序来避免</li>
<li>控制冒险：又叫分支冒险，因为在分支中取到的指令不是所需要的，而导致指令不能在预定的时钟周期内执行。计算机常采用分支预测的方法，预测分支结果并立即沿着预测方向执行，流水线的效率与预测的成功率有关</li>
</ol>
<h4 id="流水线的多发技术"><a class="markdownIt-Anchor" href="#流水线的多发技术"></a> 流水线的多发技术</h4>
<ul>
<li>超标量技术：使用超标量技术，可以在一个时钟周期内并发执行多条独立指令。</li>
<li>超流水线技术：在一个时钟周期内再分段，使得一个时钟周期内一个功能部件可以被多次使用。</li>
<li>超长指令字技术：将多条能够并行操作的指令组合成一条具有多个操作码字段的超长指令字，使用多个部件在一个时钟周期内同时执行。</li>
</ul>
<h2 id="处理器级并行"><a class="markdownIt-Anchor" href="#处理器级并行"></a> 处理器级并行</h2>
<ul>
<li>数据并行计算机：包含SIMD处理器和向量处理器。SIMD处理器是由许多在不同数据集合上执行同样指令序列的完全相同的处理器组成，如GPU便严重依赖于SIMD处理器；而向量处理器的所有运算是由一个单独的高度流水的功能部件实现。</li>
<li>多处理器：多个CPU同时工作，它们共享内存。CPU之间需要通过软件互相协调，从而避免互相影响。</li>
<li>多计算机：将多个计算机互联，互相之间通过发送消息进行通信。</li>
</ul>
<h1 id="总线"><a class="markdownIt-Anchor" href="#总线"></a> 总线</h1>
<h2 id="分类"><a class="markdownIt-Anchor" href="#分类"></a> 分类</h2>
<p>总线是连接计算机各个部件的信息传输线，是各个部件共享的传输介质。总线分为如下几种类型：</p>
<ul>
<li>片内总线：芯片内部的总线</li>
<li>系统总线：计算机各个部件之间的信息传输线，包括数据总线（双向，与机器字长和存储字长有关）、地址总线（单向，与存储地址和I/O地址有关）和控制总线</li>
<li>通信总线：用于计算机系统之间或者计算机系统和其他系统之间的通信</li>
</ul>
<h2 id="总线结构"><a class="markdownIt-Anchor" href="#总线结构"></a> 总线结构</h2>
<p>如图所示为现代Core i7系统中使用的总线结构：</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105000133.png" alt="image-20201013215418020" style="zoom:67%;" />
<p>除此之外，还有一些其他的总线结构：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105000126.png" alt="image-20201013202615024" /></p>
<h2 id="总线控制"><a class="markdownIt-Anchor" href="#总线控制"></a> 总线控制</h2>
<h3 id="判优控制"><a class="markdownIt-Anchor" href="#判优控制"></a> 判优控制</h3>
<p>主设备对总线具有控制权，从设备响应从主设备发来的总线命令，主设备需要判定哪一个从设备优先工作。有三种不同的方式：链式查询、计数器定时查询、独立请求</p>
<h3 id="通信控制"><a class="markdownIt-Anchor" href="#通信控制"></a> 通信控制</h3>
<p>总线传输分为四个阶段：申请分配阶段、寻址阶段、传输阶段、结束阶段。在这一个传输周期内，需要解决通信双方的协调配合问题。常用的几种通信方式有：</p>
<ul>
<li>同步通信：使用统一时标控制数据传送</li>
<li>异步通信：采用应答方式，没有公共时钟标准</li>
<li>半同步通信：同步与异步结合。发送方使用系统的时钟前沿发信号，接收方使用时钟后沿判断和识别；可以允许不同速度的模块和谐工作，并增加一条等待响应信号</li>
<li>分离式通信：在一个总线传输周期中，部分阶段总线内没有数据的传输，此时便放弃总线的使用权，等到需要时再次申请。这样便可提高总线的有效占用，从而充分挖掘了系统总线每个瞬间的潜力。</li>
</ul>
<h1 id="存储设备"><a class="markdownIt-Anchor" href="#存储设备"></a> 存储设备</h1>
<h2 id="主存储器"><a class="markdownIt-Anchor" href="#主存储器"></a> 主存储器</h2>
<h3 id="随机访问内存random-access-memory-ram"><a class="markdownIt-Anchor" href="#随机访问内存random-access-memory-ram"></a> 随机访问内存（Random Access Memory, RAM）</h3>
<p>RAM分为两类：静态RAM(Static RAM, SRAM)和动态RAM(Dynamic RAM, DRAM)。SRAM比DRAM的访问速度更快（SRAM为0.5~2.5ns，DRAM为50~70ns），但是价格也更贵。因此SRAM常被用作CPU或是其他设备的<strong>缓存</strong>，而DRAM常被用作<strong>主存或是显卡的内存</strong>。RAM在断电之后，会丢失掉其内部的所有信息。</p>
<h4 id="sram"><a class="markdownIt-Anchor" href="#sram"></a> SRAM</h4>
<p>SRAM将每个位存储在一个<strong>双稳态</strong>的存储器单元中，每个单元是用一个六晶体管电路来实现的。这个电路可以无限期地保存在两个不同的电压配置或状态之一，其他任何状态都是不稳定的。由于双稳态特性，即使是受到干扰来扰乱电压，干扰消除之后电路也可以恢复到稳定值。</p>
<h4 id="dram"><a class="markdownIt-Anchor" href="#dram"></a> DRAM</h4>
<h5 id="dram的原理"><a class="markdownIt-Anchor" href="#dram的原理"></a> DRAM的原理</h5>
<p>DRAM将每个位存储为对一个小电容（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>14</mn></msup><mi>F</mi></mrow><annotation encoding="application/x-tex">10^{14}F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>）的充电，因此DRAM存储器可以造的非常密集，每个存储单元包括一个电容器和一个访问晶体管。</p>
<p>DRAM对于干扰非常敏感，当电容的电压被扰乱之后就无法再恢复。同时也有很多原因会导致漏电，使得DRAM单元在10~100毫秒内失去电荷，因此内存系统需要周期性地读出并刷写内存中的每一位。一些系统使用纠错码，将计算机中的字多编码几个位，从而发现并纠正一个字中任何单个的错误位。</p>
<h5 id="dram的存储结构"><a class="markdownIt-Anchor" href="#dram的存储结构"></a> DRAM的存储结构</h5>
<p>DRAM芯片中的单元被分为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span>个超单元，每个超单元都由<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>个DRAM单元组成，这样一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>×</mo><mi>w</mi></mrow><annotation encoding="application/x-tex">d\times w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>的DRAM共存储了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>w</mi></mrow><annotation encoding="application/x-tex">dw</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>位信息。超单元被组织为一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>行<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span>列（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mi>c</mi><mo>=</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">rc=d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span>）的长方形阵列，每个超单元有形如<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>的地址格式。将DRAM组织为二维阵列可以降低芯片上地址引脚的数量，但是分两步发送地址增加了访问时间。通过芯片与外部连接的引脚，可以选择超单元地址，并将数据输入芯片或是从芯片中输出。</p>
<p>超单元内容读取的过程如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105000145.png" alt="image-20201009233043208" /></p>
<p>DRAM芯片被封装在内存模块中，它插到主板的扩展槽上。每个DRAM芯片被连接到称为内存控制器的电路，这个电路可以一次传送<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>位到每个DRAM芯片，或是一次从每个DRAM芯片传出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>位。通过将多个内存模块连接到内存控制器，便可聚合成主存。当控制器收到一个地址A时，控制器选择包含A的模块<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>，并将A转化成该模块对应的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>的形式发送给<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>.</p>
<p>下图所示是从DRAM芯片中读取一个64位字到CPU的过程：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105000150.png" alt="image-20201009232705351" /></p>
<h5 id="增强的dram"><a class="markdownIt-Anchor" href="#增强的dram"></a> 增强的DRAM</h5>
<ul>
<li>快页模式DRAM（FPM DRAM）：允许对同一行连续访问时，直接从行缓冲区得到服务。</li>
<li>扩展数据输出DRAM（EDO DRAM）：是FPM DRAM的增强形式，允许CAS（Column Access Strobe，列访问选通脉冲）信号在时间上靠的更加紧密一些。</li>
<li>同步DRAM（SDRAM）：使用与驱动内存控制器相同的外部时钟信号的上升沿，从而能够更快地输出它的超单元的内容。</li>
<li>双倍数据速率同步DRAM（DDR SDRAM）：是对SDRAM的增强，使用两个时钟沿作为控制信号，从而使得DRAM的速度翻倍。</li>
<li>视频RAM（VRAM）：用于图形系统的帧缓冲区中，与FPM DRAM类似，但是它允许对内存并行地读和写，它的输出是通过依次对内部区的整个内容进行移位得到的。</li>
</ul>
<h3 id="非易失性存储器read-only-memory-rom"><a class="markdownIt-Anchor" href="#非易失性存储器read-only-memory-rom"></a> 非易失性存储器（Read-Only Memory, ROM）</h3>
<p>非易失性存储器在断电后，其内部的信息仍然保存。非易失性存储器的种类很多，而且目前一些ROM中的类型支持读写操作，但是其整体都被称为只读存储器。根据被重编程（写）的次数和机制，ROM主要有以下几种类型：</p>
<ul>
<li>PROM(Programmable ROM，可编程ROM)：每个存储器单元有一种熔丝，只能用高电流熔断一次</li>
<li>EPROM(Erasable Programmable ROM，可擦写可编程ROM)：有一个透明的石英窗口，允许光到达存储单元。紫外线光照过窗口，EPROM单元被清除为0；把1写入EPROM需要使用特殊设备。它被擦除和重编程的次数可以达到1000次。</li>
<li>EEPROM(Electrically Erasable PROM，电子可擦除PROM)：可以直接在印制电路卡上编程，不需要物理上独立的编程设备。它能够被编程次数的数量级约为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span>次。闪存便是基于EEPROM的存储技术，SSD也是一种基于闪存的磁盘驱动器。</li>
</ul>
<p>存储在ROM设备中的程序被称为固件，当一个计算机系统通电之后，它会运行存储在ROM中的固件。一些系统在固件中提供了少量基本的输入和输出函数，一些复杂设备也依赖于固件翻译来自于CPU的I/O请求。</p>
<h3 id="主存的访问"><a class="markdownIt-Anchor" href="#主存的访问"></a> 主存的访问</h3>
<p>数据流通过被称为总线的共享电子电路在处理器与主存之间传输，每次CPU和主存之间的数据传输都是通过一系列步骤完成的，这些步骤被称为总线事务。读事务从主存传送数据到CPU，写事务从CPU传送数据到主存。</p>
<p>以汇编指令movq A, %rax为例，其步骤分为3步：首先将内存地址A放在系统总线上，I/O桥将信号传递到内存总线；然后主存从内存总线中读取地址，从中取出地址A中的数据字，并将其写入到内存总线。I/O桥将内存总线信号转换为系统总线信号，并沿着系统总线传递；最后CPU从系统总线上面读取数据，并将数据存储在寄存器中。这一步骤如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105000159.png" alt="image-20201011210959156" /></p>
<p>反之，如果执行的是如指令movq %rax, A这样的写操作时，CPU首先把地址放到系统总线上，内存从内存总线中读取地址，并等待数据到达；接下来CPU将%rax中的数据字复制到系统总线；最后主存从内存总线中读取数据字，并将其存入到DRAM中。这一步骤如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105000206.png" alt="image-20201011210034274" /></p>
<h2 id="辅助存储器"><a class="markdownIt-Anchor" href="#辅助存储器"></a> 辅助存储器</h2>
<h3 id="磁盘"><a class="markdownIt-Anchor" href="#磁盘"></a> 磁盘</h3>
<h4 id="磁盘构造"><a class="markdownIt-Anchor" href="#磁盘构造"></a> 磁盘构造</h4>
<p>磁盘的构造如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002444.png" alt="image-20201011221238694" /></p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002444.png" alt="image-20201011221313895" /></p>
<p>一个磁盘是由多个盘片构成的，每个盘片有两个表面，表面上覆盖着磁性记录材料。盘片中央是一个可以旋转的主轴，使得盘片以固定的旋转速率旋转，通常是5400~15000转每分钟。</p>
<p>磁盘用读/写头来读写存储在磁性表面的位，而读写头连接到一个传动臂—端。通过沿着半径轴前后移动这个传动臂，驱动器可以将读/写头定位在盘面上的任何磁道上，这样的机械运动称为寻道。一旦读/写头定位到了期望的磁道上，那么当磁道上的每个位通过它的下面时，读/写头可以感知到这个位的值(读该位），也可以修改这个位的值（写该位）。有多个盘片的磁盘针对每个盘面都有一个独立的读/写头。读/写头垂直排列，一致行动。在任何时刻，所有的读/写头都位于同一个柱面上。</p>
<p>这些结构被封装在一个密封容器中，从而防止磁盘损伤或是读/写头冲撞。</p>
<p>同时，磁盘驱动器也具有一块缓存，有时也被称为磁道缓冲区。这块缓存只是大小比较小的内存（8MB、16MB等），驱动器可以使用它来保存从磁盘读取或写入磁盘的数据。</p>
<h4 id="磁盘容量"><a class="markdownIt-Anchor" href="#磁盘容量"></a> 磁盘容量</h4>
<p>磁盘的每个表面由一组被称为磁道的同心圆组成，每个磁道被划分成一组扇区，每个扇区包含相等数量的数据位，数据便被编码在扇区上的磁性材料中。扇区之间由一些间隙分割开，间隙存储标识扇区的格式化位，不存储数据位。</p>
<p>磁盘容量的计算公式：磁盘容量=每扇区字节数×每个磁道的平均扇区数×每个表面的磁道数×每张盘片的表面数×磁盘盘片数</p>
<h4 id="磁盘访问时间"><a class="markdownIt-Anchor" href="#磁盘访问时间"></a> 磁盘访问时间</h4>
<p>磁盘以扇区大小的块来读写数据。对一个扇区的访问时间包括三个主要部分：</p>
<ul>
<li>寻道时间：传送臂将读/写头定位到包含目标扇区的磁道上所需的时间。寻道时间依赖于传动臂在盘面上的移动速度以及读写头以前的位置。磁盘中的平均寻道时间通常为3~9ms。</li>
<li>旋转时间：驱动器等待目标扇区的第一个位旋转到读/写头下所需的时间。这个步骤的时间依赖于磁盘旋转速度以及读/写头到达目标扇区时盘面的位置。最坏情况下需要等待磁盘转一整圈（以5400转的磁盘为例，需要约12ms）。</li>
<li>传送时间：驱动器读/写将扇区中的数据所需的时间。一个扇区的传送时间依赖于旋转速度和每条磁道的扇区数目。传送时间相比于寻道时间和旋转时间要少很多。</li>
</ul>
<h4 id="逻辑磁盘块"><a class="markdownIt-Anchor" href="#逻辑磁盘块"></a> 逻辑磁盘块</h4>
<p>在操作系统中，磁盘常常被分为若干个逻辑块。磁盘封装中有一个被称为磁盘控制器的固件设备，维护逻辑块号和实际的物理磁盘扇区直接的映射关系。当操作系统执行一个I/O操作时，控制器上的固件会执行一个快速表查找，将逻辑块号翻译成一个（盘面，磁道，扇区）的三元组，从而寻找到逻辑块对应的物理块。</p>
<h4 id="磁盘的访问"><a class="markdownIt-Anchor" href="#磁盘的访问"></a> 磁盘的访问</h4>
<p>CPU使用一种被称为内存映射I/O的技术向I/O设备发送命令，地址空间中有一块地址是为与I/O设备通信保留的，每个这样的地址被称为I/O端口。当一个设备连接到总线时，它被映射到一个或者多个端口。</p>
<p>磁盘被通过主机总线适配器连接到计算机的I/O总线上去，使用由主机总线接口定义的通信协议。以磁盘读为例，其过程如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002428.png" alt="image-20201011224957311" /></p>
<h3 id="固态硬盘"><a class="markdownIt-Anchor" href="#固态硬盘"></a> 固态硬盘</h3>
<p>固态硬盘是一种基于闪存的存储技术，一个SSD封装由一个或多个闪存芯片和闪存翻译层组成，闪存芯片替代了传统旋转磁盘中的机械驱动器，而闪存翻译层是一个固件设备，将对逻辑块的请求翻译成对物理设备的访问。在SSD中，闪存被划分为多个块，而每个块也被划分为多个页，数据以页为单位进行读写。</p>
<p>比起旋转磁盘，SSD的随机访问比旋转磁盘更快，同时能耗更低，也更结实。但是反复写会导致SSD的磨损，而且数据损坏之后难以恢复，因此这些存储单元常使用均衡磨损技术，将写操作尽量平均地分配到SSD中的每个存储单元。</p>
<h3 id="光盘"><a class="markdownIt-Anchor" href="#光盘"></a> 光盘</h3>
<p>光盘在写入信息时，是通过激光束对光盘表面的记录层进行烧刻，使其光学性质发生改变，从而记录二进制信息。在读取信息时，使用能量较低的激光束照射到盘面，根据光接收器接收到光的强弱并将其转换为二进制信息便可读取数据。</p>
<p>常见的光盘类型有：</p>
<ul>
<li>CD-ROM：只读光盘，出厂时数据已经写好，之后无法擦除</li>
<li>CD-R：可刻光盘（CD-Recordable），只能刻写一次</li>
<li>CD-RW：可擦写光盘（CD-ReWriteable），可以多次重写</li>
<li>DVD：数字多用途盘（Digital Versatile Disk），相比于CD的存储容量更大</li>
<li>蓝光光盘（Blu-Ray）：使用蓝色激光取代DVD的红色激光，因此存储容量相比于DVD更大。</li>
</ul>
<h1 id="io设备"><a class="markdownIt-Anchor" href="#io设备"></a> I/O设备</h1>
<h2 id="分类-2"><a class="markdownIt-Anchor" href="#分类-2"></a> 分类</h2>
<p>I/O设备大致可以分为三种：</p>
<ul>
<li>人机交互设备：键盘、鼠标、打印机、显示器等</li>
<li>计算机信息存储设备：磁盘、光盘、U盘等</li>
<li>机—机通信设备：调制解调器等</li>
</ul>
<h2 id="接口"><a class="markdownIt-Anchor" href="#接口"></a> 接口</h2>
<p>计算机的I/O设备通过I/O接口连接到计算机的I/O总线上。I/O接口的组成如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002423.png" alt="image-20201013212407776" /></p>
<p>I/O接口包括设备组成电路、命令寄存器和命令译码器、数据缓冲寄存器、设备状态标记和控制逻辑电路五部分，并通过数据线、地址线、命令线和状态线四条线路实现设备与系统之间的交互。</p>
<p>通过I/O接口，可以实现数据缓冲、数据格式转换、电平转换等，从而进一步实现选址、传送命令、传送数据和反映设备状态等功能。</p>
<h2 id="与主机的信息传送"><a class="markdownIt-Anchor" href="#与主机的信息传送"></a> 与主机的信息传送</h2>
<p>I/O设备与主机的信息传送分为3种方式：程序查询方式、程序中断方式和DMA(Direct Memory Access)方式。在这三种方式中，I/O设备的自治能力越来越强，同时效率也越来越高。</p>
<p>这三种方式的执行流程以及CPU效率比较如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002417.png" alt="image-20201013233243802" /></p>
<h3 id="程序查询方式"><a class="markdownIt-Anchor" href="#程序查询方式"></a> 程序查询方式</h3>
<p>使用程序查询方式时，CPU会不断地查询I/O的状态，直到设备准备就绪。然后进行CPU与I/O设备之间的信息传送。这种方式会使得CPU踏步等待，效率很低。</p>
<p>如果有多个设备，程序会轮转查询设备1~N的状态标记，如果发现某个设备准备就绪，则处理该设备的请求，反之则接着查询下一个设备，如此循环往复。</p>
<h3 id="程序中断方式"><a class="markdownIt-Anchor" href="#程序中断方式"></a> 程序中断方式</h3>
<p>当I/O设备需要与计算机进行数据传输时，会在自身准备好之后发出一个I/O中断请求。CPU响应I/O中断，终止执行当前正在执行的程序，并开始执行中断服务程序，实现与I/O设备之间的信息传送。中断服务程序首先会保护现场，然后再执行中断服务，执行完成之后恢复现场并返回。这种方式没有踏步等待现象，但是需要中断现有程序。</p>
<p>一些中断服务程序不允许被中断（单重中断），也有一些中断服务程序能够被级别更高的中断源中断（多重中断）。</p>
<h3 id="dma-direct-memory-access"><a class="markdownIt-Anchor" href="#dma-direct-memory-access"></a> DMA (Direct Memory Access)</h3>
<p>DMA是一种高速的数据传输操作，可以使得I/O设备与存储器之间直接读写数据。整个数据传输过程在DMA控制器的作用下进行，这样使得CPU与输入输出可以并行操作。DMA传送方式主要适用于一些高速的I/O设备中，如音频、视频、网络接口。</p>
<h4 id="dma接口"><a class="markdownIt-Anchor" href="#dma接口"></a> DMA接口</h4>
<p>DMA接口的组成如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002413.png" alt="image-20201013230204618" /></p>
<p>图中，AR为内存地址计数器，用于存放内存中要交换的数据的地址；WC为字计数器，用于记录传送数据块的长度；BR为数据缓冲寄存器，用于暂存每次传送的数据；DAR为设备地址寄存器，存放I/O设备的设备码或是表示设备信息存储区的寻址信息；控制逻辑用于管理DMA的传送过程；中断机构用于向CPU提出中断请求。</p>
<p>DMA接口的功能有：</p>
<ul>
<li>向CPU申请DMA传送</li>
<li>处理总线控制权的转交</li>
<li>管理系统总线、控制数据传输</li>
<li>确定数据传送的首地址和长度，修正传送过程中的数据地址和长度</li>
<li>DMA传送结束之后给出操作完成信号</li>
</ul>
<p>DMA接口有两种类型：一种是选择型，通过一条选择线连接多个物理设备，但是在逻辑上只允许连接一个设备；另外一种是多路型，在物理上连接多个设备，同时逻辑上也允许连接的多个设备同时工作。</p>
<h4 id="连接方式"><a class="markdownIt-Anchor" href="#连接方式"></a> 连接方式</h4>
<p>DMA与系统之间有两种连接方式：一种是所有的DMA具有一条公共的请求线，另外一种是每一个DMA接口都有一个独立的请求线</p>
<h4 id="交换数据方式"><a class="markdownIt-Anchor" href="#交换数据方式"></a> 交换数据方式</h4>
<p>DMA与主存交换数据主要有三种方式：</p>
<ol>
<li>停止CPU访问主存，将总线全部交给DMA使用。这种方法控制简单，但是CPU处于不工作状态或保持状态，不能充分发挥CPU对主存的利用率</li>
<li>周期挪用（周期窃取），利用CPU不访问主存的那些周期来实现DMA操作。这种方法不会减慢CPU的操作，但是需要复杂的时序电路，而且数据传输过程是不连续和不规则的。由于I/O设备处理总线控制权也需要花费时间，因此这种方法适用于I/O设备读写周期大于内存存储周期的情况。</li>
<li>交替访问，在一个工作周期内，一部分专供DMA访问主存，另一部分专供CPU访问主存。这样不需要申请建立和归还总线的使用权，具有较高的效率。但是相应的硬件逻辑也更加复杂。</li>
</ol>
<h4 id="dma的工作过程"><a class="markdownIt-Anchor" href="#dma的工作过程"></a> DMA的工作过程</h4>
<p>DMA的传送过程主要包括三部分：预处理、数据传送和后处理。</p>
<p>在预处理阶段，DMA预置一些信息，包括逻辑传送方向、设备地址、主存地址和传送字数；在数据传送阶段，DMA将主存地址发给总线，将数据送给I/O设备或主存，同时修改主存地址和字计数器；在后处理阶段，需要校正送入主存的数是否正确，测试传送过程是否正确，并决定是否继续使用DMA，这些由中断服务程序完成。</p>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<p>[1] 深入理解计算机系统（第三版）</p>
<p>[2] 哈尔滨工业大学 计算机组成原理公开课</p>
<p>[3] 计算机组成：结构化方法</p>
<p>[4] 计算机组成与设计：硬件/软件接口</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机组成原理-高速缓存</title>
    <url>/2021/01/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E9%AB%98%E9%80%9F%E7%BC%93%E5%AD%98/</url>
    <content><![CDATA[<h1 id="局部性"><a class="markdownIt-Anchor" href="#局部性"></a> 局部性</h1>
<p>一个编写良好的计算机程序常常具有较好的局部性，它们倾向于引用最近引用过的数据项，或是引用与它们相邻的数据项。这种倾向性被称为<strong>局部性原理</strong>。通常一个局部性良好的程序比局部性差的程序运行地更快。</p>
<p>局部性分为两种：</p>
<ul>
<li>时间局部性：被引用过一次的内存位置很可能在不远的将来再被多次引用</li>
<li>空间局部性：对于一个被引用过一次的内存位置，程序很可能在不远的将来引用它附近的内存位置</li>
</ul>
<a id="more"></a>
<p>对于程序来说，局部性包括对数据引用的局部性以及取指令的局部性。例如下面的两个求二维数组中所有元素和的代码，第一段代码比第二段代码就要有更好的局部性，因为第一段代码具有步长为1的引用模式，而第二段代码具有步长为N的引用模式。同时，这两段代码中都包含了循环体，由于循环体内的指令是按照连续的内存顺序执行的，而且这些代码也会被执行多次，所以循环体具有良好的时间与空间局部性。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sumarrayrows</span><span class="params">(<span class="keyword">int</span> a[M][N])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> 	<span class="keyword">int</span> i, j, sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"> 	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line"> 		<span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; N; j++)</span><br><span class="line"> 			sum += a[i][j];</span><br><span class="line"> 	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sumarraycols</span><span class="params">(<span class="keyword">int</span> a[M][N])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i, j, sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"> 	<span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; N; j++)</span><br><span class="line"> 		<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line"> 			sum += a[i][j];</span><br><span class="line"> 	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>量化评价程序中局部性的一些简单原则：</p>
<ul>
<li>重复引用相同变量的程序具有良好的时间局部性</li>
<li>对于具有步长为k的引用模式的程序，步长越小，空间局部性越好，反之则越差</li>
<li>对于取指令来说，循环具有好的时间与空间局部性。循环体越小，循环迭代次数越多则局部性越好</li>
</ul>
<h1 id="存储器层次结构"><a class="markdownIt-Anchor" href="#存储器层次结构"></a> 存储器层次结构</h1>
<p>对于计算机硬件来说，一台计算机中使用了不同种类的存储技术，这些存储技术的访问时间差异很大。而且，CPU与主存之间的速度差距也在增大。而对于计算机软件来说，一个编写良好的程序通常会具有较好的局部性。这两个特点能够相互补充，使得计算机中的存储器能够被组织成<strong>存储器层次结构</strong>，如下图所示。在图中，从高层往低层走，存储设备变得更慢、更便宜和更大。</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201104233206.png" alt="image-20201015215951212" /></p>
<h2 id="存储器层次结构中的缓存思想"><a class="markdownIt-Anchor" href="#存储器层次结构中的缓存思想"></a> 存储器层次结构中的缓存思想</h2>
<h3 id="缓存的一般性概念"><a class="markdownIt-Anchor" href="#缓存的一般性概念"></a> 缓存的一般性概念</h3>
<p>存储器层次结构的本质就是，对于每个k，位于第k层的更快更小的存储设备作为位于k+1层的更大更慢的存储设备的缓存。也就是说，层次结构中的每一层都缓存来自较低一层的数据对象。</p>
<p>第k+1层的存储器被划分为连续的数据对象组块，每一个组块都有唯一的地址或名字。这些块的大小可以是固定的，也可以是可变的。第k层的存储器被划分为较少的块的集合，每个块的大小与k+1层的块大小一样。在任何时刻，第k层的缓存包含第k+1层块的一个子集的副本。数据以块大小作为传送单元在两层之间来回复制。注意：相邻层次之间块大小固定，但是其他层次对之间可以有不同的块大小，一般层次结构中较低层的设备倾向于使用较大的块。下图所示变为存储器层次结构中基本缓存原理的示意图：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002113.png" alt="image-20201015230801213" /></p>
<p>现代计算机系统中常用的缓存见下表：</p>
<table>
<thead>
<tr>
<th style="text-align:center">Type</th>
<th style="text-align:center">What cached</th>
<th style="text-align:center">Where cached</th>
<th style="text-align:center">Latency (cycles)</th>
<th style="text-align:center">Managed by</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">CPU registers</td>
<td style="text-align:center">4-byte or 8-byte words</td>
<td style="text-align:center">On-chip CPU registers</td>
<td style="text-align:center">0</td>
<td style="text-align:center">Compiler</td>
</tr>
<tr>
<td style="text-align:center">TLB</td>
<td style="text-align:center">Address translations</td>
<td style="text-align:center">On-chip TLB</td>
<td style="text-align:center">0</td>
<td style="text-align:center">Hardware MMU</td>
</tr>
<tr>
<td style="text-align:center">L1 cache</td>
<td style="text-align:center">64-byte blocks</td>
<td style="text-align:center">On-chip L1 cache</td>
<td style="text-align:center">4</td>
<td style="text-align:center">Hardware</td>
</tr>
<tr>
<td style="text-align:center">L2 cache</td>
<td style="text-align:center">64-byte blocks</td>
<td style="text-align:center">On-chip L2 cache</td>
<td style="text-align:center">10</td>
<td style="text-align:center">Hardware</td>
</tr>
<tr>
<td style="text-align:center">L3 cache</td>
<td style="text-align:center">64-byte blocks</td>
<td style="text-align:center">On-chip L3 cache</td>
<td style="text-align:center">50</td>
<td style="text-align:center">Hardware</td>
</tr>
<tr>
<td style="text-align:center">Virtual memory</td>
<td style="text-align:center">4-KB pages</td>
<td style="text-align:center">Main memory</td>
<td style="text-align:center">200</td>
<td style="text-align:center">Hardware + OS</td>
</tr>
<tr>
<td style="text-align:center">Buffer cache</td>
<td style="text-align:center">Parts of files</td>
<td style="text-align:center">Main memory</td>
<td style="text-align:center">200</td>
<td style="text-align:center">OS</td>
</tr>
<tr>
<td style="text-align:center">Disk cache</td>
<td style="text-align:center">Disk sectors</td>
<td style="text-align:center">Disk controller</td>
<td style="text-align:center">100,000</td>
<td style="text-align:center">Controller firmware</td>
</tr>
<tr>
<td style="text-align:center">Network cache</td>
<td style="text-align:center">Parts of files</td>
<td style="text-align:center">Local disk</td>
<td style="text-align:center">10,000,000</td>
<td style="text-align:center">NFS client</td>
</tr>
<tr>
<td style="text-align:center">Browser cache</td>
<td style="text-align:center">Web pages</td>
<td style="text-align:center">Local disk</td>
<td style="text-align:center">10,000,000</td>
<td style="text-align:center">Web browser</td>
</tr>
<tr>
<td style="text-align:center">Web cache</td>
<td style="text-align:center">Web pages</td>
<td style="text-align:center">Remote server disks</td>
<td style="text-align:center">1,000,000,000</td>
<td style="text-align:center">Web proxy server</td>
</tr>
</tbody>
</table>
<h3 id="缓存管理"><a class="markdownIt-Anchor" href="#缓存管理"></a> 缓存管理</h3>
<p>在每一层上，某种形式的逻辑必须管理缓存。即某个东西要将缓存划分成块，在不同的层之间传递块，判定是否命中并处理。管理缓存的逻辑可以是硬件、软件，或是二者结合。</p>
<h3 id="缓存读取"><a class="markdownIt-Anchor" href="#缓存读取"></a> 缓存读取</h3>
<p>当程序需要第k+1层的某个数据d时，它首先在第k层的一个块中查找它。如果d刚好缓存在第k层中，程序直接从第k层中读取它，这要比从第k+1层中读取更快，这便称为<strong>缓存命中</strong>(Cache hit)；但如果d没有缓存在第k层时，这被称为<strong>缓存不命中</strong>(Cache miss)。</p>
<p>当发生缓存不命中时，第k层的缓存便会从第k+1层中取出包含d的那个块，然后放到第k层中去。如果第k层的缓存已满，需要覆盖现存的一个块，这一过程被称为替换或驱逐这个块，被驱逐的块被称为牺牲块。在第k层缓存从第k+1层中取出目标块之后，程序就可以从第k层中读出d了。决定该替换哪个块是由缓存的替换策略来控制的，常用的替换策略为LRU(Least Recently Used)等。</p>
<p>缓存不命中具有不同的种类：</p>
<ul>
<li>冷不命中：又叫强制性不命中，这是由于第k层的缓存为空而导致的。此时对任何数据对象的访问都不命中。冷不命中通常是短暂的事件，不会再反复访问存储器使得缓存暖身之后的稳定状态中出现</li>
<li>冲突不命中：如果允许第k+1层的任何块可以放在第k层的任何块中，会使得定位的代价很高。因此硬件缓存通常使用较为严格的放置策略，将第k+1层的某个块限制放置在第k层块的一个小子集中。在这种情况下可能会出现这样的情况，第k+1层的块0、1、2、3被映射到第k层的块0，当程序循环请求访问块0、1、2、3时，对这几个块的每次引用都会不命中，即使第k层还有其他的空闲块。</li>
<li>容量不命中：程序的一个循环阶段可能会反复访问同一个数组的元素，对应于存储系统中需要反复访问缓存块的某个相对稳定的集合，这个块的集合被称为这个阶段的工作集。当工作集的大小超过了缓存的大小时，缓存无法完整保存这个工作集，需要不断替换缓存块。</li>
</ul>
<h2 id="存储器山"><a class="markdownIt-Anchor" href="#存储器山"></a> 存储器山</h2>
<p>一台计算机中的存储器层次结构对应于表明它存储器能力特色的<strong>存储器山</strong>，它是一个读带宽（又叫读吞吐量，反映程序从存储系统中读取数据的速率MB/s）的时间与空间局部性的二维函数。如下图所示为Intel Core i7系统的存储器山，其中Size代表工作集的大小，反映了时间局部性；Stride代表读取工作集时的步长，反映了空间局部性。</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002127.png" alt="image-20201015221656233" /></p>
<p>从中可以看出，存储器山的上升高度差别可以超过一个数量级。因此在写程序时，最好尽可能地使得程序运行在山峰处，即使得频繁使用的字从L1中取出（时间局部性），以及尽可能多的字从一个L1高速缓存行中访问到（空间局部性）</p>
<h1 id="高速缓存存储器"><a class="markdownIt-Anchor" href="#高速缓存存储器"></a> 高速缓存存储器</h1>
<h2 id="组织结构"><a class="markdownIt-Anchor" href="#组织结构"></a> 组织结构</h2>
<p>设一个计算机系统中每个存储器的地址有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>位，形成了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>=</mo><msup><mn>2</mn><mi>m</mi></msup></mrow><annotation encoding="application/x-tex">M=2^m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span></span></span></span></span></span></span>个不同的地址。这样一个机器的高速缓存被组织成一个有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mo>=</mo><msup><mn>2</mn><mi>s</mi></msup></mrow><annotation encoding="application/x-tex">S=2^s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span></span></span></span></span></span></span>个高速缓存组的数组，每一组包含<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>个高速缓存行。每一行包含了一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mo>=</mo><msup><mn>2</mn><mi>b</mi></msup></mrow><annotation encoding="application/x-tex">B=2^b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span></span></span></span></span></span></span>字节的数据块（因此术语行和块通常互换使用），一个有效位用于指明这个行是否包含有意义的信息，还有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>=</mo><mi>m</mi><mo>−</mo><mo stretchy="false">(</mo><mi>b</mi><mo>+</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t=m-(b+s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span>个标记位用于标识存储在这个高速缓存行中的块。因此，对于一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>位的地址，高速缓存的结构将它从高位到低位划分成了三个部分：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>个标记位，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span>个组索引位和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>个块偏移位。如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002133.png" alt="image-20201017134957506" /></p>
<p>一般一个高速缓存的结构可以被描述为一个元组<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>S</mi><mo separator="true">,</mo><mi>E</mi><mo separator="true">,</mo><mi>B</mi><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(S,E,B,m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span>，高速缓存的大小（或容量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span>）指的是所有块大小的和，不包括标记位和有效位，因此<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mo>=</mo><mi>S</mi><mo>×</mo><mi>E</mi><mo>×</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">C=S\times E\times B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>。</p>
<p>使用中间位来做索引的原因：如果高位用作索引，那么一些连续的内存块就会被映射到相同的高速缓存块中。考虑到程序的局部性，如果使用高位做索引，则很容易发生缓存的抖动（高速缓存反复加载和驱逐相同的高速缓存块的组）。使用中间位作为索引，能够将相同的块映射到不同的高速缓存行，从而充分利用程序的局部性。</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002142.png" alt="image-20201017151022256" /></p>
<h2 id="高速缓存的读写"><a class="markdownIt-Anchor" href="#高速缓存的读写"></a> 高速缓存的读写</h2>
<h3 id="读操作"><a class="markdownIt-Anchor" href="#读操作"></a> 读操作</h3>
<p>根据每个组的高速缓存行数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>，高速缓存被分为不同的类型，它们读取数据的过程也有一些差别：</p>
<ul>
<li>
<p>直接映射高速缓存：每个组只有1行（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">E=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>）</p>
<p>高速缓存在处理请求时，首先从地址中抽取出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span>个组索引位，将其对应到高速缓存的某个组<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>，然后判断组<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>中的有效位是否被设置，并且标记位是否与地址中的标记位匹配。如果二者都满足，则说明缓存命中，根据地址中的块偏移便可在组<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>中找到该副本；反之则得到一个缓存不命中，接下来则会从存储器层次结构中的下一层取出被请求的块，然后用新的块替换组<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>中的内容。</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002146.png" alt="image-20201017152711551" /></p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002152.png" alt="image-20201017152735534" /></p>
</li>
<li>
<p>组相连高速缓存：一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>&lt;</mo><mi>E</mi><mo>&lt;</mo><mi>C</mi><mi mathvariant="normal">/</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">1&lt;E&lt;C/B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>的高速缓存通常被称为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>路组相连高速缓存</p>
<p>相比于直接映射高速缓存，它的组选择与直接映射高速缓存一样，通过组索引位来标识组。但是在接下来的行匹配过程中，由于组内的任何一行都可以包含任何映射到这个组的数据块，因此需要搜索组中的每一行，检查其标记位和有效位是否匹配。如果缓存不命中，则需要按照一定的策略去替换，替换策略包括随机替换、最不常使用（Least Frequently Used，LFU）、最近最少使用（Least Recently Used，LRU）等。使用复杂策略需要额外的时间和硬件支持，但是在存储器结构的越下层，一次不命中的开销也越大，因此也更值得用更好的替换策略使得不命中更少。</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002157.png" alt="image-20201017152543301" /></p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002203.png" alt="image-20201017152628107" /></p>
</li>
<li>
<p>全相连高速缓存：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>=</mo><mi>C</mi><mi mathvariant="normal">/</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">E=C/B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>的高速缓存</p>
<p>对于全相连高速缓存来说，地址中没有组索引位，地址只被划分为一个标记和一个块偏移。行匹配和字选择与组相连高速缓存也是一样的。由于高速缓存电路必须并行搜索许多相匹配的标记，因此构造一个又大又快的相连高速缓存的成本很高。全相连高速缓存通常只适合做小的高速缓存，如虚拟内存系统中的翻译备用缓冲器（TLB），用于缓存页表项。</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002211.png" alt="image-20201017154820023" /></p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002216.png" alt="image-20201017154845327" /></p>
</li>
</ul>
<h3 id="写操作"><a class="markdownIt-Anchor" href="#写操作"></a> 写操作</h3>
<p>高速缓存关于写的情况比读操作复杂一些：</p>
<p>首先的一个问题是，如果要写一个已经缓存了的字，在高速缓存更新了它的副本之后，如何更新存储器层次结构中低一层的副本。一个办法是直写，就是立即将缓存块更新过后的内容写回到紧接着的低一层中，这个办法虽然简单，但是每次写都会引起总线流量；另一个办法是写回，尽可能地推迟更新，只有当替换算法要驱逐这个更新过的块时再写入低一层，这样可以显著减少总线流量，但是需要为每一行维护一个额外的修改位，增加了复杂性。</p>
<p>另一个问题是如何处理写不命中，一种方法是写分配，加载相应的低一层的块到高速缓存中，然后更新这个高速缓存块。写分配试图利用写的空间局部性，但是每一次不命中都会导致一个块从低一层传到高速缓存，写回高速缓存通常使用这种方法；另一种办法是非写分配，避开高速缓存直接将这个字写到低一层中。直写高速缓存通常使用这种方法。</p>
<p>在写程序的时候，一般考虑一个使用写回和写分配的高速缓存模型，因为存储器层次结构中较低层的缓存更可能采用写回方式，而且写回写分配试图利用局部性。</p>
<h2 id="真实的高速缓存层次结构"><a class="markdownIt-Anchor" href="#真实的高速缓存层次结构"></a> 真实的高速缓存层次结构</h2>
<p>真实的高速缓存分为三种：只保存指令的高速缓存（i-cache）、只保存程序数据的高速缓存（d-cache）和既保存指令又保存数据的高速缓存（统一的高速缓存）。现代处理器包括独立的i-cache的d-cache，可以使得处理器同时读取指令和数据字，而且可以根据它们不同的访问模式来分别进行优化，这样避免了数据访问与指令访问形成冲突不命中，但是可能会引起容量不命中增加。</p>
<p>下图所示为Intel Core i7处理器的高速缓存层次结构，其中所有的SRAM高速缓存存储器芯片都在CPU芯片上。CPU有四个核，所有的核共享一个L3统一的高速缓存，每个核有自己私有的L1 d-cache、L1 i-cache和L2统一的高速缓存：</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002220.png" alt="image-20201017164627630" style="zoom:67%;" />
<p>这些缓存的基本特性见下表：</p>
<table>
<thead>
<tr>
<th style="text-align:center">Cache type</th>
<th style="text-align:center">Access time (cycles)</th>
<th style="text-align:center">Cache size ©</th>
<th style="text-align:center">Assoc. (E)</th>
<th style="text-align:center">Block size (B)</th>
<th style="text-align:center">Sets (S)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">L1</td>
<td style="text-align:center">i-cache</td>
<td style="text-align:center">4</td>
<td style="text-align:center">32 KB</td>
<td style="text-align:center">8</td>
<td style="text-align:center">64B</td>
</tr>
<tr>
<td style="text-align:center">L1</td>
<td style="text-align:center">d-cache</td>
<td style="text-align:center">4</td>
<td style="text-align:center">32 KB</td>
<td style="text-align:center">8</td>
<td style="text-align:center">64B</td>
</tr>
<tr>
<td style="text-align:center">L2</td>
<td style="text-align:center">unified cache</td>
<td style="text-align:center">10</td>
<td style="text-align:center">256 KB</td>
<td style="text-align:center">8</td>
<td style="text-align:center">64B</td>
</tr>
<tr>
<td style="text-align:center">L3</td>
<td style="text-align:center">unified cache</td>
<td style="text-align:center">40–75</td>
<td style="text-align:center">8 MB</td>
<td style="text-align:center">16</td>
<td style="text-align:center">64B</td>
</tr>
</tbody>
</table>
<h2 id="高速缓存参数的性能影响"><a class="markdownIt-Anchor" href="#高速缓存参数的性能影响"></a> 高速缓存参数的性能影响</h2>
<p>衡量高速缓存的性能有如下几个指标：</p>
<ul>
<li>不命中率/命中率：在一个程序执行或一部分执行期间，内存引用不命中/命中的比率。</li>
<li>命中时间：L从高速缓存传送一个字到CPU所需的时间，包括组选择、行确认和字选择的时间。对于L1高速缓存来说是几个时钟周期。</li>
<li>不命中处罚：由于不命中所需要的额外的时间。L1不命中从L2得到服务的惩罚是数十个周期；从L3得到服务的惩罚是50周期；从主存得到服务的处罚是200周期。</li>
</ul>
<p>缓存参数对性能的影响有：</p>
<ul>
<li>高速缓存大小：较大的高速缓存可能会提高命中率；但是大存储器运行时间也更慢。因此L1高速缓存比L2小，L2高速缓存比L3小。</li>
<li>块大小：较大的块可以充分利用程序中可能存在的空间局部性；但是块越大意味着高速缓存行数越少，会损害时间局部性，同时较大的块也需要更长的传送时间，不命中的处罚也越大。</li>
<li>相连度：较高的相连度会降低出现抖动的可能性；但是较高的相连度也造成较高的成本，也会增加命中时间和不命中处罚。因此L1高速缓存相连度低（不命中处罚只是几个周期），而L3高速缓存的相连度大。</li>
<li>写策略：直写高速缓存实现成本低，可以使用独立于高速缓存的写缓冲区来更新内存；写回高速缓存引起的传送较少，允许更多到内存的带宽用于执行DMA的I/O设备。而且越往层次结构下面走，传送时间增加，减少传送的数量也更加重要。因此越往下层越可能使用写回。</li>
</ul>
<h1 id="编写高速缓存友好的代码"><a class="markdownIt-Anchor" href="#编写高速缓存友好的代码"></a> 编写高速缓存友好的代码</h1>
<h2 id="基本原则"><a class="markdownIt-Anchor" href="#基本原则"></a> 基本原则</h2>
<ol>
<li>将注意力集中在内循环上，并尽量减小每个循环内部的缓存不命中数量</li>
<li>对局部变量的反复引用和步长较小的引用模式对高速缓存友好</li>
</ol>
<h2 id="示例"><a class="markdownIt-Anchor" href="#示例"></a> 示例</h2>
<p>通过改变内循环的顺序来提高矩阵乘法的计算速度：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002227.png" alt="image-20201017181210149" /></p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105002233.png" alt="image-20201017181232539" /></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机网络-应用层</title>
    <url>/2021/01/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E5%BA%94%E7%94%A8%E5%B1%82/</url>
    <content><![CDATA[<h1 id="应用层协议原理"><a class="markdownIt-Anchor" href="#应用层协议原理"></a> 应用层协议原理</h1>
<h2 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h2>
<p>应用层的作用是为用户提供服务。应用层是协议簇的最高层，因此应用层协议不为任何其他协议提供服务，它们只接收来自于传输层协议的服务。</p>
<p>应用层核心：写出能够运行在不同端系统和通过网络彼此通信的程序，不需要在网络核心设备上如路由器、链路层交换机上运行的软件。</p>
<h2 id="应用层模式"><a class="markdownIt-Anchor" href="#应用层模式"></a> 应用层模式</h2>
<h3 id="客户-服务器体系结构"><a class="markdownIt-Anchor" href="#客户-服务器体系结构"></a> 客户-服务器体系结构</h3>
<p>在该体系结构中，有一个<strong>总是打开</strong>的主机，即服务器，它接收和服务来自其他许多被称为客户的主机请求；在该体系结构中，<strong>客户之间是不直接通信</strong>的；该服务器具有固定的、周知的地址。</p>
<p>客户-服务器体系结构的常见应用有：Web、FTP、Telnet和电子邮件。</p>
<p>这一体系结构对于服务器的性能要求较高。</p>
<a id="more"></a>
<h3 id="p2p体系结构"><a class="markdownIt-Anchor" href="#p2p体系结构"></a> P2P体系结构</h3>
<p>在P2P体系结构中，对位于数据中心的专用服务器有着最小（或者没有）依赖。应用程序在间断连接的<strong>主机对之间使用直接通信</strong>，这些主机被称为<strong>对等</strong>方。对等方并不为服务提供商所拥有，因为这种对等方通信不需要通过专门的服务器，所以该体系结构也被称为对等方到对等方结构</p>
<p>目前，流量密集型应用都是P2P体系结构的。这些应用包括文件共享（例如BitTorrent）、协助下载（例如迅雷）、因特网电话（例如Skype）和IPTV(例如迅雷看看)。一些应用也可能同时具有客户-服务器和P2P两种体系结构。</p>
<p>P2P的优点在于其自扩展性，同时不需要庞大的服务器基础设施和带宽。但是P2P模式的较为开放，安全性差；同时上传流量较大，给ISP带来压力；还需要激励用户提供带宽等资源。</p>
<h3 id="混合模式"><a class="markdownIt-Anchor" href="#混合模式"></a> 混合模式</h3>
<p>一个应用可以通过结合两种模式的优点将二者混合起来。例如轻量级的客户-服务器通信会寻找可以提供服务的对等结点的地址。当找到这个地址时，实际服务可以通过使用对等模式从对等结点中获得。</p>
<h1 id="客户-服务器模式"><a class="markdownIt-Anchor" href="#客户-服务器模式"></a> 客户-服务器模式</h1>
<h2 id="客户与服务器进程"><a class="markdownIt-Anchor" href="#客户与服务器进程"></a> 客户与服务器进程</h2>
<p>在客户-服务器模式中，应用层的通信时在两个运行着的应用程序之间进行的，这两个应用程序被称为<strong>进程</strong>。在两个不同端系统上的进程，通过跨越计算机网络交换报文而相互通信。发送进程生成并向网络中发送报文；接收进程接收这些报文并可能通过将报文发送回去进行响应。</p>
<p>对于每对通信进程，我们通常将这两个进程之一标识为客户，而另一个进程标识为服务器。从发起通信的顺序来定义它们：在给定的一对进程之间，**首先发起通信的进程被标记为客户进程，在会话开始时等待联系的进程被称为服务器进程。**服务器在开启之后需要一直运行，而客户只有在需要的时候才运行。</p>
<h2 id="套接字接口"><a class="markdownIt-Anchor" href="#套接字接口"></a> 套接字接口</h2>
<p>进程通过一个称为<strong>套接字</strong>（socket）的软件接口向网络发送报文和从网络接收报文。套接字是同一台主机内应用层与运输层之间的接口。由于该套接字是建立网络应用程序的可编程接口，因此套接字也称为应用程序和网络之间的<strong>应用程序编程接口</strong>（Application Programming Interface，API）。</p>
<p>应用程序开发者可以控制套接字在应用层端的一切，但是对该套接字在运输层端几乎没有控制权。应用程序开发者对于运输层的控制权仅限于：</p>
<ul>
<li>选择运输层协议；</li>
<li>设定运输层参数，如最大缓存和最大报文段长度等</li>
</ul>
<p>因此也可以说，就应用层而言，客户进程与服务器进程间的通信是两个套接字间的通信。客户认为套接字是接收请求和发出响应的实体，服务器认为套接字是发出请求并且需要获得响应的实体。</p>
<h2 id="套接字地址"><a class="markdownIt-Anchor" href="#套接字地址"></a> 套接字地址</h2>
<p>客户和服务器的交互是双向通信，因此需要一对套接字地址：本地套接字地址和远程套接字地址。一个套接字地址包括两部分，一部分是32位的IP地址，另一部分是16位的端口号。</p>
<p>由于套接字定义了通信终端，因此我们可以说套接字是由一对套接字地址标识的。</p>
<h2 id="使用传输层服务"><a class="markdownIt-Anchor" href="#使用传输层服务"></a> 使用传输层服务</h2>
<p>因特网为应用层提供的常用传输层协议为UDP、TCP、SCTP。</p>
<ul>
<li>TCP：包括面向连接的服务和可靠的数据传输功能，并提供拥塞控制机制。</li>
<li>UDP：不提供不必要服务的轻量级运输协议，UDP是无连接的（通信前没有握手），不保证数据可靠传输，也没有拥塞控制。</li>
<li>STCP：SCTP提供了面向连接的可靠服务，但是它不是面向字节流，而是面向报文的。同时它还可以提供多媒体流服务。</li>
</ul>
<p>从可靠数据传输、吞吐量、定时、安全性等四个角度来看运输层提供的服务，我们发现，运输层无法对吞吐量和定时做出保证。但是，今天的因特网能够为时间敏感的应用提供满意的服务，尽管它并不提供任何定时或者带宽保证。</p>
<h2 id="应用层协议"><a class="markdownIt-Anchor" href="#应用层协议"></a> 应用层协议</h2>
<p>应用层协议定义运行在不同端系统上的应用程序进程如何相互传递信息。涉及的内容包括：交换的报文类型（请求或者响应）、报文中包含哪些字段、字段如何被解释、一个进程何时收发报文并如何对报文进行响应等内容。</p>
<p>常见的应用层协议：</p>
<ul>
<li>HTTP：端口号80，用于浏览器浏览网页，但是网页内容为明文，容易篡改、容易劫持、网页内容容易泄露。</li>
<li>HTTPS：端口号443，在HTTP与TCP层之间加入一个SSL层用于安全加密，弥补了HTTP协议的缺点。但是可能会受中间人欺骗攻击（参考https://www.cnblogs.com/lulianqi/p/10558719.html）。</li>
<li>SMTP：端口号25，基于TCP协议，用于邮件发送，只能发送ASCII码。邮件扩充MIME可以发送二进制文件，增加邮件主题结构但是并未改变SMTP。</li>
<li>POP3：端口号110，基于TCP协议，用于邮件接收，用户从服务器读取邮件之后便删除服务器上的邮件。</li>
<li>IMAP：端口号143，基于TCP协议，用于邮件接收，客户端与服务器的邮件保持同步，允许用户随时随地访问服务器上的邮件。</li>
<li>DNS：端口号53，基于TCP/UDP协议，用于解析域名与ip地址。</li>
<li>DHCP：端口号67/68，基于UDP，用于主机动态获取ip地址、缺省网关、DNS服务器等参数。</li>
<li>FTP：端口号20（数据连接）/21（控制连接），基于TCP，用于实现交互式文件传输。</li>
<li>Telnet：端口号23，基于TCP，用于远程终端访问。</li>
</ul>
<h1 id="http协议"><a class="markdownIt-Anchor" href="#http协议"></a> HTTP协议</h1>
<h2 id="万维网"><a class="markdownIt-Anchor" href="#万维网"></a> 万维网</h2>
<h3 id="结构"><a class="markdownIt-Anchor" href="#结构"></a> 结构</h3>
<p>万维网简称WWW或Web，它是一个分布式客户-服务器服务。使用浏览器的用户可以访问一个正在服务器上运行的服务。这些服务分布在很多称为站点的地点上，每一个站点有一个或者多个文档，被称为网页。每个网页也可以包含一些到其他网页的链接，被链接的网页可以在同一个站点或是在其它站点。</p>
<p>客户通过使用浏览器来访问网页。每个浏览器通常包括三个部分：控制程序、客户协议和解释程序。控制程序接收来自键盘和鼠标的输入并使用客户端程序来访问文档。在文档被访问后，控制程序使用解释程序在屏幕上显示文档。客户协议包括HTTP、FTP等。</p>
<p>网页存储在服务器上，每当请求到达时，相应的文档就会被发送到客户。服务器通常将被请求的文件存储在缓存中，同时也可以通过多线程或多进程，从而提高效率。</p>
<h3 id="url"><a class="markdownIt-Anchor" href="#url"></a> URL</h3>
<p>网页需要有一个唯一的标识符域其他网页区别开，这个标识符被称为统一资源定位符（Uniform Resource Locator, URL）。为了定义一个网页，需要如下四个标识符：</p>
<ul>
<li>协议：用来访问网页的客户-服务器程序。绝大多数情况下是HTTP协议，也可能会使用FTP等。</li>
<li>主机：可以是服务器的IP地址，或是主机被给予的唯一名称（域名）。</li>
<li>端口：是一个16位整数，通常情况下是为客户-服务器应用而预定义好的。</li>
<li>路径：定义了操作系统中文件的位置和名称。</li>
</ul>
<p>将这四部分组合在一起，便设计出了URL，它在四个部分之间使用三个不同的分隔符，如下所示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">protocol:&#x2F;&#x2F;host&#x2F;path  #绝大多数情况下使用</span><br><span class="line">protocol:&#x2F;&#x2F;host:port&#x2F;path  #当需要标识出端口号时使用</span><br></pre></td></tr></table></figure>
<h3 id="网上文档"><a class="markdownIt-Anchor" href="#网上文档"></a> 网上文档</h3>
<p>万维网上的文档可以分为下面三大类：</p>
<ul>
<li>静态文档：在服务器中创建和存储的固定内容的文档。当客户访问文档时，将一个文档的副本发送给用户，然后用户可以用浏览器查看文档。</li>
<li>动态文档：当浏览器请求文档时，网页服务器运行一个应用程序或者脚本来创建一个动态文档，返回程序或脚本的结果作为对浏览器请求文档操作的响应。动态文档的内容随着用户请求的不同而不同。</li>
<li>活动文档：浏览器请求一个活动文档时，服务器发送文档或者脚本的一个副本，然后文档在客户站点（浏览器）上运行。例如一个与用户交互的程序或者是在屏幕上创建动画的程序。</li>
</ul>
<h2 id="http"><a class="markdownIt-Anchor" href="#http"></a> HTTP</h2>
<p>HTTP（HyperText Transfer Protocol）是Web的应用层协议，它是Web的核心；HTTP有两部分实现，一个客户端程序一个服务器程序；HTTP定义了客户和服务器进行报文交换的方法，它的核心思想是客户通过HTTP请求对服务器发出对Web页面的请求报文，服务器收到该报文后将返回包含该对象的HTTP响应报文。</p>
<p>HTTP使用<strong>TCP</strong>作为它的传输层协议：HTTP客户首先发起一个与服务器的TCP连接，服务器根据请求作出响应，但是不存储任何关于该客户的状态信息。也正因为这样，HTTP被称为<strong>无状态协议</strong>。同时，Web使用了客户端-服务器的应用体系结构，其中web服务器总是开着的。</p>
<p>HTTP可以采用持续连接或是非持续连接两种方式：使用非持续连接时，每个TCP连接在服务器发送一个对象后就会关闭，也就是每个TCP只传送一个请求报文和响应报文，这会使得服务器的负担很重，同时一个对象需要两个RTT（Round-Trip Time，一个短分组从客户端到服务器，然后再返回客户端所用的时间）的时延才能交付；如果使用持续连接，服务器在发送响应报文后将保持该TCP打开，后续客户端可以使用该连接来向服务器发出请求，不但一个完整的页面可以通过同一个连接传送，同一台服务器上的多个页面也可以通过同一个连接发送，这样提高了效率。HTTP默认使用的是带流水线的持续连接。</p>
<h2 id="请求与响应报文"><a class="markdownIt-Anchor" href="#请求与响应报文"></a> 请求与响应报文</h2>
<p>请求报文的示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET &#x2F;index.html HTTP&#x2F;1.1\r\n  &#x2F;&#x2F;第一行为请求行，包括：方法字段、URL字段和HTTP版本字段，方法字段包括GET、POST、HEAD、PUT和DELETE等；</span><br><span class="line">Host: www-net.cs.umass.edu\r\n &#x2F;&#x2F;从第二行开始至下面的空行之间全部为首部行，包含是否在发送完响应报文后关闭TCP连接的Connection；请求的主机地址；浏览器版本；可接受的语言等头部信息</span><br><span class="line">User-Agent: Firefox&#x2F;3.6.10\r\n</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml\r\n</span><br><span class="line">Accept-Language: en-us,en;q&#x3D;0.5\r\n</span><br><span class="line">Accept-Encoding: gzip,deflate\r\n</span><br><span class="line">Accept-Charset: ISO-8859-1,utf-8;q&#x3D;0.7\r\n</span><br><span class="line">Keep-Alive: 115\r\n</span><br><span class="line">Connection: keep-alive\r\n</span><br><span class="line">\r\n</span><br><span class="line">实体主体  &#x2F;&#x2F;可以在POST方法里传递Form表单内容或者传递其它一些二进制流数据等</span><br></pre></td></tr></table></figure>
<p>响应报文的示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HTTP&#x2F;1.1 200 OK\r\n &#x2F;&#x2F;包含HTTP协议版本、状态码字段、以及状态短语。100范围内的代码代表一个报告，200范围内的代码表示一个成功的请求，300范围内表示重定向，400范围内表示客户端发生错误，500范围内表示服务器端发生错误。</span><br><span class="line">Date: Sun, 26 Sep 2010 20:09:20 GMT\r\n &#x2F;&#x2F;从第二行开始到空格之间为响应头部行，包含服务器向客户端发送的额外信息。</span><br><span class="line">Server: Apache&#x2F;2.0.52 (CentOS)\r\n</span><br><span class="line">Last-Modified: Tue, 30 Oct 2007 17:00:02 GMT\r\n</span><br><span class="line">ETag: &quot;17dc6-a5c-bf716880&quot;\r\n</span><br><span class="line">Accept-Ranges: bytes\r\n</span><br><span class="line">Content-Length: 2652\r\n</span><br><span class="line">Keep-Alive: timeout&#x3D;10, max&#x3D;100\r\n</span><br><span class="line">Connection: Keep-Alive\r\n</span><br><span class="line">Content-Type: text&#x2F;html; charset&#x3D;ISO-8859-1\r\n</span><br><span class="line">\r\n</span><br><span class="line">data data data data data ... </span><br></pre></td></tr></table></figure>
<h2 id="cookie"><a class="markdownIt-Anchor" href="#cookie"></a> Cookie</h2>
<p>万维网最初被设计成无状态实体，客户发生请求，服务器响应，它们之间的关系便结束了。为了让Web实现更多的功能，便出现了Cookie机制。</p>
<h3 id="创建与存储"><a class="markdownIt-Anchor" href="#创建与存储"></a> 创建与存储</h3>
<ol>
<li>当服务器从客户端接收到请求之后，将客户端的信息存储在文件或字符串中。这些信息可能包含客户端的域名、cookie内容（服务器收集到的关于客户端的信息）、时间戳以及与实现有关的其他信息。</li>
<li>服务器在响应中包含了它发给客户端的cookie。</li>
<li>当客户端接收到响应之后，浏览器在cookie目录中存储cookie，并根据服务器域名进行分类。</li>
</ol>
<h3 id="cookie的使用"><a class="markdownIt-Anchor" href="#cookie的使用"></a> Cookie的使用</h3>
<p>当客户向服务器发送请求时，浏览器在cookie目录中查询是否有从那个服务器发送过来的cookie。如果有则在请求中包含这个cookie。当服务器接收到这个请求后，它知道这是一个老客户。下面是cookie的一些使用场景：</p>
<ul>
<li>电子商务：当客户端选择商品，并放入购物车中后，包含这些商品信息的cookie就会被发送到浏览器。如果客户端选择第二个商品，就会更新cookie，以此类推。当客户端结束购物并付款时，就检索最后的cookie，然后计算总价格。</li>
<li>用户注册：当客户端第一次注册时，网站向客户端发送一个cookie，网站通过这种方式限制注册用户访问。只有能发送正确cookie的用户才允许今后重复访问。</li>
<li>Web门户：当用户选择最喜欢的网页时，就生成一个cookie并发送到浏览器。当网站再次被访问时，这个cookie就发送给服务器说明客户端要查找的页面。</li>
<li>广告代理：当用户访问网站主页并点击广告图标时，一个请求发送给广告代理，广告代理就会发送一个大字标题广告，同时也包含一个含有用户ID的cookie。将来对这个大字标题广告的任何使用都会加入到一个分析用户Web行为的数据库中。这种使用方法侵犯用户隐私，引起很多争议。</li>
</ul>
<p>注意，cookie的内容不允许浏览器读取或者透露给用户，只能由服务器创建并回收。</p>
<h2 id="代理服务器"><a class="markdownIt-Anchor" href="#代理服务器"></a> 代理服务器</h2>
<p>HTTP支持代理服务器，代理服务器是一台计算机，能够保存最近请求的响应副本。HTTP客户端向代理服务器发送请求，代理服务器检查本地高速缓存。如果高速缓存中不存在响应报文，代理服务器就向相应的服务器发送请求。返回的响应会发送到代理服务器中并存储，以用于其他客户端未来的请求。</p>
<p>代理服务器降低了原服务器的负载，减少了通信量并降低了延迟。但是为了使用代理服务器，需要在客户端配置，使其访问代理服务器。</p>
<h1 id="ftp"><a class="markdownIt-Anchor" href="#ftp"></a> FTP</h1>
<p>文件传输协议（File Transfer Protocol, FTP）是TCP/IP提供的标准机制，用于将文件从一个主机复制到另一个主机。在FTP的基本模型中，客户有三个组件：用户接口、客户控制进程和客户数据传输进程，服务器有两个组件：服务器控制进程和服务器数据传输进程。</p>
<p>在FTP协议中，控制连接是在控制进程之间进行的，而数据连接是在数据传输进程之间进行的。将命令和数据分开传输使得FTP效率更高。</p>
<h2 id="控制连接和数据连接"><a class="markdownIt-Anchor" href="#控制连接和数据连接"></a> 控制连接和数据连接</h2>
<h3 id="连接的寿命"><a class="markdownIt-Anchor" href="#连接的寿命"></a> 连接的寿命</h3>
<p>在整个交互的FTP会话期间，控制连接始终处于连接状态，数据连接则在每次传输文件时开启然后关闭。控制连接的端口是21，数据连接的端口是20。</p>
<h3 id="控制连接"><a class="markdownIt-Anchor" href="#控制连接"></a> 控制连接</h3>
<p>FTP的控制通信使用与TELNET相同的方法。FTP与TELNET一样使用NVT ASCII字符集，通信是通过命令和响应来完成的。这种简单方法适合控制连接，因为一次发送一条命令或响应，而每一条命令或响应都是一个短行。</p>
<p>在控制连接期间，命令从客户端发送到服务器，并且响应从服务器发送到客户端。从FTP客户控制进程发送的命令是ASCII大写字母形式的，某些带有参数。每个FTP命令至少产生一个响应，一个响应有两部分，包括文本与其后的一个三位数字。数字部分定义了编码，文本部分定义了需要的参数或是进一步的解释。数字中的第一位定义了命令状态，第二位定义了状态应用的区域，第三个数字提供了额外信息。</p>
<h3 id="数据连接"><a class="markdownIt-Anchor" href="#数据连接"></a> 数据连接</h3>
<p>数据连接的步骤如下：</p>
<ol>
<li>客户使用临时端口发起一个被动打开。</li>
<li>客户使用PORT命令发送端口号到服务器。</li>
<li>服务器接收到端口号，使用端口20发出主动打开并且接收临时端口号。</li>
</ol>
<p>在数据连接中，客户必须定义传输文件的类型、数据结构和传输模式。在通过数据连接发送文件之前，通过控制连接进行准备。</p>
<ul>
<li>数据结构：FTP可以使用文件结构、记录结构和页面结构中的一种。文件结构格式（默认）是连续的字节流；记录结构中将文件划分成一些记录；在页面结构中是将文件划分为多个页面，每个页面有一个页面号和页面头部。</li>
<li>文件类型：可以是ASCII、EBCIDC和图像文件三种中的一种</li>
<li>传输方式：包括流方式、块方式和压缩方式。流方式（默认）将数据作为连续字节流进行传递；块方式中数据按块传递，每个块前面包括块描述符和块大小。</li>
</ul>
<h2 id="文件传输"><a class="markdownIt-Anchor" href="#文件传输"></a> 文件传输</h2>
<p>文件传输是在控制连接发送出来的命令的控制之下，在数据连接上进行的。FTP的文件传输表示三件事情之一：读取文件（服务器到客户）、存储文件（客户到服务器）和目录列表（服务器到客户）。</p>
<h1 id="电子邮件"><a class="markdownIt-Anchor" href="#电子邮件"></a> 电子邮件</h1>
<h2 id="架构"><a class="markdownIt-Anchor" href="#架构"></a> 架构</h2>
<p>通常情况下，电子邮件的发送者和接收者通过WAN或者LAN连接到两个邮件服务器上。管理员为每个用户创建了一个邮箱，接收到的报文被存储在邮箱里。邮箱是服务器硬盘的一部分，是一个带有限制的特殊文件，只有邮箱拥有者才能访问它。</p>
<p>一个电子邮件从发送者到接收者的过程如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201201232435.png" alt="image-20201125210219177" /></p>
<h3 id="用户代理"><a class="markdownIt-Anchor" href="#用户代理"></a> 用户代理</h3>
<p>用户代理（User Agent, UA）是一个软件包，由读写、回答和转发报文组成。它也处理用户计算机的本地邮箱。现在的用户代理都是基于GUI型的，允许用户使用键盘和鼠标与软件进行交互。典型的例子有Outlook。</p>
<h4 id="发送邮件"><a class="markdownIt-Anchor" href="#发送邮件"></a> 发送邮件</h4>
<p>在发送邮件时，用户通过UA创建邮件，一封邮件包含一个信封和一个报文。信封包含发信人的地址、收件人的地址以及其他信息；报文包含头部和主体，头部定义了发信人、收件人、报文的主题以及其他信息，报文的主体包含了收件人要读取的真正信息。</p>
<h4 id="接收邮件"><a class="markdownIt-Anchor" href="#接收邮件"></a> 接收邮件</h4>
<p>用户或定时器触发用户代理检查邮箱。如果用户有邮件，UA就通过一个通知来告诉用户。如果用户准备读取邮件则会显示一个列表，列表每一行包含邮箱中一个特定报文的信息概要。用户可以选择其中任何一个报文阅读其内容。</p>
<h4 id="地址"><a class="markdownIt-Anchor" href="#地址"></a> 地址</h4>
<p>为了传递邮件，邮件处理系统使用具有唯一地址的寻址系统。在因特网中，地址包括两部分，本地部分和域名，并且用逗号隔开。它们组成如下的格式：<code>本地部分@域名</code>。</p>
<p>本地部分定义了一个特定文件的名字，被称为用户邮箱，在其中存储了用户接收到的所有邮件，以便UA进行读取。第二部分是域名，一个组织机构通常使用一个或多个主机来接收和发送邮件，这些主机被称为邮件服务器或交换机。分配给每个邮件交换机的域名来自于DNS数据库或是一个逻辑名称。</p>
<h3 id="报文传输代理smtp"><a class="markdownIt-Anchor" href="#报文传输代理smtp"></a> 报文传输代理：SMTP</h3>
<p>在因特网中定义报文传输代理（Mail Transfer Agent, MTA）客户机和服务器的常用协议称为简单邮件传输协议（SMTP）。SMTP是一个推协议，它将报文从客户推入服务器。SMTP协议在发送放和接收方邮件服务器之间以及两个邮件服务器之间被使用两次。</p>
<h4 id="命令和响应"><a class="markdownIt-Anchor" href="#命令和响应"></a> 命令和响应</h4>
<p>SMTP使用一些命令和响应在MTA客户和MTA服务器之间传输报文。命令从MTA客户发生到MTA服务器；响应从MTA服务器发送到MTA客户。每一个命令或者响应都是以一个双字符（回车和换行）的行结束标记来终止的。</p>
<p>客户发给服务器命令的格式如下：<code>关键词：变量</code>。服务器发给用户的响应是一个三位数字码，后面可以跟着附加的文本信息。</p>
<h4 id="邮件传输"><a class="markdownIt-Anchor" href="#邮件传输"></a> 邮件传输</h4>
<p>传输一个邮件可以大体分为3个阶段：连接建立、邮件传输和连接终止：</p>
<ol>
<li>连接建立：在客户创建了到端口25的TCP连接之后，SMTP服务器开始连接阶段。这个阶段的步骤包括：
<ol>
<li>服务器发送代码220（服务就绪）告知客户它准备好接收邮件。如果未准备就绪就发送代码421（服务不可用）。</li>
<li>客户发送HELO报文，使用自身域名地址来让服务器识别自身，需要将客户的域名告知服务器。</li>
<li>服务器以代码250（请求命令完成）响应，或者做其他响应。</li>
</ol>
</li>
<li>邮件传输：在SMTP客户与服务器的连接建立之后，单个报文可以在一个发信人和多个收信人之间交换。这一阶段涉及8个步骤，如果收信人有多个则重复3和4：
<ol>
<li>客户发送MAIL FROM报文以介绍发信人，其中包括发信人的邮件地址。同时服务器向发信人提供回信地址，用于返回错误以及报告报文。</li>
<li>服务器用代码250或其他代码响应。</li>
<li>客户发送RCPT TO（收信人）报文，包含收信人的邮箱地址。</li>
<li>服务器用代码250或其它代码响应。</li>
<li>客户发送DATA报文，初始化报文传输。</li>
<li>服务器用代码354（开始邮件输入）或者其他代码响应。</li>
<li>客户以连续行的形式发送报文内容。每行用两个行结束标记终止。报文用一个只包含一个句点的行终止。</li>
<li>服务器用代码250或其他代码响应。</li>
</ol>
</li>
<li>连接终止：在报文成功传送之后客户终止连接，这个阶段包括两步：
<ol>
<li>客户发送QUIT命令</li>
<li>服务器用代码221或其他代码响应</li>
</ol>
</li>
</ol>
<p>上述的整个过程可以用下图来表示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201201232444.png" alt="邮件发送全过程" /></p>
<h3 id="报文访问代理pop和imap"><a class="markdownIt-Anchor" href="#报文访问代理pop和imap"></a> 报文访问代理：POP和IMAP</h3>
<p>在邮件传递的最后一个阶段，需要使用到报文访问代理（Mail Access Agent, MAA）。报文访问代理协议是一个拉协议，使得客户可以从服务器拉出报文。目前有两种报文访问代理协议：POP3和IMAP4。</p>
<h4 id="pop3"><a class="markdownIt-Anchor" href="#pop3"></a> POP3</h4>
<p>POP3比较简单，但是功能上受到一定的限制。客户端的POP3软件安装在收信人的计算机中，服务器POP3软件安装在邮件服务器中。当用户需要从邮件服务器的邮箱中下载邮件时，客户端发起邮件访问操作。客户端开启与服务器110端口之间的TCP连接，然后发送用户名和口令来访问邮箱，用户便可逐条列出和读取邮件信息了。</p>
<p>POP3有两种模式，分别为删除模式和保存模式。删除模式中，当邮件从邮箱中读取完之后就会从邮箱中删除。在保存模式中，邮件经过读取之后仍然保存在邮箱中。</p>
<h4 id="imap4"><a class="markdownIt-Anchor" href="#imap4"></a> IMAP4</h4>
<p>IMAP4比起POP3来说功能更强并且更加复杂，它提供了一些额外的功能，例如：</p>
<ul>
<li>下载电子邮件之前可以检查电子邮件头部</li>
<li>下载电子邮件之前可以读取邮件内容中的特定字符串</li>
<li>可以部分下载电子邮件</li>
<li>可以在邮件服务器上创建或删除邮箱，也可以改变邮箱名字</li>
<li>可以在文件夹中创建邮箱的层次结构以用于邮件存储</li>
</ul>
<h4 id="mime"><a class="markdownIt-Anchor" href="#mime"></a> MIME</h4>
<p>多用途因特网邮件扩充（Multipurpose Internet Mail Extensions, MIME）是一个辅助协议，允许非ASCII数据通过电子邮件传送。在发送方将非ASCII数据转换为NVT ASCII数据，并将其传递给MTA客户机通过因特网发送出去，接收方再转换为原来的数据。</p>
<h1 id="远程登录"><a class="markdownIt-Anchor" href="#远程登录"></a> 远程登录</h1>
<h2 id="telnet"><a class="markdownIt-Anchor" href="#telnet"></a> TELNET</h2>
<p>TELNET（TErminaL NETwork）是一种原始的远程登录协议，虽然登录时需要用户名和口令，但是所有的数据全部采用明文传输，因此很容易遭受攻击。因此目前常常使用SSH（Secure Shell）代替它。</p>
<h3 id="基本原理"><a class="markdownIt-Anchor" href="#基本原理"></a> 基本原理</h3>
<p>当用户使用TELNET访问一个远程机器时，用户将击键发送给终端驱动程序，同时本地操作系统接收这些字符但是并不解释它们。这些字符被发送到TELNET客户机，它将这些字符转换成网络虚拟终端（Network Virtual Terminal, NVT）字符的通用字符集，然后将其传送给本地的TCP/IP协议堆栈。</p>
<p>采用NVT形式的命令或文本通过因特网传送到远程机器的TCP/IP堆栈，在那里字符传递给操作系统，然后传送给TELNET服务器，TELNET服务器将这些字符转换成远程计算机可以理解的字符。但是这些字符不能直接传递给操作系统，需要使用一个终端驱动程序的软件块，将这些字符伪装成是从一个终端发过来的，然后操作系统将这些字符传输给适当的应用程序。</p>
<h2 id="安全shellssh"><a class="markdownIt-Anchor" href="#安全shellssh"></a> 安全Shell（SSH）</h2>
<h3 id="组件"><a class="markdownIt-Anchor" href="#组件"></a> 组件</h3>
<p>SSH是一个有三个组件的应用层协议，包括：</p>
<ul>
<li>SSH应用层协议：建立安全信道，提供数据完整性、服务认证、报文压缩、报文保密性服务</li>
<li>SSH认证协议：为服务器对客户进行认证</li>
<li>SSH连接协议：创建不同的逻辑信道用于实现不同的通信</li>
</ul>
<h3 id="应用"><a class="markdownIt-Anchor" href="#应用"></a> 应用</h3>
<p>SSH是一个提供客户和服务器之间安全连接的通用协议，可以提供如下的应用：</p>
<ul>
<li>远程登录</li>
<li>文件传输</li>
<li>端口转发</li>
</ul>
<h1 id="域名系统"><a class="markdownIt-Anchor" href="#域名系统"></a> 域名系统</h1>
<h2 id="地址映射"><a class="markdownIt-Anchor" href="#地址映射"></a> 地址映射</h2>
<p>在访问网址时，人们更喜欢用名字而不是数字IP地址，但是TCP协议却需要使用IP地址来唯一地确定一台主机到因特网的连接。因此，因特网需要一种能够将名字映射地址的目录系统。这个系统被称为域名系统（Domain Name System, DNS）</p>
<p>例如一个用户想访问一个文件传输服务器，将服务器的主机名映射到IP地址需要如下几个步骤：</p>
<ol>
<li>用户将主机名传递给文件传输客户端</li>
<li>文件传输客户端将主机名传递到DNS客户端</li>
<li>在启动后，每一台电脑都知道DNS服务器的地址。DNS客户端使用已知DNS服务器IP地址向DNS服务器发送附有查询的报文，报文中包含文件服务器名</li>
<li>DNS服务器进行响应，发回客户想要获得的文件传输服务器的IP地址</li>
<li>DNS客户端将IP地址传递到文件传输服务器</li>
<li>文件传输客户端使用接收到的IP地址访问文件传输服务器</li>
</ol>
<h2 id="域名空间"><a class="markdownIt-Anchor" href="#域名空间"></a> 域名空间</h2>
<p>域名空间是一种层次名字空间，在这种设计方式中，所有的名字由根在底部的倒置树结构定义。该树最多有128级：0（根节点）~127级。</p>
<p>域名空间中一些概念的定义如下：</p>
<ul>
<li>标签：树上的每个节点有一个标签。标签是一个最多为63个字符的字符串，根节点的符号是空字符串。DNS要求每一个结点的子节点有不同的标签，这样便保证了域名的唯一性</li>
<li>域名：树上的每一个节点都有一个域名。一个完整的域名是用点（.）分割的标签序列。域名总是从某一节点向上读到根节点。由于最后一个标签一定是根节点的空标签，因此完整域名的最后一个字符一定是一个点。如果一个标签以空字符串结束，则被称为全称域名；反之则被称为部分域名。</li>
<li>域：一个域是域命名空间的子树，域的名称是子树顶端节点的名称。也就是说树中的每一个节点定义一个域。</li>
</ul>
<p>域名空间被划分为三部分：通用域、国家域和反向域。反向域可以被用于在给定IP地址的情况下找到主机名，由于太复杂目前已经被废止。通用域按照已经注册主机的一般行为对主机进行定义，在通用域的一个层次允许有14个可能的标签，这些标签对应于不同的机构类型。国家域部分使用双字母的国家缩写，第二级标号由各个国家自己制定。</p>
<p>当一个新的域名需要加入到DNS中时，需要通过注册机构来完成。注册机构首先确认域名的唯一性，然后将它输入到DNS数据库中。</p>
<h2 id="dns服务器"><a class="markdownIt-Anchor" href="#dns服务器"></a> DNS服务器</h2>
<p>域名空间中的信息被分布存储在多台DNS服务器中。一个服务器负责或者授权的域名空间被称为区域。一个区域可以是一个域，也可以是一个域的一部分。</p>
<p>根服务器的区域由整颗树组成，它通常不保存关于域的任何信息，只是将其授权委托给其他服务器，并保持与这些服务器的参照关系。目前有多个根服务器，每一台都覆盖了整个域名空间，它们分布于世界各地。</p>
<p>主服务器是存储了授权区域有关文件的服务器，它负责创建、维护和更新区域文件，并将区域文件存储在本地磁盘中。</p>
<p>辅助服务器负责从另一个服务器（主服务器或辅助服务器）传输一个区域的全部信息，并将文件存储在它的本地磁盘中。辅助服务器不创建也不更新区域文件，如果需要更新则从主服务器传到辅助服务器上。</p>
<h2 id="地址解析"><a class="markdownIt-Anchor" href="#地址解析"></a> 地址解析</h2>
<p>将名字映射为地址或是将地址映射为名字的过程被称为名字-地址解析。需要完成这一工作时，主机调用一个称为解析程序的DNS客户程序，解析程序用一个映射请求访问最近的一个DNS服务器。如果服务器含有该信息，就满足解析程序的请求；否则它将解析程序交付给其他服务器，或者查询其他服务器来提供这种服务。</p>
<h2 id="dns报文"><a class="markdownIt-Anchor" href="#dns报文"></a> DNS报文</h2>
<p>为了获取关于主机的信息，DNS使用查询报文和响应报文，二者具有相同的格式。一个DNS报文的结构如下：</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201201232459.png" alt="DNS报文" style="zoom: 33%;" />
<p>标识字段用来匹配对查询的响应；标记定义了报文是查询报文还是响应报文；查询部分包含在查询报文中，并且在响应中被重复，它包含一个或者多个问题记录；响应部分包含一个或多个资源记录，只出现在响应报文中；授权部分给出一个或多个负责查询的授权服务器的信息；额外信息部分提供了可能帮助解析程序的额外信息。</p>
<p>DNS使用的熟知端口号为53，当响应报文长度小于512字节时使用UDP连接，大于512字节时则使用TCP连接。如果事先无法确定报文长度，则先使用UDP端口，当超过512字节时服务器会截断这一报文，解析程序开启TCP连接并重复该请求。</p>
<h2 id="ddns"><a class="markdownIt-Anchor" href="#ddns"></a> DDNS</h2>
<p>如果做了增加主机、改变IP地址等操作时，这些改变会使得DNS的主文件发生变化。由于因特网规模太大，如果手动进行更新几乎不可能，因此要求DNS主文件可以进行动态更新。在DDNS中，当名字和地址之间的绑定被确定时，这些信息通常由DHCP发送给主DNS服务器。主服务器更新这一区域，并以主动或被动方式通知辅助服务器。</p>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<ol>
<li>计算机网络：自顶向下方法</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MzI2NDcyL2FydGljbGUvZGV0YWlscy84ODA4OTc0Nw==">https://blog.csdn.net/qq_39326472/article/details/88089747<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5Mzg0MTg0L2FydGljbGUvZGV0YWlscy84NDAzMzcyOA==">https://blog.csdn.net/qq_39384184/article/details/84033728<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9iZXRhLnNlZ21lbnRmYXVsdC5jb20vYS8xMTkwMDAwMDIzNzI2Mjc4">https://beta.segmentfault.com/a/1190000023726278<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzUwMjkzMjAw">https://www.zhihu.com/question/50293200<i class="fa fa-external-link-alt"></i></span></li>
</ol>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机网络-数据链路层</title>
    <url>/2021/01/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/</url>
    <content><![CDATA[<h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1>
<h2 id="结点和链路"><a class="markdownIt-Anchor" href="#结点和链路"></a> 结点和链路</h2>
<p>通常习惯上，网络通信中涉及的两个端主机和路由器被视为结点，而它们之间的网络被视为链路。数据链路层控制了如何使用两个结点之间的传输介质。</p>
<p>链路分为点对点链路和广播链路。在点对点链路中，链路专供给两个设备使用；在广播链路中，链路在几对设备之间共享。</p>
<h2 id="两个子层"><a class="markdownIt-Anchor" href="#两个子层"></a> 两个子层</h2>
<p>数据链路层通常被分为两个子层：数据链路控制和介质访问控制。数据链路控制子层处理点对点链路和广播链路的共有问题，而介质访问控制子层只处理广播链路的特定问题。</p>
<a id="more"></a>
<h1 id="数据链路控制"><a class="markdownIt-Anchor" href="#数据链路控制"></a> 数据链路控制</h1>
<h2 id="成帧"><a class="markdownIt-Anchor" href="#成帧"></a> 成帧</h2>
<h3 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h3>
<p>在数据链路层中，通过添加发送方和接收方的地址，成帧将源端到目的端的报文分离开来。目的地址定义了分组去向，发送地址帮助接收方确认接收。</p>
<p>虽然整个报文能够打包为一个帧，但是通常不这样做。这是因为如果帧比较大时，流量控制和差错控制变得非常低效，同时一个小的差错将会要求整个帧的重传。</p>
<h3 id="帧长度"><a class="markdownIt-Anchor" href="#帧长度"></a> 帧长度</h3>
<h4 id="面向字符成帧"><a class="markdownIt-Anchor" href="#面向字符成帧"></a> 面向字符成帧</h4>
<p>在面向字符（或面向字节）成帧中，传输的数据来自于如ASCII编码系统的8位字符。头部通常携带源地址和目的地址以及其它的控制信息，而尾部携带差错检测冗余位，它也是8的倍数。同时为了将帧与帧之间分离，需要在帧的开始和结尾处各添加一个8位的标记，标记由与协议相关的特殊字符组合而成。</p>
<p>面向字符协议中的帧大致结构如下：</p>
<p>|标记|头部|……来自上层的数据……|尾部|标记|</p>
<p>有可能出现标记也是上层数据中的一部分这种情况，为了解决这一问题，使用了字节填充策略。如果数据中存在与标记相同模式的字符，那么一个特定的字符将会被添加到这个字符的前面，这个字符被称为转义字符。如果数据中包含转义字符本身，同样也在转义字符前面再加上一个转义字符表明它后面的转义字符是数据的一部分。</p>
<h4 id="面向位成帧"><a class="markdownIt-Anchor" href="#面向位成帧"></a> 面向位成帧</h4>
<p>在面向位成帧中，一个帧的数据段是一个位序列。在这种模式下，大部分协议使用8位模式标记01111110作为分界符。此时帧的大致结构如下：</p>
<p>| 01111110（标记） | 头部 | ……来自上层的数据…… | 尾部 | 01111110（标记） |</p>
<p>如果这个标记模式在数据中出现，我们使用位填充的方法来使得这一段数据与标记区别开。在位填充中，当遇到1个0和连续的5个1时，便添加一个额外的0，这个额外的填充最终会被接收方移除。</p>
<h2 id="流量控制与差错控制"><a class="markdownIt-Anchor" href="#流量控制与差错控制"></a> 流量控制与差错控制</h2>
<p>数据链路层也提供了流量控制的功能，它的流量控制方法与传输层思想相同。但是数据链路层的流量控制是结点到结点的，而不是像传输层那样端到端的。</p>
<p>在数据链路层中，差错控制指的是差错检测和重传的方法。数据链路层中的差错控制是结点到结点的，在交换中的任意时刻检测到差错就要重传出错的帧。</p>
<h2 id="差错检测和纠错"><a class="markdownIt-Anchor" href="#差错检测和纠错"></a> 差错检测和纠错</h2>
<h3 id="简介-2"><a class="markdownIt-Anchor" href="#简介-2"></a> 简介</h3>
<p>在数据链路层，如果两个结点之间的一个帧被破坏，就需要纠正这个差错帧。大多数链路层协议只是简单丢弃这个帧，让上层协议处理帧的重传。但是一些无线协议试图去纠正这个被破坏的帧。</p>
<h3 id="差错类型"><a class="markdownIt-Anchor" href="#差错类型"></a> 差错类型</h3>
<p>当数据从一个点流到另一个点时，由于干扰的存在，可能对数据造成不可预测的变化。单个位差错指的是在给定的数据单元中，只有一个位从0变成1或者从1变成0；而突发性差错指的是2个或者更多的位发生了翻转。突发性差错比起单个位差错更容易发生。</p>
<h3 id="检错和纠错"><a class="markdownIt-Anchor" href="#检错和纠错"></a> 检错和纠错</h3>
<h4 id="冗余"><a class="markdownIt-Anchor" href="#冗余"></a> 冗余</h4>
<p>检错或者纠错的核心概念是冗余。为了能够检测或者纠正，除了发送数据以外，还需要发送一些额外的位。这些冗余位由发送方添加，由接收方移除，冗余位允许接收方检测或者纠正被破坏的位。</p>
<h4 id="编码"><a class="markdownIt-Anchor" href="#编码"></a> 编码</h4>
<p>冗余是通过各种编码方案来实现的。发送方通过某种方法建立冗余位与真实数据之间的某种关系，以此来增加冗余位。接收方检测这两者之间的关系来检错。编码方案分为块编码和卷积编码两大类。</p>
<p>在块编码中，报文被分成多块，每块k位被称为数据字。我们为每一块增加r个冗余位，使得长度n=k+r。这样形成的n位块称为代码字。</p>
<p>几乎所有的块编码都属于线性块编码的子集，常用的一些编码方式有奇偶校验编码、循环编码等。</p>
<h2 id="dlc协议"><a class="markdownIt-Anchor" href="#dlc协议"></a> DLC协议</h2>
<h3 id="hdlc"><a class="markdownIt-Anchor" href="#hdlc"></a> HDLC</h3>
<p>高级数据链路控制（High-level Data Link Control, HDLC）是一种面向位的协议，它用于点到点和多点链路的通信。</p>
<p>HDLC提供了两种通用的传输模式：正常响应模式和异步平衡模式。在正常响应模式中，只有一个主站和多个从站，主站可以发送指令，从站只能响应命令。正常响应模式可以在点到点和多点链路中使用。而在异步平衡模式中，链路是点到点的，每个站点可以行使主站和从站的功能。</p>
<p>为了支持不同的模式及其对应的选项，HDLC定义了三种不同类型的帧，每一种类型的帧为不同类型的报文传输充当信封的角色。它们的作用如下：</p>
<ul>
<li>信息帧：传输用户数据和与用户数据相关的控制信息</li>
<li>管理帧：传输控制信息</li>
<li>无编号帧：管理链路本身</li>
</ul>
<h3 id="点到点协议"><a class="markdownIt-Anchor" href="#点到点协议"></a> 点到点协议</h3>
<h4 id="服务"><a class="markdownIt-Anchor" href="#服务"></a> 服务</h4>
<p>点到点协议（Point-to-Point Protocol, PPP）是点到点访问最通用的协议之一。家庭网络用户与因特网服务提供商服务器的连接就是通过PPP协议完成的。</p>
<p>PPP定义了在设备之间交换的帧的格式，也定义了两条设备之间如何协商链路的建立和数据的转发。同时，PPP提供了简单的机制用于差错控制。但是PPP不提供流量控制。</p>
<h4 id="成帧-2"><a class="markdownIt-Anchor" href="#成帧-2"></a> 成帧</h4>
<p>PPP使用面向字符的帧。一个PPP帧的格式如下：</p>
<p>|标记|地址|控制|协议|负载|帧校验序列|标记|</p>
<p>其中每个字段（域）的用途如下：</p>
<ul>
<li>标记：使用01111110作为开始和结束的标记</li>
<li>地址：是一个常量，设置为11111111</li>
<li>控制：常量值00000011</li>
<li>协议：定义了数据域中要包含的内容，属于用户数据或者其他信息</li>
<li>负载：包含用户数据或者其他信息。负载的默认最大值为1500字节，但是可以通过协商改变。负载需要使用字节填充。由于PPP帧没有定义负载长度，因此如果复杂长度小于最大值时需要使用数据填补</li>
<li>帧校验序列：简单的2字节或者4字节的标准CRC</li>
</ul>
<h4 id="转换阶段"><a class="markdownIt-Anchor" href="#转换阶段"></a> 转换阶段</h4>
<p>下图为PPP连接阶段的状态转换图，该转换图从闲置状态开始：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201227131831.png" alt="PPP协议转换图" /></p>
<h4 id="多路复用"><a class="markdownIt-Anchor" href="#多路复用"></a> 多路复用</h4>
<p>虽然PPP属于链路层协议，但是PPP使用另一组协议来建立链路，认证双方身份，并承载网络层数据。这其中使用到了三组协议：链路控制协议（LCP）、2个认证协议（AP）、几个网络控制协议（NCP）。任意时刻，一个PPP分组可以在负载中同时包含来自于这些协议中的数据。</p>
<p>链路控制协议负责建立、维护、配置和终止链路。它也提供了协商机制以在两个终端之间设置选项。在链路建立之前，链路的两个终端必须就选项达成一致。</p>
<p>认证协议中包括口令认证协议（PAP）和查询握手认证协议（CHAP）。这两个协议是在认证阶段使用，用于确认用户身份。</p>
<p>由于PPP是多网络层协议，它可以承载来自因特网定义的协议中的网络层数据。因此PPP为每一个网络层协议定义了一个特定的网络控制协议，例如因特网协议控制协议（IPCP）用来配置IP数据分组的链路等。NCP协议中的一个完成网络配置后，用户可以交换来自网络层的数据分组。注意不同的网络层具有不同的协议域。</p>
<h1 id="多路访问协议"><a class="markdownIt-Anchor" href="#多路访问协议"></a> 多路访问协议</h1>
<h2 id="随机访问"><a class="markdownIt-Anchor" href="#随机访问"></a> 随机访问</h2>
<h3 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h3>
<p>在随机访问中，没有站点优于其他站点，也没有站点能控制其他站点。每一次有数据要发送的站点使用由协议定义的程序来决定是否要发送，该决定依赖于介质的状态。</p>
<h3 id="aloha"><a class="markdownIt-Anchor" href="#aloha"></a> ALOHA</h3>
<p>在ALOHA协议中，一个站点只要有帧要发送，它就发送该帧。但是因为只有一条通道共享，来自于不同站点的帧就有可能冲突碰撞。当一个站点发送一个帧时，它期望接收方发送一个确认，如果超时后确认还未到达则会重发。</p>
<h3 id="载波侦听多路访问"><a class="markdownIt-Anchor" href="#载波侦听多路访问"></a> 载波侦听多路访问</h3>
<p>载波侦听多路访问（Carrier Sense Multiple Access, CSMA）技术要求每一个站点在发送之前要检测介质状态，这样便会一定程度上降低冲突概率，但是因为广播延迟的存在并不能完全消除冲突。</p>
<p>CSMA方法本身没有规定冲突之后的处理程序。带有冲突检测的载波监听多路访问（CSMA/CD）提出了处理冲突的算法。在这种方法中，站点在发送帧之后监视介质来查看传输是否成功。如果成功则完成发送，如果不成功则说明存在冲突，需要重新发送此帧。</p>
<p>CSMA方法的变种是带有冲突避免的载波侦听多路访问（CSMA/CA），它在无限局域网中使用。</p>
<h2 id="受控访问"><a class="markdownIt-Anchor" href="#受控访问"></a> 受控访问</h2>
<p>在受控访问中，站点之间相互协商以确认哪个站点有权发送帧。受控访问的方法有三种：</p>
<ul>
<li>预约：站点在发送数据之前要预约。时间被分为时隙，每个子时隙属于一个站点，当一个站点要发送数据帧时就在自己的子时隙中预约。已经预约的站点在预约帧之后发送数据帧。</li>
<li>轮询：一个设备做主站，其他设备做从站，所有的数据交换必须经过主站设备。主站设备总是会话的发起者，它使用轮询与选择来预防冲突。</li>
<li>令牌传递：网络中的站点组织为一个逻辑环，每个站点都有一个前驱与后继。一个称为令牌的特殊信息分组在环中循环，拥有令牌的站点有权力访问通道和发送数据。当站点要发送数据时，它等到从前驱获取令牌，然后它持有令牌发送数据，直到数据发送完成之后将令牌传给后继。</li>
<li>通道化：不同的站点之间可以通过时间、频率或者编码共享链路的可用带宽。这些方法通常在无线网络中使用。</li>
</ul>
<h1 id="链路层寻址"><a class="markdownIt-Anchor" href="#链路层寻址"></a> 链路层寻址</h1>
<h2 id="mac地址"><a class="markdownIt-Anchor" href="#mac地址"></a> MAC地址</h2>
<p>在无连接的传输过程中，来自于同一个源主机到达同一个目的主机的数据报可能会经过不同的路径，源端IP地址和目的端IP地址定义了两个终端，但是没有定义数据报应该走哪条链路。而且，IP地址也是可以改变的。因此在无连接的互联网络中，需要使用到两个结点的链路层地址，也被称为MAC地址。</p>
<p>在最通用的局域网、以太网中，链路层地址是48位，它用由冒号分开的12个十六进制数字来表示。</p>
<h2 id="地址解析协议"><a class="markdownIt-Anchor" href="#地址解析协议"></a> 地址解析协议</h2>
<h3 id="概述-2"><a class="markdownIt-Anchor" href="#概述-2"></a> 概述</h3>
<p>地址解析协议（Address Resolution Protocol, ARP）是定义在<em>网络层</em>的辅助协议，它接收来自于IP协议的IP地址，将其映射为对应的链路层地址，并将其传给数据链路层。</p>
<p>如果一台主机或者路由器需要查询在网络中另一台主机或者路由器的链路层地址时，它就发送一个ARP请求分组。该分组包含发送方的链路层地址、发送方IP地址和接收方IP地址。该查询使用链路层广播地址在链路上广播查询。</p>
<p>网络中的每一台主机或者路由器接收和处理ARP请求分组，但是只有预定的接收方识别它的IP地址，并发回一个ARP响应分组。这一分组包含接收方IP地址和链路层地址，使用单播方式直接发给发送请求分组的结点。</p>
<h3 id="分组格式"><a class="markdownIt-Anchor" href="#分组格式"></a> 分组格式</h3>
<p>下图所示为ARP分组的格式：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201227131854.png" alt="ARP报文格式" /></p>
<p>其中硬件类型域定义了链路层协议类型；协议类型域定义了网络层协议；源硬件地址和源协议地址域为可变长度，它们定义了发送方的链路层地址和网络地址。目的硬件地址和目的协议地址定义了接收方的链路层地址和网络层地址。ARP分组直接封装为一个数据链路层帧。</p>
<h1 id="以太网协议"><a class="markdownIt-Anchor" href="#以太网协议"></a> 以太网协议</h1>
<h2 id="标准以太网10mbps"><a class="markdownIt-Anchor" href="#标准以太网10mbps"></a> 标准以太网（10MBps）</h2>
<h3 id="帧格式"><a class="markdownIt-Anchor" href="#帧格式"></a> 帧格式</h3>
<p>以太网帧包括7个域，如下所示：</p>
<p>|前导符|SFD|目的地址|源地址|类型|数据和填充|CRC</p>
<p>这些域的作用如下：</p>
<ul>
<li>前导符：包含7个字节，其中0和1交替出现，以此通知接收系统有帧到来，并使其同步它的时钟。该前导符实际上是在物理层添加，并非帧的一部分。</li>
<li>起始帧分界符（SFD）：固定为10101011，表示帧的开始，它也是物理层添加的。</li>
<li>目的地址：6个字节，包含目的站点或者接收分组站点的链路层地址。</li>
<li>源地址：6个字节，包含分组发送方的链路层地址。</li>
<li>类型：2字节，定义了帧中封装分组所属的上层协议。</li>
<li>数据：运载来自于上层协议封装的数据。最小长度46字节，最大1500字节，如果上层数据多于1500字节则需要分段并封装为多个帧，如果小于46字节则需要用0来填充。</li>
<li>CRC：4个字节，包含差错检测信息，由地址、类型和数据域计算而来。</li>
</ul>
<h3 id="无连接服务和不可靠服务"><a class="markdownIt-Anchor" href="#无连接服务和不可靠服务"></a> 无连接服务和不可靠服务</h3>
<p>以太网提供无连接服务，因此发送的每一个帧都是独立的。它没有连接建立和连接终止阶段，需要发生帧时就直接发送。因为使用以太网服务的IP地址也是无连接的，因此它也无法知道发生丢帧。丢帧的发现与补救措施来自于上层协议。</p>
<h3 id="寻址"><a class="markdownIt-Anchor" href="#寻址"></a> 寻址</h3>
<p>以太网的每个站点都有自己的网络接口卡，它安装在站点内部，提供给站点链路层地址。以太网地址为6字节。</p>
<p>地址的传输是从左向右一个接一个字节地传输。但是对于每个字节，先发送最低有效位，最后发送最高有效位。这意味着接收方定义单播或者多播地址的位首先到达。</p>
<h3 id="单播-多播和广播"><a class="markdownIt-Anchor" href="#单播-多播和广播"></a> 单播、多播和广播</h3>
<p>源地址总是单播地址，帧只来自于一个站点。但是目的地址可以是单播、多播或者广播的。如果目的地址第一个字节的最低有效位是0地址为单播，如果为1则为多播；如果48位全是1则为广播。</p>
<p>标准以太网的传输总是广播的，无论目的地址如何。对于实际的单播、多播和广播传输，它们的区别在于帧被保留和被丢弃的方式。单播传输中，只有接收方会保留并处理该帧，其他的丢弃该帧；多播传输中，只有组中的成员站点会保留并处理该帧；再广播传输中，所有的站点都会保留并处理该帧。</p>
<h3 id="实现"><a class="markdownIt-Anchor" href="#实现"></a> 实现</h3>
<p>标准以太网使用数字信号，位转换为数字信号直接发送到线路上，编码的实现为Manchester编码。使用的介质可以是光缆或者无屏蔽双绞线。</p>
<h2 id="快速以太网100mbps"><a class="markdownIt-Anchor" href="#快速以太网100mbps"></a> 快速以太网（100MBps）</h2>
<h3 id="访问方法"><a class="markdownIt-Anchor" href="#访问方法"></a> 访问方法</h3>
<p>相比于标准以太网，快速以太网的访问方法需要在以下两种方案中选择一个：</p>
<ul>
<li>完全放弃总线拓扑，使用被动集线器和星状拓扑。此时如果要保留帧最小长度，那么网络的最大长度将会缩短。这种方法保留了与标准以太网的兼容性。</li>
<li>使用带有缓存的链路层交换机来存储帧以及到每个主机的全双工连接，使得传输介质对于每台主机来说是私有的。</li>
</ul>
<h3 id="自动协商"><a class="markdownIt-Anchor" href="#自动协商"></a> 自动协商</h3>
<p>自动协商功能允许一个站点或是集线器有一定的能力范围，两台设备可以协商它们的运行模式或者传输速率。这种设计使得互不相容的设备可以相互连接。</p>
<h3 id="实现-2"><a class="markdownIt-Anchor" href="#实现-2"></a> 实现</h3>
<p>快速以太网在物理层的实现方式可以是两线或是四线的。两线的实现可以是屏蔽双绞线或者光纤，而四线实现则只为非屏蔽双绞线设计。</p>
<h2 id="千兆以太网"><a class="markdownIt-Anchor" href="#千兆以太网"></a> 千兆以太网</h2>
<p>几乎所有的千兆以太网在介质访问方面都使用了全双工方法。在全双工模式中，有一个中央交换机与所有的计算机或者其他交换机相连。在这种输入模式中，对于每一个输入端口，每一个交换机都有缓冲区，数据在传输之前就存储在缓冲区中。</p>
<p>通过使用这种方式，就不会有冲突的发生，因此电缆的最大长度由电缆中的信号衰减决定。</p>
<h2 id="10千兆以太网"><a class="markdownIt-Anchor" href="#10千兆以太网"></a> 10千兆以太网</h2>
<p>10千兆以太网的设计目标是提升数据速率到10GBps，同时保持相同的帧大小和帧格式，允许局域网、城域网和广域网的互联。这样的速率只有光纤可以达到。</p>
<h2 id="虚拟局域网"><a class="markdownIt-Anchor" href="#虚拟局域网"></a> 虚拟局域网</h2>
<h3 id="简介-3"><a class="markdownIt-Anchor" href="#简介-3"></a> 简介</h3>
<p>虚拟本地局域网（Virtual Local Area Network, VLAN）是由软件配置的本地局域网，而不是物理连接的。CS、魔兽等游戏的网络对战平台使用的便是这一技术。</p>
<p>一个VLAN定义了广播域，它将属于一个或多个物理局域网的站点分为了多个广播域，处在一个VLAN中的站点可以彼此通信。</p>
<h3 id="成员"><a class="markdownIt-Anchor" href="#成员"></a> 成员</h3>
<p>VLAN对不同站点分组可以使用的特征包括：交换机接口号、MAC地址、IP地址、多播IP地址，以及以上这些特征的组合。</p>
<h3 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h3>
<p>站点的配置方式分为三种：</p>
<ul>
<li>手动：网络管理员在设置时使用VLAN软件手动将站点分配至不同的VLAN。VLAN之间的迁移也是手动完成的。</li>
<li>自动：站点使用配置好的标准自动地与一个VLAN连接或者断开。</li>
<li>半自动：通常手动完成初始化工作，自动完成迁移工作。</li>
</ul>
<h3 id="交换机间通信"><a class="markdownIt-Anchor" href="#交换机间通信"></a> 交换机间通信</h3>
<p>每一个交换机必须知道哪个站点属于哪个VLAN，以及连接到其他交换机的站点的成员。有三种方法可以完成这一工作：</p>
<ul>
<li>表维护：当一个站点向它的组成员发送广播帧时，交换机在表里创建一个实体，记录站点成员。同时交换机彼此之间发送表，并定期更新。</li>
<li>帧标记：当帧在交换机间移动时，额外的头部增加到MAC帧来定义目的VLAN。接收交换机使用帧标记来决定要接收广播信息的VLAN。</li>
<li>时分多路复用：交换机中的连接分时段使用通道。接收交换机通过检查帧到达的通道来决定目的VLAN。</li>
</ul>
<h3 id="优势"><a class="markdownIt-Anchor" href="#优势"></a> 优势</h3>
<ul>
<li>降低费用和节省时间，增加了网络连接的灵活性</li>
<li>创建虚拟工作组</li>
<li>安全</li>
</ul>
<h1 id="其他有线网络"><a class="markdownIt-Anchor" href="#其他有线网络"></a> 其他有线网络</h1>
<h2 id="点对点网络"><a class="markdownIt-Anchor" href="#点对点网络"></a> 点对点网络</h2>
<h3 id="拨号"><a class="markdownIt-Anchor" href="#拨号"></a> 拨号</h3>
<p>拨号网络使用电话网络提供的服务来传输数据。由于电话网络是数字线路，而用户接入电话网络的那部分是模拟线路，因此需要使用到调制解调器。同时当电话线路用于因特网接入时，不能同时用于音频通信。</p>
<p>调制解调器（modem）由信号调制器和信号解调器组成，调制器由数字数据创建模拟信号，而解调器把调制信号恢复为数字数据。</p>
<p>在上传过程中，模拟信号在进入高速数字电话网络之前必须被取样，量化噪声被引入信号之中，导致速率降低。在下载过程中没有采样发生，该信号不受量化噪声的影响。</p>
<h3 id="数字用户线路"><a class="markdownIt-Anchor" href="#数字用户线路"></a> 数字用户线路</h3>
<p>数字用户线路（DSL）通过已经存在的电话线路来支持高速数字通信。DSL其实是一组技术，每一种的第一个字母都不同。其中最常用的是ADSL（非对称DSL）。</p>
<p>ADSL是通过将整个可用带宽分成一个音频通道，一个上行通道和一个下行通道来实现声音和数据的同时传输，同时相比于拨号连接速度也有了很大提升。在用户端，需要使用一个过滤器将声音和数据分开，同时数据端也需要使用调制解调器。</p>
<h3 id="电缆"><a class="markdownIt-Anchor" href="#电缆"></a> 电缆</h3>
<h4 id="传统有线网络"><a class="markdownIt-Anchor" href="#传统有线网络"></a> 传统有线网络</h4>
<p>传统有线网络主要用来传输电视信号，这种网络使用端到端的同轴电缆。有线电视办公室接收广播站的视频信号，并将其提供给同轴电缆。由于距离变长信号开始变弱，因此网络中间会有很多放大器。当信号到达分离器之后，由分接电缆将信号发送到用户住所。</p>
<h4 id="混合光纤同轴网络"><a class="markdownIt-Anchor" href="#混合光纤同轴网络"></a> 混合光纤同轴网络</h4>
<p>该网络将光纤与同轴电缆相结合。从有线电视办公室到光纤结点的传输介质为光纤，而从光纤结点到用户的传输介质仍然是同轴电缆。通过使用这种方式，电缆网络变为双向。</p>
<h4 id="用于数据传输的有线电视"><a class="markdownIt-Anchor" href="#用于数据传输的有线电视"></a> 用于数据传输的有线电视</h4>
<p>为了提供因特网接入服务，有线电视公司将带宽分为三个波段：视频、上行数据和下行数据。但是上行流波段和下行流波段需要由用户共享，因此如果有多个用户同时使用，就需要使用分时共享的方法。</p>
<p>有线网络要用于数据传输需要在用户侧使用有线调制解调器，服务器处使用有线调制解调器传输系统。用户侧的有线调制解调器与ADSL的调制解调器类似，将信号中的数据部分与视频部分分离。</p>
<h2 id="同步光纤网络sonet"><a class="markdownIt-Anchor" href="#同步光纤网络sonet"></a> 同步光纤网络（SONET）</h2>
<h3 id="体系结构"><a class="markdownIt-Anchor" href="#体系结构"></a> 体系结构</h3>
<p>SONET标准包括四个功能层：光子层、段层、线路层和路径层。其中光子层对应于物理层，另外三层对应于数据链路层。它们的作用如下：</p>
<ul>
<li>路径层：将信号从光信源发送到光信宿。一条路径指的是两个STS多路复用器之间的部分。在源端需要将信号从电形式转变为光形式，再与其它信号复用在一起；而在目的端，接收到的帧被多路分解，单个光信号在转换为电形式。</li>
<li>线路层：负责通过物理线路的信号移动。一条线路对应的是两个复用器之间的部分。分插复用器允许信号的插入和抽出。</li>
<li>段层：负责信号通过物理段的移动，它处理成帧、串扰和差错控制。一个段对应于两个相邻设备之间的连接。再生器相当于一个中继器，使用它可以扩展链路的长度。</li>
<li>光子层：包括光纤通道、接收器敏感度、多路复用功能等的物理规范。</li>
</ul>
<h3 id="sonet帧"><a class="markdownIt-Anchor" href="#sonet帧"></a> SONET帧</h3>
<p>每一个同步传输信号STS-n由8000个帧组成，每一个帧是一个9行，90*n列的二维矩阵。SONET的帧以每秒8000个的固定速率传输。对于每一个帧，都自左向右，自上而下的传输字节；对于每个字节，从高位到低位传输位。</p>
<h3 id="sts多路复用"><a class="markdownIt-Anchor" href="#sts多路复用"></a> STS多路复用</h3>
<p>在SONET中，较低速率的帧会同步地时分复用至一个更高速率的帧中。例如三个STS-1信号可以组合成一个STS-3，四个STS-3又可以组合成一个STS-12，等等。</p>
<p>几路STS-1信号复用是在STS多路复用器完成的，STS-n信号的分解是在STS多路分解器完成的。在二者之间使用的分插复用器，可以使用一个信号来代替另一个。</p>
<h3 id="sonet网络"><a class="markdownIt-Anchor" href="#sonet网络"></a> SONET网络</h3>
<p>SONET网络可以大致分为线状网络、环状网络和网状网络。SONET网络常被用作高速骨干网。</p>
<h2 id="交换网络"><a class="markdownIt-Anchor" href="#交换网络"></a> 交换网络</h2>
<h3 id="概述-3"><a class="markdownIt-Anchor" href="#概述-3"></a> 概述</h3>
<p>异步传输模式（ATM）是交换广域网，它基于信元中继协议。ATM和SONET的结合允许全世界网络的高速互联。ATM使用统计时分多路复用来处理来自于不同信道的信元。</p>
<h3 id="体系结构-2"><a class="markdownIt-Anchor" href="#体系结构-2"></a> 体系结构</h3>
<h4 id="虚拟连接"><a class="markdownIt-Anchor" href="#虚拟连接"></a> 虚拟连接</h4>
<p>ATM是一个信元交换网络，用户设备称为端点，它们通过用户到网络接口连接到网络内部交换机，而交换机通过网络到网络接口互联。</p>
<p>在两个端点之间的连接是通过传输路径、虚拟路径和虚电路完成的。传输路径是一个端点和一台交换机或者两台交换机之间的物理连接；一个传输路径划分为几个虚拟路径，一个虚拟路径提供两个交换机之间的一条连接或者一组连接；而一个虚拟路径又包括了多条虚电路，属于同一报文的所有信元沿着同一条虚电路传输，并且保持它们的原始次序直到到达目的地。</p>
<p>在虚电路网络中，虚连接的标识是通过使用虚路径标识符（VPI）和虚电路标识符（VCI）来完成的。VPI定义了特定的虚路径，而VCI定义了虚路径中特定的虚电路。</p>
<p>ATM网络中基本数据单元称为信元，它只有53字节长，5个字节为头部，48个字节携带有效负载。头部中的大部分被VPI和VCI占用。</p>
<h4 id="层次结构"><a class="markdownIt-Anchor" href="#层次结构"></a> 层次结构</h4>
<p>ATM标准定义了三层，自顶向下依次是应用适配层、ATM层和物理层。端点使用所有的三层，而交换机使用两个底层。这三层的作用如下：</p>
<ul>
<li>应用适配层：接收任意类型的负载，同时完成数据的分割与重组工作。</li>
<li>ATM层：提供路由、通信量管理、交换和多路复用服务。</li>
<li>物理层：ATM信元可以被任意物理层载体运载。</li>
</ul>
<h3 id="连接建立与释放"><a class="markdownIt-Anchor" href="#连接建立与释放"></a> 连接建立与释放</h3>
<p>ATM中的连接包括两类：</p>
<ul>
<li>永久虚电路连接（PVC）：网络提供商在两个端点之间建立。VPI和VCI为永久连接而定义，它们的值输入到每一个交换机的表中。</li>
<li>交换虚电路连接（SVC）：每当一个端点想要和另一个端点连接时，就需要建立一条新的虚电路。这一工作需要网络层地址和另一个协议的帮助下完成。</li>
</ul>
<h3 id="交换"><a class="markdownIt-Anchor" href="#交换"></a> 交换</h3>
<p>ATM使用交换机将信元从源端点路由到目的端点。交换机通过使用VPI和VCI来路由信元。交换机有一个交换表，表的每一行存储六项信息：到达接口号、输入VPI、输入VCI、输出接口号、输出VPI和输出VCI。</p>
<h1 id="连接设备"><a class="markdownIt-Anchor" href="#连接设备"></a> 连接设备</h1>
<h2 id="中继器或集线器"><a class="markdownIt-Anchor" href="#中继器或集线器"></a> 中继器或集线器</h2>
<p>中继器是只工作在物理层的设备，它接收信号，当信号变得很弱或是被破坏之前，重新生成以及重新定时原始位模式，然后发送新生成的信号。通过使用中继器可以克服同轴电缆长度的限制。</p>
<p>在以太网的星状拓扑结构中，中继器是多端口设备，被称为集线器，可以作为连接点提供服务，同时具有中继器的功能。集线器没有过滤能力，分组从所有的输出端口中转发。</p>
<h2 id="链路层交换机"><a class="markdownIt-Anchor" href="#链路层交换机"></a> 链路层交换机</h2>
<p>链路层交换机运行在物理层和数据链路层。它重新生成接收到的信号，同时具有过滤能力，可以检查帧的目的地址，决定从哪个端口发送。</p>
<p>一个透明交换机是与其连接的站点完全意识不到其存在的交换机，它需要满足三个标准：</p>
<ul>
<li>必须可以正确转发帧</li>
<li>通过学习网络中帧的传输，自动建立转发表</li>
<li>避免系统的内循环</li>
</ul>
<h2 id="路由器"><a class="markdownIt-Anchor" href="#路由器"></a> 路由器</h2>
<p>路由器是三层设备，工作在物理层、数据链路层和网络层。路由器是网络互联设备，它将独立的网络连接以形成互联网络。</p>
<p>路由器与中继器和交换机的不同点是：</p>
<ul>
<li>路由器每个端口都有一个物理地址和一个逻辑地址</li>
<li>路由器只对分组中链路层目的地址和分组到达接口地址向匹配的分组起作用</li>
<li>路由器转发分组时，它改变分组的链路层地址</li>
</ul>
<h1 id="打开网页时发生了什么"><a class="markdownIt-Anchor" href="#打开网页时发生了什么"></a> 打开网页时发生了什么</h1>
<p>作为总结，这一部分叙述了在浏览器打开一个网页时所涉及到的计算机网络的相关知识。当我们在浏览器中输入一个域名（<span class="exturl" data-url="aHR0cDovL3huLS13d3ctZW84ZS5iYWlkdS5jb20=">如www.baidu.com<i class="fa fa-external-link-alt"></i></span>）时，计算机网络中要完成下面这些事情：</p>
<p>第一阶段—获取自己的IP地址：</p>
<ol>
<li>在开始时，计算机还无法知道自己的IP地址。因此计算机的操作系统需要广播一个DHCP请求，来获取自己的IP地址。这一请求在传输层使用UDP协议封装，网络层使用IP协议封装。因为此时无法知道自己的IP地址，数据报的源地址设为0.0.0.0，同时为了将此数据报进行广播，目的地址设为255.255.255.255。</li>
<li>DHCP数据报在接下来被数据链路层封装，源MAC地址为计算机自己的MAC地址，同时为了广播，目的MAC地址为FF:FF:FF:FF:FF:FF。</li>
<li>这一数据报被送到与电脑相连的交换机上，然后交换机将这一报文通过其所有的输出端口进行广播。</li>
<li>通过路由器对DHCP报文的转发，DHCP服务器收到这一报文，并层层解封获取到DHCP请求信息。</li>
<li>DHCP服务器生成响应报文，其中包含了分配的IP地址等信息。这一信息也是通过UDP协议传输，并使用IP协议进行封装。在数据链路层的封装中，源MAC地址为DHCP服务器的MAC地址，而目的MAC地址为计算机的MAC地址。</li>
<li>DHCP响应报文被通过单播的形式传回给电脑，由于交换机与路由器的自学习特性，它会自动找到传回路径。</li>
<li>计算机收到DHCP服务器发来的响应报文，通过层层解封获得自己的IP地址。计算机通过这一报文中的内容设置自己的网络参数，并给DHCP服务器发送一个确认使用此IP的报文。</li>
</ol>
<p>第二阶段—获得网关路由器的MAC地址：</p>
<ol start="8">
<li>当在浏览器中敲入域名地址时，计算机会生成一个DNS请求报文，其中包含了要查询的域名地址。DNS请求报文使用UDP协议进行传输，IP协议在封装时，将源地址设置为自己的IP地址，目的地址为DNS服务器的地址（由DHCP服务器提供）。</li>
<li>数据链路层的DNS报文要发给自己的路由器网关。在封装DNS报文时，它并不知道路由器网关的MAC地址。因此它需要先使用ARP协议发送一个广播报文来查询。</li>
<li>计算机发送一个ARP请求报文，IP报文的源地址为自己的IP地址，目的地址为路由器的IP地址。数据链路层上，目的MAC地址被设置为FF:FF:FF:FF:FF:FF来表示这个报文要广播。</li>
<li>网关路由器接收到报文，然后给计算机发送一个ARP响应报文，其中包含了自己的MAC地址。</li>
<li>计算机接收到响应报文，获得网关路由器的MAC地址。在此之后，计算机便可以将DNS报文填充完整，然后发送给网关路由器。</li>
</ol>
<p>第三阶段—与DNS服务器通信：</p>
<ol start="13">
<li>网关路由器收到DNS请求报文，然后它通过查看自己的转发表，将报文转发到下一跳路由器上。不断重复此过程，最终报文到达DNS服务器。路由器的转发表是通过RIP、OSPF或IS-IS这些域内路由选择协议与BGP这一域间路由选择协议生成的。</li>
<li>DNS服务器从DNS请求报文中获得要查找的域名（<span class="exturl" data-url="aHR0cDovL3huLS13d3ctZW84ZS5iYWlkdS5jb20=">如www.baidu.com<i class="fa fa-external-link-alt"></i></span>），并从自己的数据库中找到与www.baidu.com对应的IP地址。然后DNS服务器生成DNS响应报文，将信息发送给计算机。</li>
<li>计算机接收到DNS响应报文，获得了域名所对应的IP地址。接下来便可以访问网页。</li>
</ol>
<p>第四阶段—访问网址：</p>
<ol start="16">
<li>由于网页访问的HTTP协议是建立在TCP协议上的，而TCP协议又是一个面向连接的服务。因此，计算机首先向www.baidu.com发送一个TCP SYN请求，源地址为计算机的IP地址，目的地址为www.baidu.com对应的IP地址。在这一过程中，路由器同样需要使用BGP协议来建立到www.baidu.com的路由转发表。</li>
<li>TCP SYN请求通过路由器转发最终到达www.baidu.com对应的服务器。服务器接收到这一请求，然后发送一个TCP SYNACK消息，目的地址为我们的计算机。这一报文需要先转发到与服务器相连的路由器上，并一步步转发到我们的计算机上。</li>
<li>我们的计算机接收到这一回复报文，TCP的状态变为连接态。</li>
<li>计算机发送HTTP <span class="exturl" data-url="aHR0cDovL3huLS1HRVR3d3cta3cxbnkzMGpweHkuYmFpZHUuY29t">GET请求给www.baidu.com<i class="fa fa-external-link-alt"></i></span>，这一请求被封装到TCP报文中，并发给服务器。</li>
<li>服务器接收到我们的HTTP GET报文，然后发送相应的HTTP response报文给我们的计算机，报文中包含了网页的内容信息。</li>
<li>计算机接收到HTTP response报文，然后浏览器对报文内容进行解析，并将其显示出来。</li>
</ol>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<ol>
<li>计算机网络：自顶向下方法</li>
</ol>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenSSL-基本使用</title>
    <url>/2021/01/09/OpenSSL-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%EF%BC%88%E6%91%98%E5%BD%95%EF%BC%89/</url>
    <content><![CDATA[<p>注：本文的Bash命令部分来自于https://github.com/theno/openssl-examples/blob/master/links.md</p>
<h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1>
<p>OpenSSL是一个C语言实现的，功能丰富且自包含的安全工具箱，提供的主要功能包括SSL协议实现、加密解密算法、非对称算法的密钥生成、数字证书验证等。</p>
<p>OpenSSL Manual: <span class="exturl" data-url="aHR0cHM6Ly93d3cub3BlbnNzbC5vcmcvZG9jcy9tYW4xLjEuMS9tYW43Lw==">https://www.openssl.org/docs/man1.1.1/man7/<i class="fa fa-external-link-alt"></i></span></p>
<h1 id="安装与使用"><a class="markdownIt-Anchor" href="#安装与使用"></a> 安装与使用</h1>
<p>在linux系统下面，可以使用apt-get命令安装OpenSSL和libssl-dev（这个必须安装，包含了lib和header等信息，安装之后才能在c/cpp程序中使用OpenSSL的函数）。</p>
<p>如果是简单地对文件做一些加密或者哈希等操作，只需要在命令行中执行openssl ……就可以，结果会直接打印在命令行内。</p>
<p>如果在c/cpp程序中使用了OpenSSL函数，编译的时候使用这一命令：g++ test.cpp -lssl -lcrypto，后两个编译选项是为了在编译的时候将OpenSSL的函数库链接进去。</p>
<a id="more"></a>
<h1 id="bash命令"><a class="markdownIt-Anchor" href="#bash命令"></a> Bash命令</h1>
<h3 id="查看openssl是什么版本"><a class="markdownIt-Anchor" href="#查看openssl是什么版本"></a> 查看OpenSSL是什么版本？</h3>
<p>使用version选项</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ openssl version</span><br><span class="line">OpenSSL 0.9.8zh 14 Jan 2016</span><br></pre></td></tr></table></figure>
<p>跟上-a选项能得到更多的信息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ openssl versoin -a</span><br><span class="line">OpenSSL 0.9.8zh 14 Jan 2016</span><br><span class="line">built on: May 15 2016</span><br><span class="line">platform: darwin64-x86_64-llvm</span><br><span class="line">options:  bn(64,64) md2(int) rc4(ptr,char) des(idx,cisc,16,int) blowfish(idx)</span><br><span class="line">compiler: -arch x86_64 -fmessage-length&#x3D;0 -pipe -Wno-trigraphs -fpascal-strings -fasm-blocks -O3 -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H -DL_ENDIAN -DMD32_REG_T&#x3D;int -DOPENSSL_NO_IDEA -DOPENSSL_PIC -DOPENSSL_THREADS -DZLIB -mmacosx-version-min&#x3D;10.6</span><br><span class="line">OPENSSLDIR: &quot;&#x2F;System&#x2F;Library&#x2F;OpenSSL&quot;</span><br></pre></td></tr></table></figure>
<h3 id="查看有哪些命令选项"><a class="markdownIt-Anchor" href="#查看有哪些命令选项"></a> 查看有哪些命令选项？</h3>
<p>内置的查看命令(比如openssl list-standard-commands)只能查出一组，有个技巧是加上一个无效的选项(比如help或-h)，就可以得到所有的结果。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ openssl help</span><br><span class="line">openssl:Error: &#39;help&#39; is an invalid command.</span><br><span class="line"></span><br><span class="line">Standard commands</span><br><span class="line">asn1parse      ca             ciphers        crl            crl2pkcs7</span><br><span class="line">dgst           dh             dhparam        dsa            dsaparam</span><br><span class="line">ec             ecparam        enc            engine         errstr</span><br><span class="line">gendh          gendsa         genrsa         nseq           ocsp</span><br><span class="line">passwd         pkcs12         pkcs7          pkcs8          prime</span><br><span class="line">rand           req            rsa            rsautl         s_client</span><br><span class="line">s_server       s_time         sess_id        smime          speed</span><br><span class="line">spkac          verify         version        x509</span><br><span class="line"></span><br><span class="line">Message Digest commands (see the &#96;dgst&#39; command for more details)</span><br><span class="line">md2            md4            md5            mdc2           rmd160</span><br><span class="line">sha            sha1</span><br><span class="line"></span><br><span class="line">Cipher commands (see the &#96;enc&#39; command for more details)</span><br><span class="line">aes-128-cbc    aes-128-ecb    aes-192-cbc    aes-192-ecb    aes-256-cbc</span><br><span class="line">aes-256-ecb    base64         bf             bf-cbc         bf-cfb</span><br><span class="line">bf-ecb         bf-ofb         cast           cast-cbc       cast5-cbc</span><br><span class="line">cast5-cfb      cast5-ecb      cast5-ofb      des            des-cbc</span><br><span class="line">des-cfb        des-ecb        des-ede        des-ede-cbc    des-ede-cfb</span><br><span class="line">des-ede-ofb    des-ede3       des-ede3-cbc   des-ede3-cfb   des-ede3-ofb</span><br><span class="line">des-ofb        des3           desx           rc2            rc2-40-cbc</span><br><span class="line">rc2-64-cbc     rc2-cbc        rc2-cfb        rc2-ecb        rc2-ofb</span><br><span class="line">rc4            rc4-40         seed           seed-cbc       seed-cfb</span><br><span class="line">seed-ecb       seed-ofb</span><br></pre></td></tr></table></figure>
<p>所谓“Standard commands”就是openssl后跟的第一个命令选项，可以使用同样的技巧查看有哪些可执行的子选项。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ openssl dgst -h</span><br><span class="line">unknown option &#39;-h&#39;</span><br><span class="line">options are</span><br><span class="line">-c              to output the digest with separating colons</span><br><span class="line">-d              to output debug info</span><br><span class="line">-hex            output as hex dump</span><br><span class="line">-binary         output in binary form</span><br><span class="line">-sign   file    sign digest using private key in file</span><br><span class="line">-verify file    verify a signature using public key in file</span><br><span class="line">-prverify file  verify a signature using private key in file</span><br><span class="line">-keyform arg    key file format (PEM or ENGINE)</span><br><span class="line">-signature file signature to verify</span><br><span class="line">-binary         output in binary form</span><br><span class="line">-hmac key       create hashed MAC with key</span><br><span class="line">-engine e       use engine e, possibly a hardware device.</span><br><span class="line">-md5            to use the md5 message digest algorithm (default)</span><br><span class="line">-md4            to use the md4 message digest algorithm</span><br><span class="line">-md2            to use the md2 message digest algorithm</span><br><span class="line">-sha1           to use the sha1 message digest algorithm</span><br><span class="line">-sha            to use the sha message digest algorithm</span><br><span class="line">-sha224         to use the sha224 message digest algorithm</span><br><span class="line">-sha256         to use the sha256 message digest algorithm</span><br><span class="line">-sha384         to use the sha384 message digest algorithm</span><br><span class="line">-sha512         to use the sha512 message digest algorithm</span><br><span class="line">-mdc2           to use the mdc2 message digest algorithm</span><br><span class="line">-ripemd160      to use the ripemd160 message digest algorithm</span><br></pre></td></tr></table></figure>
<p>你也可是使用man openssl查看详细。</p>
<h3 id="查看支持哪些算法"><a class="markdownIt-Anchor" href="#查看支持哪些算法"></a> 查看支持哪些算法？</h3>
<p>使用ciphers选项，更多用法参见<span class="exturl" data-url="aHR0cHM6Ly93d3cub3BlbnNzbC5vcmcvZG9jcy9tYW5tYXN0ZXIvYXBwcy9jaXBoZXJzLmh0bWw=">ciphers的说明文档<i class="fa fa-external-link-alt"></i></span>。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 列出所有可用的算法</span><br><span class="line">openssl ciphers -v</span><br><span class="line"></span><br><span class="line"># 列出符合TLSv1协议的算法</span><br><span class="line">openssl ciphers -v -tls1</span><br><span class="line"></span><br><span class="line"># 列出高级别加密的算法(密钥长度大于128位)</span><br><span class="line">openssl ciphers -v &#39;HIGH&#39;</span><br><span class="line"></span><br><span class="line"># 列出使用了AES的高级别加密算法</span><br><span class="line">openssl ciphers -v &#39;AES+HIGH&#39;</span><br></pre></td></tr></table></figure>
<h2 id="性能测试"><a class="markdownIt-Anchor" href="#性能测试"></a> 性能测试</h2>
<h3 id="如何测试当前系统的运算性能"><a class="markdownIt-Anchor" href="#如何测试当前系统的运算性能"></a> 如何测试当前系统的运算性能？</h3>
<p>OpenSSL的开发者在库里内置了测性能的套件，通过speed命令选项来使用。它测试在给定的时间内可以进行多少运算，而不是指定的运算需要多少时间。这样处理是很合理的，因此测试程序在性能好坏的系统上运行的时间不会相差太多。<br />
只使用speed选项，测试所有算法的性能。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl speed</span><br></pre></td></tr></table></figure>
<p>有两组结果，第一组表示指定的算法每秒可以处理多少字节的数据，第二组表示一次签名／验证花费的时间。<br />
下面是在2.7GHZ Intel Xeon E5处理器上的测试结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">The &#39;numbers&#39; are in 1000s of bytes per second processed.</span><br><span class="line">type             16 bytes     64 bytes    256 bytes   1024 	bytes   8192 bytes</span><br><span class="line">md2               2540.48k     5184.66k     6989.57k     7651.67k     7872.51k</span><br><span class="line">mdc2                 0.00         0.00         0.00         0.00         0.00</span><br><span class="line">md4              83248.41k   261068.18k   624212.82k   940529.32k  1128846.68k</span><br><span class="line">md5              62411.57k   184768.36k   408835.75k   586930.52k   678061.98k</span><br><span class="line">hmac(md5)        48713.62k   148265.56k   359626.67k   563050.68k   670255.79k</span><br><span class="line">sha1             68829.72k   195087.40k   431001.51k   623344.42k   729505.79k</span><br><span class="line">rmd160           38598.59k    96226.86k   183336.45k   235962.71k   257526.44k</span><br><span class="line">rc4             480093.57k   678565.35k   783765.42k   818297.51k   838205.99k</span><br><span class="line">des cbc          69500.17k    71184.75k    71491.50k    71641.77k    72010.15k</span><br><span class="line">des ede3         26433.63k    26717.01k    26772.99k    26788.18k    26907.57k</span><br><span class="line">idea cbc         95690.28k    99334.17k   100835.40k   100787.54k   100900.86k</span><br><span class="line">seed cbc         76871.40k    77238.46k    77736.50k    77452.97k    77545.47k</span><br><span class="line">rc2 cbc          48984.63k    49589.03k    50188.07k    50103.98k    50066.77k</span><br><span class="line">rc5-32&#x2F;12 cbc        0.00         0.00         0.00         0.00         0.00</span><br><span class="line">blowfish cbc    122583.30k   129550.92k   130876.67k   131111.94k   131394.22k</span><br><span class="line">cast cbc        109471.38k   114523.31k   115934.46k   116200.45k   116331.86k</span><br><span class="line">aes-128 cbc     128352.23k   138604.76k   141173.42k   142832.25k   142682.79k</span><br><span class="line">aes-192 cbc     107703.93k   114456.79k   117716.65k   118847.36k   118784.00k</span><br><span class="line">aes-256 cbc      93374.87k    99521.51k   101198.51k   101382.49k   101635.41k</span><br><span class="line">camellia-128 cbc    99270.57k   150412.42k   170346.33k   176311.91k   177913.86k</span><br><span class="line">camellia-192 cbc    85896.60k   117356.52k   128556.97k   132759.72k   133425.83k</span><br><span class="line">camellia-256 cbc    87351.27k   117695.15k   128972.03k   132130.47k   133455.87k</span><br><span class="line">sha256           52372.61k   117766.12k   204825.69k   249974.10k   270914.90k</span><br><span class="line">sha512           41278.19k   165820.37k   258298.69k   365981.70k   419864.58k</span><br><span class="line">whirlpool        24803.02k    53047.07k    87593.90k   104570.54k   111159.98k</span><br><span class="line">aes-128 ige     128441.31k   132981.88k   133269.08k   133738.15k   133966.51k</span><br><span class="line">aes-192 ige     107831.37k   111507.07k   111800.66k   112156.67k   112219.48k</span><br><span class="line">aes-256 ige      94382.07k    96351.17k    96750.68k    96958.46k    97446.44k</span><br><span class="line">ghash           888644.92k  1452788.80k  1696788.74k  1763055.96k  1799086.49k</span><br><span class="line">              	sign    verify    sign&#x2F;s verify&#x2F;s</span><br><span class="line">rsa  512 bits 0.000049s 0.000004s  20547.1 248266.2</span><br><span class="line">rsa 1024 bits 0.000194s 0.000011s   5146.0  90735.4</span><br><span class="line">rsa 2048 bits 0.001194s 0.000037s    837.3  27277.1</span><br><span class="line">rsa 4096 bits 0.008560s 0.000137s    116.8   7324.5</span><br><span class="line">              	sign    verify    sign&#x2F;s verify&#x2F;s</span><br><span class="line">dsa  512 bits 0.000048s 0.000046s  20667.7  21701.8</span><br><span class="line">dsa 1024 bits 0.000113s 0.000126s   8831.9   7951.8</span><br><span class="line">dsa 2048 bits 0.000362s 0.000430s   2762.0   2322.9</span><br><span class="line">                          	sign    verify    sign&#x2F;s verify&#x2F;s</span><br><span class="line">256 bit ecdsa (nistp256)   0.0001s   0.0004s   9856.1   2524.4</span><br><span class="line">384 bit ecdsa (nistp384)   0.0002s   0.0008s   5103.6   1191.7</span><br><span class="line">521 bit ecdsa (nistp521)   0.0004s   0.0018s   2679.0    550.3</span><br><span class="line">                          	op      op&#x2F;s</span><br><span class="line">256 bit ecdh (nistp256)   0.0003s   3063.8</span><br><span class="line">384 bit ecdh (nistp384)   0.0007s   1447.3</span><br><span class="line">521 bit ecdh (nistp521)   0.0015s    666.2</span><br></pre></td></tr></table></figure>
<p>也可以只测试指定的算法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 测试RSA的速度</span><br><span class="line">openssl speed rsa</span><br><span class="line"></span><br><span class="line"># 在多核系统中并行两组测试</span><br><span class="line">openssl speed rsa -multi 2</span><br></pre></td></tr></table></figure>
<h3 id="如何测试远程连接的耗时"><a class="markdownIt-Anchor" href="#如何测试远程连接的耗时"></a> 如何测试远程连接的耗时？</h3>
<p>使用s_time选项可以测试连接性能，直接调用会运行30秒，使用任意的加密算法，统计每秒钟通过SSL握手建立的连接数，结果分为新会话和重用会话两组：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl s_time -connect romete.host:443</span><br><span class="line"># 译者注：可以拿百度来测试</span><br><span class="line">openssl s_time -connect baidu.com:443</span><br></pre></td></tr></table></figure>
<p>除了直接调用外，s_time选项也提供了很多测试的子选项</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">＃ 只通过新会话获取远端test.html页面</span><br><span class="line">openssl s_time -connect remote.host:443 -www &#x2F;test.html -new</span><br><span class="line"></span><br><span class="line"># 使用SSL v3和高级别加密算法</span><br><span class="line">openssl s_time \</span><br><span class="line">	-connect remote.hot:443 -www &#x2F;test.html -new \</span><br><span class="line">	-ssl3 -cipher HIGH</span><br><span class="line">	</span><br><span class="line"># 测试不同加密算法的性能，每种算法测试10秒</span><br><span class="line">IFS&#x3D;&quot;:&quot;</span><br><span class="line">for c in $(openssl ciphers -ssl3 RSA); do</span><br><span class="line">	echo $C</span><br><span class="line">	openssl s_time -connect remote.host:443 \</span><br><span class="line">		-www &#x2F; -new -time 10 -cipher $c 2&gt;&amp;1 | \</span><br><span class="line">		grep bytes</span><br><span class="line">	echo</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<p>如果你没有可测的启用SSL的服务端，可以使用s_server选项来创建一个。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">＃ 在一台主机上创建服务端，默认使用4433端口</span><br><span class="line">openssl s_server -cert mycert.pem -www</span><br><span class="line"></span><br><span class="line"># 在另一台主机上(可以跟服务端同一台)，运行s_time</span><br><span class="line">openssl s_time -connect myhost:4433 -www &#x2F; -new -ssl3</span><br></pre></td></tr></table></figure>
<h2 id="证书"><a class="markdownIt-Anchor" href="#证书"></a> 证书</h2>
<h3 id="如何生成自签名的证书"><a class="markdownIt-Anchor" href="#如何生成自签名的证书"></a> 如何生成自签名的证书？</h3>
<p>首先考虑是否要对私钥进行加密。<br />
加密私钥的好处是更加安全，有人拿走了也无法使用。坏处是需要把密码保存在某个文件或每次启动服务时手动输入。<br />
我个人倾向不加密私钥，这样不用每次手动输入。（当你厌烦输入时，要知道去除密码保护也是可以的。）<br />
下面的例子会生成一个mycert.pem证书文件，其中证书的有效期是365天，私钥不加密(-ndoes决定的)。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl req \</span><br><span class="line">	-x509 -nodes -days 365 -sha256 \</span><br><span class="line">	-newkey rsa:2048 -keyout mycert.pem -out mycert.pem</span><br></pre></td></tr></table></figure>
<p>这个文件中有两部分信息：RSA私钥和证书。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat mycert.pem</span><br><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">...</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br><span class="line">-----BEGIN CERTIFICATE-----</span><br><span class="line">...</span><br><span class="line">-----END CERTIFICATE-----</span><br></pre></td></tr></table></figure>
<p>证书部分包含公钥。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl x509 -in mycert.pem -pubkey -noout</span><br><span class="line">-----BEGIN PUBLIC KEY-----</span><br><span class="line">...</span><br><span class="line">-----END PUBLIC KEY-----</span><br></pre></td></tr></table></figure>
<p>使用这个指令后，会要求你回答一系列的问题：国家，省市，公司，职位等等。当回答“Common  Name”这个问题要注意点，你可能会填写主机名或域名，<span class="exturl" data-url="aHR0cDovL3huLS1teWJveC1rODZodDl0enRiZWVxNHYxdGdyMTBia21jZ3RjczQxaTQ5Yi5teWRvbWFpbi5jb20=">如果服务器的真实地址是mybox.mydomain.com<i class="fa fa-external-link-alt"></i></span>，但用户是通过www.mydomain.com来访问的，那么你应填写用户访问的地址。<br />
可以通过-subj选项来直接写入这些回答，对生成证书来说惟一有用的就是Common Name(CN)字段。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl req \</span><br><span class="line">	-x509 -nodes -days 365 -sha256 \</span><br><span class="line">	-subj &#39;&#x2F;C&#x3D;US&#x2F;ST&#x3D;Oregon&#x2F;L&#x3D;Portland&#x2F;CN&#x3D;www.madboa.com&#39; \</span><br><span class="line">	-newkey rsa:2048 -keyout mycert.pem -out mycert.pem</span><br></pre></td></tr></table></figure>
<h3 id="如何生成verisign的证书请求"><a class="markdownIt-Anchor" href="#如何生成verisign的证书请求"></a> 如何生成VeriSign的证书请求？</h3>
<p>向认证机构(比如VeriSign)申请签名证书是相当繁杂和官僚的，在创建证书请求前要先准备好需要的书面文件(营业执照等)。<br />
上一节说到，你需要考虑是否加密私钥，下面的例子假设不加密，最后会得到两个文件：私钥文件mykey.pem，证书请求文件myreq.pem。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl req \</span><br><span class="line">	-new -sha256 -newkey rsa:2048 -nodes \</span><br><span class="line">	-keyout mykey.pem -out myreq.pem</span><br></pre></td></tr></table></figure>
<p>如果是使用已有的私钥文件生成证书请求，语法更简单点：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl req -new -key mykey.pem -out myreq.pem</span><br></pre></td></tr></table></figure>
<p>同样的，你也可以在命令中直接写入要回答的问题：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl req \</span><br><span class="line">	-new -sha256 -newkey rsa:2048 -nodes \</span><br><span class="line">	-subj &#39;&#x2F;CN&#x3D;www.mydom.com&#x2F;O&#x3D;My Dom. Inc.&#x2F;C&#x3D;US&#x2F;ST&#x3D;Oregon&#x2F;L&#x3D;Portland&#39; \</span><br><span class="line">	-keyout mykey.pem -out myreq.pem</span><br></pre></td></tr></table></figure>
<p>在跟像VeriSign这样的机构打交道时，要特别注意在创建证书请求时填写的信息。根据我个人的经验，比如填写组织名字时用and代替&amp;，都会造成申请不通过。<br />
需要仔细确认证书请求中的签名、组织等信息。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 验证签名</span><br><span class="line">openssl req -in myreq.pem -noout -verify -key mykey.pem</span><br><span class="line"># 检查信息</span><br><span class="line">openssl req -in myreq.pem -noout -text</span><br></pre></td></tr></table></figure>
<p>将私钥文件保存在安全的地方，要使用VeriSign发回给你证书必须要用到它。证书请求一般是通过VeriSign的线上表单提交。</p>
<h3 id="如何测试一个新证书"><a class="markdownIt-Anchor" href="#如何测试一个新证书"></a> 如何测试一个新证书？</h3>
<p>s_server选项提供了一个简单有效的测试方法。下面的例子假设你已经把私钥和证书合并为一个文件(也可以是上面生成的自签名证书)：mycert.pem。<br />
首先启动测试服务端，默认使用4433端口，可以使用-accept选项修改。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl s_server -cert mycert.pem -www</span><br></pre></td></tr></table></figure>
<p>如果服务端正常启动，没有报错信息，说明证书就可以使用了。<br />
可以在浏览器里访问测试服务器https://yourserver:4433/。注意是https，打开这个界面可以看到可用的加密算法以及连接相关的统计。如果是自签名的证书，浏览器会提示你是否相信此证书。<br />
怎么得到远端的证书？<br />
只要配合使用openssl和sed命令，就能取到远端的证书信息。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;sh</span><br><span class="line">#</span><br><span class="line"># usage: retrieve-cert.sh remote.host.name [port]</span><br><span class="line">#</span><br><span class="line">REMHOST&#x3D;$1</span><br><span class="line">REMPORT&#x3D;$&#123;2:-443&#125;</span><br><span class="line"></span><br><span class="line">echo |\</span><br><span class="line">openssl s_client -connect $&#123;REMHOST&#125;:$&#123;REMPORT&#125; 2&gt;&amp;1 |\</span><br><span class="line">sed -ne &#39;&#x2F;-BEGIN CERTIFICATE-&#x2F;,&#x2F;-END CERTIFICATE-&#x2F;p&#39;</span><br></pre></td></tr></table></figure>
<p>也可以把得到信息再交给openssl处理，比如检查证书的日期：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;sh</span><br><span class="line">#</span><br><span class="line">for CERT in \</span><br><span class="line">	www.yourdomain.com:443 \</span><br><span class="line">	ldap.yourdomain.com:636 \</span><br><span class="line">	imap.yourdomain.com:993</span><br><span class="line">do</span><br><span class="line">	echo |\</span><br><span class="line">	openssl s_client -connect $&#123;CERT&#125; 2&gt;&#x2F;dev&#x2F;null |\</span><br><span class="line">	sed -ne &#39;&#x2F;-BEGIN CERTIFICATE-&#x2F;,&#x2F;-END CERTIFICATE-&#x2F;p&#39; |\</span><br><span class="line">	openssl x509 -noout -subject -dates</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<p>怎么查看证书中的信息？<br />
一个SSL证书包含很多信息：颁发者，有效期，持有者，算法，公钥等。使用x509选项可以查看这些信息，下面的例子假设有一个名为cert.pem的证书文件。<br />
使用-text选项能同时以可读文本的形式展示信息。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl x509 -text -in cert.pem</span><br></pre></td></tr></table></figure>
<p>还有一些选项可以指定展示某项信息。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 查看颁发者</span><br><span class="line">openssl x509 -noout -in cert.pem -issuer</span><br><span class="line"></span><br><span class="line"># 查看持有者</span><br><span class="line">openssl x509 -noout -in cert.pem -subject</span><br><span class="line"></span><br><span class="line"># 有效期</span><br><span class="line">openssl x509 -noout -in cert.pem -dates</span><br><span class="line"></span><br><span class="line"># 以上全部</span><br><span class="line">openssl x509 -noout -in cert.pem -issuer -subject -dates</span><br><span class="line"></span><br><span class="line"># 哈希值</span><br><span class="line">openssl x509 -noout -in cert.pem -hash</span><br><span class="line"></span><br><span class="line"># MD5指纹</span><br><span class="line">openssl x509 -noout -in cert.pem -fingerprint</span><br></pre></td></tr></table></figure>
<h3 id="如何导入导出pkcs12格式的证书"><a class="markdownIt-Anchor" href="#如何导入导出pkcs12格式的证书"></a> 如何导入／导出PKCS#12格式的证书？</h3>
<p>PKCS#12格式的证书被许多程序使用，比如微软的IIS，这种证书文件的后缀通常是.pfx。<br />
创建PKCS#12格式的证书，需要私钥和证书。转换时，你会被要求输入密码(可以为空)来对证书进行加密。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 创建一个包含私钥的自签名证书</span><br><span class="line">openssl req \</span><br><span class="line">	-x509 -sha256 -nodes -days 365 \</span><br><span class="line">	-newkey rsa:2048 -keyout mycert.pem -out mycert.pem</span><br><span class="line">	</span><br><span class="line"># 将mycert.pem导出为PKCS#12格式的证书，mycert.pfx</span><br><span class="line">openssl pkcs12 -export \</span><br><span class="line">	-out mycert.pfx -in mycert.pem \</span><br><span class="line">	-name &quot;My Certificate&quot;</span><br></pre></td></tr></table></figure>
<p>如果你拿到PKCS#12格式的证书和它的密码(如果有的话)，可以把它导出为标准的PEM格式。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 无密码情况下</span><br><span class="line">openssl pkcs12 -in mycert.pfx -out mycert.pem -nodes</span><br><span class="line"></span><br><span class="line"># 有密码情况下</span><br><span class="line">openssl pkcs12 -in mycert.pfx -out mycert.pem</span><br></pre></td></tr></table></figure>
<h2 id="证书验证"><a class="markdownIt-Anchor" href="#证书验证"></a> 证书验证</h2>
<p>使用OpenSSL库可以验证授权机构颁发的证书</p>
<h3 id="如何验证证书"><a class="markdownIt-Anchor" href="#如何验证证书"></a> 如何验证证书？</h3>
<p>使用verify选项来验证证书。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl verify cert.pem</span><br></pre></td></tr></table></figure>
<p>验证成功，会返回“OK”。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ openssl verify mycert.pem</span><br><span class="line">mycert.pem: &#x2F;C&#x3D;CN&#x2F;ST&#x3D;JS&#x2F;L&#x3D;WX&#x2F;O&#x3D;Internet Widgits Pty Ltd&#x2F;CN&#x3D;Calle Zhang</span><br><span class="line">error 18 at 0 depth lookup:self signed certificate</span><br><span class="line">OK</span><br></pre></td></tr></table></figure>
<p>如果异常会看到错误消息，比如</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">证书过期，通常证书都是有有效期的，一般是一年：</span><br><span class="line">error 10 at 0 depth lookup:certificate has expired</span><br><span class="line"></span><br><span class="line">自签名证书：</span><br><span class="line">error 18 at 0 depth lookup:self signed certificate</span><br></pre></td></tr></table></figure>
<h3 id="openssl都认可哪些证书颁发机构"><a class="markdownIt-Anchor" href="#openssl都认可哪些证书颁发机构"></a> OpenSSL都认可哪些证书颁发机构？</h3>
<p>在编译OpenSSL库时需要制定OpenSSL的文件目录(–openssldir参数指定)，这个目录保存着认可的证书颁发机构信息。<br />
默认的目录是/usr/local/ssl，很多操作系统会把它放到别处，比如/usr/share/ssl(Red  Hat/Fedora)，/etc/ssl(Gentoo)，/usr/lib/ssl(Debian)，/System/Library/OpenSSL(Macintosh OS X)。<br />
使用version选项加上-d查看目录在什么位置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl version -d</span><br></pre></td></tr></table></figure>
<p>这个目录下有个certs子目录，在certs里可能会有三种类型的文件：</p>
<ol>
<li>
<p>有一个名为cert.pem的大文件，里面包含了许多认可机构(比如VeriSign，Thawte)的证书。</p>
</li>
<li>
<p>一些以.pem为后缀的小文件，每个文件包含一个认可机构的一个证书。</p>
</li>
<li>
<p>一些奇怪名字的链接文件，比如052eae11.0，通常是指向.pem文件。这个文件名字的第一部分其实是.pem文件里证书的hash值，后缀是序列号，因为多个链接文件可以指向同一证书。以我的Gentoo系统为例，有个指向vsignss.pem的链接文件叫f73e89fd.0，可以肯定里面证书的哈希值就是这个文件名：</p>
<p>$ openssl x509 -noout -hash -in vsingss.pem f73e89fd 当OpenSSL要验证一个证书，它会查看cert.pem里面是否包含这个证书，如果没有再查看这个目录下是否存在以证书哈希值为名的文件，如果存在就验证通过。有意思的是，有些程序(比如Sendmail)会在运行时让你指定你信任证书的存储位置。</p>
</li>
</ol>
<h3 id="如何让openssl信任某个证书"><a class="markdownIt-Anchor" href="#如何让openssl信任某个证书"></a> 如何让OpenSSL信任某个证书？</h3>
<p>把这个证书放入上文说的certs目录下，然后创建一个以哈希值命名的链接文件，下面的脚本可以完成这样的任务：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;sh</span><br><span class="line">#</span><br><span class="line"># usage: certlink.sh filename [filename ...]</span><br><span class="line"></span><br><span class="line">for CERTFILE in $*; do</span><br><span class="line">	# make sure file exists and is a valid cert</span><br><span class="line">	test -f &quot;$CERTFILE&quot; || continue</span><br><span class="line">	HASH&#x3D;$(openssl x509 -noout -hash -in &quot;$CERTFILE&quot;)</span><br><span class="line">	test -n &quot;$HASH&quot; || continue</span><br><span class="line"></span><br><span class="line">	# use lowest available iterator for symlink</span><br><span class="line">	for ITER in 0 1 2 3 4 5 6 7 8 9; do</span><br><span class="line">		test -f &quot;$&#123;HASH&#125;.$&#123;ITER&#125;&quot; &amp;&amp; continue</span><br><span class="line">		ln -s &quot;$CERTFILE&quot; &quot;$&#123;HASH&#125;.$&#123;ITER&#125;&quot;</span><br><span class="line">		test -L &quot;$&#123;HASH&#125;.$&#123;ITER&#125;&quot; &amp;&amp; break</span><br><span class="line">	done</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<h2 id="命令行客户端和服务端"><a class="markdownIt-Anchor" href="#命令行客户端和服务端"></a> 命令行客户端和服务端</h2>
<p>s_client和s_server选项可以启动使用了SSL的命令行客户端和服务端。<br />
这部分，假设你已经熟悉这些常见的协议：SMTP，HTTP等。</p>
<h3 id="如何与smtp服务建立安全连接"><a class="markdownIt-Anchor" href="#如何与smtp服务建立安全连接"></a> 如何与SMTP服务建立安全连接？</h3>
<p>你可以通过s_client选项测试甚至使用一个使用SSL的SMTP服务端。<br />
SMTP服务的安全连接使用3个端口：25(TLS)，465(SSL)和587(TLS)。OpenSSL大概是在0.9.7版本之后提供了-starttls选项：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 25(TLS)端口，587(TLS)端口也是一样的</span><br><span class="line">openssl s_client -connect remote.host:25 -starttls smtp</span><br><span class="line"></span><br><span class="line"># 465(SSL)端口</span><br><span class="line">openssl s_client -connect remote.host:456</span><br></pre></td></tr></table></figure>
<p><span class="exturl" data-url="aHR0cDovL3d3dy5pZXRmLm9yZy9yZmMvcmZjMDgyMS50eHQ=">RFC821<i class="fa fa-external-link-alt"></i></span>建议使用作为行结束符。虽然大多数的邮件服务都是以或作为行结束符的，但Qmail就不是。如果你想遵从RFC821或是要与Qmail通信，可以使用-crlf选项：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl s_client -connect remote.host:25 -crlf -starttls smtp</span><br></pre></td></tr></table></figure>
<h3 id="如何其它服务建立安全连接"><a class="markdownIt-Anchor" href="#如何其它服务建立安全连接"></a> 如何其它服务建立安全连接？</h3>
<p>与其它服务建立安全连接本质上与上文是相同的操作。截止本文的写作日期，OpenSSL只支持命令行通过TLS连接SMTP服务，如果想连接其它服务，就只能直接使用SSL连接了:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># HTTPS</span><br><span class="line">openssl s_client -connect remote.host:443</span><br><span class="line"></span><br><span class="line"># LDAPS</span><br><span class="line">openssl s_client -connect remote.host:636</span><br><span class="line"></span><br><span class="line"># IMAPS</span><br><span class="line">openssl s_client -connect remote.host:993</span><br><span class="line"></span><br><span class="line"># POP3S</span><br><span class="line">openssl s_client -connect remote.host:995</span><br></pre></td></tr></table></figure>
<h3 id="如何使用命令行搭建一个ssl服务端"><a class="markdownIt-Anchor" href="#如何使用命令行搭建一个ssl服务端"></a> 如何使用命令行搭建一个SSL服务端？</h3>
<p>s_server选项可以搭建一个SSL服务端，仅限测试、调试时使用，如果要在生产环境启用安全连接，可以考虑使用<span class="exturl" data-url="aHR0cHM6Ly93d3cuc3R1bm5lbC5vcmc=">Stunnel<i class="fa fa-external-link-alt"></i></span>。<br />
有证书后就可以通过s_server选项搭建服务了，可以搭建多个</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># -www选项表示，服务端返回一个OpenSSL运行状态的HTML页面</span><br><span class="line">openssl s_server -cert mycert.pem -www</span><br><span class="line"></span><br><span class="line"># 使用-WWW选项，可以访问当前目录下的文件。指定了443端口(默认4433端口)。</span><br><span class="line">openssl s_server -accept 443 -cert mycert.pem -WWW</span><br></pre></td></tr></table></figure>
<h2 id="哈希运算"><a class="markdownIt-Anchor" href="#哈希运算"></a> 哈希运算</h2>
<p>在OpenSSL库中，计算哈希通过dgst选项来操作。哈希运算十分常见，都有专门计算哈希的工具。</p>
<h3 id="如何计算一个文件的md5或sha1哈希值"><a class="markdownIt-Anchor" href="#如何计算一个文件的md5或sha1哈希值"></a> 如何计算一个文件的MD5或SHA1哈希值？</h3>
<p>使用dgst选项，先使用openssl dgst -h命令来查看有哪些可用的哈希算法。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># MD5</span><br><span class="line">openssl dgst -md5 filename</span><br><span class="line"></span><br><span class="line"># SHA1</span><br><span class="line">openssl dgst -sha1 filename</span><br><span class="line"></span><br><span class="line"># SHA256</span><br><span class="line">openssl dgst -sha256 filename</span><br></pre></td></tr></table></figure>
<h3 id="如何签名一个哈希值"><a class="markdownIt-Anchor" href="#如何签名一个哈希值"></a> 如何签名一个哈希值？</h3>
<p>如果想确保得到的哈希值不被篡改，可以使用私钥对这个哈希值签名。下面的例子展示对foo-1.23.tar.gz这个文件的SHA256值进行签名：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 签名过的哈希值是f00-1.23.tar.gz.sha1</span><br><span class="line">openssl dgst -sha256 \</span><br><span class="line">	-sign mykey.pem \</span><br><span class="line">	-out foo-1.23.tar.gz.sha1 \</span><br><span class="line">	foo-1.23.tar.gz</span><br></pre></td></tr></table></figure>
<h3 id="如何验证一个签名的哈希值"><a class="markdownIt-Anchor" href="#如何验证一个签名的哈希值"></a> 如何验证一个签名的哈希值？</h3>
<p>验证一个签名的哈希值需要原始文件以及签名者的公钥(openssl rsa -in mycert.pem -pubout -out pubkey.pem)。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 使用foo-1.23.tar.gz.sha1和pubkey.pem验证foo-1.23.tar.gz</span><br><span class="line">openssl dgst -sha256 \</span><br><span class="line">	-verify pubkey.pem \</span><br><span class="line">	-signature foo-1.23.tar.gz.sha1 \</span><br><span class="line">	foo-1.23.tar.gz</span><br></pre></td></tr></table></figure>
<h3 id="如何创建符合apache要求的认证信息"><a class="markdownIt-Anchor" href="#如何创建符合apache要求的认证信息"></a> 如何创建符合Apache要求的认证信息？</h3>
<p>Apache的HTTP哈希认证需要指定的密码格式。Apache提供有htdigest工具，但只能将结果输出到文件。我们可以手动的往本地密码数据库添加认证信息。<br />
密码数据库的数据格式是比较简单的，有三部分：用户名，授权名，用户名加授权名加密码的MD5值，三部分以冒号分割。下面的脚本使用OpenSSL的dgst选项输出符合Apache要求的认证信息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">echo &quot;Create an Apache-friendly Digest Password Entry&quot;</span><br><span class="line">echo &quot;-----------------------------------------------&quot;</span><br><span class="line"></span><br><span class="line"># get user input, disabling tty echoing for password</span><br><span class="line">read -p &quot;Enter username: &quot; UNAME</span><br><span class="line">read -p &quot;Enter Apache AuthName: &quot; AUTHNAME</span><br><span class="line">read -s -p &quot;Enter password: &quot; PWORD; echo</span><br><span class="line"></span><br><span class="line">printf &quot;\n%s:%s:%s\n&quot; \</span><br><span class="line">	&quot;$UNAME&quot; \</span><br><span class="line">	&quot;$AUTHNAME&quot; \</span><br><span class="line">	$(printf &quot;$&#123;UNAME&#125;:$&#123;AUTHNAME&#125;:$&#123;PWORD&#125;&quot; | openssl dgst -md5)</span><br></pre></td></tr></table></figure>
<h3 id="都有哪些可用的哈希算法"><a class="markdownIt-Anchor" href="#都有哪些可用的哈希算法"></a> 都有哪些可用的哈希算法？</h3>
<p>可以使用内置的list-message-digest-commands选项列出可用的哈希算法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl list-message-digest-commands</span><br></pre></td></tr></table></figure>
<p>注意列出的结果可能是过时的。(还是通过openssl dgst -h查看吧)</p>
<h2 id="加密解密"><a class="markdownIt-Anchor" href="#加密解密"></a> 加密／解密</h2>
<h3 id="如何使用base64编码"><a class="markdownIt-Anchor" href="#如何使用base64编码"></a> 如何使用base64编码？</h3>
<p>使用enc -base64选项</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 对文件file.txt里的内容进行base64编码</span><br><span class="line">openssl enc -base64 -in file.txt</span><br><span class="line"></span><br><span class="line"># 将编码结果输出到file.txt.enc</span><br><span class="line">openssl enc -base64 -in file.txt -out file.txt.enc</span><br></pre></td></tr></table></figure>
<p>通过命令行编码指定的字符串：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ echo &quot;encode me&quot; | openssl enc -base64</span><br><span class="line">ZW5jb2RlIG1lCg&#x3D;&#x3D;</span><br></pre></td></tr></table></figure>
<p>注意echo会在字符串结尾添加一个换行符，可以使用-n选项去除。当你对一些认证信息编码时，这点很重要。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ echo -n &quot;encode me&quot; | openssl enc -base64</span><br><span class="line">ZW5jb2RlIG1l</span><br></pre></td></tr></table></figure>
<p>使用-d选项可以解码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ echo &quot;ZW5jb2RlIG1lCg&#x3D;&#x3D;&quot; | openssl enc -base64 -d</span><br><span class="line">encode me</span><br></pre></td></tr></table></figure>
<h3 id="如何简单的加密一个文件"><a class="markdownIt-Anchor" href="#如何简单的加密一个文件"></a> 如何简单的加密一个文件？</h3>
<p>有时候我们只是想简单的通过密码加密一个文件，不想使用专业的工具，也不想创建私钥／证书之类的。<br />
这是很简单，你需要记住密码以及使用的加密算法。<br />
首先选一个加密算法，可以通过下面的方法列出可用的算法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># ‘Cipher commands’下的列表</span><br><span class="line">openssl -h</span><br><span class="line"></span><br><span class="line"># 算法列表，每行一个</span><br><span class="line">openssl list-cipher-commands</span><br></pre></td></tr></table></figure>
<p>选完加密算法后，还要决定是否对加密后数据进行base64编码，base64编码后数据方便查看，不编码就是二进制的形式。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 使用256位AES算法CBC模式，加密file.txt为file.enc。</span><br><span class="line">openssl enc -aes-256-cbc -salt -in file.txt -out file.enc</span><br><span class="line"></span><br><span class="line"># 对加密后数据进行base64编码(-a或-base64)</span><br><span class="line">openssl enc -aes-256-cbc -a -salt -in file.txt -out file.enc</span><br></pre></td></tr></table></figure>
<p>解密file.enc</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 解密二进制file.enc</span><br><span class="line">openssl enc -d -aes-256-cbc -in file.enc</span><br><span class="line"></span><br><span class="line"># 解密base64格式的</span><br><span class="line">openssl enc -d -aes-256-cbc -a -in file.enc</span><br></pre></td></tr></table></figure>
<p>如果你不想每次加解密时都输入密码，可以直接在命令中提供：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 在命令行提供密码</span><br><span class="line">openssl enc -aes-256-cbc -salt -in file.txt \</span><br><span class="line">	-out file.enc -pass pass:mySillyPassword</span><br><span class="line"></span><br><span class="line"># 在一个文件中提供密码</span><br><span class="line">openssl enc -aes-256-cbc -salt -in file.txt \</span><br><span class="line">	-out file.enc -pass file:&#x2F;path&#x2F;to&#x2F;secret&#x2F;password.txt</span><br></pre></td></tr></table></figure>
<h2 id="错误"><a class="markdownIt-Anchor" href="#错误"></a> 错误</h2>
<h3 id="如何了解ssl的错误消息"><a class="markdownIt-Anchor" href="#如何了解ssl的错误消息"></a> 如何了解SSL的错误消息？</h3>
<p>查看系统日志，可能会看到一些明显跟OpenSSL或加密有关的错误消息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sshd[31784]: error: RSA_public_decrypt failed: error:0407006A:lib(4):func(112):reason(106)</span><br><span class="line">sshd[770]: error: RSA_public_decrypt failed: error:0407006A:lib(4):func(112):reason(106)</span><br></pre></td></tr></table></figure>
<p>了解错误消息的第一步，使用errstr选项解释错误码，错误码在error:和:lib之间，上面的示例是0407006A。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ openssl errstr 0407006A</span><br><span class="line">error:0407006A:rsa routines:RSA_padding_check_PKCS1_type_1:block type is not 01</span><br></pre></td></tr></table></figure>
<p>如果你完整的安装了OpenSSL，可以在开发文档里找到相关信息。</p>
<h2 id="密钥"><a class="markdownIt-Anchor" href="#密钥"></a> 密钥</h2>
<h3 id="如何生成rsa私钥"><a class="markdownIt-Anchor" href="#如何生成rsa私钥"></a> 如何生成RSA私钥？</h3>
<p>使用genrsa选项。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 默认1024位密钥，输出到控制台</span><br><span class="line">openssl genrsa</span><br><span class="line"></span><br><span class="line"># 2048位密钥，保存到mykey.pem</span><br><span class="line">openssl genrsa -out mykey.pem 2048</span><br><span class="line"></span><br><span class="line"># 对密钥进行加密</span><br><span class="line">openssl genrsa -des3 -out mykey.pem 2048</span><br></pre></td></tr></table></figure>
<h3 id="如何生成rsa公钥"><a class="markdownIt-Anchor" href="#如何生成rsa公钥"></a> 如何生成RSA公钥？</h3>
<p>使用rsa选项根据私钥生产公钥。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl rsa -in mykey.pem -pubout</span><br></pre></td></tr></table></figure>
<h3 id="如何生成dsa密钥"><a class="markdownIt-Anchor" href="#如何生成dsa密钥"></a> 如何生成DSA密钥？</h3>
<p>创建DSA密钥需要一个参数文件，并且DSA的验证操作同等情况下比RSA慢。所以没有RSA使用的广泛。<br />
如果只想创建一个DSA密钥，可以通过dsaparam选项：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 私钥保存在dsakey.pem中</span><br><span class="line">openssl dsaparam -noout -out dsakey.pem -genkey 1024</span><br></pre></td></tr></table></figure>
<p>如果想创建多个密钥，可以先创建一个参数文件，创建参数有点耗时，但创建后再生成密钥就很快了。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 创建参数保存在dsaparam.pem中</span><br><span class="line">openssl dsaparam -out dsaparam.pem 1024</span><br><span class="line"></span><br><span class="line"># 创建第一个key</span><br><span class="line">openssl gendsa -out key1.pem dsaparam.pem</span><br><span class="line"></span><br><span class="line"># 第二个...</span><br><span class="line">openssl gendsa -out key2.pem dsaparam.pem</span><br></pre></td></tr></table></figure>
<h3 id="如何生成椭圆曲线密钥"><a class="markdownIt-Anchor" href="#如何生成椭圆曲线密钥"></a> 如何生成椭圆曲线密钥？</h3>
<p>椭圆曲线加密在OpenSSL 0.9.8版本加入。通过ecparam选项生成密钥。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl ecparam -out key.pem -name prime256v1 -genkey</span><br><span class="line"></span><br><span class="line"># -name后支持的选项列表</span><br><span class="line">openssl ecparam -list_curves</span><br></pre></td></tr></table></figure>
<h3 id="如何解密密钥"><a class="markdownIt-Anchor" href="#如何解密密钥"></a> 如何解密密钥？</h3>
<p>也许对每次都输入密码厌烦了，你可以对密钥解密，使用rsa或dsa选项，取决于使用了哪种加密算法。<br />
如果你有一个加密的RSA密钥文件key.pem，下面的例子是将解密后的密钥存在文件newkey.pem中。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 需要输入密钥的密码</span><br><span class="line">openssl rsa -in key.pem -out newkey.pem</span><br></pre></td></tr></table></figure>
<p>通常情况是在一个文件里存储私钥和公共证书，假如这个文件是mycert.pem，通过以下两步生成不加密的版本newcert.pem</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 需要输入密钥的密码</span><br><span class="line">openssl rsa -in mycert.pem -out newcert.pem</span><br><span class="line">openssl x509 -in mycert.pem &gt;&gt;newcert.pem</span><br></pre></td></tr></table></figure>
<h2 id="密码哈希"><a class="markdownIt-Anchor" href="#密码哈希"></a> 密码哈希</h2>
<p>使用passwd选项，可以生成不同格式的密码哈希值。</p>
<h3 id="如何生成加密风格crypt-style的密码哈希值"><a class="markdownIt-Anchor" href="#如何生成加密风格crypt-style的密码哈希值"></a> 如何生成加密风格(crypt-style)的密码哈希值？</h3>
<p>生成一个新的哈希值非常简单：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ openssl passwd MySecret</span><br><span class="line">8E4vqBR4UOYF.</span><br></pre></td></tr></table></figure>
<p>如果知道密码以及运算时用的盐(salt)，就能重现这个哈希值。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ openssl passwd -salt 8E MySecret</span><br><span class="line">8E4vqBR4UOYF.</span><br></pre></td></tr></table></figure>
<h3 id="如何生成阴影风格shadow-style的密码哈希值"><a class="markdownIt-Anchor" href="#如何生成阴影风格shadow-style的密码哈希值"></a> 如何生成阴影风格(shadow-style)的密码哈希值？</h3>
<p>最近的Unix系统开始使用更加安全的哈希策略，基于MD5运算，并且使用8个字符作为盐(传统的加密风格使用2个字符作为盐)。<br />
加上-1选项，就能生成这样的哈希值：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ openssl passwd -1 MySecret</span><br><span class="line">$1$sXiKzkus$haDZ9JpVrRHBznY5OxB82.</span><br></pre></td></tr></table></figure>
<p>这个风格的哈希值，盐位于第二个和第三个$符之间，上面例子的盐值是sXiKzkus。知道密码和盐值后可以重现这个哈希值。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ openssl passwd -1 -salt sXiKzkus MySecret</span><br><span class="line">$1$sXiKzkus$haDZ9JpVrRHBznY5OxB82.</span><br></pre></td></tr></table></figure>
<h2 id="素数"><a class="markdownIt-Anchor" href="#素数"></a> 素数</h2>
<p>当前的加密技术很大程度上是依赖素数的生成和检验。难怪OpenSSL库提供大量的操作来处理素数。应该是从0.9.7e版本开始，加入了prime选项。</p>
<h3 id="如何测试一个数是否为素数"><a class="markdownIt-Anchor" href="#如何测试一个数是否为素数"></a> 如何测试一个数是否为素数？</h3>
<p>使用prime选项，后面跟要测试的数字。注意OpenSSL的返回数字是十六进制的。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ openssl prime 119054759245460753</span><br><span class="line">1A6F7AC39A53511 is not prime</span><br></pre></td></tr></table></figure>
<p>也可以直接传入十六进制的数。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ openssl prime -hex 2f</span><br><span class="line">2F is prime</span><br></pre></td></tr></table></figure>
<h3 id="如何生成一组素数"><a class="markdownIt-Anchor" href="#如何生成一组素数"></a> 如何生成一组素数？</h3>
<p>从OpenSSL 1.0版本开始，可以生成指定长度的素数：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ openssl prime -generate -bits 64</span><br><span class="line">16148891040401035823</span><br><span class="line">$ openssl prime -generate -bits 64 -hex</span><br><span class="line">E207F23B9AE52181</span><br></pre></td></tr></table></figure>
<p>1.0之前的版本，就得传入一个范围的数判断哪个符合要求了。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># define start and ending points</span><br><span class="line">AQUO&#x3D;10000</span><br><span class="line">ADQUEM&#x3D;10100</span><br><span class="line">for N in $(seq $AQUO $ADQUEM); do</span><br><span class="line">	# use bc to convert hex to decimal</span><br><span class="line">	openssl prime $N | awk &#39;&#x2F;is prime&#x2F; &#123;print &quot;ibase&#x3D;16;&quot;$1&#125;&#39; | bc</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<h2 id="随机数"><a class="markdownIt-Anchor" href="#随机数"></a> 随机数</h2>
<h3 id="如何生成随机数"><a class="markdownIt-Anchor" href="#如何生成随机数"></a> 如何生成随机数？</h3>
<p>使用rand选项可以生成二进制或base64格式的随机数。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 直接在控制台输出128位base64格式的随机数</span><br><span class="line">openssl rand -base64 128</span><br><span class="line"></span><br><span class="line"># 在指定的文件中输出1024位二进制随机数</span><br><span class="line">openssl rand -out random-data.bin 1024</span><br><span class="line"></span><br><span class="line"># 从浏览器缓存取到半随机子节数据作为种子来生成随机数</span><br><span class="line">cd $(find ~&#x2F;.mozilla&#x2F;firefox -type d -name Cache)</span><br><span class="line">openssl rand -rand $(find . -type f -printf &#39;%f:&#39;) -base64 1024</span><br></pre></td></tr></table></figure>
<p>在类Unix系统中有个/dev/urandom的设备以及GNU的head工具，或者最近版本BSD的head，使用它们可以更有效的生成随机数：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 取得32位随机数，以base64编码显示</span><br><span class="line">head -c 32 &#x2F;dev&#x2F;urandom | openssl enc -base64</span><br></pre></td></tr></table></figure>
<p>可以利用strings工具得到比Base64使用更多字符的随机结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 取得32位随机数，取得可打印的字符，去除空格，替换掉换行符</span><br><span class="line">echo $(head -c 32 &#x2F;dev&#x2F;random | strings -1) | sed &#39;s&#x2F;[[:space:]]&#x2F;&#x2F;g&#39;</span><br></pre></td></tr></table></figure>
<p>在某些极端情况下，请确保了解使用random和urandom的优劣之处。可以在Linux和BSD系统的random(4)的man页面，Solaris的random(7D)的man页面查到更多的信息。</p>
<h2 id="smime"><a class="markdownIt-Anchor" href="#smime"></a> S/MIME</h2>
<p>S/MIME表示安全的发送和接收MIME数据，尤其是自e-mail消息中。已经有相当部分e-mail客户端默认支持S/MIME了，OpenSSL通过smime选项提供命令行S/MIME服务。<br />
注意<span class="exturl" data-url="aHR0cHM6Ly93d3cub3BlbnNzbC5vcmcvZG9jcy9tYW5tYXN0ZXIvYXBwcy9zbWltZS5odG1s">smime的man页面<i class="fa fa-external-link-alt"></i></span>包含了一些特别好的示例。</p>
<h3 id="如何验证签名过的smime消息"><a class="markdownIt-Anchor" href="#如何验证签名过的smime消息"></a> 如何验证签名过的S/MIME消息？</h3>
<p>使用mail客户端将签名过的S/MIME消息保存为msg.txt。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl smime -verify -in msg.txt</span><br></pre></td></tr></table></figure>
<p>如果发送者的证书是被你的OpenSSL所认可的授权机构签名的，你就能看到mail的头信息，正文以及一行提示Verification successful。<br />
如果消息被篡改过，会输出错误消息指明哈希值或者签名不匹配：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Verification failure</span><br><span class="line">23016:error:21071065:PKCS7 routines:PKCS7_signatureVerify:digest</span><br><span class="line">failure:pk7_doit.c:804:</span><br><span class="line">23016:error:21075069:PKCS7 routines:PKCS7_verify:signature</span><br><span class="line">failure:pk7_smime.c:265:</span><br></pre></td></tr></table></figure>
<p>同样，如果发送者的证书验证失败，会输出类似的错误消息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Verification failure</span><br><span class="line">9544:error:21075075:PKCS7 routines:PKCS7_verify:certificate verify</span><br><span class="line">error:pk7_smime.c:222:Verify error:self signed certificate</span><br></pre></td></tr></table></figure>
<p>多数e-mail客户端会再消息的签名中发送公共证书。在命令行中你可以查看这证书的数据。可以使用smime -pk7out选线导出PKCS#7证书，然后再使用pkcs7选项。这方法虽然笨但确实可用。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl smime -pk7out -in msg.txt | \</span><br><span class="line">openssl pkcs7 -text -noout -print_certs</span><br></pre></td></tr></table></figure>
<p>也可以将对方的证书保存为指定的文件。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl smime -pk7out -in msg.txt -out her-cert.pem</span><br></pre></td></tr></table></figure>
<p>这时可以把这个证书加入你的OpenSSL信任组中或存在别处。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl smime -verify -in msg.txt -CAfile &#x2F;path&#x2F;to&#x2F;her-cert.pem</span><br></pre></td></tr></table></figure>
<h3 id="如何加密smime消息"><a class="markdownIt-Anchor" href="#如何加密smime消息"></a> 如何加密S/MIME消息？</h3>
<p>加入有人发给你她的公共证书，并要求你发送加密过消息给她。她的证书存为her-cert.pem，你要发的消息存为message.txt。<br />
默认使用比较弱的RC2-40加密方案，只要告诉OpenSSL消息和证书的地址就行。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl smime her-cert.pem -encrypt -in my-message.txt</span><br></pre></td></tr></table></figure>
<p>如果你确定对方有处理SSL的能力，可以指定更安全的算法，比如DES3。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl smime her-cert.pem -encrypt -des3 -in my-message.txt</span><br></pre></td></tr></table></figure>
<p>默认情况下，加密过消息以及mail头信息输出到了控制台。可以使用-out选项输出到文件中。甚至可以利用sendmail直接发送出去。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl smime her-cert.pem \</span><br><span class="line">	-encrypt \</span><br><span class="line">	-des3 \</span><br><span class="line">	-in my-message.txt \</span><br><span class="line">	-from &#39;Your Fullname &lt;you@youraddress.com&gt;&#39; \</span><br><span class="line">	-to &#39;Her Fullname &lt;her@heraddress.com&gt;&#39; \</span><br><span class="line">	-subject &#39;My encrypted reply&#39; |\</span><br><span class="line">sendmail her@heraddress.com</span><br></pre></td></tr></table></figure>
<h3 id="如何对smime消息签名"><a class="markdownIt-Anchor" href="#如何对smime消息签名"></a> 如何对S/MIME消息签名？</h3>
<p>如果你不需要加密整个消息，只是想对消息做个签名，这样对方可以确定消息的完整性。处理方法跟加密类似，主要的不同是你需要自己的私钥和证书，因为你不可能拿对方的证书去签名。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">openssl smime \</span><br><span class="line">	-sign \</span><br><span class="line">	-signer &#x2F;path&#x2F;to&#x2F;your-cert.pem \</span><br><span class="line">	-in my-message.txt \</span><br><span class="line">	-from &#39;Your Fullname &lt;you@youraddress.com&gt;&#39; \</span><br><span class="line">	-to &#39;Her Fullname &lt;her@heraddress.com&gt;&#39; \</span><br><span class="line">	-subject &#39;My signed reply&#39; |\</span><br><span class="line">sendmail her@heraddress.com</span><br></pre></td></tr></table></figure>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<ol>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3pob3V5b25ndGFvL29wZW5zc2wtaG93dG8=">https://github.com/zhouyongtao/openssl-howto<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cub3BlbnNzbC5vcmcvZG9jcy9tYW4xLjEuMS9tYW43Lw==">https://www.openssl.org/docs/man1.1.1/man7/<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW5vL29wZW5zc2wtZXhhbXBsZXMvYmxvYi9tYXN0ZXIvbGlua3MubWQ=">https://github.com/theno/openssl-examples/blob/master/links.md<i class="fa fa-external-link-alt"></i></span></li>
</ol>
]]></content>
      <categories>
        <category>信息安全</category>
        <category>OpenSSL</category>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>信息安全</tag>
        <tag>OpenSSL</tag>
      </tags>
  </entry>
  <entry>
    <title>PKI相关知识（摘录）</title>
    <url>/2021/01/09/PKI%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%EF%BC%88%E6%91%98%E5%BD%95%EF%BC%89/</url>
    <content><![CDATA[<p>注：本文内容摘录自Public Key Infrastructure: Implementation and Design一书。</p>
<h1 id="basics"><a class="markdownIt-Anchor" href="#basics"></a> Basics</h1>
<h2 id="definition"><a class="markdownIt-Anchor" href="#definition"></a> Definition</h2>
<p>PKI is a framework that consists of security policies, encryption mechanisms, and applications that generate, store, and manage keys. PKI also provides procedures to generate, distribute, and utilize keys and certificates.</p>
<p>PKI provides a mechanism to publish the public keys that are part of public key cryptography. It describes the policies, standards, and software that are used to regulate certificates, public keys, and private keys.</p>
<a id="more"></a>
<h2 id="components"><a class="markdownIt-Anchor" href="#components"></a> Components</h2>
<p>The components of a PKI consists:</p>
<ul>
<li>Certification Authority (CA)</li>
<li>Registration Authority (RA)</li>
<li>PKI clients</li>
<li>Digital Certificates</li>
<li>Certificate Distribution System or repository</li>
</ul>
<h3 id="ca"><a class="markdownIt-Anchor" href="#ca"></a> CA</h3>
<p>The CA is a trusted third party that authenticates entities taking part in an electronic transaction. To authenticate an entity, the CA issues a digital certificate. This certificate is a digital document that establishes the credentials of the entities participating in a transaction. The digital certificates issued by CAs contain information, such as the name of the subscriber, the public and the private key of the subscriber, and the issuing CAs public key. This information depends upon the policy of the company that issues the certificates.</p>
<p>Before issuing a digital certificate, the CA verifies the request for a certificate with a Registration Authority (RA). For validating certificate requests, a CA uses its own procedures. These procedures depend on an organization policy and the infrastructure available to validate the request. If the request is validated, the CA issues the certificate.</p>
<h3 id="ra"><a class="markdownIt-Anchor" href="#ra"></a> RA</h3>
<p>An RA is responsible for the interaction between clients and CAs. Often, because of the bulk of certificate requests, it is not possible for the CA to accept certificate requests, validate the requests, and issue the certificates. In such cases, the RA acts as an intermediary between the CA and the client. RAs are especially useful for scaling PKI applications across different geographical locations. The tasks performed by the RA are given below:</p>
<ul>
<li>Receive entity requests and validate them</li>
<li>Send requests to CA</li>
<li>Receive the processed certificate from the CA</li>
<li>Send the certificate to the correct entity</li>
</ul>
<h3 id="pki-clients"><a class="markdownIt-Anchor" href="#pki-clients"></a> PKI Clients</h3>
<p>The entities which request CAs or RAs to issue certificates are commonly referred to as PKI Clients. To obtain a digital certificate from a CA, a PKI client needs to perform the following steps:</p>
<ol>
<li>
<p>Send a request to generate a public−private key pair. A CA or the client can do this task. The key pair contains the details of the client.</p>
</li>
<li>
<p>After the key pair is generated, a request is sent to the CA for the CA certificate. This request can be routed through an RA.</p>
</li>
<li>
<p>After the client receives the certificate from the CA, it can use the certificate to identify itself as being an authenticated certificate holder.</p>
</li>
</ol>
<p>All communication between a client and the CA is kept secure. Additionally, the client is responsible for ensuring the safety of its private key. The client can ensure the safety of your private key by using several hardware components that are available, such as tokens and smart cards.</p>
<h3 id="digital-certificates"><a class="markdownIt-Anchor" href="#digital-certificates"></a> Digital certificates</h3>
<p>In the PKI environment,  certificates ensure that only the public key for a certificate that has been authenticated by a certifying authority works with the private key possessed by an entity. This eliminates the chance of impersonation.</p>
<p>A certificate includes the following elements:</p>
<ul>
<li>Serial number of the certificate</li>
<li>Digital signature of the CA</li>
<li>Public key of the user to whom the certificate is issued</li>
<li>Date of expiration</li>
<li>Name of the CA that has issued the certificate</li>
</ul>
<p>After a digital certificate is obtained, the entity can use it to communicate with recipients of information in the following manner:</p>
<ol>
<li>
<p>The subscriber digitally signs the message with his or her private key to ensure message integrity and its own authenticity and sends the message to the recipient.</p>
</li>
<li>
<p>The recipient, after receiving the message, verifies the digital signature with the subscribers public key and queries the global directory database to check the validity of the subscribers digital certificate.</p>
</li>
<li>
<p>The Global directory database returns the status of the subscribers digital certificate to the recipient. The transaction is completed only if the certificate is valid.</p>
</li>
</ol>
<p>The CA signs the digital certificates. To verify a signature, the CAs public key is needed. The public key is part of the CAs digital certificate. These certificates are typically pre−installed in Web browsers.</p>
<p>After a certificate has been issued, it needs to be distributed to users and organizations. This is done by a Certificate Distribution System (CDS) or a repository.</p>
<h3 id="certificate-distribution-system-cds-or-repository"><a class="markdownIt-Anchor" href="#certificate-distribution-system-cds-or-repository"></a> Certificate Distribution System (CDS) or Repository</h3>
<p>The Certificate Distribution System (CDS) distributes certificates to users and organizations. These certificates can be distributed in two ways depending on implementation of PKI in the organization. Either the certificates can be distributed by users themselves or they can be distributed by a directory server that uses LDAP to query the user information that is stored in an X.500 compliant database. CDS distributes certificates in cooperation with the directory service server. The distribution system is used to do the following tasks:</p>
<ul>
<li>Generate and issue key pairs</li>
<li>Certify the validity of public keys by signing the public key</li>
<li>Revoke expired or lost keys</li>
<li>Publish the public keys in the directory service server</li>
</ul>
<h1 id="pki-architecture"><a class="markdownIt-Anchor" href="#pki-architecture"></a> PKI Architecture</h1>
<h2 id="single-ca-architecture"><a class="markdownIt-Anchor" href="#single-ca-architecture"></a> Single CA Architecture</h2>
<h3 id="description"><a class="markdownIt-Anchor" href="#description"></a> Description</h3>
<p>In this type of architecture, there is just one CA who issues and distributes certificates and Certificate Revocation Lists (CRLs) to the entities. All these entities trust this CA. In addition, these entities use only those certificates that are issued by this CA.<br />
There are no CA trust relationships in a single CA architecture because there exists only one CA. The single CA architecture does not allow for any new CAs to be added to the PKI.</p>
<p>A single CA architecture presents a single point of failure. This is because there is only one CA that holds the key information for all the entities. The single CA architecture also suffers from scalability issues.</p>
<h3 id="basic-trust-list-model"><a class="markdownIt-Anchor" href="#basic-trust-list-model"></a> Basic Trust List Model</h3>
<p>In the Trust List model, PKI services are provided by a number of CAs. However, these CAs do not establish a trust relationship between them. As a result, there are no certification paths in this architecture, but only single certificates. Entities have to maintain a list of CAs that they trust. These entities use only those certificates and CRLs that have been issued by the CAs in their list of trusted CAs.</p>
<p>This type of an architecture where an entity maintains a list of trusted CAs is known as Basic Trust List architecture.</p>
<h3 id="certificate-path-construction"><a class="markdownIt-Anchor" href="#certificate-path-construction"></a> Certificate Path Construction</h3>
<p>This architecture consists of only one CA or trust point, and as a result only one certificate can connect any subject to the trust point. In other words, it can be said that there is no path construction in a single CA architecture, and a single certificate represents the entire path.</p>
<h2 id="enterprise-pki-architecture"><a class="markdownIt-Anchor" href="#enterprise-pki-architecture"></a> Enterprise PKI Architecture</h2>
<h3 id="hierarchical-pki-architecture"><a class="markdownIt-Anchor" href="#hierarchical-pki-architecture"></a> Hierarchical PKI Architecture</h3>
<p>In this architecture, PKI services are provided by multiple CAs. Unlike the Trust List architecture, all CAs in a hierarchical PKI architecture share a trust relationship among them. The CAs in this type of architecture are connected through superior−subordinate relationships.</p>
<p>The CA hierarchy is an inverted tree−like structure having root at the top, referred to as root CA, which in turn contains branches or nodes. These nodes are referred to as the subordinate of the root CA. These subordinate CAs are like any other CA and perform all the functions of a CA; they can also delegate the responsibility of certificate issuance to other subordinate CAs beneath them. Whenever the root CA assigns a subordinate, the root CA will issue a certificate to the subordinate, indicating what type of work the subordinate can perform.</p>
<p>The root CA usually issues certificates to subordinate CAs and not to the users. However, the subordinate CAs can issue certificates to both users and subordinate CAs at lower levels. In a hierarchical PKI, subordinate CAs do not issue certificates to their superior CA or root CA. Except for the root CA, all other CAs have a single superior CA. The issuer is the superior CA, and the subject is the subordinate CA. To add a new CA to the architecture, the root CA or any current CA issues a certificate to the new CA.</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210105222207.png" alt="image-20201215134308513" /></p>
<p>However, the hierarchical PKI architecture suffers from a major drawback that there is a single point of trust, the root CA, which controls the complete hierarchical PKI architecture. In case of a compromise of the root CA, the complete PKI architecture will break down.</p>
<p>Some important properties of hierarchical PKI architecture are:</p>
<ul>
<li>Scalability: Hierarchical PKIs are quite scalable</li>
<li>Ease of Deployment: Being uni−directional, the hierarchical PKI architecture is quite easy to deploy</li>
<li>Short Certification Path: The certification paths in a hierarchical PKI architecture are quite short.</li>
</ul>
<h3 id="mesh-pki"><a class="markdownIt-Anchor" href="#mesh-pki"></a> Mesh PKI</h3>
<p>In the mesh PKI architecture, the CAs have a peer−to−peer relationship, rather than a superior−subordinate relationship. All CAs in a mesh PKI can be trust points, and there is no single CA around which the complete PKI architecture revolves. Since CAs issue certificates to each other, they share a bi−directional trust<br />
relationship, and all CAs need to cross−certify each other.</p>
<p>There are multiple trust points in a mesh PKI architecture, and hence the compromise of a single CA cannot result in a breakdown of the complete PKI. Even if a CA is compromised, then the entities with other CAs as their trust points continue to communicate with other entities.</p>
<p>Since mesh contains many bidirectional relationships between the CAs, there is usually more than one certification path between any entity and a trust point. This makes path construction more complex since there are multiple choices. Some of these choices lead to a valid path while others result in useless dead−ends. In addition, mesh architecture involves construction of different certification paths by different users.</p>
<p><img data-src="D:%5C%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2%5Cblog_figures%5Cimage-20201215135157261.png" alt="image-20201215135157261" /></p>
<h2 id="hybrid-pki-architecture"><a class="markdownIt-Anchor" href="#hybrid-pki-architecture"></a> Hybrid PKI Architecture</h2>
<p>A hybrid architecture allows organizations with multiple PKI architectures to interoperate between themselves.  There are three types of Hybrid PKI architectures.</p>
<h3 id="extended-trust-list-architecture"><a class="markdownIt-Anchor" href="#extended-trust-list-architecture"></a> Extended Trust List Architecture</h3>
<p>In the extended trust list architecture, end entities <strong>maintain a list of multiple trust points</strong>. Each trust point refers to a PKI, which the entity trusts. This can be a single CA, hierarchical, or mesh PKI.</p>
<p>The extended Trust List generates a certificate cache. This cache consists of all the possible certification paths. Therefore, instead of constructing a certification path, you can refer to the cache and search for the appropriate path with the help of the certification path value. This value is based on the complexity of the certification path. Simple certification paths are assigned a higher value than complex paths.</p>
<h3 id="crosscertified-enterprise-pkis"><a class="markdownIt-Anchor" href="#crosscertified-enterprise-pkis"></a> Cross−Certified Enterprise PKIs</h3>
<p>In a cross−certified architecture, either the root CA or the subordinate CA of a particular PKI establishes a peer−to−peer trust relationship with the root CAs or subordinate CAs of another PKI.</p>
<p>Each user will have <strong>a single trust point</strong>. The cross−enterprise relationship is peer−to−peer. Once the CAs have cross−certified each other, their entities can validate entities in the other PKI.</p>
<p>In cross−certified PKI architecture, different users construct different certification paths for the same end entity certificate. The certification path begins at the trust point that is associated with the native PKI.</p>
<h3 id="bridge-ca-architecture"><a class="markdownIt-Anchor" href="#bridge-ca-architecture"></a> Bridge CA Architecture</h3>
<p>The bridge CA does not issue certificates directly to users. The bridge CA establishes peer−to−peer trust relationships with the CAs of different entities. These relationships are combined to form a bridge of trust enabling entities to interact with each other through the bridge CA. The CA that establishes a relationship with the bridge CA is referred to as the <em>Principal CA</em>. The trust relationships between a principal CA and a bridge CA are all peer−to−peer.</p>
<p>It is easy to add new CAs or entire enterprise PKIs to a bridge−connected PKI. The change is transparent to users as no change in trust points happens.</p>
<p>In a bridge CA architecture certificate path construction, there is only one cross certificate that links the native PKI to all the outside or foreign PKIs. In comparison to a mesh PKI, certification path discovery becomes easier in bridge CA architecture. The users typically know their path to the bridge CA; they need to determine only the path from the bridge CA to the<br />
entity’s certificate.</p>
<h1 id="ca-functions"><a class="markdownIt-Anchor" href="#ca-functions"></a> CA Functions</h1>
<h2 id="issuing-certificates"><a class="markdownIt-Anchor" href="#issuing-certificates"></a> Issuing Certificates</h2>
<p>A CA authenticates users by issuing digital certificates. These digital certificates can be issued to users, other CAs, or to both.<br />
However, before issuing a certificate, the CA needs to verify the credentials of the certificate applicant. When a CA issues a certificate, it asserts that the certificate owner has the private key corresponding to the public key that is contained in the certificate.</p>
<p>While issuing a certificate, the CA digitally signs the certificates with its private key. This digital signature of the issuing CA in the certificate helps users to identify whether the CA who has issued the certificate is their trusted CA or not. To ensure the authenticity of the certificate, users can verify the signature of the CA by using the public key of the CA. It is this signature of the CA that forms the very basis of trust for certificates issued by that CA.</p>
<p>CAs can only issue certificates if they are requested to do so. To obtain a certificate from a CA the user needs to perform the following steps:</p>
<ol>
<li>
<p>Generate his or her key pair.</p>
</li>
<li>
<p>Once a key pair has been generated, the user needs to register his or her public key with a CA.</p>
</li>
<li>
<p>Send the request for certificate issue to the RA in a predefined format.</p>
</li>
<li>
<p>The RA checks the user identification and assures itself of the identity of the user. Once done, the RA forwards the request to the CA.</p>
</li>
<li>
<p>The CA signs a certificate by using its private key and sends the certificate to the RA. The signing of the certificate binds the subscriber to his or her public key.</p>
</li>
<li>
<p>The RA forwards the certificate that it receives from the CA to the concerned user.</p>
</li>
<li>
<p>The user presents this certificate whenever desired in order to demonstrate the legitimacy of his or her key.</p>
</li>
</ol>
<p>The certificates that are issued have to be in a specified format so that they are recognized globally. One such format that is globally recognized is the X.509 standard.</p>
<h2 id="revoking-certificates"><a class="markdownIt-Anchor" href="#revoking-certificates"></a> Revoking Certificates</h2>
<p>Every certificate has a validity period. However, some of the reasons that can result in a certificate becoming prematurely invalid are:</p>
<ul>
<li>Compromise of an entitys private key</li>
<li>A certificate holder leaves the company</li>
<li>Change in the attribute information of the entity, such as entity name, or relationship with the organization</li>
<li>Compromise of the Certification Authority (CA) key</li>
</ul>
<p>Some of the methods that a CA can use to revoke certificates are:</p>
<ul>
<li>Periodic Publication Mechanisms: This mechanism includes the use of Certificate Revocation Lists (CRL) and Certificate Revocation Trees (CRT).</li>
<li>Online Query Mechanisms: Online Query Mechanisms comprise Online Certificate Status Protocol (OCSP) and Online Transaction Validation Protocols.</li>
</ul>
<h2 id="certificate-policy"><a class="markdownIt-Anchor" href="#certificate-policy"></a> Certificate Policy</h2>
<h3 id="definition-2"><a class="markdownIt-Anchor" href="#definition-2"></a> Definition</h3>
<p>A certificate policy is a documented set of rules and commitments made by a CA to indicate the applicability of a certificate to a particular group of users or set of applications.</p>
<h3 id="writing-certificate-policies"><a class="markdownIt-Anchor" href="#writing-certificate-policies"></a> Writing Certificate Policies</h3>
<p>When a certificate policy is drafted, security analysts and application owners should evaluate it. This ensures that the policy covers all security aspects of a certificate and can be implemented with the given application. For writing certificate policies, you can use the RFC 2527 format. This format ensures that all the critical aspects of the certificate policy are included in a policy.</p>
<h3 id="certificate-policies-and-cas"><a class="markdownIt-Anchor" href="#certificate-policies-and-cas"></a> Certificate Policies and CAs</h3>
<p>A certificate policy is usually associated with a single CA when the CA serves as the trust point and is responsible for issuing all certificates. A certificate policy is associated with multiple CAs when a single CA is not the trust point. A CA should ensure that all subordinate CAs working on its behalf or the registration<br />
authority comply with the certificate policies.</p>
<h3 id="policy-object-identifiers"><a class="markdownIt-Anchor" href="#policy-object-identifiers"></a> Policy Object Identifiers</h3>
<p>An OID is a simple data type defined by ANS.1 and is a sequence of integers that are separated by dots or periods.  Each OID maps to a certificate policy, which is, in turn, related to one or more CPS. Once an OID is associated with a certificate policy, you cannot make major modifications to the policy. If you make major modifications, the certificate policy needs to be associated with a new OID. As a result you can use OIDs to easily distinguish one certificate policy from another.</p>
<p>Certificate policies are documented and practiced by using a Certification Practice Statement (CPS). CA operations are based on its CPS, which in turn define the security policy.</p>
<h2 id="certification-practice-statement-cps"><a class="markdownIt-Anchor" href="#certification-practice-statement-cps"></a> Certification Practice Statement (CPS)</h2>
<h3 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h3>
<p>A Certification Practice Statement (CPS) specifies how certification is practiced. That is, the statement describes how the practices that are identified in the certificate policies are implemented and enforced. A CPS specifies the policies and procedures that a company follows for issuing and managing certificates.</p>
<p>Though it appears similar to certificate policies, a CPS is essentially a detailed description of the procedures implemented by an organization. The description includes any <strong>application−specific details</strong> that an organization might deem relevant to the document.</p>
<h3 id="role-of-cas-in-cps"><a class="markdownIt-Anchor" href="#role-of-cas-in-cps"></a> Role of CAs in CPS</h3>
<p>A CA is responsible for issuing a CPS. The tasks that a CA should perform for formulating a CPS are given below:</p>
<ul>
<li>Issue a CPS.</li>
<li>Ensure that the RA and the subscribers are aware of the policies and CPS.</li>
<li>Ensure that any CA with whom it cross−certifies complies with certificate policies and CPS that are mutually agreed. Cross−certified CAs are those CAs whose certificate policies have been evaluated and have been accepted.</li>
</ul>
<h3 id="writing-a-cps"><a class="markdownIt-Anchor" href="#writing-a-cps"></a> Writing a CPS</h3>
<p>RFC 2527 format for a CPS contains a number of components for a CPS. These components are:</p>
<ul>
<li>Introduction</li>
<li>General Provisions</li>
<li>Identification and Authentication (important!)</li>
<li>Operational Requirements (important!)</li>
<li>Physical, Procedural, and Personnel Security Controls</li>
<li>Technical Security Controls</li>
<li>Certificate and CRL Profile</li>
<li>Specification Administration</li>
</ul>
<h4 id="identification-and-authentication"><a class="markdownIt-Anchor" href="#identification-and-authentication"></a> Identification and Authentication</h4>
<p>Before a CA issues a certificate, the CA should first authenticate the certificate applicant. An applicant can be identified by the credentials presented by the applicant in the certificate application during certificate registration process. The various ways in which an applicant can be identified are</p>
<ul>
<li>E−mail ID of the user as given in the certificate application</li>
<li>Face−to−face appearance before a CA or an RA</li>
<li>Applicants unique name</li>
<li>Presenting credentials to collect registered/certified mail</li>
</ul>
<h4 id="operational-requirements"><a class="markdownIt-Anchor" href="#operational-requirements"></a> Operational Requirements</h4>
<p>The operational requirements component of the CPS ensures that a certificate is issued or revoked by a CA only when appropriate. According to RFC 2527, operational requirements components consist of the following sections:</p>
<ul>
<li>Certificate Application</li>
<li>Certificate Issuance</li>
<li>Certificate Acceptance</li>
<li>Certificate Suspension and Revocation</li>
<li>Security Audit Procedures</li>
<li>Records Archival</li>
<li>Key Changeover</li>
<li>Compromise and Disaster Recovery</li>
<li>CA Termination</li>
</ul>
<h1 id="certificate-management"><a class="markdownIt-Anchor" href="#certificate-management"></a> Certificate Management</h1>
<h2 id="certificate-enrollment-and-registration-authority"><a class="markdownIt-Anchor" href="#certificate-enrollment-and-registration-authority"></a> Certificate Enrollment and Registration Authority</h2>
<p>Certificate enrollment is the process by which a user sends a request for a certificate to a CA. The process involved in certificate registration might involve another authority that is different from the CA. This authority is the RA and assists a CA in performing the registration tasks. The RA can be designated by a CA or can be specific to an organization.</p>
<p>The RA acts as an interface between the user and the CA. Typically, the RA consists of three components: Registration authority console, Registration authority officer, and Registration authority manager. The RA typically receives requests from a user to issue certificates. These requests are made through a registration form, which is provided by the RA. The main functions of the RA include:</p>
<ul>
<li>Verifying the identity of a user on receiving a request</li>
<li>Handling certificate enrollment</li>
<li>Passing on the information to the CA to complete the registration process</li>
</ul>
<h2 id="certificate-registration"><a class="markdownIt-Anchor" href="#certificate-registration"></a> Certificate Registration</h2>
<p>Certificate registration is the process of receiving the registration requests from users. These requests are then<br />
processed and validated by the RA. The following steps describe the process of certificate registration:</p>
<ol>
<li>
<p>The user sends a request for a registration form to a RA. The RA predefines the format of the registration form. This request for the registration form can be made online depending on the policy under which the RA functions.</p>
</li>
<li>
<p>On receiving the request, the RA sends the registration form to the user.</p>
</li>
<li>
<p>The user submits the completed registration form to the RA.</p>
</li>
<li>
<p>Based on the information in the registration form, the RA verifies the identity of the user and sends the registration request to the corresponding CA.</p>
</li>
<li>
<p>After verifying the request, the CA sends back its response to the RA. The response can be negative if the user does not fulfill a mandatory condition.</p>
</li>
<li>
<p>If the response from the CA is positive, the RA registers the user and passes the registration information to the user.</p>
</li>
</ol>
<h2 id="key-generation"><a class="markdownIt-Anchor" href="#key-generation"></a> Key Generation</h2>
<p>A key pair can be generated at the client−end or the CA−end. Deciding where to generate the key pair, to a large extent, depends on the availability of resources to generate the key pair and also on the intended use of the certificate.</p>
<p>If the key pair is generated at the users end, the public key is sent to the CA along with a request for certificate generation.</p>
<p>In CA Key Pair Generation, the CA signs the key pair by using a predefined cryptographic algorithm. It also involves the transfer of the generated private key to the user. To accomplish this, the CA needs to have procedures for transferring the private key safely to the owner. In addition to transferring the private key, the CA also needs to publish the certificate along with the corresponding public key in the global directory database.</p>
<p>The CA and the users should not only have adequate resources for generating the keys, but also have resources for performing the key backup. A backup needs to be made once the key is generated. This backup copy can be used to decrypt the messages in case the user loses the original key. The private key of the key pair should always be kept in the safe custody of the owner. This would minimize any intrusion threats to the key. The owner of the private key should also have a proper key backup facility.</p>
<h2 id="maintaining-keys-and-certificates"><a class="markdownIt-Anchor" href="#maintaining-keys-and-certificates"></a> Maintaining Keys and Certificates</h2>
<h3 id="key-backup"><a class="markdownIt-Anchor" href="#key-backup"></a> Key Backup</h3>
<p>A CA performs a key backup to ensure that if a user loses his or her private key, the data that was encrypted by using the corresponding public key can be decrypted. A key is usually backed up when the certificate is generated. Either a CA or a user can back up keys. There are no well−defined rules for backing up keys. These policies essentially depend upon the use of the keys.</p>
<h3 id="certificate-expiry-and-archiving"><a class="markdownIt-Anchor" href="#certificate-expiry-and-archiving"></a> Certificate Expiry and Archiving</h3>
<p>A CA can revoke an invalid certificate. The issuing CA, upon the receipt of the revocation request from the owner, invalidates the original certificate and enters the certificate information in a new Certificate Revocation List (CRL).</p>
<p>A CA must be able to establish the validity of certificates after they have expired. This is because even after the certificate has expired, all transactions that were done by using the certificate when it was valid should be permissible. Therefore, CAs should be able to maintain sufficient archival information to validate the actual identity of the person or system named in a certificate, and verify that the certificate was valid at the time the document was signed. This can be accomplished by cryptographic timestamps.</p>
<h3 id="certificate-updates"><a class="markdownIt-Anchor" href="#certificate-updates"></a> Certificate Updates</h3>
<p>When a certificate is due for expiration, a new public/private key is generated and the public key is associated certificate. This is referred to as key update.</p>
<p>To issue a new certificate, a CA issues a pair of key rollover certificates simultaneously. A description of the two keys in the key rollover certificates is given below:</p>
<ul>
<li>The first certificate contains the old public key and is signed with the new private key. This rollover certificate allows subscribers that have certificates signed with the new private key to construct a valid certification path to the certificates previously signed with the old private key.</li>
<li>The second certificate contains the new public key and is signed with the old private key. This rollover certificate allows the subscribers with certificates signed by the old private key to construct a valid certification path to the certificates signed with the new private key.</li>
</ul>
<h3 id="issuing-multiple-certificates-to-users"><a class="markdownIt-Anchor" href="#issuing-multiple-certificates-to-users"></a> Issuing Multiple Certificates to Users</h3>
<p>Different certificates that are issued to the same user or organization may be associated with different applications for different uses. If a user has multiple key pairs through multiple certificates, the user is likely to have multiple certificates because the format of the certificate usually does not allow the user to have more than a single public key. Therefore, if a single user has multiple certificates issued by a Certification Authority, the user must be ensured that each one of the certificates contains a separate public key to avoid substitution attacks.</p>
<h2 id="certificate-retrieval-and-validation"><a class="markdownIt-Anchor" href="#certificate-retrieval-and-validation"></a> Certificate Retrieval and Validation</h2>
<p>Certificate retrieval depends upon the location of a certificate. A certificate can be distributed by the means of a secure e−mail using Secure Multipurpose Internet Mail Extensions (S−MIME) or can be published in an X.500 directory. If the certificate is published in the X.500 directory, a user can then retrieve it by using Lightweight Directory Access Protocol (LDAP). LDAP enables applications running on multiple platforms to obtain directory information, such as e−mail addresses and public keys. A CA can populate an LDAP directory with a new employees details. The CA can use employee information in the LDAP directory to issue<br />
multiple certificates simultaneously for users that match a criterion. LDAP directory can also be integrated with the Certificate Manager to automatically retrieve certificate information from the Certificate Manager and update it in the directory.</p>
<p>After retrieving certificates, you need to validate them. Certificate validation involves the following processes:</p>
<ul>
<li>Verifying that the signature is valid</li>
<li>Verifying that a trusted CA has issued the certificate</li>
<li>Ensuring that the certificate can be used for intended purposes</li>
<li>Determining if the certificate has been revoked</li>
</ul>
<h2 id="methods-of-certificate-revocation"><a class="markdownIt-Anchor" href="#methods-of-certificate-revocation"></a> Methods of Certificate Revocation</h2>
<p>Certificate revocation is the process of removing the validity of a certificate prematurely. There could be multiple reasons for revoking a certificate; some of the reasons are stated below:</p>
<ul>
<li>The certificate holder leaves the organization.</li>
<li>The name and/or details of the certificate holder change.</li>
<li>The issuing authority ceases to exist or the relationship between the issuing authority and the organization ceases to exist.</li>
<li>There is a suspicion of private key compromise.</li>
</ul>
<p>Certificate Revocation can be implemented in a number of ways, including:</p>
<ul>
<li>
<p>Periodic Publication Mechanisms: This mechanism includes the use of Certificate Revocation Lists (CRL) and Certificate Revocation Tress (CRT).</p>
<ul>
<li>CRL: A CRL is a list of all certificates that have been revoked before their expiration date. CRLs are issued, maintained, and updated on a regular basis by the issuing authority or a CA.</li>
<li>CRT: Another certification method that was introduced by Valicert, a U.S.−based company. This revocation technology is based on Merkle hash trees, where the tree represents all known certificate revocation information relevant to some known set of PKI communities. The major drawback of this method is that the CRTs have to be recomputed with every update. This leads to an increase in the load on the processor, and it also reduces the timeliness of the CRT.</li>
</ul>
</li>
<li>
<p>Online Query Mechanisms: Online Query Mechanisms comprise Online Certificate Status Protocol (OCSP) and Online Transaction Validation Protocols.</p>
<ul>
<li>OCSP: OCSP is used to obtain online revocation information about certificates. An OCSP responder is used to process the information relating to all OCSP verification requests. The OCSP responder is a trusted entity, which, on receiving the requests for the revocation information, replies to the sender of the request with status information about the online certificates.</li>
<li>Online Transaction Validation Protocols: Online Transaction Validation Protocol is used for online validation, such as business transactions through credit cards.</li>
</ul>
</li>
</ul>
<h1 id="pki-management-protocols-and-standards"><a class="markdownIt-Anchor" href="#pki-management-protocols-and-standards"></a> PKI Management Protocols and Standards</h1>
<h2 id="pkcs10"><a class="markdownIt-Anchor" href="#pkcs10"></a> PKCS#10</h2>
<p>PKCS#10, or Certificate Request Syntax Standard, defines the syntax for certificate requests. According to the PKCS#10 standard, a certificate request comprises the following three elements:</p>
<ul>
<li>Certificate request information: Distinguished name, Public keys and Optional attributes</li>
<li>A signature algorithm identifier</li>
<li>A digital signature on the certification request information</li>
</ul>
<p>Suppose Bob requests the AllSolv CA for a certificate. Now to request for a certificate according to PKCS#10, Bob needs to<br />
perform the following steps:</p>
<ol>
<li>
<p>Generate a CertificateRequestInfo value as per the PKCS#10 specification from his public key and<br />
user name. As already discussed, this CertificateRequestInfo value consists of the distinguished name<br />
of the entity, in this case Bob, and the public key of the entity.</p>
</li>
<li>
<p>After generating the CertificateRequestInfo value, Bob needs to sign this value with his private key.</p>
</li>
<li>
<p>Finally, Bob needs to generate a CertifcateRequest value as per PKCS#10 from the CertificateRequestInfo value and his signature.</p>
</li>
</ol>
<p>PKCS#10 is the most common standard for certificate requests. Since most of the PKI applications have become Web−enabled, certificate requests can be made online. However, PKCS#10 does not support HTTP protocols. When a certificate request is made over the Web by using HTTP, the CA is unable to authenticate the entity. Therefore, PKCS#10 is used most commonly with the Secure Sockets Layer (SSL) for making certificate requests.</p>
<p>A few limitations of PKCS#10 are:</p>
<ul>
<li>PKCS#10 is not algorithm−independent. Just like an RSA algorithm, it also assumes that the private key might be used for creating the digital signature.</li>
<li>The digital signature on a PKCS#10 request does not provide all the information that a CA needs to authenticate the users. In addition, there is no well−defined mechanism to ensure that a certificate request has not been altered during its transit.</li>
<li>PKCS#10 defines the syntax for only one message type, which is a certificate request, and not for the complete protocol. It does not specify the syntax and protocol for any other types of messages such as certificate revocation requests. Hence, messages other than certificate requests have to be implemented by using other protocols, such as HTTP</li>
</ul>
<h2 id="pkcs7"><a class="markdownIt-Anchor" href="#pkcs7"></a> PKCS#7</h2>
<p>PKCS#7 or Cryptographic Message Syntax Standard defines the syntax for cryptographic data, such as digital signatures. PKCS allows for authentication of attribute information in addition to authenticating the content of the messages.</p>
<p>Some of the important uses of PKCS#7 are:</p>
<ul>
<li>The CAs use the PKCS#7 standard as a response to the entity requesting a certificate.</li>
<li>It is used to authenticate the certificate messages sent to an entity.</li>
<li>It provides complete information to the CA for processing certificate requests.</li>
<li>It is used by many protocols such as S/MIME for providing security.</li>
</ul>
<p>Let us now look at how Bob can use PKCS#7 to create a digitally signed message by using PKCS#7. Bob needs to perform the following steps to create a digitally signed message by using PKCS#7:</p>
<ol>
<li>Encode a value of type ContentInfo as per PKCS#7 for the data that he wants to sign.</li>
<li>Digest the data to be signed as per PKCS#7.</li>
<li>Encode a value of type DigestInfo as per PKCS#7 from the message digest.</li>
<li>Encrypt the encoded DigestInfo with his private key.</li>
<li>Encode a SignedData type value as per PKCS#7 from the first ContentInfo value, the encrypted message digest, and other information such as his certificate and the message digest algorithm identifier.</li>
<li>Encode another ContentInfo type value from the SignedData value as per PKCS#7.</li>
</ol>
<h2 id="pkcs11"><a class="markdownIt-Anchor" href="#pkcs11"></a> PKCS#11</h2>
<p>PKCS#11 was introduced to implement cryptography with the use of portable computing devices such as smart cards, PCMCIA cards, and smart diskettes as they provide a way to store the private key component of a public key/private key pair securely, under the control of a single user.</p>
<p>In this protocol, the cryptographic application utilizes the device to perform the operations rather than performing cryptographic operations so that sensitive information such as private keys are never revealed. As more applications are developed for public key cryptography, a standard programming interface for these devices becomes increasingly valuable.</p>
<h2 id="pkcs12"><a class="markdownIt-Anchor" href="#pkcs12"></a> PKCS#12</h2>
<p>This is a standard, which describes the syntax for the transfer of personal identity information, including private keys, certificates, miscellaneous secrets, and extensions. Applications, browsers, and machines that support PKCS#12 allow users to import, export, and exercise a single set of personal identity information through them.</p>
<p>There are four combinations of privacy modes and integrity modes. The privacy modes use encryption to protect personal information from exposure, and the integrity modes protect personal information from tampering. The privacy modes are:</p>
<ul>
<li>Public key privacy mode: Personal information is enveloped on the source platform by using a trusted encryption public key of a known destination platform. The envelope is opened with the corresponding private key.</li>
<li>Password privacy mode: Personal information is encrypted with a symmetric key derived from a user name and a privacy password. If password integrity mode is used as well, the privacy password and the integrity password may or may not be the same.</li>
</ul>
<p>The integrity modes are:</p>
<ul>
<li>Public key integrity mode: Integrity is guaranteed through a digital signature on the contents of the PFX Protocol Data Unit (PDU), which is produced using the source platforms private signature key. The signature is verified on the destination platform by using the corresponding public key.</li>
<li>Password integrity mode: Integrity is guaranteed through a Message Authentication Code (MAC) derived from a secret integrity password. If the password privacy mode is used as well, the privacy password and the integrity password may or may not be the same.</li>
</ul>
<h2 id="certificate-management-protocol-cmp"><a class="markdownIt-Anchor" href="#certificate-management-protocol-cmp"></a> Certificate Management Protocol (CMP)</h2>
<p>Certificate Management Protocol, also known as CMP, is required for on−line interactions between different PKI entities. These entities can either be users to whom the certificates are issued or the CA that is responsible for issuing the certificates to the users. A CMP can function between two CAs for cross−certification and can also function between a user and an issuing CA. CMP also supports the participation of an RA.</p>
<p>The CMP is composed of four components:</p>
<ul>
<li>Header: This component contains the sender and recipient names, time of message, and the cryptographic algorithm that is used. Apart from this information, the header contains some optional fields such as key identifier and transaction identifier. It also contains two more fields, one for extra processing information and another for user information other than the general information field.</li>
<li>Protection: This component typically contains a hashed message authentication code. It is used for securing the integrity of the header and body. This is an optional component.</li>
<li>Extra certificates: This component contains extra certificates. The subscriber might require these extra certificates.</li>
<li>Body: This component contains the message types.</li>
</ul>
<p>According to CMP, there are three major components of a certificate request message:</p>
<h3 id="certificate-request-message-format-crmf"><a class="markdownIt-Anchor" href="#certificate-request-message-format-crmf"></a> Certificate Request Message Format (CRMF)</h3>
<p>CRMF comprises a request identifier, a template that contains information about the certificate, and some optional controls. The template not only consists of all fields of a certificate but also contains certificate extensions.</p>
<h3 id="proof-of-possession-pop"><a class="markdownIt-Anchor" href="#proof-of-possession-pop"></a> Proof of possession (POP)</h3>
<p>Proof of Possession (POP) allows an entity that is to be associated with a certificate to prove that it possesses the private key that corresponds to the public key for which a certificate request has been made.</p>
<h3 id="registration-information"><a class="markdownIt-Anchor" href="#registration-information"></a> Registration information</h3>
<p>Registration information consists of some supplementary information such as an entities contact information and billing information, which are used while requesting a certificate.</p>
<h2 id="simple-certificate-enrollment-protocol"><a class="markdownIt-Anchor" href="#simple-certificate-enrollment-protocol"></a> Simple Certificate Enrollment Protocol</h2>
<p>Simple Certificate Enrollment Protocol (SCEP), which was developed by Cisco Systems, is a communication protocol that is used by PKI. This protocol was designed for issuing certificates to the various network devices (by using whatever technologies were available) in a secure and scalable environment.</p>
<p>According to SCEP, the entities should include the following information as a prerequisite for performing any PKI activity:</p>
<ul>
<li>The Fully Qualified Domain Name (FQDN) of the CA or the CAs IP address</li>
<li>The CA HTTP script path and the proxy information in case no direct connection to the server is available</li>
<li>The URL of the certificate and CRL queries</li>
</ul>
<p>A PKI transaction process starts with the generation of a key pair by an entity. To accomplish this, the entity can use any algorithm, such as RSA, that is supported by SCEP. Next, it obtains a CA public key using the standard HTTP Get operation after which the entity trusts the CA. After the identity of a CA has been established, the entity uses PKCS#10 to issue a certificate request and PKCS#7 to send the request to the CA. At this point the certificate enrollment process is initiated.</p>
<p>SCEP supports two enrollment processes:</p>
<ul>
<li>
<p>Manual: In manual authentication, the entity has to wait for the CAs request until the time the CA<br />
manually authenticates the identity of the entity.</p>
</li>
<li>
<p>Challenge password: In this type of enrollment, the entity provides a password to the CA. The CA<br />
authenticates the request based on this password.</p>
</li>
</ul>
<p>After establishing the authenticity of the entity, the CA issues the certificate.</p>
<p>Unfortunately, SCEP suffers from the following limitations:</p>
<ul>
<li>It does not define messages for revocation requests. It only supports messages for certificate requests.</li>
<li>It is very algorithm−specific and supports only RSA algorithm.</li>
<li>It can be used only for issuing certificates to network devices. Therefore, it is very specific to an application.</li>
</ul>
<h2 id="the-x-series-standards"><a class="markdownIt-Anchor" href="#the-x-series-standards"></a> The X Series Standards</h2>
<h3 id="x500"><a class="markdownIt-Anchor" href="#x500"></a> X.500</h3>
<p>The X.500 directory acts as the repository for certificates and for the Certificate Revocation List (CRL) into which all CAs have published their certificates. X.500 is a distributed global directory service. This means that the information in an organization can be stored locally in one or more databases referred to as Directory Service Agents (DSAs). DSAs are not specific to an organization, and one DSA can contain information about one or more organizations. Also, information about a large organization can be stored in more than one DSA. The DSA database maintains information in a hierarchy as per the X.500 information model so that information can be exchanged with other DSAs.</p>
<h3 id="x509"><a class="markdownIt-Anchor" href="#x509"></a> X.509</h3>
<p>X.509 is a PKI standard accepted globally by the companies involved in producing PKI products. The standard describes a hierarchical model for cross−certification of certificates from multiple CAs. X.509 certificates authenticate the identity of a person by using cryptographic mechanisms and store information and privilege about entities in the form of attributes in the certificate. The X.509 standard is supported by a number of protocols, including PEM, PKCS, S−HTTP, and SSL.</p>
<p>The X.509 certificates consist of the following information:</p>
<ul>
<li>Certificate Version: This describes the version of the certificate. The latest version is version 3.</li>
<li>Certificate serial number: The CA associates an integer with each certificate. It is unique for each certificate.</li>
<li>Signature Algorithm ID: The CA signs the certificate by using an algorithm and the public key of the certificate holder.</li>
<li>Issuer name: The issuer name identifies the CA that has signed and issued the certificate.</li>
<li>Validity Period: This contains two dates, the date from which the certificate validity period begins and the date when the certificate validity period ends.</li>
<li>Subject (user) name: The subject identifies the entity to which a private key is issued. This private key is associated with the public key stored in the subjects public key field.</li>
<li>Subject public key information: This field contains the public key along with the identifier of the algorithm with which the key is used.</li>
<li>Digital Signature: It contains the digital signature (signature with the private key) of the issuer.</li>
</ul>
<p>Although the information that is contained in the certificate identifies the entity, it does not guarantee the uniqueness of the subject and issuing CA name. There can be a situation when a single subject name can be associated with two entities. To help resolve such a situation, X.509 version 2 was introduced. X.509 version 2 is the next version of X.509, which, in addition to the preceding information, contains two new fields:</p>
<ul>
<li>Issuer unique identifier: This field contains a unique ID of the certificate issuer. Although the issuer name field also exists, this field ensures that the identifier is unique to the issuing CA and doesn’t identify some other CA.</li>
<li>Subject unique identifier: This field is similar to the issuer unique identifier. This field ensures the uniqueness of the subject of the certificate.</li>
</ul>
<p>X.509 introduced the concept of extensions. This is the latest version and was introduced in 1996. Extensions are fields that contain information in addition to the fields available in earlier versions. By using X.509 version 3 extensions, an organization can define certificate content, depending on their requirements.</p>
<ul>
<li>
<p>Alternate Name: An alternate name can be an e−mail address or any other name that is created by an entity or an organization to identify the entity in a user−friendly manner. In addition, the use of alternate names in X.509 version 3 certificates helps to identify the entity without needing to refer to the X.500 directory.</p>
</li>
<li>
<p>Subject Directory Attributes: This extension can contain the attribute values of an entity, in addition to the subjects name, as defined in the X.500 directory.</p>
</li>
<li>
<p>Certificate Policies: The CA can include the policies based on which the certificates are issued. These policies indicate the usability of a certificate under different conditions. An associated object identifier that is referred to as policy OID identifies each policy. Policy mapping is used in situations when more than one CA exists in a hierarchy. In order for the policy of one CA to be recognized by the entity of another CA, the policy of the first CA should be mapped with the policy of the second CA. The policy mapping extension facilitates the inclusion of policy mapping information.</p>
</li>
<li>
<p>Certification Path Constraint: The Certification Path Constraint extension was introduced to restrict the certification path in a trust model. A constraint is a kind of condition applied as a restriction to the certification path. To understand certification path constraint better, lets analyze the following example.</p>
</li>
</ul>
<h1 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h1>
<ol>
<li>Public Key Infrastructure: Implementation and Design</li>
</ol>
]]></content>
      <categories>
        <category>信息安全</category>
        <category>PKI</category>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>信息安全</tag>
        <tag>PKI</tag>
      </tags>
  </entry>
  <entry>
    <title>密码学-私钥加密</title>
    <url>/2021/01/09/%E5%AF%86%E7%A0%81%E5%AD%A6-%E7%A7%81%E9%92%A5%E5%8A%A0%E5%AF%86/</url>
    <content><![CDATA[<h1 id="computational-secure-encryption"><a class="markdownIt-Anchor" href="#computational-secure-encryption"></a> Computational secure encryption</h1>
<h2 id="perfect-secrecy"><a class="markdownIt-Anchor" href="#perfect-secrecy"></a> Perfect secrecy</h2>
<p><strong>Perfect secrecy</strong>: absolutely no information is leaked, even the eavesdropper has unlimited computational power(not practical in reality so it could be compromised in implementation).</p>
<p>Two attacks apply regardless of how the encryption scheme is constructed:</p>
<ol>
<li>
<p>Brute force attack: the adversary decrypt <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span> using all keys <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mi mathvariant="script">K</mi></mrow><annotation encoding="application/x-tex">k\in \mathcal{K}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.01445em;">K</span></span></span></span></span>.</p>
</li>
<li>
<p>Random attack: the adversary guess a uniform key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mi mathvariant="script">K</mi></mrow><annotation encoding="application/x-tex">k\in \mathcal{K}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.01445em;">K</span></span></span></span></span> and check to see whether <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>e</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>c</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>m</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">Dec_{k}(c_{i})=m_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> for all <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>, which has success probability <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="script">K</mi><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{|\mathcal{K}|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.365108em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.01445em;">K</span></span><span class="mord mtight">∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>.</p>
</li>
</ol>
<a id="more"></a>
<p><em>Introducting relaxations of perfect secrecy are essential for achieving practical encryption schemes!</em></p>
<h2 id="computational-secrecy"><a class="markdownIt-Anchor" href="#computational-secrecy"></a> Computational secrecy</h2>
<h3 id="definitions"><a class="markdownIt-Anchor" href="#definitions"></a> Definitions</h3>
<p><strong>Computational secrecy</strong>: incorporates two relaxations relative to theoretic definitions of security</p>
<ol>
<li>Security is only guaranteed against efficient adversaries that run for some feasible amount of time.</li>
<li>Adversaries can potentially succeed with very small probability.</li>
</ol>
<h3 id="approaches"><a class="markdownIt-Anchor" href="#approaches"></a> Approaches</h3>
<p>Two general approaches to realize computational secrecy:</p>
<ol>
<li>The concrete approach</li>
</ol>
<p>Definition: A scheme is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>t</mi><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(t, \epsilon)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span></span></span></span>-secure if any adversary running for time at most <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> succeeds in breaking the scheme with probability at most <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>.</p>
<p>In practice, precise concrete guarantees are <em>diffcult</em> to provide(The uncertainty of computing power, algorithm, etc).</p>
<ol start="2">
<li>The asymptotic approach</li>
</ol>
<p>Definition: A scheme is secure if any PPT(probabilistic polynomial-time, i.e. randomized algorithm running in time polynomial in <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>, which could be defined to be efficient) adversary <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> carrying out an attack of some formally specied type, and for every positive polynomial <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span>, there exists an integer <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span> such that when <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>&gt;</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">n&gt;N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span> the probability that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> succeeds in the attack is less than <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{p(n)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.365108em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> (i.e. negligible success probability).</p>
<p>Please note that <em>nothing is guaranteed for values <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>≤</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">n\le N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span></em>!</p>
<p>Example: an adversary running for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">n^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span> minutes can succeed in breaking the scheme with probability <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mn>40</mn><mo>−</mo><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">2^{40-n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span><span class="mord mtight">0</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span>. For <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>=</mo><mn>50</mn></mrow><annotation encoding="application/x-tex">n=50</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">0</span></span></span></span>, the adversary running for 3 months could only succeed with probability roughly <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mn>1000</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{1000}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>, while for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>≤</mo><mn>40</mn></mrow><annotation encoding="application/x-tex">n\le 40</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">0</span></span></span></span> the adversary can definitely succeed within 6 weeks.</p>
<p>Negligible function: a function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span> from natural numbers <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> to the non-negative real numbers is negligible if for every positive polynomial <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> there is an N such that for all integers <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>&gt;</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">n&gt;N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span> it holds that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mfrac><mn>1</mn><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">f(n)&lt;\frac{1}{p(n)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.365108em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>. E.g. <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mn>2</mn><mrow><mo>−</mo><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">f(n)=2^{-n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span>.</p>
<p>Closure properties for negligible functions:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi>e</mi><mi>g</mi><msub><mi>l</mi><mn>3</mn></msub><mo>=</mo><mi>n</mi><mi>e</mi><mi>g</mi><msub><mi>l</mi><mn>1</mn></msub><mo>+</mo><mi>n</mi><mi>e</mi><mi>g</mi><msub><mi>l</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">negl_{3}=negl_{1}+negl_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> is negligible.</li>
<li>For any positive polynomial <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>o</mi><mi>l</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">poly</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi>e</mi><mi>g</mi><msub><mi>l</mi><mn>4</mn></msub><mo>=</mo><mi>p</mi><mi>o</mi><mi>l</mi><mi>y</mi><mo>⋅</mo><mi>n</mi><mi>e</mi><mi>g</mi><msub><mi>l</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">negl_{4}=poly\cdot negl_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> is negligible.</li>
</ul>
<h2 id="proof-by-reduction"><a class="markdownIt-Anchor" href="#proof-by-reduction"></a> Proof by reduction</h2>
<p>To prove that a given encryption construction is computationally secure, we must rely on unproven assumptions (mostly <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi mathvariant="normal">≠</mi><mi>N</mi><mi>P</mi></mrow><annotation encoding="application/x-tex">P\ne NP</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span>) which is hard mathematically unless it’s information-theoretically secure.</p>
<p>Steps of proof by reduction:</p>
<ol>
<li>Assuming some efficient (i.e. probabilistic polynomial-time) adversary <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> attacking <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span> with succcess probability <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">ϵ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>.</li>
<li>Construct an efficient algorithm <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="script">A</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">\mathcal{A}&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">A</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>, called the “reduction”, that attempts to solve problem X using adversary <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> as a subroutine. <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="script">A</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">\mathcal{A}&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">A</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> knows nothing about <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> except that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> is attacking <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span>.<br />
Given some input instance x of problem X, algorithm <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="script">A</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">\mathcal{A}&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">A</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> will simulate for <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> an instance of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span> that:
<ul>
<li>The view of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> when run as a subroutine by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="script">A</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">\mathcal{A}&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">A</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> should be distributed identically to (or at least close to) the view of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> when it interacts with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span> itself.</li>
<li>If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> succeeds in breaking the instance of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span> that simulated by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="script">A</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">\mathcal{A}&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">A</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>, this should allow <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="script">A</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">\mathcal{A}&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">A</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> to solve the instance x it was given, at least with inverse polynomial probability <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mi>p</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">1/p(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>.</li>
</ul>
</li>
<li>1 &amp; 2 imply that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="script">A</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">\mathcal{A}&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">A</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> solves X with probability <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>p</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon(n)/p(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">ϵ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>. If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">ϵ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> is negligible, then neither is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>p</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon(n)/p(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">ϵ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>.</li>
<li>Given our assumption regarding X, we conclude that no efficient adversary <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> can succeed in breaking <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span> with non-negligible probability. i.e. <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span> is computational secure.</li>
</ol>
<h1 id="constructing-secure-encryption-schemes"><a class="markdownIt-Anchor" href="#constructing-secure-encryption-schemes"></a> Constructing secure encryption schemes</h1>
<h2 id="private-key-encryption-scheme"><a class="markdownIt-Anchor" href="#private-key-encryption-scheme"></a> Private-key encryption scheme</h2>
<p><strong>Private-key encryption scheme</strong>: A tuple of probability polynomial-time algorithms $(Gen, Enc, Dec) $ that</p>
<ol>
<li>
<p>The key-generation algorithm <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span> takes as input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> (i.e. the security parameter is fixed) and outputs a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>, i.e. <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>←</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k\leftarrow Gen(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>(emphasizing that Gen is a randomized algorithm). Without loss of generality, assuming that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>k</mi><mi mathvariant="normal">∣</mi><mo>≥</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">|k|\ge n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>.</p>
</li>
<li>
<p>The encryption algorithm <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Enc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span></span></span></span> takes a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> and a plaintext message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">m\in \{0, 1\}^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span> as input and outputs a ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span>. Since Enc might be randomized, we write it as <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>←</mo><mi>E</mi><mi>n</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c\leftarrow Enc_{k}(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span>.</p>
</li>
<li>
<p>The decryption algorithm <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Dec</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span></span></span></span> takes a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> and a ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span> as input and outputs a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> or an error. Assuming that Dec is deterministic, so we write <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><mi>D</mi><mi>e</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m=Dec_{k}(c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span>.</p>
</li>
</ol>
<p>It’s required that for every <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>, every <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>←</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k\leftarrow Gen(1^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> and every message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><msup><mrow><mn>0</mn><mo separator="true">,</mo><mn>1</mn></mrow><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">m\in {0, 1}^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.917476em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.723036em;"><span style="top:-3.09734em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>, it always holds that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>e</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>E</mi><mi>n</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">Dec_{k}(Enc_{k}(m))=m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>.</p>
<p>Note that the definition considers stateless schemes, in which each invocation of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Enc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Dec</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span></span></span></span> is independent of all prior invocations.</p>
<h2 id="basic-definition-of-security"><a class="markdownIt-Anchor" href="#basic-definition-of-security"></a> Basic definition of security</h2>
<h3 id="adversarial-indistinguishability-experiment"><a class="markdownIt-Anchor" href="#adversarial-indistinguishability-experiment"></a> Adversarial indistinguishability experiment</h3>
<p><strong>The adversarial indistinguishability experiment <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mi>i</mi><mi>v</mi><msubsup><mi>K</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow><mrow><mi>e</mi><mi>a</mi><mi>v</mi></mrow></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">PrivK_{\mathcal{A},\pi}^{eav}(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.161439em;vertical-align:-0.411439em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.424669em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.411439em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></strong>:</p>
<ol>
<li>
<p>The adversary <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> outputs a pair of messages <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>m</mi><mn>1</mn></msub><mo>∈</mo><mi mathvariant="script">M</mi></mrow><annotation encoding="application/x-tex">m_{0}, m_{1}\in \mathcal{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">M</span></span></span></span></span> with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>m</mi><mn>0</mn></msub><mi mathvariant="normal">∣</mi><mo>=</mo><mi mathvariant="normal">∣</mi><msub><mi>m</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|m_{0}|=|m_{1}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span> (no limitation with the length itself).</p>
</li>
<li>
<p>A key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> is generated by running <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gen(1^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>, and a uniform bit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">b\in \{0, 1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span> is chosen.<br />
Challenge ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>←</mo><mi>E</mi><mi>n</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>m</mi><mi>b</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c\leftarrow Enc_{k}(m_{b})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> is computed and given to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span>.</p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> outputs a bit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">b&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>.</p>
</li>
<li>
<p>The output of the experiment is 1 if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">b&#x27;=b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>, and 0 otherwise.<br />
We say <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mi>i</mi><mi>v</mi><msubsup><mi>K</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow><mrow><mi>e</mi><mi>a</mi><mi>v</mi></mrow></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">PrivK_{\mathcal{A},\pi}^{eav}(n)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.161439em;vertical-align:-0.411439em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.424669em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.411439em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> if the output of the experiment is 1 and in this case we say that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> succeeds.</p>
</li>
</ol>
<p>The modification in the definition of adversarial indistinguishability experiment <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mi>i</mi><mi>v</mi><msubsup><mi>K</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow><mrow><mi>e</mi><mi>a</mi><mi>v</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">PrivK_{\mathcal{A}, \pi}^{eav}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0947689999999999em;vertical-align:-0.411439em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.424669em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.411439em;"><span></span></span></span></span></span></span></span></span></span>:</p>
<ol>
<li>
<p>The adversaries running in polynomial time rather than unbounded running time.</p>
</li>
<li>
<p>The adversary might determine the encrypted message with probability negligibly better than <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>.</p>
</li>
<li>
<p>The experiment is parameterized with a security parameter <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>, for both running time and success probability.</p>
</li>
<li>
<p>The experiment requires two messages <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">m_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">m_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> with equal length.</p>
</li>
</ol>
<h3 id="eav-secure"><a class="markdownIt-Anchor" href="#eav-secure"></a> EAV-secure</h3>
<p><strong>EAV-secure</strong>: a private-key encryption scheme <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi><mo>=</mo><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>E</mi><mi>n</mi><mi>c</mi><mo separator="true">,</mo><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi=(Gen, Enc, Dec)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span> has indistinguishable encryptions in the presence of an eavesdropper if all probabilistic polynomial-time adversaries <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> there is a negligible function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">negl</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> such that, for all <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>,</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \cal at position 11: Pr[PrivK_{\̲c̲a̲l̲{A}, \pi}^{eav}…'>Pr[PrivK_{\cal{A}, \pi}^{eav}(n)]\le \frac{1}{2}+negl(n)
</p>
<p>An equivalent formulation:</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \cal at position 10: |Pr[out_{\̲c̲a̲l̲{A}}(PrivK_{\ca…'>|Pr[out_{\cal{A}}(PrivK_{\cal{A}, \pi}^{eav}(n,0))=1]-Pr[out_{\cal{A}}(PrivK_{\cal{A}, \pi}^{eav}(n,1))=1]|\le negl(n)
</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mi>i</mi><mi>v</mi><msubsup><mi>K</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow><mrow><mi>e</mi><mi>a</mi><mi>v</mi></mrow></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">PrivK_{\mathcal{A}, \pi}^{eav}(n,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.161439em;vertical-align:-0.411439em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.424669em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.411439em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span> means that the fixed bit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> is used in the experiment, i.e. the encrypted message is determined rather than random.</p>
<p>Note: the default notion of secure encryption does not require to hide the plaintext length, and all commonly used encryption schemes reveal the plaintext length, since it is impossible to support arbitrary-length messages while hiding information about the plaintext length. But sometimes leaking the plaintext length is problematic. E.g. simple numeric/text data, database searches, auto-suggestions, etc… <em>By padding them to pre-determined length before encrypting</em> could mitigate or prevent the leakage.</p>
<h2 id="pseudorandom-generators-stream-cipher"><a class="markdownIt-Anchor" href="#pseudorandom-generators-stream-cipher"></a> Pseudorandom generators &amp; Stream cipher</h2>
<p><strong>Pseudorandom generator</strong>: let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi></mrow><annotation encoding="application/x-tex">\ell</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">ℓ</span></span></span></span> (called the expansion factor) be a polynomial and let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span></span></span></span> be a deterministic polynomial-time algorithm such that for any <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> and any input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">s\in \{0, 1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>, the result <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G(s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span> is a string of length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\ell(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℓ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>. We say that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span></span></span></span> is a pseudorandom (“uniform looking”) generator if the following conditions hold:</p>
<ol>
<li>
<p>Expansion: for every <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> it holds that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">\ell(n)&gt;n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℓ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span></p>
</li>
<li>
<p>Pseudorandomness: for any PPT algorithm <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>, there is a negligible function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">negl</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> such that</p>
</li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><mi>D</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo stretchy="false">]</mo><mo>−</mo><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><mi>D</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo stretchy="false">]</mo><mi mathvariant="normal">∣</mi><mo>≤</mo><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">|Pr[D(G(s))=1]-Pr[D(r)=1]|\le negl(n)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></p>
<p>where the first probability is taken over uniform choice of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">s\in \{0, 1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and the randomness of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>, and the second probability is taken over uniform choice <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">r\in \{0, 1\}^{\ell(n)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> and the randomness of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>.</p>
<p>The seed for a pseudorandom generator is analogous to the cryptographic key used by an encryption scheme, so the seed must be chosen uniformly and be kept secret from any adversary. And <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span> must be long enough to make it infeasible to numerate all possible seeds.</p>
<p><strong>Stream ciphers</strong> are used to instantiate pseudorandom generators. The pseudorandom output bits are produced gradually and on demand, so the application can request exactly as many pseudorandom bits as needed, which improves efficiency and flexibility.</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105000711.png" alt="image-20201019205856414" style="zoom: 80%;" />
<h2 id="pseudorandom-pad"><a class="markdownIt-Anchor" href="#pseudorandom-pad"></a> Pseudorandom pad</h2>
<h3 id="definition"><a class="markdownIt-Anchor" href="#definition"></a> Definition</h3>
<p><strong>Pseudorandom pad</strong>: Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span></span></span></span> be a pseudorandom generator with expansion factor <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi></mrow><annotation encoding="application/x-tex">\ell</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">ℓ</span></span></span></span> (please note that the expansion factor is fixed in this definition, so do not confuse with the definition of stream cipher above). Define a private-key encryption scheme for messages of length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi></mrow><annotation encoding="application/x-tex">\ell</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">ℓ</span></span></span></span> as follows:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span>: on input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>, choose uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">k\in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and output it as the key. (<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>G</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|G(k)|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mord">∣</span></span></span></span> could be much larger than <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> so that’s why we use it).</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Enc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span></span></span></span>: on input key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">k\in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">m\in \{0,1\}^{\ell(n)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>, output the ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>:</mo><mo>=</mo><mi>G</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>X</mi><mi>O</mi><mi>R</mi><mtext> </mtext><mi>m</mi></mrow><annotation encoding="application/x-tex">c:=G(k)~XOR~m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Dec</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span></span></span></span>: on input key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">k\in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and a ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">c\in \{0,1\}^{\ell(n)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>, output the message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>:</mo><mo>=</mo><mi>G</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>X</mi><mi>O</mi><mi>R</mi><mtext> </mtext><mi>c</mi></mrow><annotation encoding="application/x-tex">m:=G(k)~XOR~c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace nobreak"> </span><span class="mord mathdefault">c</span></span></span></span>.</li>
</ul>
<p>If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span></span></span></span> is a pseudorandom generator, then the above construction is a fixed-length private-key encryption scheme that has indistinguishable encryptions in the presence of an <em>eavesdropper</em>.</p>
<h3 id="proof-by-reduction-2"><a class="markdownIt-Anchor" href="#proof-by-reduction-2"></a> Proof by reduction</h3>
<p>let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span> denote the construction of pseudorandom pad. <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> satisfies the definition of EAV-secure. i.e. for any probabilistic polynomial-time adversary <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> there is a negligible function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">negl</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> satisfies: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><mi>P</mi><mi>r</mi><mi>i</mi><mi>v</mi><msubsup><mi>K</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow><mrow><mi>e</mi><mi>a</mi><mi>v</mi></mrow></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo stretchy="false">]</mo><mo>≤</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>+</mo><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Pr[PrivK_{\mathcal{A},\pi}^{eav}(n)=1]\le \frac{1}{2}+negl(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.161439em;vertical-align:-0.411439em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.424669em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.411439em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>.</p>
<p>Constructing a distinguisher <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> based on <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span>: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> is given a string <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">w\in \{0, 1\}^{\ell(n)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> as input.</p>
<ul>
<li>Run <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> to obtain a pair of messages <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>m</mi><mn>1</mn></msub><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">m_{0}, m_{1}\in \{0, 1\}^{\ell(n)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>.</li>
<li>Choose a uniform bit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">b\in \{0, 1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span>. Set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>:</mo><mo>=</mo><mi>w</mi><mtext> </mtext><mi>X</mi><mi>O</mi><mi>R</mi><mtext> </mtext><msub><mi>m</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">c:=w~XOR~m_b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.</li>
<li>Give <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span> to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> and obtain output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">b&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>. Output 1 if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">b&#x27;=b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>, and output 0 otherwise.</li>
</ul>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi mathvariant="normal">Π</mi><mo>~</mo></mover><mo>=</mo><mo stretchy="false">(</mo><mover accent="true"><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><mo>~</mo></mover><mo separator="true">,</mo><mover accent="true"><mrow><mi>E</mi><mi>n</mi><mi>c</mi></mrow><mo>~</mo></mover><mo separator="true">,</mo><mover accent="true"><mrow><mi>D</mi><mi>e</mi><mi>c</mi></mrow><mo>~</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tilde{\Pi}=(\tilde{Gen},\tilde{Enc},\tilde{Dec})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9201899999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Π</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">~</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1701899999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">~</span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">~</span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">~</span></span></span></span></span></span><span class="mclose">)</span></span></span></span> denote the exactly one-time pad encryption scheme. Perfect secrecy of one-time pad implies that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><mi>P</mi><mi>r</mi><mi>i</mi><mi>v</mi><msubsup><mi>K</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mover accent="true"><mi>π</mi><mo>~</mo></mover></mrow><mrow><mi>e</mi><mi>a</mi><mi>v</mi></mrow></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">Pr[PrivK_{\mathcal{A},\tilde{\pi}}^{eav}(n)=1]=\frac{1}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.161439em;vertical-align:-0.411439em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.424669em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span><span style="top:-3.0500000000000003em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mtight">~</span></span></span></span></span></span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.411439em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>.</p>
<ul>
<li>
<p>If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span> is chosen uniformly from <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\{0,1\}^{\ell(n)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>, then the view of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> when run as a subroutine by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> is distributed identically to the view of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> in experiment <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mi>i</mi><mi>v</mi><msubsup><mi>K</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mover accent="true"><mi>π</mi><mo>~</mo></mover></mrow><mrow><mi>e</mi><mi>a</mi><mi>v</mi></mrow></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">PrivK_{\mathcal{A},\tilde{\pi}}^{eav}(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.161439em;vertical-align:-0.411439em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.424669em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span><span style="top:-3.0500000000000003em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mtight">~</span></span></span></span></span></span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.411439em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>. So we have</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \cal at position 56: …)=1]=Pr[PrivK_{\̲c̲a̲l̲{A},\tilde{\pi}…'>		Pr_{w\leftarrow \{0,1\}}^{\ell(n)}[D(w)=1]=Pr[PrivK_{\cal{A},\tilde{\pi}}^{eav}(n)]=\frac{1}{2}
</p>
</li>
<li>
<p>If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span> is generated by choosing uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">k\in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and then setting <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mo>:</mo><mo>=</mo><mi>G</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">w:=G(k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>, then the view of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> when run as a subroutine by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> is distributed identically to the view of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> in experiment <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mi>i</mi><mi>v</mi><msubsup><mi>K</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mover accent="true"><mi>π</mi><mo>~</mo></mover></mrow><mrow><mi>e</mi><mi>a</mi><mi>v</mi></mrow></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">PrivK_{\mathcal{A},\tilde{\pi}}^{eav}(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.161439em;vertical-align:-0.411439em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.424669em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span><span style="top:-3.0500000000000003em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mtight">~</span></span></span></span></span></span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.411439em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>. Thus,</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \cal at position 53: …)=1]=Pr[PrivK_{\̲c̲a̲l̲{A},\pi}^{eav}(…'>		Pr_{k\leftarrow \{0,1\}}^{n}[D(G(k))=1]=Pr[PrivK_{\cal{A},\pi}^{eav}(n)]
</p>
</li>
</ul>
<p>Since <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span></span></span></span> is a pseudorandom generator, there is a negligible function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">negl</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> such that</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>P</mi><msubsup><mi>r</mi><mrow><mi>w</mi><mo>←</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><mrow><mi mathvariant="normal">ℓ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msubsup><mo stretchy="false">[</mo><mi>D</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo stretchy="false">]</mo><mo>−</mo><mi>P</mi><msubsup><mi>r</mi><mrow><mi>k</mi><mo>←</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><mi>n</mi></msubsup><mo stretchy="false">[</mo><mi>D</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo stretchy="false">]</mo><mi mathvariant="normal">∣</mi><mo>≤</mo><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">	|Pr_{w\leftarrow \{0,1\}}^{\ell(n)}[D(w)=1]-Pr_{k\leftarrow \{0,1\}}^{n}[D(G(k))=1]|\le negl(n)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5599999999999998em;vertical-align:-0.5151999999999999em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3598em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mrel mtight">←</span><span class="mopen mtight">{</span><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span><span class="mclose mtight">}</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5151999999999999em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1969999999999998em;vertical-align:-0.4469999999999999em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-2.428em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">←</span><span class="mopen mtight">{</span><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span><span class="mclose mtight">}</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></p>
<p>Combining the above three equations, we can get <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>−</mo><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><mi>P</mi><mi>r</mi><mi>i</mi><mi>v</mi><msubsup><mi>K</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow><mrow><mi>e</mi><mi>a</mi><mi>v</mi></mrow></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mi mathvariant="normal">∣</mi><mo>≤</mo><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">|\frac{1}{2}-Pr[PrivK_{\mathcal{A},\pi}^{eav}(n)]|\le negl(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord">∣</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.161439em;vertical-align:-0.411439em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.424669em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.411439em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mclose">]</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>, i.e. <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><mi>P</mi><mi>r</mi><mi>i</mi><mi>v</mi><msubsup><mi>K</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow><mrow><mi>e</mi><mi>a</mi><mi>v</mi></mrow></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>≤</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>+</mo><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Pr[PrivK_{\mathcal{A},\pi}^{eav}(n)]\le \frac{1}{2}+negl(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.161439em;vertical-align:-0.411439em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.424669em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.411439em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>.</p>
<h1 id="cpa-secure-encryption-schemes"><a class="markdownIt-Anchor" href="#cpa-secure-encryption-schemes"></a> CPA-secure encryption schemes</h1>
<h2 id="security-for-multiple-encryptions"><a class="markdownIt-Anchor" href="#security-for-multiple-encryptions"></a> Security for multiple encryptions</h2>
<p><strong>The multiple-message eavesdropping experiment <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mi>i</mi><mi>v</mi><msubsup><mi>K</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow><mrow><mi>m</mi><mi>u</mi><mi>l</mi><mi>t</mi><mi>i</mi></mrow></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">PrivK_{\mathcal{A},\pi}^{multi}(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2605469999999999em;vertical-align:-0.411439em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.424669em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.411439em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>:</strong></p>
<ol>
<li>The adversary <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> is given input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>, and outputs a pair of equal-length lists of messages <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><msub><mi>M</mi><mn>0</mn></msub><mo stretchy="true">→</mo></mover><mo>=</mo><mo stretchy="false">(</mo><msub><mi>m</mi><mrow><mn>0</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>m</mi><mrow><mn>0</mn><mo separator="true">,</mo><mi>t</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\overrightarrow{M_0}=(m_{0,1},\dots,m_{0,t})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.35533em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><msub><mi>M</mi><mn>1</mn></msub><mo stretchy="true">→</mo></mover><mo>=</mo><mo stretchy="false">(</mo><msub><mi>m</mi><mrow><mn>1</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>m</mi><mrow><mn>1</mn><mo separator="true">,</mo><mi>t</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\overrightarrow{M_1}=(m_{1,1},\dots,m_{1,t})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.35533em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>, with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>m</mi><mrow><mn>0</mn><mo separator="true">,</mo><mi>i</mi></mrow></msub><mi mathvariant="normal">∣</mi><mo>=</mo><mi mathvariant="normal">∣</mi><msub><mi>m</mi><mrow><mn>1</mn><mo separator="true">,</mo><mi>i</mi></mrow></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|m_{0,i}|=|m_{1,i}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span> for all <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>.</li>
<li>A key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> is generated by running <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gen(1^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>, and a uniform big <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">b\in \{0,1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span> is chosen. For all <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>, the ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub><mo>←</mo><mi>E</mi><mi>n</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>m</mi><mrow><mi>b</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c_{i}\leftarrow Enc_{k}(m_{b,i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> is computed and the list <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>C</mi><mo stretchy="true">→</mo></mover><mo>=</mo><mo stretchy="false">(</mo><msub><mi>c</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>c</mi><mi>t</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\overrightarrow{C}=(c_{1},\dots,c_{t})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20533em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> is given to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> outputs a bit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">b&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>.</li>
<li>The output of the experiment is defined to be 1 if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">b&#x27;=b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>, and 0 otherwise.</li>
</ol>
<p>A private-key encryption scheme <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi><mo>=</mo><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>E</mi><mi>n</mi><mi>c</mi><mo separator="true">,</mo><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi=(Gen,Enc,Dec)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span> has indistinguishable multiple encryptions in the presense of an eavesdropper if for all probabilistic polynomial-time adversaries <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> there is a negligible function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">negl</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> such that</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \cal at position 11: Pr[PrivK_{\̲c̲a̲l̲{A},\pi}^{multi…'>Pr[PrivK_{\cal{A},\pi}^{multi}(n)=1]\le \frac{1}{2}+negl(n)
</p>
<p><em>There is a private-key encryption scheme that has indistinguishable encryptions in the presence of an eavesdropper, but not indistinguishable multiple encryptions in the presence of an eavesdropper.</em> (Consider <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> attacking one-time pad encryption with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><msub><mi>M</mi><mn>0</mn></msub><mo stretchy="true">→</mo></mover><mo>=</mo><mo stretchy="false">(</mo><msup><mn>0</mn><mi mathvariant="normal">ℓ</mi></msup><mo separator="true">,</mo><msup><mn>0</mn><mi mathvariant="normal">ℓ</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\overrightarrow{M_{0}}=(0^{\ell},0^{\ell})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.35533em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><msub><mi>M</mi><mn>1</mn></msub><mo stretchy="true">→</mo></mover><mo>=</mo><mo stretchy="false">(</mo><msup><mn>0</mn><mi mathvariant="normal">ℓ</mi></msup><mo separator="true">,</mo><msup><mn>1</mn><mi mathvariant="normal">ℓ</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\overrightarrow{M_{1}}=(0^{\ell},1^{\ell})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.35533em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>)</p>
<p><strong>Necessity of probabilistic encryption</strong>: if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span> is a stateless encryption scheme in which <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Enc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span></span></span></span> is a deterministic function of the key and the message, then <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span> cannot have indistinguishable multiple encryptions in the presence of an eavesdropper. i.e. the encryption should be randomized for encrypting multiple messages.</p>
<h2 id="chosen-plaintext-attacks-and-cpa-security"><a class="markdownIt-Anchor" href="#chosen-plaintext-attacks-and-cpa-security"></a> Chosen-Plaintext Attacks and CPA security</h2>
<h3 id="cpa-indistinguishability-experiment"><a class="markdownIt-Anchor" href="#cpa-indistinguishability-experiment"></a> CPA indistinguishability experiment</h3>
<p>The CPA(Chosen-Plaintest Attacks) indistinguishability experiment <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mi>i</mi><mi>v</mi><msubsup><mi>K</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow><mrow><mi>c</mi><mi>p</mi><mi>a</mi></mrow></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">PrivK_{\mathcal{A},\pi}^{cpa}(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.211939em;vertical-align:-0.429639em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.4064690000000004em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.429639em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>:</p>
<ol>
<li>A key is generated by running <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gen(1^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>.</li>
<li>The adversary <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> is given input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> and oracle access to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><msub><mi>c</mi><mi>K</mi></msub><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Enc_{K}(\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span>, and outputs a pair of messages <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>m</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">m_{0}, m_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> of the same length.</li>
<li>A uniform bit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">b\in \{0,1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span> is chosen, and then a ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>←</mo><mi>E</mi><mi>n</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>m</mi><mi>b</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c\leftarrow Enc_{k}(m_{b})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> is computed and given to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span>.</li>
<li>The adversary <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> continues to have oracle access to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><msub><mi>c</mi><mi>K</mi></msub><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Enc_{K}(\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span>, and outputs a bit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">b&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>.</li>
<li>The output of the experiment is defined to be 1 if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">b&#x27;=b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>, and 0 otherwise. The former case means that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> succeeds.</li>
</ol>
<p>A private-key encryption scheme <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi><mo>=</mo><mo stretchy="false">(</mo><mi>G</mi><mi>e</mi><mi>n</mi><mo separator="true">,</mo><mi>E</mi><mi>n</mi><mi>c</mi><mo separator="true">,</mo><mi>D</mi><mi>e</mi><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Pi=(Gen, Enc, Dec)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mclose">)</span></span></span></span> has indistinguishable encryptions under a chosen-plaintext attack, or is CPA-secure, is for all probabilistic polynomial-time adversaries <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> there is a negligible function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">negl</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> such that</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \cal at position 11: Pr[PrivK_{\̲c̲a̲l̲{A},\pi}^{cpa}(…'>Pr[PrivK_{\cal{A},\pi}^{cpa}(n)=1]\le \frac{1}{2}+negl(n)
</p>
<h3 id="lr-oracle-experiment"><a class="markdownIt-Anchor" href="#lr-oracle-experiment"></a> LR-oracle experiment</h3>
<p>The above definition of CPA-secure can be extended to the case of multiple encryptions by using lists of plaintexts.</p>
<p>The LR-oracle(left-or-right) experiment <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mi>i</mi><mi>v</mi><msubsup><mi>K</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow><mrow><mi>L</mi><mi>R</mi><mo>−</mo><mi>c</mi><mi>p</mi><mi>a</mi></mrow></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">PrivK_{\mathcal{A},\pi}^{LR-cpa}(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.388878em;vertical-align:-0.429639em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.959239em;"><span style="top:-2.4064690000000004em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.429639em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>:</p>
<ol>
<li>A key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> is generated by running <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gen(1^{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>.</li>
<li>A uniform bit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">b\in \{0,1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span> is chosen.</li>
<li>The adversary <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> is given input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> and oracle access to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><msub><mi>R</mi><mrow><mi>k</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>m</mi><mrow><mn>0</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>m</mi><mrow><mn>1</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>L</mi><msub><mi>R</mi><mrow><mi>k</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>m</mi><mrow><mn>0</mn><mo separator="true">,</mo><mi>t</mi></mrow></msub><mo separator="true">,</mo><msub><mi>m</mi><mrow><mn>1</mn><mo separator="true">,</mo><mi>t</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">LR_{k,b}(m_{0,1},m_{1,1}),\dots,LR_{k,b}(m_{0,t},m_{1,t})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">L</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> (The function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><msub><mi>R</mi><mrow><mi>k</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><mo>⋅</mo><mo separator="true">,</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">LR_{k,b}(\cdot,\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">L</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">⋅</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span> randomly choose one of the two input texts and return the encrypted text).</li>
<li>The adversary <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> outputs a bit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">b&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>.</li>
<li>The output of the experiment is defined to be 1 if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">b&#x27;=b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> and 0 otherwise. In the former case we say that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> succeeds.</li>
</ol>
<p>Private-key encryption scheme <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span> has indistinguishable multiple encryptions under a chosen-plaintext attack, or is CPA-secure for multiple encryptions, if for all probabilistic polynomial-time adversaries <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> there is a negligible function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">negl</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> such that</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \cal at position 11: Pr[PrivK_{\̲c̲a̲l̲{A},\pi}^{LR-cp…'>Pr[PrivK_{\cal{A},\pi}^{LR-cpa}(n)=1]\le \frac{1}{2}+negl(n)
</p>
<p><em>Any private-key encryption scheme that is CPA-secure is also CPA-secure for multiple encryptions.</em>(Different from eavesdropping adversaries!)</p>
<h2 id="pseudorandom-functions"><a class="markdownIt-Anchor" href="#pseudorandom-functions"></a> Pseudorandom functions</h2>
<h3 id="definition-2"><a class="markdownIt-Anchor" href="#definition-2"></a> Definition</h3>
<p>Define a keyed function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo><mo>:</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup><mo>×</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup><mo>→</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">F(k,x):\{0,1\}^{*}\times \{0,1\}^{*}\rightarrow \{0,1\}^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span></span></span></span> to be a two-input function, where the first input is called the key and denoted <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>. When the key is fixed, it becomes a single-input function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F_{k}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>.<br />
If there is a polynomial-time algorithm to compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>, we say <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> is efficient. And <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> is length-preserving if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">ℓ</mi><mrow><mi>k</mi><mi>e</mi><mi>y</mi></mrow></msub><mo>=</mo><msub><mi mathvariant="normal">ℓ</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub><mo>=</mo><msub><mi mathvariant="normal">ℓ</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub><mo>=</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">\ell_{key}=\ell_{in}=\ell_{out}=n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord">ℓ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">ℓ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">ℓ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>.</p>
<p><strong>Pseudorandom functions</strong>: let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo><mo>:</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup><mo>×</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup><mo>→</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">F(k,x):\{0,1\}^{*}\times \{0,1\}^{*}\rightarrow \{0,1\}^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span></span></span></span> be an efficient, length-preserving, keyed function. F is a pseudorandom function if for all probabilistic polynomial-time distinguishers <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>, there is a negligible function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">negl</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> such that:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><msup><mi>D</mi><mrow><msub><mi>F</mi><mi>K</mi></msub><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo stretchy="false">]</mo><mo>−</mo><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><msup><mi>D</mi><mrow><mi>f</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo stretchy="false">]</mo><mi mathvariant="normal">∣</mi><mo>≤</mo><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">|Pr[D^{F_{K}(\cdot)}(1^{n})=1]-Pr[D^{f(\cdot)}(1^{n})=1]|\le negl(n)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight">⋅</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mtight">⋅</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></p>
<p>where the first probability is taken over uniform choice of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">k\in \{0,1\}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> and the randomness of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>, and the second probability is taken over uniform choice of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>∈</mo><mi>F</mi><mi>u</mi><mi>n</mi><msub><mi>c</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">f\in Func_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and the randomness of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>.</p>
<p>The set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>u</mi><mi>n</mi><msub><mi>c</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">Func_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> contains all the functions that mapping n-bit strings to n-bit strings. How large is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>u</mi><mi>n</mi><msub><mi>c</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">Func_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>?</p>
<ul>
<li>View the function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>∈</mo><mi>F</mi><mi>u</mi><mi>n</mi><msub><mi>c</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">f\in Func_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> as a large look-up table.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span> has <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> rows(all possible n-bit strings) with each row contains a n-bit string(here the string in each row could be same). So each <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span> can be viewed as a string with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>⋅</mo><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">n\cdot 2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> bits.</li>
<li>For a string with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>⋅</mo><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">n\cdot 2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> bits, the number of string with this length is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mi>n</mi><mo>⋅</mo><msup><mn>2</mn><mi>n</mi></msup></mrow></msup></mrow><annotation encoding="application/x-tex">2^{n\cdot 2^n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.87998em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.87998em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>(each bit could be 0 or 1).</li>
<li>So we conclude that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>F</mi><mi>u</mi><mi>n</mi><msub><mi>c</mi><mi>n</mi></msub><mi mathvariant="normal">∣</mi><mo>=</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>⋅</mo><msup><mn>2</mn><mi>n</mi></msup></mrow></msup></mrow><annotation encoding="application/x-tex">|Func_{n}|=2^{n\cdot 2^n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">u</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.87998em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.87998em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">⋅</span><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</li>
</ul>
<h3 id="pseudorandom-permutations"><a class="markdownIt-Anchor" href="#pseudorandom-permutations"></a> Pseudorandom permutations</h3>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>e</mi><mi>r</mi><msub><mi>m</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">Perm_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> denotes the set of all permutations(i.e. bijections) on <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\{0,1\}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span>. For any <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>∈</mo><mi>P</mi><mi>e</mi><mi>r</mi><msub><mi>m</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">f\in Perm_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, we can still view it as a look-up table, but <em>with a constraint that the entries in any two distinct rows must be different</em>. There are <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> different choices for the first row; then the second row is left with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{n}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> choices, and so on. So we can get <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>P</mi><mi>e</mi><mi>r</mi><msub><mi>m</mi><mi>n</mi></msub><mi mathvariant="normal">∣</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">!</mo></mrow><annotation encoding="application/x-tex">|Perm_{n}|=(2^{n})!</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">!</span></span></span></span></p>
<p>Keyed permutation: let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> be a keyed funciton. If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">ℓ</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub><mo>=</mo><msub><mi mathvariant="normal">ℓ</mi><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\ell_{in}=\ell_{out}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">ℓ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">ℓ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, and for all <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><msub><mi mathvariant="normal">ℓ</mi><mrow><mi>k</mi><mi>e</mi><mi>y</mi></mrow></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k\in \ell_{key}(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord">ℓ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> the function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>k</mi></msub><mo>:</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mrow><msub><mi mathvariant="normal">ℓ</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup><mo>→</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mrow><msub><mi mathvariant="normal">ℓ</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">F_{k}:\{0,1\}^{\ell_{in}(n)}\rightarrow \{0,1\}^{\ell_{in}(n)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> is a permutation, we call <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> a keyed permutation. <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">ℓ</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\ell_{in}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">ℓ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> is the block length of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>. If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">ℓ</mi><mrow><mi>k</mi><mi>e</mi><mi>y</mi></mrow></msub><mo>=</mo><msub><mi mathvariant="normal">ℓ</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub><mo>=</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">\ell_{key}=\ell_{in}=n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord">ℓ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">ℓ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>, we say <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> is length-preserving. And a keyed permutation is efficient if there is a polynomial-time algorithm for computing <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><msub><mi>F</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y=F_{k}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span> as well as a polynomial-time algorithm for computing <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><msubsup><mi>F</mi><mi>k</mi><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x=F_{k}^{-1}(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1555469999999999em;vertical-align:-0.3013079999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.3986920000000005em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013079999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>.</p>
<p>If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> is a pseudorandom permutation and additionally <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">ℓ</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub><mo>≥</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">\ell_{in}\ge n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">ℓ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>, then <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> is also a pseudorandom function.</p>
<p><strong>Pseudorandom permutations</strong>: Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo>:</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup><mo>×</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup><mo>→</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">F:\{0,1\}^{*}\times \{0,1\}^{*}\rightarrow \{0,1\}^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span></span></span></span> be an efficient, length-preserving, keyed permutation. <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> is a strong pseudorandom permutation if for all probabilistic polynomial-time distinguishers <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> there exists a negligible function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">negl</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> such that:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><msup><mi>D</mi><mrow><msub><mi>F</mi><mi>K</mi></msub><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo><mo separator="true">,</mo><msubsup><mi>F</mi><mi>K</mi><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo stretchy="false">]</mo><mo>−</mo><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><msup><mi>D</mi><mrow><mi>f</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo><mo separator="true">,</mo><msup><mi>f</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo stretchy="false">]</mo><mi mathvariant="normal">∣</mi><mo>≤</mo><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">|Pr[D^{F_{K}(\cdot),F_{K}^{-1}(\cdot)}(1^{n})=1]-Pr[D^{f(\cdot),f^{-1}(\cdot)}(1^{n})=1]|\le negl(n)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2869199999999998em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0369199999999998em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight">⋅</span><span class="mclose mtight">)</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.187385714285714em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.31261428571428573em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight">⋅</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2869199999999998em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0369199999999998em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mtight">⋅</span><span class="mclose mtight">)</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight">⋅</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></p>
<p>where the first probability is taken over uniform choice of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">k\in \{0,1\}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> and the randomness of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>, and the second probability is taken over uniform choice of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>∈</mo><mi>P</mi><mi>e</mi><mi>r</mi><msub><mi>m</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">f\in Perm_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and the randomness of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>.</p>
<h3 id="pseudorandom-generator-using-pseudorandom-functions"><a class="markdownIt-Anchor" href="#pseudorandom-generator-using-pseudorandom-functions"></a> Pseudorandom generator using pseudorandom functions</h3>
<p>Once we get a pseudorandom function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>, it becomes easy to construct a pseudorandom generator <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mover><mo><mo>=</mo></mo><mrow><mi>d</mi><mi>e</mi><mi>f</mi></mrow></mover><msub><mi>F</mi><mi>s</mi></msub><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>F</mi><mi>s</mi></msub><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>⋯</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>F</mi><mi>s</mi></msub><mo stretchy="false">(</mo><mi mathvariant="normal">ℓ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G(s)\overset{def}{=}F_{s}(1)||F_{s}(2)||\cdots ||F_{s}(\ell)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.450086em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.200086em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">=</span></span></span><span style="top:-3.613978em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">ℓ</span><span class="mclose">)</span></span></span></span> for any desired <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi></mrow><annotation encoding="application/x-tex">\ell</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">ℓ</span></span></span></span>.</p>
<p>We can also use pseudorandom function to construct a stream cipher <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>I</mi><mi>n</mi><mi>i</mi><mi>t</mi><mo separator="true">,</mo><mi>G</mi><mi>e</mi><mi>t</mi><mi>B</mi><mi>i</mi><mi>t</mi><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(Init, GetBits)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault">n</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span> where each call to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>t</mi><mi>B</mi><mi>i</mi><mi>t</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">GetBits</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span></span></span></span> outputs <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> bits as follows:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mi>n</mi><mi>i</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">Init</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault">n</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span></span></span></span>: on input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">s\in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mi>V</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">IV\in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>, set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><msub><mi>t</mi><mn>0</mn></msub><mo>:</mo><mo>=</mo><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>I</mi><mi>V</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">st_{0}:=(s,IV)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">s</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mclose">)</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>t</mi><mi>B</mi><mi>i</mi><mi>t</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">GetBits</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span></span></span></span>: on input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><msub><mi>t</mi><mi>i</mi></msub><mo>:</mo><mo>=</mo><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>I</mi><mi>V</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">st_{i}:=(s,IV)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">s</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mclose">)</span></span></span></span>, compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><msup><mi>V</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>I</mi><mi>V</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">IV&#x27;=IV+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> and set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>:</mo><mo>=</mo><msub><mi>F</mi><mi>s</mi></msub><mo stretchy="false">(</mo><mi>I</mi><msup><mi>V</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y:=F_{s}(IV&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><msub><mi>t</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>:</mo><mo>=</mo><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>I</mi><msup><mi>V</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">st_{i+1}:=(s,IV&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8234109999999999em;vertical-align:-0.208331em;"></span><span class="mord mathdefault">s</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>. Output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><mi>s</mi><msub><mi>t</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(y,st_{i+1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>.</li>
</ul>
<h2 id="cpa-secure-encryption"><a class="markdownIt-Anchor" href="#cpa-secure-encryption"></a> CPA-secure encryption</h2>
<h3 id="definition-3"><a class="markdownIt-Anchor" href="#definition-3"></a> Definition</h3>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> be a pseudorandom function, then a CPA-secure private-key encryption scheme for messages of length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> can be constructed as follows:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">Gen</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span></span></span></span>: on input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>, choose uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">k\in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and output it.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Enc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">c</span></span></span></span>: on input a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">k\in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">m\in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>, choose uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">r\in\{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and output the ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>:</mo><mo>=</mo><mo>&lt;</mo><mi>r</mi><mo separator="true">,</mo><msub><mi>F</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>X</mi><mi>O</mi><mi>R</mi><mtext> </mtext><mi>m</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">c:=&lt;r,F_{k}(r)~XOR~m&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>e</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">Dec</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span></span></span></span>: on input a key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">k\in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and a ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>=</mo><mo>&lt;</mo><mi>r</mi><mo separator="true">,</mo><mi>s</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">c=&lt;r,s&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>, output the plaintext message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>:</mo><mo>=</mo><msub><mi>F</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>X</mi><mi>O</mi><mi>R</mi><mtext> </mtext><mi>s</mi></mrow><annotation encoding="application/x-tex">m:=F_{k}(r)~XOR~s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace nobreak"> </span><span class="mord mathdefault">s</span></span></span></span>.</li>
</ul>
<h3 id="proof-by-reduction-3"><a class="markdownIt-Anchor" href="#proof-by-reduction-3"></a> Proof by reduction</h3>
<p><strong>Step 1:</strong></p>
<p>Construct a distinguisher <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> that is given input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and access to an oracle <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">O</mi></mrow><annotation encoding="application/x-tex">\mathcal{O}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>:</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup><mo>→</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">:\{0,1\}^{n}\rightarrow \{0,1\}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span>.</p>
<ol>
<li>Run <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(1^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>. Whenever <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> queries its encryption oracle on a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">m\in \{0,1\}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span>, 1) choose a uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">r\in \{0,1\}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span>; 2) query <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">O</mi></mrow><annotation encoding="application/x-tex">\mathcal{O}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span> and get response <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>; 3) return the ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>r</mi><mo separator="true">,</mo><mi>y</mi><mtext> </mtext><mi>X</mi><mi>O</mi><mi>R</mi><mtext> </mtext><mi>m</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;r,y~XOR~m&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span>.</li>
<li>When <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> outputs messages <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>m</mi><mn>1</mn></msub><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">m_{0},m_{1}\in \{0,1\}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span>, choose a uniform bit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">b\in \{0,1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span> and then 1) choose uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">r\in \{0,1\}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span>; 2) query <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">O</mi></mrow><annotation encoding="application/x-tex">\mathcal{O}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span> and obtain response <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>; 3) return the challenge ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>r</mi><mo separator="true">,</mo><mi>y</mi><mtext> </mtext><mi>X</mi><mi>O</mi><mi>R</mi><mtext> </mtext><msub><mi>m</mi><mi>b</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;r,y~XOR~m_{b}&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span>.</li>
<li>Continue answering encryption-oracle queries of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> as before until <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> outputs a bit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">b&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>. Output 1 if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">b&#x27;=b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> and 0 otherwise.</li>
</ol>
<p>(a) If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>'s oracle is pseudorandom function, then the view of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> when run as a subroutine by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> is distributed identically to the view of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> in experiment <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mi>i</mi><mi>v</mi><msubsup><mi>K</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow><mrow><mi>c</mi><mi>p</mi><mi>a</mi></mrow></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">PrivK_{\mathcal{A},\pi}^{cpa}(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.211939em;vertical-align:-0.429639em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.4064690000000004em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.429639em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>, since <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span> are chosen uniformly. So,</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \cal at position 65: …)=1]=Pr[PrivK_{\̲c̲a̲l̲{A},\pi}^{cpa}(…'>Pr_{k\leftarrow \{0,1\}^n}[D^{F_{k}(\cdot)}(1^{n})=1]=Pr[PrivK_{\cal{A},\pi}^{cpa}(n)=1]
</p>
<p>(b) If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>'s oracle is a random function, then the view of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> when run as a subroutine by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> is distributed identically to the view of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> in experiment <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mi>i</mi><mi>v</mi><msubsup><mi>K</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mover accent="true"><mi>π</mi><mo>~</mo></mover></mrow><mrow><mi>c</mi><mi>p</mi><mi>a</mi></mrow></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">PrivK_{\mathcal{A},\tilde{\pi}}^{cpa}(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.211939em;vertical-align:-0.429639em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.4064690000000004em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span><span style="top:-3.0500000000000003em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mtight">~</span></span></span></span></span></span></span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.429639em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> (<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>π</mi><mo>~</mo></mover></mrow><annotation encoding="application/x-tex">\tilde{\pi}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6678599999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">~</span></span></span></span></span></span></span></span></span> represents the encryption scheme using a truly random function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span> instead). So,</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \cal at position 65: …)=1]=Pr[PrivK_{\̲c̲a̲l̲{A},\tilde{\pi}…'>	Pr_{f\leftarrow Func_{n}}[D^{F_{k}(\cdot)}(1^{n})=1]=Pr[PrivK_{\cal{A},\tilde{\pi}}^{cpa}(n)=1]
</p>
<p>© By the assumption that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> is a pseudorandom function, the following inequation holds:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><msup><mi>D</mi><mrow><msub><mi>F</mi><mi>K</mi></msub><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo stretchy="false">]</mo><mo>−</mo><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><msup><mi>D</mi><mrow><mi>f</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo stretchy="false">]</mo><mi mathvariant="normal">∣</mi><mo>≤</mo><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">	|Pr[D^{F_{K}(\cdot)}(1^{n})=1]-Pr[D^{f(\cdot)}(1^{n})=1]|\le negl(n)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight">⋅</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mtight">⋅</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></p>
<p>Combining the above three equations we can get:</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \cal at position 12: |Pr[PrivK_{\̲c̲a̲l̲{A},\pi}^{cpa}(…'>|Pr[PrivK_{\cal{A},\pi}^{cpa}(n)=1]-Pr[PrivK_{\cal{A},\tilde{\pi}}^{cpa}(n)=1]|\le negl(n)
</p>
<p><strong>Step 2:</strong></p>
<p>Everytime a message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> is encrypted in <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mi>i</mi><mi>v</mi><msubsup><mi>K</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mover accent="true"><mi>π</mi><mo>~</mo></mover></mrow><mrow><mi>c</mi><mi>p</mi><mi>a</mi></mrow></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">PrivK_{\mathcal{A},\tilde{\pi}}^{cpa}(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.211939em;vertical-align:-0.429639em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.4064690000000004em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span><span style="top:-3.0500000000000003em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mtight">~</span></span></span></span></span></span></span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.429639em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> (either by the encryption oracle or computing the challenge ciphertext), a uniform <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">r\in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> is chosen and the ciphertext is set equal to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><mi>r</mi><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>X</mi><mi>O</mi><mi>R</mi><mtext> </mtext><mi>m</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;r,f(r)~XOR~m&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>.</p>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>r</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">r^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span> denote the random string used when generating the challenge ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><msup><mi>r</mi><mo>∗</mo></msup><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><msup><mi>r</mi><mo>∗</mo></msup><mo stretchy="false">)</mo><mtext> </mtext><mi>X</mi><mi>O</mi><mi>R</mi><mtext> </mtext><msub><mi>m</mi><mi>b</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;r^{*},f(r^{*})~XOR~m_{b}&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>.<br />
There are two possibilities:</p>
<p>(a) The value <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>r</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">r^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span> is never used when answering any of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span>'s encryption-oracle queries: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> learns nothing about <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msup><mi>r</mi><mo>∗</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(r^{*})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> from its interaction with the encryption oracle. The value <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msup><mi>r</mi><mo>∗</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(r^{*})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> is uniformly distrubuted and independent of the rest of the experiment. So the probability that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> outputs <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">b&#x27;=b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> in this case is exactly <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">1/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord">2</span></span></span></span>.</p>
<p>(b) The value <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>r</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">r^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span> is used when answering at lease one of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span>'s encryption-oracle queries: in this case, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> may easily determine whether <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">m_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> or <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">m_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> was encrypted (<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> can get <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msup><mi>r</mi><mo>∗</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(r^{*})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> from ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><msup><mi>r</mi><mo>∗</mo></msup><mo separator="true">,</mo><mi>s</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;r^*, s&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8831359999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span> and message <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mtext> </mtext><mi>X</mi><mi>O</mi><mi>R</mi><mtext> </mtext><mi>m</mi></mrow><annotation encoding="application/x-tex">s~XOR~m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span></span></span></span>). However, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> makes at most <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">q(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> queries(i.e. at most <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">q(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> values of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>), and since <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>r</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">r^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span></span></span></span> is chosen uniformly from <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>, the probability of this event is at most <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">q(n)/2^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mord">/</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span>.</p>
<p>Let <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>e</mi><mi>p</mi><mi>e</mi><mi>a</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">Repeat</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span></span></span></span> denote the event that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>r</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">r^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span> is used by the encryption oracle when answering at least one of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span>'s queries. The probability of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>e</mi><mi>p</mi><mi>e</mi><mi>a</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">Repeat</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span></span></span></span> is at most <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">q(n)/2^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mord">/</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span>, and the probability that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> succeeds in <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mi>i</mi><mi>v</mi><msubsup><mi>K</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mover accent="true"><mi>π</mi><mo>~</mo></mover></mrow><mrow><mi>c</mi><mi>p</mi><mi>a</mi></mrow></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">PrivK_{\mathcal{A},\tilde{\pi}}^{cpa}(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.211939em;vertical-align:-0.429639em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.4064690000000004em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span><span style="top:-3.0500000000000003em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mtight">~</span></span></span></span></span></span></span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.429639em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>e</mi><mi>p</mi><mi>e</mi><mi>a</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">Repeat</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span></span></span></span> does not occur is exactly <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">1/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord">2</span></span></span></span>. Therefore:</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: align at position 7: \begin{̲a̲l̲i̲g̲n̲}̲
Pr[PrivK_{\cal…'>\begin{align}
Pr[PrivK_{\cal{A},\tilde{\pi}}^{cpa}(n)=1] &amp;= Pr[PrivK_{\cal{A},\tilde{\pi}}^{cpa}(n)=1\wedge Repeat]+Pr[PrivK_{\cal{A},\tilde{\pi}}^{cpa}(n)=1\wedge \overline{Repeat}]  \\
	  &amp;\le Pr[Repeat]+Pr[PrivK_{\cal{A},\tilde{\pi}}^{cpa}(n)=1|\overline{Repeat}] \\
	  &amp;\le \frac{q(n)}{2^{n}}+\frac{1}{2}
\end{align}
</p>
<p>Combining the equations, we can get:</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \cal at position 11: Pr[PrivK_{\̲c̲a̲l̲{A},\pi}^{cpa}(…'>Pr[PrivK_{\cal{A},\pi}^{cpa}(n)=1]\le \frac{1}{2}+\frac{q(n)}{2^{n}}+negl(n)
</p>
<p>Since <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span> is polynomial, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">q(n)/2^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mord">/</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> is negligible. The sum of two negligible functions is still negligible, so there exists a negligible function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi>e</mi><mi>g</mi><msup><mi>l</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">negl&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> such that</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \cal at position 11: Pr[PrivK_{\̲c̲a̲l̲{A},\pi}^{cpa}(…'>Pr[PrivK_{\cal{A},\pi}^{cpa}(n)=1]\le \frac{1}{2}+negl&#039;(n)
</p>
<p>thus completing the proof.</p>
<h2 id="stream-cipher-revisit"><a class="markdownIt-Anchor" href="#stream-cipher-revisit"></a> Stream cipher revisit</h2>
<p>Recall that the pseudorandom pad encryption is not CPA-secure since the key could only be used once, and the length of the message must be fixed and known in advance.</p>
<p>We already have a brief introduction about stream cipher, which can be used to address the drawbacks of pseudorandom pad encryption. In practice, stream cipher are used for encryption in two ways:</p>
<ul>
<li><strong>Synchronized mode</strong>: the sender and receiver must be synchronized in the sense that they know how much plaintext has been encrypted (decrypted) so far. The initialization vector <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mi>V</mi></mrow><annotation encoding="application/x-tex">IV</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span> is not needed.</li>
<li><strong>unsynchronized mode</strong>: the initialization vector <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mi>V</mi></mrow><annotation encoding="application/x-tex">IV</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span> is needed to generate pseudorandom bits. If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mi>V</mi></mrow><annotation encoding="application/x-tex">IV</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span> is chosen uniformly, then this scheme is CPA-secure.</li>
</ul>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105000601.png" alt="image-20201019213147276" /></p>
<h2 id="block-cipher"><a class="markdownIt-Anchor" href="#block-cipher"></a> Block cipher</h2>
<p>The CPA-secure scheme encryption has the drawback that the ciphertext is double the length of the plaintext. Block-cipher modes of operation provide a way of encrypting arbitrary-lengh message using shorter ciphertexts.</p>
<p>All the messages are seperated as several blocks <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><msub><mi>m</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>m</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><msub><mi>m</mi><mi mathvariant="normal">ℓ</mi></msub></mrow><annotation encoding="application/x-tex">m=m_{1},m_{2},\dots m_{\ell}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> where each <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mi>i</mi></msub><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">m_{i}\in \{0,1\}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> represents a block of the plaintext. The block size <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> should be sufficient large to ensure concrete security. If the message length is not a multiple of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>, it can be padded by appending a 1 followed by sufficiently many 0s.</p>
<h3 id="electronic-code-bookecb-mode"><a class="markdownIt-Anchor" href="#electronic-code-bookecb-mode"></a> Electronic Code Book(ECB) mode</h3>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>:</mo><mo>=</mo><mo>&lt;</mo><msub><mi>F</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>m</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>F</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>m</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>F</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>m</mi><mi mathvariant="normal">ℓ</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">c:=&lt;F_{k}(m_{1}),F_{k}(m_{2},\cdots,F_{k}(m_{\ell}))&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>. This mode is <em>deterministic</em> and therefore cannot be CPA-secure. This mode is even not indistinguishable in the presence of an eavesdropper(the block might be repeated in the plaintext which result in a repeating block in the ciphertext). <em>This mode should not be used!</em></p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105000614.png" alt="image-20201019213425365" style="zoom:50%;" />
<h3 id="cipher-block-chainingcbc-mode"><a class="markdownIt-Anchor" href="#cipher-block-chainingcbc-mode"></a> Cipher Block Chaining(CBC) mode</h3>
<p>First choose a uniform initialization vector <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mi>V</mi></mrow><annotation encoding="application/x-tex">IV</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span>, then set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mn>0</mn></msub><mo>:</mo><mo>=</mo><mi>I</mi><mi>V</mi></mrow><annotation encoding="application/x-tex">c_{0}:=IV</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub><mo>=</mo><msub><mi>F</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>c</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mtext> </mtext><mi>X</mi><mi>O</mi><mi>R</mi><mtext> </mtext><msub><mi>m</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c_{i}=F_{k}(c_{i-1}~XOR~m_{i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>. The final ciphertext is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>&lt;</mo><msub><mi>c</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>c</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>c</mi><mi mathvariant="normal">ℓ</mi></msub><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;c_{0},c_{1},\dots,c_{\ell}&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">ℓ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span></span></span>. If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> is a pseudorandom permutation, then CBC-mode encryption is CPA-secure. But the encryption must be carried out sequentially, and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> should be invertible.</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105000652.png" alt="image-20201019213454186" style="zoom:50%;" />
<p>A variant of CBC-mode encryption is called chained CBC-mode, in which the last block of the previous ciphertext is used as the <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mi>V</mi></mrow><annotation encoding="application/x-tex">IV</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span> when encrypting the next message. But chained CBC mode is vulnerable to a chosen-plaintext attack.</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105000624.png" alt="image-20201019213512182" style="zoom: 80%;" />
<h3 id="output-feedbackofb-mode"><a class="markdownIt-Anchor" href="#output-feedbackofb-mode"></a> Output Feedback(OFB) mode</h3>
<p>First choose a uniform initialization vector <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mi>V</mi></mrow><annotation encoding="application/x-tex">IV</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span>. Define <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mn>0</mn></msub><mo>:</mo><mo>=</mo><mi>I</mi><mi>V</mi></mrow><annotation encoding="application/x-tex">y_{0}:=IV</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span> and set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>:</mo><mo>=</mo><msub><mi>F</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y_{i}:=F_{k}(y_{i-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>. Each block of plaintext is encrypted by <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub><mo>:</mo><mo>=</mo><msub><mi>y</mi><mi>i</mi></msub><mtext> </mtext><mi>X</mi><mi>O</mi><mi>R</mi><mtext> </mtext><msub><mi>m</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_{i}:=y_{i}~XOR~m_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>. Compared with CBC mode, OFB mode does not require <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> be invertible, and the plaintext length is not required to be a multiple of the block length. If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> is a pseudorandom permutation, then OFB-mode encryption is CPA-secure.</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105000754.png" alt="image-20201019213643311" style="zoom:50%;" />
<h3 id="counterctr-mode"><a class="markdownIt-Anchor" href="#counterctr-mode"></a> Counter(CTR) mode</h3>
<p>First choose a uniform value <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>t</mi><mi>r</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">ctr\in \{0,1\}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65418em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>. Then the pseudorandom stream is generated by computing <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>:</mo><mo>=</mo><msub><mi>F</mi><mi>k</mi></msub><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mi>c</mi><mi>t</mi><mi>r</mi><mo>+</mo><mi>i</mi><mo stretchy="false">)</mo><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">y_{i}:=F_{k}[(ctr+i)~mod~2^{n}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mspace nobreak"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>, and the ciphertext is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub><mo>=</mo><msub><mi>y</mi><mi>i</mi></msub><mtext> </mtext><mi>X</mi><mi>O</mi><mi>R</mi><mtext> </mtext><msub><mi>m</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_{i}=y_{i}~XOR~m_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>. This encryption does not require <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> to be invertible, or even a permutation. Also, the encryption and decryptinon can be fully parallelized. If <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span> is a pseudorandom function, then CTR-mode encryption is CPA-secure.</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105000800.png" alt="image-20201019213705204" style="zoom:50%;" />
<h1 id="chosen-ciphertext-attacks"><a class="markdownIt-Anchor" href="#chosen-ciphertext-attacks"></a> Chosen-Ciphertext Attacks</h1>
<h2 id="cca-security"><a class="markdownIt-Anchor" href="#cca-security"></a> CCA-security</h2>
<p>In a chosen-ciphertext attack, the adversary has the ability to obtain not only the encryptions of messages of its choice, but also the decryption of ciphertexts of its choice.</p>
<p><strong>The CCA indistinguishability experiment</strong> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>r</mi><mi>i</mi><mi>v</mi><msubsup><mi>K</mi><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi>π</mi></mrow><mrow><mi>c</mi><mi>c</mi><mi>a</mi></mrow></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">PrivK_{\mathcal{A},\pi}^{cca}(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.161439em;vertical-align:-0.411439em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.424669em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.411439em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>:</p>
<ul>
<li>A key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> is generated by running <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gen(1^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>.</li>
<li>Adversary <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> is given input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">1^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> and oracle access to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Enc_{k}(\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>e</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Dec_{k}(\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span>. It outputs a pair of messages <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>m</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">m_{0},m_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> of the same length.</li>
<li>A uniform bit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">b\in \{0,1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span> is chosen, and then a ciphertext <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>←</mo><mi>E</mi><mi>n</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>m</mi><mi>b</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c\leftarrow Enc_{k}(m_{b})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> is computed and given to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span>. We call <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span> the challenge ciphertext.</li>
<li>The adversary <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> continues to have oracle access to <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>n</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Enc_{k}(\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>e</mi><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Dec_{k}(\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span>, but is not allowed to query the latter on the challenge ciphertext itself. Eventually, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> outputs a bit <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">b&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>.</li>
<li>The output of the experiment is defined to be 1 if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">b&#x27;=b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> and 0 otherwise. If the output of the experiment is 1, we say that <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> succeeds.</li>
</ul>
<p>A private-key encryption scheme <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span> has indistinguishable encryptions under a chosen-ciphertext attack, or is CCA-secure, if for all probabilistic polynomial-time adversaries <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> there is a negligible function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi>e</mi><mi>g</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">negl</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span> such that:</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \cal at position 11: Pr[PrivK_{\̲c̲a̲l̲{A},\pi}^{cca}(…'>Pr[PrivK_{\cal{A},\pi}^{cca}(n)=1]\le \frac{1}{2}+negl(n)
</p>
<p>And any private-key encryption scheme that is CCA-secure is also CCA-secure for multiple encryptions.</p>
<p><em>Any encryption scheme that allows ciphertexts to be “manipulated” in any controlled way cannot be CCA-secure</em>. So all the encryption scheme above is <strong>not CCA-secure</strong>!</p>
<p>CCA-secure encryption requires an important property called <strong>non-malleability</strong>: if the adversary tries to modify a given ciphertext, the result is either an invalid ciphertext or one that decrypts to a plaintext having no relation to the original one (message authentication).</p>
<h1 id="practical-applications"><a class="markdownIt-Anchor" href="#practical-applications"></a> Practical applications</h1>
<h2 id="stream-cipher"><a class="markdownIt-Anchor" href="#stream-cipher"></a> Stream cipher</h2>
<h3 id="linear-feedback-shift-registers"><a class="markdownIt-Anchor" href="#linear-feedback-shift-registers"></a> Linear-feedback Shift Registers</h3>
<p>A Linear-feedback Shift Registers(LFSR) consists of an array of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> registers <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>s</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">s_{n-1},\dots,s_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> along with a feedback loop specified by a set of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> feedback coefficients <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>c</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">c_{n-1},\dots,c_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>. The size of the array is called the degree of LFSR.</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105000809.png" alt="image-20201019214218689" /></p>
<p>Each register stores a single bit, and the state <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">st</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span></span></span></span> of the LFSR at any point in time is simply the set of bits contained in the registers. The state of the LFSR is updated in each of a series of “clock ticks” by shifting the values in all the registers to the right, and setting the new value of the left-most register equal to the XOR of some subset of the current registers, with the subset determined by the feedback coefficients.</p>
<p>Say the state at some time <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>s</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msubsup><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msubsup><mi>s</mi><mn>0</mn><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">s_{n-1}^{(t)},\dots,s_{0}^{(t)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3694389999999999em;vertical-align:-0.3246389999999999em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3246389999999999em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span></span></span></span>, then the state after the next clock tick is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>s</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy="false">(</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msubsup><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msubsup><mi>s</mi><mn>0</mn><mrow><mo stretchy="false">(</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">s_{n-1}^{(t+1)},\dots,s_{0}^{(t+1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3694389999999999em;vertical-align:-0.3246389999999999em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3246389999999999em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span></span></span></span> with</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>s</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msubsup><mo>:</mo><mo>=</mo><msubsup><mi>s</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msubsup><mo separator="true">,</mo><mtext> </mtext><mi>i</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>n</mi><mo>−</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">s_{i}^{(t+1)}:=s_{i+1}^{(t)},~i=0,\dots,n-2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.321664em;vertical-align:-0.276864em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.379995em;vertical-align:-0.335195em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.423136em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.335195em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace nobreak"> </span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>s</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy="false">(</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msubsup><mo>:</mo><mo>=</mo><msubsup><mo>⊕</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msubsup><msub><mi>c</mi><mi>i</mi></msub><msubsup><mi>s</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">s_{n-1}^{(t+1)}:=\oplus_{i=0}^{n-1}c_{i}s_{i}^{(t)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3694389999999999em;vertical-align:-0.324639em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.324639em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.321664em;vertical-align:-0.276864em;"></span><span class="mord"><span class="mbin">⊕</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.433005em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266995em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>And the LFSR outputs the value of the right-most register <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>s</mi><mn>0</mn><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">s_{0}^{(t)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.311108em;vertical-align:-0.26630799999999993em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span></span></span></span>.</p>
<p>The state of the LFSR consists of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> bits, thus it can cycle through at most <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> possible states. Because the all-0 state will make LFSR remains in that state forever, a maximum-length LFSR cycles through all <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> nonzero states before repeating.</p>
<p>The output of a maximal-length LFSR of degree <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> has good statistical properties. Nevertheless, it is not good pseudoramdon generators for cryptographic purposes because of the predictibility of their output. The attacker can reconstruct the entire state after observing at most <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mi>n</mi></mrow><annotation encoding="application/x-tex">2n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault">n</span></span></span></span> output bits using the following linear equations:</p>
<p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: align at position 7: \begin{̲a̲l̲i̲g̲n̲}̲
	y_{n+1}=&amp; c_{…'>\begin{align}
	y_{n+1}=&amp; c_{n-1}y_{n}\oplus\cdots\oplus c_{0}y_{1} \\
	\cdot&amp; \\
	\cdot&amp; \\
	\cdot&amp; \\
	y_{2n}=&amp; c_{n-1}y_{2n-1}\oplus\cdots\oplus c_{0}y_{n}
\end{align}
</p>
<p>To thwart reconstruction attacks, the system must introduce some nonlinearity. E.g. add nonlinearity for the left-most register or in the output sequence.</p>
<p>LFSRs are efficient when implemented in hardware, but have poor performance in software.</p>
<h3 id="trivium"><a class="markdownIt-Anchor" href="#trivium"></a> Trivium</h3>
<p>Trivium uses three coupled, nonlinear FSRs denoted by A, B, and C and having degree 93, 84, and 111, respectively.</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105000823.png" alt="image-20201019214427187" style="zoom: 50%;" />
<p>The <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>t</mi><mi>B</mi><mi>i</mi><mi>t</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">GetBits</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span></span></span></span> algorithm for Trivium works as follows: At each clock tick, the output of each FSR is the XOR of its right-most register and one additional register; the output of Trivium is the XOR of the output bits of the three FSRs.</p>
<p>The <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mi>n</mi><mi>i</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">Init</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault">n</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span></span></span></span> algorithm of Trivium accepts an 80-bit key and an 80-bit IV . The key is loaded into the 80 left-most registers of A, and the IV is loaded into the 80 left-most registers of B. The remaining registers are set to 0, except for the three right-most registers of C, which are set to 1. Then <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>e</mi><mi>t</mi><mi>B</mi><mi>i</mi><mi>t</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">GetBits</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span></span></span></span> is run <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>4</mn><mo separator="true">⋅</mo><mn>288</mn></mrow><annotation encoding="application/x-tex">4·288</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">8</span><span class="mord">8</span></span></span></span> times (with output discarded), and the resulting state is taken as <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><msub><mi>t</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">st_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">s</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.</p>
<p>To date, no cryptanalytic attacks better than exhaustive key search are known against the full Trivium cipher.</p>
<h3 id="rc4"><a class="markdownIt-Anchor" href="#rc4"></a> RC4</h3>
<p>RC4 is remarkable for its speed and simplicity. Although it is widely used today, but recent attacks have shown serious cryptographic weaknesses in RC4 so it should no longer be used.</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105000836.png" alt="image-20201019214555086" style="zoom: 33%;" />
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105000850.png" alt="image-20201019214646690" style="zoom:33%;" />
<h2 id="block-cipher-2"><a class="markdownIt-Anchor" href="#block-cipher-2"></a> Block cipher</h2>
<h3 id="des-encryption-scheme"><a class="markdownIt-Anchor" href="#des-encryption-scheme"></a> DES encryption scheme</h3>
<h4 id="feistel-networks"><a class="markdownIt-Anchor" href="#feistel-networks"></a> Feistel networks</h4>
<p>Feistel networks offer an approach for constructing block ciphers. An advantage of Feistel networks over substitution-permutation networks is that the underlying functions used in a Feistel network need not be invertible.</p>
<p>In the <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>th round of a Feistel network, the input is divided into two halves <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">L_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">R_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span> with equal length <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">ℓ</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\ell/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">ℓ</span><span class="mord">/</span><span class="mord">2</span></span></span></span>. The output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>L</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>R</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(L_{i},R_{i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> of the round is <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mi>i</mi></msub><mo>:</mo><mo>=</mo><msub><mi>R</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">L_{i}:=R_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mi>i</mi></msub><mo>:</mo><mo>=</mo><msub><mi>L</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>⊕</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>R</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R_{i}:=L_{i-1}\oplus f_{i}(R_{i-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>, with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mover accent="true"><mi>f</mi><mo>^</mo></mover><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>k</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_{i}(R)=\hat{f}_{i}(k_{i},R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">k_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> is the sub-key in the <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>th round.</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105000857.png" alt="image-20201019214742849" style="zoom:67%;" />
<p>A Feistel network is invertible regardless of the <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{f_i\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>. Given the output <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>L</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>R</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(L_i,R_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> of the <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>th round, we can compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>L</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>R</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(L_{i-1},R_{i-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> as follows: first set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>:</mo><mo>=</mo><msub><mi>L</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">R_{i-1}:= L_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, Then compute <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>:</mo><mo>=</mo><msub><mi>R</mi><mi>i</mi></msub><mo>⊕</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>R</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L_{i-1}:=R_{i}\oplus f_{i}(R_{i-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>.</p>
<h4 id="des"><a class="markdownIt-Anchor" href="#des"></a> DES</h4>
<p>The DES block cipher is a 16-round Feistel network with a block length of 64 bits and a key length of 56 bits. The same round function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{f}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1523199999999998em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span> is used in each of the 16 rounds. The round function takes a 48-bit sub-key and a 32-bit input.</p>
<p>The key schedule of DES is used to derive a sequence of 48-bit sub-keys <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>k</mi><mn>16</mn></msub></mrow><annotation encoding="application/x-tex">k_{1},\dots,k_{16}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> from the 56-bit master key, with each sub-key <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">k_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> being a permuted subset of 48 bits of the master key.</p>
<p>The DES round function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{f}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1523199999999998em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span> (or the DES mangler function) is constructed as the following figure:</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105000906.png" alt="image-20201019215049875" style="zoom:50%;" />
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span> is called the expansion function, which works by simply duplicating half the bits of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span> (according to a fixed rule). Each S-box maps a 6-bit input to a 4-bit output. Changing one bit of any input to an S-box always changes at least two bits of the output, so the DES exhibits a strong avalanche effect.</p>
<p>Unfortunately, the 56-bit key length of DES is short enough that an exhaustive search through all <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>56</mn></msup></mrow><annotation encoding="application/x-tex">2^{56}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span></span> possible keys is now feasible. Using differential cryptoanalysis make the time to decrypt becomes much shorter.</p>
<p><strong>3DES</strong>: Triple-DES (or 3DES) is based on a triple invocation of DES using two or three keys. There are two variants:</p>
<ul>
<li><em>three keys</em>: Choose three independent keys and define <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>F</mi><mrow><msub><mi>k</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>k</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>k</mi><mn>3</mn></msub></mrow><msup><mrow></mrow><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>F</mi><msub><mi>k</mi><mn>3</mn></msub></msub><mo stretchy="false">(</mo><msubsup><mi>F</mi><msub><mi>k</mi><mn>2</mn></msub><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo stretchy="false">(</mo><msub><mi>F</mi><msub><mi>k</mi><mn>1</mn></msub></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F_{k_{1},k_{2},k_{3}}^{&#x27;&#x27;}(x)=F_{k_{3}}(F_{k_2}^{-1}(F_{k_1}(x)))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3616959999999998em;vertical-align:-0.4192159999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.4168920000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4192159999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2556469999999997em;vertical-align:-0.4014079999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.398692em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4014079999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>.</li>
<li><em>two keys</em>: Choose two independent keys and define <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>F</mi><mrow><msub><mi>k</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>k</mi><mn>2</mn></msub></mrow><msup><mrow></mrow><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>F</mi><msub><mi>k</mi><mn>1</mn></msub></msub><mo stretchy="false">(</mo><msubsup><mi>F</mi><msub><mi>k</mi><mn>2</mn></msub><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo stretchy="false">(</mo><msub><mi>F</mi><msub><mi>k</mi><mn>1</mn></msub></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F_{k_{1},k_{2}}^{&#x27;&#x27;}(x)=F_{k_{1}}(F_{k_2}^{-1}(F_{k_1}(x)))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3616959999999998em;vertical-align:-0.4192159999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.4168920000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4192159999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2556469999999997em;vertical-align:-0.4014079999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.398692em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4014079999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span> .</li>
</ul>
<p>The security of the two variants is both <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mn>2</mn><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">2^{2n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span>, since the three keys encryption is susceptible to a meet-in-the-middle attack. 3DES is relatively slow and the key length is short, so it is recommended to use AES instead.</p>
<p>For the details of DES encryption scheme, refer to:</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JhaWR1XzM2ODU2MTEzL2FydGljbGUvZGV0YWlscy81MzU1ODc5NQ==">https://blog.csdn.net/baidu_36856113/article/details/53558795<i class="fa fa-external-link-alt"></i></span></li>
<li>Understanding Cryptography: A Textbook for Students and Practitioners. Chapter 3</li>
</ul>
<h3 id="aes-encryption-scheme"><a class="markdownIt-Anchor" href="#aes-encryption-scheme"></a> AES encryption scheme</h3>
<h4 id="substitution-permutation-networks"><a class="markdownIt-Anchor" href="#substitution-permutation-networks"></a> Substitution-permutation networks</h4>
<p>A SPN can be viewed as a direct implementation of the confusion-diffusion paradigm. Define <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span> as a fixed public substitution function. The cipher proceeds in a series of rounds, where in each round we apply the following sequence of operations to the n-bit input <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> of that round.</p>
<ol>
<li><em>Key mixing</em>: Set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>:</mo><mo>=</mo><mi>x</mi><mo>⊕</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">x:=x\oplus k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>, where <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> is the current-round sub-key;</li>
<li><em>Substitution</em>: Set <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>:</mo><mo>=</mo><msub><mi>S</mi><mn>1</mn></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>⋯</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>S</mi><mi>n</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x:=S_{1}(x_{1})||\cdots||S_{n}(x_{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>, where <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> is the ith byte of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>;</li>
<li><em>Permutation</em>: Permute the bits of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> to obtain the output of the round.</li>
</ol>
<p>The following figure is a simple example of substitution-permutation network with a 16-bit block length and 4-bit S-boxes:</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105000929.png" alt="image-20201019215321463" style="zoom:50%;" />
<p><strong>The avalanche effect</strong>: a small change in the input must “affect” every bit of the output in any block cipher. In substitution-permutation network, the avalanche effect is ensured by the following two properties:</p>
<ul>
<li>
<p>changing a single bit of the input to an S-box changes at least two bits in the output of the S-box;</p>
</li>
<li>
<p>the mixing permutations makes the output bits of any given S-box are used as input to multiple S-boxes in the next round.</p>
</li>
</ul>
<h4 id="aes"><a class="markdownIt-Anchor" href="#aes"></a> AES</h4>
<p>AES is essentially a substitution-permutation network. During computation of the AES algorithm, a 4-by-4 array of bytes called the state is modified in a series of rounds. The state is initially set equal to the input to the cipher(i.e., the block size is 128 bit). The following operations are then applied to the state in a series of four stages during each round:</p>
<ol>
<li>
<p><strong>AddRoundKey</strong>: In every round of AES, a 128-bit sub-key is derived from the master key, and is interpreted as a 4-by-4 array of bytes. The state array is updated by XORing it with this sub-key.</p>
</li>
<li>
<p><strong>SubBytes</strong>: each byte of the state array is replaced by another byte according to a single fixed lookup table S. This substitution table (or S-box) is a bijection over <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mn>8</mn></msup></mrow><annotation encoding="application/x-tex">\{0, 1\}^8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span>.</p>
</li>
<li>
<p><strong>ShiftRows</strong>: the bytes in each row of the state array are shifted to the left as follows: the first row of the array is untouched, the second, third and fourth row is shifted to the left by one place, two places and three places, respectively. All shifts are cyclic.</p>
</li>
<li>
<p><strong>MixColumns</strong>: an invertible transformation is applied to the four bytes in each column (i.e., a linear transformation over <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mi>F</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mn>8</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">GF(2^8)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>).</p>
<p>In the final round, MixColumns is replaced with AddRoundKey.</p>
</li>
</ol>
<p>The number of rounds depends on the key length. Ten rounds are used for a 128-bit key, 12 rounds for a 192-bit key, and 14 rounds for a 256-bit key.</p>
<p>AES encryption is free, standardized, efficient, and highly secure. To date, there are no practical cryptanalytic attacks that are significantly better than an exhaustive search for the key.</p>
<p>For the details of AES encryption scheme, refer to:</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4Mjg5ODE1L2FydGljbGUvZGV0YWlscy84MDkwMDgxMw==">https://blog.csdn.net/qq_38289815/article/details/80900813<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDg3NjEzMy9hcnRpY2xlL2RldGFpbHMvODI3OTc3MzI=">https://blog.csdn.net/weixin_40876133/article/details/82797732<i class="fa fa-external-link-alt"></i></span></li>
<li>Understanding Cryptography: A Textbook for Students and Practitioners. Chapter 4</li>
</ul>
<h1 id="references"><a class="markdownIt-Anchor" href="#references"></a> References</h1>
<ol>
<li>Introduction to Modern Cryptography, Second Edition.</li>
<li>Understanding Cryptography: A Textbook for Students and Practitioners (Chinese Version).</li>
</ol>
]]></content>
      <categories>
        <category>信息安全</category>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>密码学</tag>
      </tags>
  </entry>
  <entry>
    <title>操作系统-内存虚拟化</title>
    <url>/2021/01/09/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-%E5%86%85%E5%AD%98%E8%99%9A%E6%8B%9F%E5%8C%96/</url>
    <content><![CDATA[<h1 id="地址空间与地址转换"><a class="markdownIt-Anchor" href="#地址空间与地址转换"></a> 地址空间与地址转换</h1>
<h2 id="内存虚拟化与虚拟地址空间"><a class="markdownIt-Anchor" href="#内存虚拟化与虚拟地址空间"></a> 内存虚拟化与虚拟地址空间</h2>
<p>一个操作系统内部同时运行着多个进程，这些进程之间采用时分共享的方式来使用硬件。对于CPU来说，时分共享是通过让一个进程全部占用CPU运行一段时间，在进程切换的时候通过上下文切换来完成；但是对于内存来说，如果采用这种方式，在进程切换的时候需要将物理内存中当前所有的内容保存到磁盘中去，并从磁盘中读取另一个进程的物理内存数据到物理内存中。根据计算机组成原理的知识，磁盘与物理内存之间的数据传输是很慢的。因此，操作系统的做法是在进程切换的时候仍然将进程信息放在物理内存中，也就意味着许多程序在同一时刻共享着物理内存。</p>
<p>但是这种做法又对操作系统有了新的要求，人们不希望一个进程可以读取甚至修改其他进程使用的物理内存。因此，操作系统使用了<strong>虚拟内存</strong>（Virtual Memory）的概念，对物理内存进行了抽象，通过这种抽象所形成的地址集合被叫做<strong>虚拟地址空间</strong>（Virtual Address Space）。相应地，一个物理内存所对应的地址集合被称为<strong>物理地址空间</strong>。一个进程的虚拟地址空间是运行中的程序看到的系统中的内存，它包含了这个程序的所有内存状态，包括程序代码、栈、堆等部分。为了给进程提供保护，每个进程都有着自己独立的虚拟地址空间，但是不同进程的虚拟内存可能会共享使用部分物理内存，从而实现数据共享。</p>
<a id="more"></a>
<p>虚拟内存主要实现了如下几个目标：</p>
<ul>
<li>透明：程序不会感知到物理内存被虚拟化的现实，相反程序的行为好像它拥有自己的私有物理内存。这是通过操作系统与硬件在幕后完成了这些工作，让不同的工作能够复用物理内存来实现的。</li>
<li>效率：操作系统在实现虚拟化时，不会使程序运行地更慢，也不会需要太多额外的物理内存支持。为了实现高效率的虚拟化，操作系统将会依靠一些硬件支持。</li>
<li>保护：操作系统会确保进程受到保护，不会受到其他进程的影响，同时操作系统本身也不会受进程的影响。这相当于给进程提供了隔离的特性，使得每个进程在自己的独立环境中运行。</li>
<li>简化内存使用：独立的虚拟地址空间允许每个进程的虚拟内存使用相同的基本格式，而不管代码和数据实际存放在物理内存的何处；同时，独立的虚拟地址空间为操作系统提供了一个管理用户进程和操作系统自身之间共享的统一机制；而且物理内存的分配与加载数据也变得简单。</li>
</ul>
<h2 id="地址转换"><a class="markdownIt-Anchor" href="#地址转换"></a> 地址转换</h2>
<p>为了实现物理内存的虚拟化，需要硬件和操作系统的同时支持。基于硬件的地址转换技术使得程序可以通过任何方式访问它自己的虚拟地址空间。利用地址转换，硬件对每次物理内存访问（指令读取、数据读取、数据写入）进行处理，将指令中的虚拟地址转换为实际存储的物理地址。同时，操作系统对物理内存进行管理，记录被占用和空闲的物理内存位置，并保持对物理内存使用的控制。</p>
<p>CPU中的内存管理单元MMU（Memory Management Unit）可以实现从虚拟地址到物理地址的转换。对于一个使用虚拟地址的系统，它从物理内存中读取数据的过程可以大致表示为下图所示的过程：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105003421.png" alt="image-20201103211021984" /></p>
<h2 id="动态重定位"><a class="markdownIt-Anchor" href="#动态重定位"></a> 动态重定位</h2>
<h3 id="操作方法"><a class="markdownIt-Anchor" href="#操作方法"></a> 操作方法</h3>
<p>一个简单的地址转换思想是采用动态重定位技术，这一技术又被称为基址加界限机制。具体来说，为了实现这一机制，每个CPU需要两个硬件寄存器：基址（base）寄存器和界限（bound）寄存器，这一组寄存器使得我们能够把进程的虚拟地址空间放在物理内存的任何位置，同时又能确保进程只能访问自己的虚拟地址空间。通过这种方式，虚拟地址和物理地址便可以根据如下方式来进行对应：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext>Physical Address = Virtual Address + Base</mtext></mrow><annotation encoding="application/x-tex">\text{Physical Address = Virtual Address + Base}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">Physical Address = Virtual Address + Base</span></span></span></span></span></span></p>
<p>进程中使用的内存引用都是使用虚拟地址，硬件会将虚拟地址加上基址寄存器中的内容，得到物理地址，再发给内存系统（<strong>注：汇编代码中的地址是虚拟地址！</strong>）。同时界限寄存器对这一过程提供访问保护，当进程要访问的物理地址大于界限寄存器中的地址，CPU将会触发异常。</p>
<p>值得注意的是，这种技术有着空间效率低下的问题。因为这种方式需要将进程的虚拟地址空间完整地加载到物理内存中去，但是虚拟地址空间中常常存在着大量的未使用区域，比如进程的堆区和栈区之间可能有着大块未使用的空间；而且，虚拟地址空间可能会大于物理地址空间，无法被完全载入物理内存。因此我们需要对这种方案做出一些改进，以便更好地利用物理内存。</p>
<h3 id="硬件支持"><a class="markdownIt-Anchor" href="#硬件支持"></a> 硬件支持</h3>
<p>动态重定位所需的硬件支持可以总结为下表：</p>
<table>
<thead>
<tr>
<th>硬件要求</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>特权模式</td>
<td>用户模式的进程需要执行一些特权操作</td>
</tr>
<tr>
<td>基址/界限寄存器</td>
<td>每个CPU需要一对寄存器来支持地址转换和界限检查</td>
</tr>
<tr>
<td>转换虚拟地址并检查是否越界</td>
<td>使用电路来完成转换和检查界限</td>
</tr>
<tr>
<td>修改基址/界限寄存器的特权指令</td>
<td>在让用户程序运行之前，操作系统必须将这些值设置好</td>
</tr>
<tr>
<td>注册异常处理程序的特权指令</td>
<td>操作系统需要告诉硬件，如果异常发生时执行哪些代码</td>
</tr>
<tr>
<td>能够触发异常</td>
<td>当进程试图使用特权指令或越界的内存时需要触发异常</td>
</tr>
</tbody>
</table>
<h3 id="操作系统支持"><a class="markdownIt-Anchor" href="#操作系统支持"></a> 操作系统支持</h3>
<p>为了支持动态重定位，操作系统也要提供如下的支持：</p>
<ul>
<li>进程创建时操作系统必须采取行动，为进程的虚拟地址空间找到物理内存空间来保存；</li>
<li>在进程终止时，操作系统需要回收它使用的所有物理内存，给其他的进程或是操作系统使用；</li>
<li>在上下文切换时，操作系统需要保存和恢复基址和界限寄存器。这也使得当一个进程暂停时，操作系统可以很容易地修改其虚拟地址空间的物理位置；</li>
<li>操作系统需要提供异常处理程序，或一些要调用的函数。</li>
</ul>
<h1 id="分段"><a class="markdownIt-Anchor" href="#分段"></a> 分段</h1>
<h2 id="引言"><a class="markdownIt-Anchor" href="#引言"></a> 引言</h2>
<p>分段最初的概念是通过在MMU中引入不止一对基址/界限寄存器对，给虚拟地址空间内的每个逻辑段一对。通过这种方式，操作系统能够将不同的段放到不同的物理内存区域，从而避免虚拟地址空间中的未使用部分占用物理内存。</p>
<p>C语言中的段错误：在支持分段的机器上发生了非法的内存访问（即使在不支持分段的机器上也仍然沿用这一术语）。</p>
<h2 id="实现"><a class="markdownIt-Anchor" href="#实现"></a> 实现</h2>
<p>使用分段机制，硬件在地址转换的时候需要考虑如下问题：</p>
<ul>
<li>引用哪个段：硬件在地址转换时需要知道地址引用的是哪个段，以及段内的偏移量。一种方式是使用显式方式，使用虚拟地址的开头几位来标识不同的段，后面几位来表示段内偏移量；另一种是隐式方法，硬件通过地址产生的方式来确定段，如地址由程序计数器产生则地址在代码段等。</li>
<li>栈的处理：栈在使用过程中是反向增长的，也就是在栈中添加数据时栈顶的地址会减小。为了实现这一功能，硬件记录了每个段的增长方向，同时也相应地实现了反方向地址增长的处理方法。</li>
<li>支持共享：不同的进程之间可能会共享其虚拟地址空间中的一些段，比如代码共享。为了支持共享，硬件为每个段增加了几个位，用于标识程序能否读写或执行其中的内容。同时这也要求硬件检查特定的访问是否允许。</li>
<li>段的粒度：粗粒度的分段只将虚拟地址空间分为较大的、粗粒度的块；而在细粒度分段时，允许将虚拟地址空间划分为大量较小的段，而这种分段方式需要进一步的硬件支持，并在物理内存中保存某种段表。</li>
<li>操作系统的支持：操作系统需要确保上下文切换时，各个段寄存器中的内容被保存和恢复；同时也需要有一些算法来管理物理内存的空闲空间。这是因为操作系统需要在物理内存中为每个段寻找空间，由于段的大小很可能不同，因此物理内存很快充满许多空闲空间的小洞，很难再分配给新的段或是扩大已有的段，这种问题也被称为<strong>外部碎片</strong>问题。相对应地，一个已分配单元（例如一个段）内部出现的类似问题被称为<strong>内部碎片</strong>问题，这种情况在堆的内部会经常出现。这一问题将在后面进行讨论。</li>
</ul>
<h1 id="分页"><a class="markdownIt-Anchor" href="#分页"></a> 分页</h1>
<h2 id="引言-2"><a class="markdownIt-Anchor" href="#引言-2"></a> 引言</h2>
<p>由于分段的方法会造成物理地址空间的碎片化，随着时间的推移，分配物理内存会变得更加困难。因此，人们提出了分页的方法。分页是将一个进程的虚拟地址空间分割为若干个固定大小的单元，每个单元称为一页。相应地，也将物理内存看成是定长槽块的阵列，叫做页帧，每个页帧包含一个虚拟内存页。</p>
<p>注意：在下面的讨论中我们先暂时假设物理内存足够大，后面会提到如何应对物理内存空间不足的问题。</p>
<h2 id="地址转换-2"><a class="markdownIt-Anchor" href="#地址转换-2"></a> 地址转换</h2>
<p>对于一个虚拟地址，如果要将其转换为物理地址，我们需要将虚拟地址从左至右分为两部分：虚拟页面号（Virtual page number, VPN）和页内的偏移量（offset）。然后，根据页的大小，便可以确定offset所占的字节数，进而确定VPN所占的字节数。通过虚拟页号，我们可以找到这个虚拟页在物理内存中所对应的物理帧号（PFN，有时也成为物理页号PPN），同时保持偏移量不变，即可将虚拟地址转换为物理地址。需要注意，VPN和PFN所对应的字节数不一定相等。这一过程如下图所示：</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105003430.png" alt="image-20201101185821278" style="zoom:67%;" />
<h2 id="页表"><a class="markdownIt-Anchor" href="#页表"></a> 页表</h2>
<p>为了记录虚拟地址空间的每个虚拟页放在物理内存中的位置，操作系统通常为<em>每个进程</em>保存了一个数据结构，称为页表（注意：每个进程有自己独自的页表）。页表的主要作用是为虚拟地址空间的每个虚拟页面保存地址转换，从而让我们知道每个页在物理内存中的位置。</p>
<p>页表中元素被称为页表项（PTE），一个PTE通常包含如下的内容：</p>
<ul>
<li>有效位（Valid bit）：指示这一页表项对应的地址转换是否有效。有效位对于支持稀疏的虚拟地址空间至关重要。</li>
<li>保护位（Protection bit）：表明页是否可以读取、写入或执行。</li>
<li>存在位（Present bit）：表示该页在物理存储器还是磁盘上。这使得操作系统可以支持大于物理内存的虚拟地址空间（参见页错误一节）。</li>
<li>脏位（Dirty bit）：表明页面被带入物理内存后是否被修改过（用途参见下文的近似LRU一节）。</li>
<li>参考位（Reference bit）：又称为访问位，用于追踪页是否被访问。这在页面替换时非常重要（参见下文的近似LRU一节）。</li>
</ul>
<p>在x86架构中，一个页表项的示例图如下：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105003436.png" alt="image-20201101192142649" /></p>
<p>图中P表示存在位，R/W表示读写位，U/S表示用户模式进程是否可以访问该页面的用户/超级用户位，A表示访问位，D表示脏位，PWT、PCD、PAT和G确定硬件缓存如何为这些页面工作，PFN为页帧号。同时根据页表项也可推断出一个页面的大小为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>12</mn></msup><mtext>Byte</mtext><mo>=</mo><mn>4</mn><mtext>KB</mtext></mrow><annotation encoding="application/x-tex">2^{12}\text{Byte}=4\text{KB}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord text"><span class="mord">Byte</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord text"><span class="mord">KB</span></span></span></span></span>。</p>
<p>使用页表之后，地址转换的过程如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105003440.png" alt="image-20201103232245909" /></p>
<h2 id="优缺点"><a class="markdownIt-Anchor" href="#优缺点"></a> 优缺点</h2>
<p>分页的方法具有许多优点。首先是灵活性，通过完善的分页方法，不管进程如何使用虚拟地址空间，操作系统都可以高效地提供虚拟地址空间的抽象；另一个优点是分页也使得空闲空间的管理变得更加简单。</p>
<p>通过对页表原理的分析，我们也能够发现分页机制的一些缺点。首先是页表项需要占用大量的空间。以上述的页表项为例，如果每个进程使用32位的虚拟地址空间，那么操作系统需要为每个进程管理<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>20</mn></msup></mrow><annotation encoding="application/x-tex">2^{20}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span>个地址转换，对应于每个进程需要维护<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>4</mn><mo>×</mo><msup><mn>2</mn><mn>20</mn></msup><mtext>Byte</mtext><mo>=</mo><mn>4</mn><mtext>MB</mtext></mrow><annotation encoding="application/x-tex">4\times 2^{20}\text{Byte}=4\text{MB}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mord text"><span class="mord">Byte</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord text"><span class="mord">MB</span></span></span></span></span>大小的页表。考虑到一个操作系统内部通常有许多进程，而且在64位的操作系统中按照这种方式所构造的页表所占用的空间将会比32位的虚拟地址空间大出几个数量级，因此页表会存储在虚拟内存当中，甚至可以交换到磁盘上。</p>
<p>另外一个缺点是会让速度变慢。进程在读取数据时，操作系统需要将虚拟地址转换成物理地址，这需要首先从页表中获取地址转换，造成了额外的内存引用开销。</p>
<h2 id="加速快速地址转换"><a class="markdownIt-Anchor" href="#加速快速地址转换"></a> 加速：快速地址转换</h2>
<h3 id="机制"><a class="markdownIt-Anchor" href="#机制"></a> 机制</h3>
<p>为了加速虚拟地址转换，在硬件中增加了地址转换旁路缓冲存储器（Translation-lookaside buffer, TLB），作为频繁发生的虚拟地址到物理地址转换的硬件缓存。</p>
<p>在使用TLB之后，每次内存访问的过程如下：首先从虚拟地址中提取页号VPN，然后检查TLB，看其中是否有期望的转换映射。如果TLB命中，则可以从相关的TLB项中取出页帧号PFN，与虚拟地址中的偏移量组合形成期望的物理地址并访问物理内存，不需要访问页表；如果没有，那么硬件访问页表来寻找转换映射，并用该转换映射更新TLB（这一过程开销很大，需要额外的内存引用），并在更新完成之后重新执行内存访问指令。</p>
<p>因此，TLB的原理类似于其他的缓存，它对运行速度的提升依赖于程序的空间和时间局部性。</p>
<p>需要注意的是，TLB也存在一些问题。第一个问题是TLB无法满足所有的程序需求，如果当一个程序在短时间内访问的页数超过了TLB中的页数则会产生大量的未命中，导致运行速度变慢，这种现象被称为超出TLB覆盖范围。另一个问题是访问TLB容易成为CPU流水线的瓶颈，尤其是使用物理地址索引缓存。</p>
<h3 id="未命中处理"><a class="markdownIt-Anchor" href="#未命中处理"></a> 未命中处理</h3>
<p>对于TLB未命中之后的操作，可以由硬件或是软件来处理。</p>
<p>如果交给硬件处理，硬件需要知道页表在物理内存中的确切位置（通过页表基址寄存器）以及页表的确切格式。在发生TLB未命中时，硬件会遍历页表，找出正确的页表项并取出所需的转换映射，用于更新TLB，并重试该指令。</p>
<p>如果使用软件处理，在TLB未命中时将会跳转至陷阱处理程序，进入内核态来处理TLB未命中。这段操作系统的代码会查找页表中的转换映射，然后使用特权指令来更新TLB，并从陷阱中返回。注意此时返回用户态之后，仍需要执行导致陷阱的那条指令，这要求系统在进入内核态时保存相应的程序计数器。同时也要注意，在运行TLB未命中的代码时，操作系统需要避免引起TLB未命中的无限递归（也就是读取TLB未命中的代码时又引起了TLB不命中）。为了解决这一问题，可以将TLB未命中的陷阱处理程序直接放到物理内存中，或是在TLB中保存一些永久有效的地址转换。使用软件管理的方法比较灵活，可以用任意的数据结构实现页表；同时也比较简单，硬件不需要为未命中做太多的操作。</p>
<p>使用TLB之后，TLB命中与不命中的操作大致如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105003447.png" alt="image-20201103233443092" /></p>
<h3 id="tlb的内容"><a class="markdownIt-Anchor" href="#tlb的内容"></a> TLB的内容</h3>
<p>典型的TLB有32、64或128项，并且是全相联的，这意味着一条地址映射可能存储在TLB的任何位置。硬件会并行地查找TLB，找到期望的转换映射。</p>
<p>一条TLB项的内容可能为：VPN|PFN|其他位</p>
<p>其中VPN和PFN同时存在于TLB中，这是因为一条地址映射可能会出现在任何位置。在其他位中也包含了一些有用的信息，比如用于标识转换映射是否有效的有效位，用来标识访问权限的保护位，以及一些其他的信息。</p>
<p>*注意：TLB的有效位与页表的有效位不等价！*在页表中，页表项被标记为无效意味着它对应的页没有被使用，如果试图访问会引起异常，操作系统将会杀掉这一进程；而在TLB中，有效位指出的是这一项是否为有效的地址映射。</p>
<h3 id="上下文切换时tlb的处理"><a class="markdownIt-Anchor" href="#上下文切换时tlb的处理"></a> 上下文切换时TLB的处理</h3>
<p>由于TLB中包含的每一条映射关系对于一些进程来说是没有意义的，因此在发生进程切换时，硬件和操作系统需要确保进程不会误读地址映射。一些解决方案如下：</p>
<ul>
<li>在上下文切换时清空TLB（把全部的有效位置0）。这样使得进程不会读取到错误的地址映射，但是使用这种方法的话，每次进程切换完毕开始运行的时候一定会触发TLB不命中。如果操作系统频繁的切换进程则会带来很大的开销。</li>
<li>跨上下文切换的TLB共享。这种方法需要硬件支持，为TLB中的表项添加了一个虚拟地址空间标识符（ASID），它类似于进程标识符。通过这种方法，TLB便可以缓存不同进程的虚拟地址空间映射，不会形成冲突。</li>
</ul>
<h3 id="tlb的替换策略"><a class="markdownIt-Anchor" href="#tlb的替换策略"></a> TLB的替换策略</h3>
<p>常用的TLB替换策略包括替换最近最少使用（Least recently used, LRU）的项、随机替换等。LRU策略可以利用内存引用流中的局部性；而随机策略则避免了LRU可能会出现的一种极端情况，即程序循环访问n+1个页但是TLB只能存储n个页。</p>
<h2 id="减少空间占用缩小页表"><a class="markdownIt-Anchor" href="#减少空间占用缩小页表"></a> 减少空间占用：缩小页表</h2>
<p>对于线性页表来说，它所需的空间太大，因此会在系统中消耗大量内存，给系统带来很大的空间负担。有一些办法可以让页表变得更小。</p>
<h3 id="更大的页"><a class="markdownIt-Anchor" href="#更大的页"></a> 更大的页</h3>
<p>使用更大的页是一种简单的缩小页表的办法。但是这种方法会很容易导致每页内的浪费，形成内部碎片问题。结果会造成应用程序分配页，但是却只使用了每一页的一小部分，物理内存便会很快地充满这些过大的页。因此，大多数系统通常使用相对较小的页大小，如x86为4KB。</p>
<h3 id="分页与分段结合"><a class="markdownIt-Anchor" href="#分页与分段结合"></a> 分页与分段结合</h3>
<p>在一个进程的虚拟地址空间中，可能会有堆和栈使用部分很小的情况。这时便会有大量的分页表没有被使用，充满了无效项，而在页表中保存这些无效项显然是没有意义的。</p>
<p>将分页与分段结合的办法是为每个逻辑分段提供一个单独的页表，同时使用基址寄存器保存段的页表的物理地址，使用界限寄存器指示页表的结尾。此时，虚拟地址空间的格式变为：Segment|VPN|Offset，在TLB未命中时也需要硬件使用分段位来确定使用哪一个基址和界限对。</p>
<p>通过这种方式，在栈和堆之间未分配的页将不再占用页表中的空间。但是这种方式也存在一些问题，使用分段的时候对虚拟地址空间有一定的使用模式要求，如果使用大而稀疏的堆仍然会导致大量的页表浪费；由于页表变为任意大小也会导致外部碎片。</p>
<h3 id="多级页表"><a class="markdownIt-Anchor" href="#多级页表"></a> 多级页表</h3>
<p>在x86系统中，使用的是多级页表的方法。多级页表将线性页表变成了类似于树的结构：树的每一个叶结点都对应了一个页表项，如果某一页的页表项无效则不分配页表，相当于没有叶结点；每个叶结点的父结点是一个被称为页目录的结构，页目录用于保存页表的存放位置（相当于存放指向页表的指针，如果对应的页没有使用则为空）。一个页目录可以覆盖所有的虚拟地址空间，也可以覆盖一部分虚拟地址空间，通过这种方式形成了多级页表的结构。</p>
<p>下图所示的是一个二级页表的结构：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105003455.png" alt="image-20201101233633914" /></p>
<p>在使用多级页表时，虚拟地址与页表的对应关系如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105003502.png" alt="image-20201101234734378" /></p>
<p>使用多级页表的优缺点如下：</p>
<ul>
<li>
<p>优点：</p>
<ul>
<li>多级页表分配的页表空间与虚拟地址空间的使用量成正比，因此它通常很紧凑，并且支持稀疏的虚拟地址空间。</li>
<li>如果仔细地去构造多级页表，可以将页表的每个部分都能够整齐地放入一页中，从而更容易管理物理内存。</li>
<li>页表的树形结构使得它可以存放在物理内存的任何地方。</li>
</ul>
</li>
<li>
<p>缺点：</p>
<ul>
<li>造成了时间上的额外开销，在TLB未命中时需要从物理内存加载多次才能获取正确的地址转换信息（先加载页目录，一直到最底层的PTE本身）。</li>
<li>比较复杂，在硬件或是操作系统的实现上都比线性页表更复杂一些。</li>
</ul>
</li>
</ul>
<h3 id="将页表放入磁盘"><a class="markdownIt-Anchor" href="#将页表放入磁盘"></a> 将页表放入磁盘</h3>
<p>由于页表可能太大无法一次装入物理内存，因此操作系统会将页表存放在内核虚拟内存中，从而允许系统在物理内存压力较大的时候，将页表中的一部分交换到磁盘中去。</p>
<h1 id="超越物理空间"><a class="markdownIt-Anchor" href="#超越物理空间"></a> 超越物理空间</h1>
<h2 id="引言-3"><a class="markdownIt-Anchor" href="#引言-3"></a> 引言</h2>
<p>操作系统常常为一个进程创造一个巨大的虚拟地址空间，从而使得人们在写程序的时候，不必担心程序的数据结构是否有充足的空间去存储，这是操作系统提供的一个强大的假象。但是这样便会出现虚拟地址空间大于实际物理地址空间的情况（比如在一个64位的计算机上有很大的可能性会这样）。而且，一个操作系统内部有多个正在运行的进程，操作系统需要同时为它们提供巨大地址空间的假象。</p>
<p>这就要求操作系统提供支持，能够从物理内存中换出一些当前没有使用的页并将他们妥善保存。具体来说，操作系统会使用硬盘来保存虚拟内存页，并在需要的时候从硬盘中读取，这也就相当于是将物理内存作为了硬盘的缓存。</p>
<p>因此，在任意时刻，虚拟页面的集合都分为三个不相交的子集：</p>
<ul>
<li>未分配的：虚拟内存系统还没有分配或者创建的页。未分配的块中没有任何数据，因此也不占用任何磁盘空间；</li>
<li>缓存的：当前已缓存在物理内存中的已分配页；</li>
<li>未缓存的：未缓存在物理内存中的已分配页。</li>
</ul>
<p>一个进程的虚拟内存和物理内存的关系如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105003509.png" alt="image-20201103221844357" /></p>
<h2 id="交换空间"><a class="markdownIt-Anchor" href="#交换空间"></a> 交换空间</h2>
<p>操作系统使用了硬盘上的一部分空间，用于物理页的移入与移出，这样的空间被称为<strong>交换空间</strong>（swap space）。交换空间的大小设置很重要，这决定了系统在某个时刻可以使用的最大物理内存页数。</p>
<p>为了能够让操作系统读取或写入交换空间，操作系统需要记住给定页的磁盘地址。操作系统通过使用PTE中的某些位（比如存储页的PFN的这些位，因为存储在硬盘中时没有对应的物理页）来存储硬盘数据。在需要引用这一页时，操作系统便会在PTE中查找硬盘中的存储位置，并向硬盘发送请求来将数据读取到物理内存中去。</p>
<p>但是需要注意的是，交换空间并不是唯一的硬盘交换目的地。例如运行一个二进制程序，这个二进制程序的代码页原本位于硬盘上，在运行时被加载到物理内存中，当系统需要在物理内存中腾出空间满足其他操作时，便可以安全的直接覆盖掉代码页使用的物理内存空间，在重新运行的时候仍然从原来的位置加载该程序。</p>
<h2 id="页错误"><a class="markdownIt-Anchor" href="#页错误"></a> 页错误</h2>
<h3 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h3>
<p>在使用交换空间之后，物理内存引用的过程也会发生一些变化。当出现TLB未命中时，此时便可能出现页表位于硬盘上的情况。判断要引用的页是否位于物理内存中，需要使用到页表项中的存在位（参见上文的页表一节），如果存在位为1则表示该页在物理内存中，存在位为0则表示在硬盘上。访问不在物理内存中的页通常被称为<strong>页错误</strong>。</p>
<p>无论是硬件管理TLB还是软件管理TLB，页错误的处理都是由操作系统负责的。这是因为页错误导致的硬盘操作很慢，同时处理页故障时需要知道很多细节。</p>
<h3 id="处理流程"><a class="markdownIt-Anchor" href="#处理流程"></a> 处理流程</h3>
<p>操作系统在接收到页错误之后，首先需要为将要换入的页找到一个空闲的物理帧，如果没有这样的物理帧，则需要运行交换算法，将物理内存中的一些页保存到硬盘上并释放掉。之后，操作系统会从PTE中查找硬盘地址，并向硬盘发出I/O请求，将该页读取到物理内存。当硬盘I/O操作完成之后，操作系统便会更新页表，将此页标记为存在，更新页表项的PFN字段以记录页的物理内存位置，然后重试指令。重试会导致TLB未命中，然后再一次尝试时TLB命中，硬件能够访问所需的值。</p>
<p>由于物理内存与硬盘的I/O操作的时间代价是昂贵的，因此当I/O运行时，进程将处于阻塞状态。当页错误正常处理时，操作系统可以自由运行其他可执行的进程，从而充分地利用硬件。</p>
<h2 id="页交换"><a class="markdownIt-Anchor" href="#页交换"></a> 页交换</h2>
<h3 id="操作流程"><a class="markdownIt-Anchor" href="#操作流程"></a> 操作流程</h3>
<p>当物理内存已满或是接近满的时候，操作系统便会交换出一个或多个页到硬盘上去，以便为操作系统即将换入的新页留出空间。操作系统通常会预留一小部分空闲的物理内存，为此操作系统会设置高水位线（High Watermark, HW）和低水位线（Low Watermark, LW）来决定何时从物理内存中清除页。当操作系统发现可用的页少于LW时，后台负责释放物理内存的线程便会开始运行，直到有HW个可用的物理页，这个后台线程被称为交换守护进程或页守护进程。</p>
<p>页交换的过程可以做一些优化，例如将多个要写入的页聚集或分组，将它们同时写入交换空间。这种合并操作减少了硬盘的寻道和旋转开销，从而提高了硬盘的效率。</p>
<h3 id="替换策略"><a class="markdownIt-Anchor" href="#替换策略"></a> 替换策略</h3>
<p>物理内存包含了系统中所有页的子集，因此可以将其看作是系统中虚拟内存页的缓存。由于磁盘访问的成本非常高，因此在替换物理内存页的时候，需要选用合适的替换策略，使得缓存未命中最少，从而使得从磁盘获取页的次数最少。</p>
<h4 id="最优替换策略"><a class="markdownIt-Anchor" href="#最优替换策略"></a> 最优替换策略</h4>
<p>这一策略替换物理内存中在最远将来才会被访问到的页，因此具有最低的缓存未命中率。但是这一策略是很难实现的，因此常常拿这一策略与其他的优化策略进行对比。</p>
<h4 id="先入先出替换策略"><a class="markdownIt-Anchor" href="#先入先出替换策略"></a> 先入先出替换策略</h4>
<p>这一策略的实现很简单，使用一个队列来放置所有进入系统的页，在替换页的时候按照先入先出的策略进行替换。这一策略无法确定页的重要性，因此明显不如最优策略。</p>
<h4 id="随机替换策略"><a class="markdownIt-Anchor" href="#随机替换策略"></a> 随机替换策略</h4>
<p>这种策略在物理内存满的时候随机选择一个页进行替换。这种策略的实现简单，但是性能表现完全取决于运气。</p>
<h4 id="基于历史数据的策略"><a class="markdownIt-Anchor" href="#基于历史数据的策略"></a> 基于历史数据的策略</h4>
<p>由于程序的局部性原理，页的一个重要属性便是访问的近期性，越近被访问的页再次被访问的概率也越大。因此页替换策略可以使用访问频率这一历史信息，比如最不经常使用（LFU）策略会替换掉最不经常使用的页，最少最近使用（LRU）策略替换最近最少使用的页面。</p>
<p>但是为了实现这种策略，系统需要对每次页访问都记录一个对应的时间字段，在需要替换页时便可以扫描系统中所有页的时间字段以找到最近最少使用的页。随着系统中页数量的增长，这一操作将会付出很高的时间代价。</p>
<h4 id="近似lru"><a class="markdownIt-Anchor" href="#近似lru"></a> 近似LRU</h4>
<p>从计算开销的角度来看，许多现代系统都使用了近似LRU的做法，其中一个简单的方法被称作时钟算法，为了实现这一算法需要使用一个使用位（Use bit，也可以被称为参考位，Reference bit）。这一算法将系统中的所有页放入一个循环列表中，时钟指针开始时指向某个页。当必须进行页替换时，操作系统检查当前指向的页P的使用位，如果是1则表明页面P最近被使用，操作系统将其置为0然后将时钟指针递增；如果是0则表明页面P最近没有被使用过，可以被替换掉。</p>
<p>时钟算法的一个改进是额外考虑了物理内存中的页是否被修改。如果页已经被修改，踢出它时需要将其写回磁盘；而如果没有被修改则踢出时无需额外的I/O开销。因此一些系统会倾向于踢出干净页，为了支持这种行为，需要使用到一个脏位（dirty bit，又叫修改位，modified bit），每次写入页面的时候都要设置此位。通过这种方式，时钟算法可以修改成先踢出未被使用又干净的页，无法找到这种页时再找脏的未使用页面，或是一些其他的策略。</p>
<h3 id="其他使用策略"><a class="markdownIt-Anchor" href="#其他使用策略"></a> 其他使用策略</h3>
<p>为了提高页交换的效率，除了页面替换策略之外，操作系统还为虚拟内存子系统设置了一些其他策略，例如：</p>
<ul>
<li>页选择策略：操作系统决定何时将页载入物理内存。对于大多数页而言，操作系统只需要按需分页，在页被访问的时候载入即可。由于程序具有局部性，操作系统可能会猜测一个页面即将被使用，从而提前载入，这种行为被称为预取（prefetching）。</li>
<li>写入策略：因为硬盘驱动器在执行单次大的写操作比许多小的写操作要有效，因此操作系统可能会在物理内存中收集一些待完成的写入内容，然后将它们以更高效的方式写入硬盘。这种行为被称为聚集写入或分组写入。</li>
</ul>
<h3 id="抖动"><a class="markdownIt-Anchor" href="#抖动"></a> 抖动</h3>
<p>当物理内存被超额请求时，也就是进程的物理内存需求超过了可用物理内存（内存过载），系统将不断地进行换页，这种情况被称为抖动。</p>
<p>操作系统可以使用准入控制的方法来应对抖动，也就是系统不运行部分进程，这样能够使得进程工作集减少，它们活跃的页面可以放入物理内存。</p>
<p>一些系统也使用更严格的方法来处理物理内存过载。比如一些版本的Linux有一个守护进程，它会在内存过载的时候选择一个内存密集型的进程并杀死它。但是这种方法存在一定风险，可能会杀掉关键的进程。</p>
<h1 id="实际案例"><a class="markdownIt-Anchor" href="#实际案例"></a> 实际案例</h1>
<h2 id="core-i7的地址翻译"><a class="markdownIt-Anchor" href="#core-i7的地址翻译"></a> Core i7的地址翻译</h2>
<p>一个Core i7处理器的内存系统如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105003519.png" alt="image-20201103233705149" /></p>
<p>在这一处理器中，实现支持48位的虚拟地址空间和52位的物理地址空间。</p>
<blockquote>
<p>备注：在使用计算机时，其最大支持的内存是由操作系统和硬件两方面决定的。</p>
<p>CPU的地址总线数目决定了物理地址的寻址范围，比如32根地址总线的CPU就只能支持<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>32</mn></msup><mo>≈</mo><mn>4</mn><mtext>GB</mtext></mrow><annotation encoding="application/x-tex">2^{32}\approx 4\text{GB}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord text"><span class="mord">GB</span></span></span></span></span>的物理地址范围（注意平时所说的32位和64位CPU指的是CPU能够一次处理的数据宽度，而不是地址总线的数目）。而64位CPU一般具有更多的地址总线，因此支持的物理地址范围也更大。</p>
<p>操作系统决定了逻辑地址（即虚拟地址）的寻址范围。因此，对于32位的操作系统，它逻辑地址的寻址范围是4GB。而对于64位操作系统，它支持的逻辑地址空间更大，例如Linux 64位系统使用的是48位的逻辑地址空间。</p>
</blockquote>
<p>处理器中的地址翻译流程如下图所示，其中省略掉了i-cache（指令缓存）、i-TLB、L2、L3级缓存和统一TLB：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105003527.png" alt="image-20201103233915879" /></p>
<h2 id="linux内存系统"><a class="markdownIt-Anchor" href="#linux内存系统"></a> Linux内存系统</h2>
<p>在Linux系统中，虚拟内存中的内容大致如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105003703.png" alt="image-20201103235156839" /></p>
<p>Linux为每一个进程都维护了一个像上图所示单独的虚拟地址空间。其中主要包括内核虚拟内存和进程虚拟内存两部分。</p>
<h3 id="内核虚拟内存与进程虚拟内存"><a class="markdownIt-Anchor" href="#内核虚拟内存与进程虚拟内存"></a> 内核虚拟内存与进程虚拟内存</h3>
<p>内核虚拟内存包含内核中的代码和数据结构，其中内核虚拟内存的某些区域被映射到所有进程共享的物理页面。比如每个进程共享内核的代码和全局数据结构。其中值得注意的是，Linux 也将一组连续的虚拟页面(大小等于系统中DRAM 的总量）映射到相应的一组连续的物理页面。这就为内核提供了一种便利的方法来访问物理内存中任何特定的位置：例如，当它需要访问页表，或在一些设备上执行内存映射的I/O操作，而这些设备被映射到特定的物理内存位置时。</p>
<p>内核虚拟内存的其他区域包含每个进程都不相同的数据。比如说，页表、内核在进程的上下文中执行代码时使用的找，以及记录虚拟地址空间当前组织的各种数据结构。</p>
<p>进程虚拟内存中主要存放的是该进程对应的代码、数据、堆、共享库以及栈段。</p>
<h3 id="虚拟内存区域"><a class="markdownIt-Anchor" href="#虚拟内存区域"></a> 虚拟内存区域</h3>
<p>Linux 将虚拟内存组织成一些区域（也叫做段）的集合。一个区域就是已分配的虚拟内存的连续片，这些页是以某种方式相关联的。例如，代码段、数据段、堆、共享库段，以及用户栈都是不同的区域。</p>
<p>也就是说，Linux系统在管理虚拟内存时，使用的是段页结合的方式。</p>
<h3 id="内存映射"><a class="markdownIt-Anchor" href="#内存映射"></a> 内存映射</h3>
<p>Linux 通过将一个虚拟内存区域与一个磁盘上的对象（object）关联起来，以初始化这个虚拟内存区域的内容，这个过程称为内存映射（memory mapping）。</p>
<p>虚拟内存区域可以映射到以下两种类型的对象之一：</p>
<ol>
<li>文件系统中的普通文件。</li>
<li>匿名文件：由内核创建的，内容全为二进制0。</li>
</ol>
<p>一个对象可以被映射到虚拟内存的一个区域，要么作为共享对象，要么作为私有对象。如果一个进程将一个共享对象映射到它的虚拟地址空间的一个区域内，那么这个进程对这个区域的任何写操作，对于那些也把这个共享对象映射到它们虚拟内存的其他进程而言，也是可见的。而且，这些变化也会反映在磁盘上的原始对象中。一个映射到共享对象的虚拟内存区域叫做共享区域。</p>
<p>另一方面，对于一个映射到私有对象的区域做的改变，对于其他进程来说是不可见的，并且进程对这个区域所做的任何写操作都不会反映在磁盘上的对象中。映射到私有对象的区域叫做私有区域。但是需要注意的是，两个进程将一个私有对象映射到它们虚拟内存的不同区域，但是共享这个对象同一个物理副本。在物理内存中这一区域结构被标记为私有的写时复制，页表条目被标记为只读。只要没有进程试图写它自己的私有区域，它们就可以继续共享物理内存中对象的一个单独副本。然而，只要有一个进程试图写私有区域内的某个页面，那么这个写操作就会触发一个保护故障，在物理内存中创建这个页面的一个新副本，更新页表条目指向这个新的副本，然后恢复这个页面的可写权限。这一过程如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105003711.png" alt="image-20201104002631085" /></p>
<h1 id="内存使用"><a class="markdownIt-Anchor" href="#内存使用"></a> 内存使用</h1>
<h2 id="内存类型"><a class="markdownIt-Anchor" href="#内存类型"></a> 内存类型</h2>
<p>在C程序中有两种不同类型的内存：</p>
<ul>
<li>栈内存：它的申请和释放操作通过编译器隐式管理，又被称为自动内存。</li>
<li>堆内存：它的申请和释放操作都由程序员显式完成。</li>
</ul>
<h2 id="堆内存的使用"><a class="markdownIt-Anchor" href="#堆内存的使用"></a> 堆内存的使用</h2>
<h3 id="库调用"><a class="markdownIt-Anchor" href="#库调用"></a> 库调用</h3>
<p>在C语言中，内存操作使用的是内存分配库，而不是系统调用。它是建立在一些系统调用之上的，这些系统调用会进入操作系统来请求内存或是释放内存。</p>
<p>常用的库函数有：</p>
<ul>
<li>malloc()函数：用于申请堆内存。函数的输入参数是一个size_t类型的参数，表示需要申请多少字节的堆内存。如果成功就返回一个指向新申请空间的指针（类型为void），失败则返回NULL。</li>
<li>calloc()函数：与malloc函数类似，在返回之前将申请到的内存空间中的内容初始化为0。</li>
<li>free()函数：用于释放之前申请的堆内存。函数的输入参数是一个由malloc()返回的指针。在释放空间时，程序员不用考虑分配的堆内存的大小，它是由内存分配库本身记录与追踪的。</li>
<li>realloc()函数：创建一个新的更大的内存区域，将旧区域复制到其中，并返回新区域的指针。</li>
</ul>
<h3 id="常见错误"><a class="markdownIt-Anchor" href="#常见错误"></a> 常见错误</h3>
<ul>
<li>忘记分配内存。一些例程在调用之前默认已经将内存空间分配好，如函数<code>strcpy(dst, src)</code></li>
<li>没有分配足够的内存，又叫缓冲区溢出。这可能会导致其他的变量被修改，带来严重的后果，也是安全漏洞的来源。</li>
<li>忘记初始化分配的内存。如果没有初始化这块内存区域，程序在读取其内容时会得到一些未知值的数据，这些数据可能是有害的。</li>
<li>忘记释放内存。这种错误被称为内存泄漏，在长时间运行的应用程序或系统中，这会导致内存不足。但是对于一些运行时间很短的程序，由于进程结束之后操作系统会清理掉为它分配的所有页面，所以不会发生内存泄漏。</li>
<li>在用完之前释放内存。这样会导致之前使用malloc()函数得到的指针变为悬挂指针，随后再次使用时可能会导致程序崩溃，或是覆盖掉有效内存。</li>
<li>反复释放内存。这种行为是未定义的，会使得内存分配库做出未知的行为，可能造成崩溃。</li>
<li>错误地调用free()。free()函数只期望传入malloc()函数得到的指针，传入一些其他的值属于危险操作。</li>
</ul>
<h1 id="空闲空间管理"><a class="markdownIt-Anchor" href="#空闲空间管理"></a> 空闲空间管理</h1>
<p>无论是malloc()库还是操作系统本身，都会遇到碎片处理问题，因此我们最后讨论一些关于空闲空间如何管理的知识。在下面的讨论中，我们假设分配程序管理的是连续的字节区域，而且内存一旦被分配就不能被重定位到其他位置。</p>
<h2 id="底层机制"><a class="markdownIt-Anchor" href="#底层机制"></a> 底层机制</h2>
<h3 id="空闲列表"><a class="markdownIt-Anchor" href="#空闲列表"></a> 空闲列表</h3>
<p>空闲空间的管理通常是通过空闲列表来实现的。空闲列表包含了一组元素，记录堆中的哪些连续的地址空间还没有分配。其中，每个元素包含了空闲空间的起始位置与大小。</p>
<p>空闲列表是在空闲空间的内部建立的，具体是在每个空闲空间的头部放入一些信息，记录这个空闲块的大小以及下一个空闲块的指针。因此，一个空闲块的内部大致如下图所示：</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105003718.png" alt="image-20201101164740664" style="zoom:67%;" />
<h3 id="分割与合并"><a class="markdownIt-Anchor" href="#分割与合并"></a> 分割与合并</h3>
<p>在申请空间时，假如要申请的空间大小比一个空闲块的空间要小，则分配程序会执行分割动作，将空闲块分成两份：一份返回给用户使用；另一份留在空闲列表中，同时修改对应的起始地址以及块长度信息。</p>
<p>如果用户归还了一个空间，需要将这块空间插入到空闲列表中，并查看其邻近的空闲空间块是否可以合并。如果可以，就将几个小空间合并为一个大空间。</p>
<h3 id="追踪已分配空间的大小"><a class="markdownIt-Anchor" href="#追踪已分配空间的大小"></a> 追踪已分配空间的大小</h3>
<p>在调用free()函数时，并没有传入块大小的参数，这是因为大多数的分配程序都会使用头块来保存一些额外信息。头块通常位于分配的内存块之前，包含了分配空间的大小、用于完整性检查的幻数、用于加速空间释放的额外指针等信息。因此，在释放块的空间时，实际上释放的是头块大小加上分配给用户的空间大小。一个已分配区域与头块所构成的大致结构如下图所示：</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201105003722.png" alt="image-20201101154639000" style="zoom: 67%;" />
<h3 id="让堆增长"><a class="markdownIt-Anchor" href="#让堆增长"></a> 让堆增长</h3>
<p>分配程序会从一个很小的堆开始使用，当堆的虚拟内存空间耗尽时，再向操作系统申请更大的空间。这一过程需要进行系统调用，操作系统会找到空闲的物理内存页，将它们映射到请求进程的虚拟地址空间中去，并返回新的堆尾地址。这样便有了更大的堆，可以处理新的空间请求。</p>
<h2 id="空间分配策略"><a class="markdownIt-Anchor" href="#空间分配策略"></a> 空间分配策略</h2>
<p>用户在申请一个空间之后，分配程序便选择合适的空闲空间分配给用户。一些常用的分配策略如下：</p>
<ul>
<li>最优匹配：遍历整个空闲列表，找到和请求大小一样或者更大的空闲块，然后返回这组候选者中最小的一块。这种方式可以避免空间浪费，但是付出的性能代价较高。</li>
<li>最差匹配：尝试寻找最大的空闲块，分割并满足用户需求之后，将剩余的块加入空闲列表。这种方式会导致过量的碎片，同时还有很高的开销。</li>
<li>首次匹配：找到第一个足够大的块，将请求的空间返回给用户。这种方法具有速度优势，但是会让空闲列表的开头出现很多小块。</li>
<li>下次匹配：这种算法多维护一个指针，指向上一次查找结束的位置，然后下次从这个指针处开始搜索。这样就将查找操作扩散到整个列表中去，避免了对列表开头频繁的分割。这种匹配的性能与首次匹配接近，避免了遍历查找。</li>
<li>分离空闲列表：如果一个应用程序经常申请一种或几种大小的内存空间，那就用一个独立的列表只管理这种大小的对象，对于其他大小的请求都交给更通用的内存分配程序。这样就避免了碎片的问题，同时特定大小的内存分配和释放都很快。</li>
<li>伙伴系统：将空闲空间看作是大小为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>N</mi></msup></mrow><annotation encoding="application/x-tex">2^N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span></span>的空间，当有一个内存分配请求时，将空闲空间递归地一分为二，直到刚好可以满足所请求的大小（再分下去就无法满足）。由于分配的空间只允许为2的幂指数大小，因此会有内部碎片的麻烦。但是这种方法在内存释放时，空闲块的合并很方便（每对互为伙伴的块在二进制地址中只有一位不同）</li>
</ul>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<ol>
<li>Operating Systems: Three Easy Pieces</li>
<li>深入理解计算机系统 第三版</li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzI3NjU3ODEyOS9hbnN3ZXIvOTA4MzQxODc4">https://www.zhihu.com/question/276578129/answer/908341878<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhZ3N5YW5nL2FydGljbGUvZGV0YWlscy83OTIzNDQ5MQ==">https://blog.csdn.net/wagsyang/article/details/79234491<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODk3MjkxMC9hcnRpY2xlL2RldGFpbHMvOTc2MzE3MjA=">https://blog.csdn.net/weixin_38972910/article/details/97631720<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC83MzY5NjY3MA==">https://zhuanlan.zhihu.com/p/73696670<i class="fa fa-external-link-alt"></i></span></li>
</ol>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>操作系统-并发</title>
    <url>/2021/01/09/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-%E5%B9%B6%E5%8F%91/</url>
    <content><![CDATA[<h1 id="线程"><a class="markdownIt-Anchor" href="#线程"></a> 线程</h1>
<h2 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h2>
<p><strong>线程</strong>（thread）是操作系统能够进行CPU运算调度的最小单位，它被包含在进程之中，是进程的实际运作单位。对于一个进程来说，它可以有一个或多个线程，多线程的程序拥有多个执行点，同时它们共享地址空间。在进程的地址空间中，每个线程都会有一块自己的栈空间。因此也可以这样理解，多线程中的每个线程类似于独立的进程，只是这些线程共享地址空间，从而能够访问相同的数据。</p>
<p>线程之间的上下文切换类似于进程之间的上下文切换，每个线程都有它自己的线程上下文（thread context），包括一个唯一的整数线程ID（Thread ID, TID）、栈、栈指针、程序计数器、通用目的寄存器和条件码。但是线程的切换比起进程的切换更加轻量化一些，因此也会比进程的切换快得多。</p>
<a id="more"></a>
<blockquote>
<p>备注—一个进程与线程的简单例子：</p>
<p>在计算机中，我们打开QQ，便相当于打开了一个进程，如果打开多个QQ并使用不同的账号登录，这对应的是多个不同的进程；而在登录的其中一个QQ账号中，打开一个聊天窗口便对应于一个线程，一个账号中可以打开多个聊天窗口便是多线程。</p>
</blockquote>
<h2 id="并发问题"><a class="markdownIt-Anchor" href="#并发问题"></a> 并发问题</h2>
<p>如果一个逻辑流的执行在时间上与另一个流重叠，称为并发流，这两个流被称为并发地运行。多个流并发执行的一般现象被称为<strong>并发</strong>。在多线程的并发执行中，由于这些线程会共享地址空间，这就带来了一些必须要处理的问题。</p>
<blockquote>
<p>备注—并发（concurrent）与并行（parallel）：</p>
<p>在计算机系统中，只要两个任务在时间上重叠就被称为并发，这一概念并不关心任务如何具体地被执行，与执行这些任务的处理器核数或者是计算机数无关。并发主要关注的是任务的抽象调度，相当于是站在任务安排者视角看到的东西。</p>
<p>并行是并发的一个真子集，指的是两个流并发地运行在不同的处理器核或者计算机上。并行关注的是任务的实际执行，相当于是站在任务执行者视角的概念。</p>
</blockquote>
<h3 id="临界区"><a class="markdownIt-Anchor" href="#临界区"></a> 临界区</h3>
<p>由于线程之间共享地址空间，因此可能会出现多个线程访问共享资源的情况，共享资源通常是一个变量或者数据结构。<strong>临界区</strong>（critical section）指的是访问共享资源的代码片段。</p>
<h3 id="竞态条件"><a class="markdownIt-Anchor" href="#竞态条件"></a> 竞态条件</h3>
<p>当多个执行线程大致同时进入临界区时，如果它们都试图更新共享的数据结构，则会导致非期望的结果，而这种结果通常也是我们不希望得到的。这种情况被称为<strong>竞态条件</strong>（race condition）。</p>
<h3 id="不确定性"><a class="markdownIt-Anchor" href="#不确定性"></a> 不确定性</h3>
<p>如果程序中包含了一个或者多个竞态条件，那么程序的输出则会因运行而异，具体取决于哪些线程在何时运行。这样会导致结果出现<strong>不确定性</strong>（indeterminate），然而我们通常期望程序能给出一个确定的结果。</p>
<p>为了避免程序的不确定性，代码需要使用<strong>互斥</strong>（mutual exclusion）。通过这种方式，便可以保证只有一个线程进入临界区，从而避免出现竞态条件，产生确定的程序输出。</p>
<p>因此，我们需要硬件提供一些有用的指令，可以在这些指令之上构建一个通用的<strong>同步原语</strong>（synchronization primitive）集合，从而以同步和受控的方式访问临界区。</p>
<h2 id="线程api"><a class="markdownIt-Anchor" href="#线程api"></a> 线程API</h2>
<h3 id="线程创建"><a class="markdownIt-Anchor" href="#线程创建"></a> 线程创建</h3>
<p>创建一个线程用到的函数为：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;pthread.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pthread_create</span><span class="params">(<span class="keyword">pthread_t</span>* thread, <span class="comment">//指向pthread_t结构类型的指针，用于和线程的交互</span></span></span></span><br><span class="line"><span class="function"><span class="params">                   <span class="keyword">const</span> <span class="keyword">pthread_attr_t</span>* attr, <span class="comment">//指定该线程可能据有的任何属性</span></span></span></span><br><span class="line"><span class="function"><span class="params">                   <span class="keyword">void</span>* (*start_routine)(<span class="keyword">void</span>*), <span class="comment">//说明这个线程在哪一个函数中运行</span></span></span></span><br><span class="line"><span class="function"><span class="params">                   <span class="keyword">void</span>* arg <span class="comment">//传递给线程开始执行的函数的参数，如果不需要参数则传入NULL即可</span></span></span></span><br><span class="line"><span class="function"><span class="params">                   )</span></span>;</span><br></pre></td></tr></table></figure>
<h3 id="线程完成"><a class="markdownIt-Anchor" href="#线程完成"></a> 线程完成</h3>
<p>如果要等待线程完成，则需要调用函数<code>pthread_join()</code>。这一函数接受两个参数，第一个是<code>pthread_t</code>类型，用于指定要等待的线程；第二个参数是一个指向<code>void</code>的指针，指向希望得到的返回值，如果不需要返回值则传入NULL即可。</p>
<p>需要注意的是，必须非常小心地从线程中返回值，尤其是不要返回一个指针并让它指向线程调用栈上分配的东西。</p>
<h3 id="锁"><a class="markdownIt-Anchor" href="#锁"></a> 锁</h3>
<p>POSIX线程库提供了一些通过锁来提供互斥进入临界区的函数：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//锁的初始化</span></span><br><span class="line"><span class="keyword">pthread_mutex_t</span> lock=PTHREAD_MUTEX_INITIALIZER; <span class="comment">//第一种方法，将锁设置为默认值</span></span><br><span class="line"><span class="keyword">int</span> rc=pthread_mutex_init(&amp;lock,<span class="literal">NULL</span>); <span class="comment">//第二种方法，调用函数，第一个参数是锁本身的地址，它是一个指向pthread_mutex_t类型的指针；第二个参数是一组可选属性，NULL表示使用默认值。函数执行成功则返回0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//加锁解锁函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pthread_mutex_lock</span><span class="params">(<span class="keyword">pthread_mutex_t</span>* mutex)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pthread_mutex_unlock</span><span class="params">(<span class="keyword">pthread_mutex_t</span>* mutex)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取锁，通常应该避免使用，但是对于避免死锁来说会很有用</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pthread_mutex_trylock</span><span class="params">(<span class="keyword">pthread_mutex_t</span>* mutex)</span></span>; <span class="comment">//尝试获取锁，如果锁已被占用则会失败</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pthread_mutex_timedlock</span><span class="params">(<span class="keyword">pthread_mutex_t</span>* mutex, struct timespec* abs_timeout)</span></span>; <span class="comment">//在超时或者获取锁之后返回</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//销毁锁</span></span><br><span class="line">pthread_mutex_destroy()</span><br></pre></td></tr></table></figure>
<h3 id="条件变量"><a class="markdownIt-Anchor" href="#条件变量"></a> 条件变量</h3>
<p>当线程之间必须发生某种信号时，如果一个线程在等待另一个线程继续执行某些操作，则需要使用到条件变量。要使用条件变量，需要额外有一个相关的锁。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pthread_cond_wait</span><span class="params">(<span class="keyword">pthread_cond_t</span>* cond, <span class="keyword">pthread_mutex_t</span>* mutex)</span></span>; <span class="comment">//使调用线程进入休眠状态，等待其他线程发出信号</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pthread_cond_signal</span><span class="params">(<span class="keyword">pthread_cond_t</span>* cond)</span></span>; <span class="comment">//发出信号</span></span><br></pre></td></tr></table></figure>
<h1 id="锁-2"><a class="markdownIt-Anchor" href="#锁-2"></a> 锁</h1>
<h2 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h2>
<p>锁就是一个变量，因此我们需要声明一个某种类型的锁变量才能使用。这个锁变量保存了锁在某一时刻的状态：可用（没有线程持有锁）或占用（一个线程持有锁，处于临界区）。锁为程序员提供了最小程度的调度控制，让程序员获得一些控制权，从而使得操作系统的调度变得可控。</p>
<p>在POSIX库中，锁被称为互斥量，因为它被用来提供线程之间的互斥。对于锁的获取和释放有一组函数：<code>lock()</code>和<code>unlock()</code>函数。调用<code>lock()</code>函数尝试获取锁，如果没有其他线程持有锁，那么该线程会获得锁，进入临界区。这个线程也被称为锁的持有者。如果另外一个进程对相同的锁变量调用<code>lock()</code>，因为锁被另一个线程持有，这一调用便不会返回。锁的持有者调用<code>unlock()</code>函数之后，便失去对锁的所有权。如果没有其它等待线程，则锁的状态变为可用；如果有等待线程，则其中一个等待线程会收到锁状态的变化，获取锁并进入临界区。</p>
<p>在实际编程中，一般倾向于使用不同的锁来保护不同的数据和结构，从而允许更多的线程进入临界区。这种细粒度的方案可以增加并发。同时也要注意，如果在程序执行的过程中会频繁地获取锁、释放锁，那么高并发就没有什么意义。</p>
<h2 id="锁的实现"><a class="markdownIt-Anchor" href="#锁的实现"></a> 锁的实现</h2>
<h3 id="评价标准"><a class="markdownIt-Anchor" href="#评价标准"></a> 评价标准</h3>
<ul>
<li>提供互斥：最基本的评价标准，判断锁是否有效，以及能否阻止多个线程同时进入临界区；</li>
<li>公平性：是否能保证每一个竞争线程有公平的机会抢到锁，不会有竞争锁的线程会饿死，一直无法获得锁的情况；</li>
<li>性能：使用锁之后的额外时间开销，需要考虑没有竞争、一个CPU上多个线程竞争、以及多个CPU多个线程竞争等不同使用场景。</li>
</ul>
<h3 id="控制中断"><a class="markdownIt-Anchor" href="#控制中断"></a> 控制中断</h3>
<p>最早提供的互斥解决方案之一是在临界区关闭中断，这种方案是为单处理器开发的，伪代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lock</span><span class="params">()</span></span>&#123;</span><br><span class="line">	DisableInterrupts();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">unlock</span><span class="params">()</span></span>&#123;</span><br><span class="line">	EnableInterrupts();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这种方法虽然简单，但是却有很多缺点。首先是这种方法要求我们允许调用线程执行特权操作，也就是说信任这种机制不会被滥用，但是这样常常会有麻烦；第二是这种方法不支持多处理器；而且关闭中断可能也会导致严重的系统问题；最后还有效率低的问题，因为打开与关闭中断的代码执行地很慢。</p>
<p>因此，只有在很有限的情况之下才能用关闭中断来实现互斥原语。例如某些情况下操作系统本身会采用屏蔽中断的方式，保证访问自己数据结构的原子性，或是避免某些复杂的中断处理情况。</p>
<h3 id="自旋锁"><a class="markdownIt-Anchor" href="#自旋锁"></a> 自旋锁</h3>
<p>自旋锁是最简单的一种锁，它一直自旋直到锁可用。在单处理器上，需要抢占式的调度器才能使用自旋锁，否则会因为自旋线程永远不会放弃CPU而导致无法使用。</p>
<p>自旋锁只允许一个线程进入临界区，因此它的正确性可以保证。但是自旋锁不提供任何公平性的保证，可能会导致饿死的情况出现；同时在单CPU上性能开销很大，因为处于自旋等待状态的线程会浪费掉它使用的CPU周期（但是多CPU上的性能不错）。</p>
<p>在不同的操作系统中，自旋锁的实现方式也各有不同。</p>
<h4 id="不同硬件原语下的实现"><a class="markdownIt-Anchor" href="#不同硬件原语下的实现"></a> 不同硬件原语下的实现</h4>
<p>为了实现自旋锁，需要硬件提供一些硬件原语的支持，这些硬件原语为一系列的原子指令。在不同的硬件原语下，自旋锁也有着不同的实现方式。</p>
<blockquote>
<p>备注—原子指令：指令执行时会像期望那样全部执行完，不能在指令中间中断。当发生中断时，原子指令要么根本没有运行，要么运行完成，没有中间状态。</p>
</blockquote>
<h5 id="测试并设置"><a class="markdownIt-Anchor" href="#测试并设置"></a> 测试并设置</h5>
<p>一些硬件提供了测试并设置指令，它返回<code>old_ptr</code>指向的旧值，同时将指针指向的值更新为<code>new</code>的新值。而且这一过程被原子地（Atomically）执行。它的伪代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">TestAndSet</span><span class="params">(<span class="keyword">int</span>* old_ptr, <span class="keyword">int</span> <span class="keyword">new</span>)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> old=*old_ptr;</span><br><span class="line">	*old_ptr=<span class="keyword">new</span>;</span><br><span class="line">	<span class="keyword">return</span> old;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用这一指令，自旋锁便可以用如下的伪代码来实现：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">lock_t</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> flag;</span><br><span class="line">&#125; <span class="keyword">lock_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">lock_t</span>* lock)</span></span>&#123;</span><br><span class="line">    lock-&gt;flag=<span class="number">0</span>; <span class="comment">//0代表没有线程持有锁，1代表锁已被持有</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lock</span><span class="params">(<span class="keyword">lock_t</span>* lock)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(TestAndSet(&amp;lock-&gt;flag,<span class="number">1</span>)==<span class="number">1</span>)&#123;</span><br><span class="line">        ; <span class="comment">//自旋并等待，在这期间什么也不做</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">unlock</span><span class="params">(<span class="keyword">lock_t</span>* lock)</span></span>&#123;</span><br><span class="line">    lock-&gt;flag=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="比较并交换"><a class="markdownIt-Anchor" href="#比较并交换"></a> 比较并交换</h5>
<p>一些系统提供了比较并交换的硬件原语，它的基本思想是检测<code>ptr</code>指向的值是否与<code>expected</code>相等，如果是则更新<code>ptr</code>所指的值为新值，否则什么也不做，并且无论哪种情况都返回程序结束时<code>ptr</code>指向的那个值。它的伪代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">CompareAndSwap</span><span class="params">(<span class="keyword">int</span>* ptr, <span class="keyword">int</span> expected, <span class="keyword">int</span> <span class="keyword">new</span>)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> actual=*ptr;</span><br><span class="line">	<span class="keyword">if</span>(actual==expected)</span><br><span class="line">		*ptr=<span class="keyword">new</span>;</span><br><span class="line">	<span class="keyword">return</span> actual;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>只需要将测试并设置中的加锁函数稍作修改，便可以用比较并交换指令实现一个自旋锁：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lock</span><span class="params">(<span class="keyword">lock_t</span>* lock)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(CompareAndSwap(&amp;lock-&gt;flag,<span class="number">0</span>,<span class="number">1</span>)==<span class="number">1</span>)&#123;</span><br><span class="line">        ; <span class="comment">//自旋并等待，在这期间什么也不做</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="链接的加载与条件式存储"><a class="markdownIt-Anchor" href="#链接的加载与条件式存储"></a> 链接的加载与条件式存储</h5>
<p>一些平台提供了链接的加载和条件式存储这一对指令，可以配合使用来实现自旋锁。链接的加载指令从内存中取出一个值存入一个寄存器，而条件式存储指令是当上一次加载的地址在期间都没有更新时才会成功。这一对指令的伪代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LoadLinked</span><span class="params">(<span class="keyword">int</span>* ptr)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> *ptr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">StoreConditional</span><span class="params">(<span class="keyword">int</span>* ptr, <span class="keyword">int</span> value)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(<span class="comment">/*no one has updated *ptr since the LoadLinked to this address*/</span>)&#123;</span><br><span class="line">		*ptr=value;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">1</span>; <span class="comment">//success</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//failed to update;</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>通过这一对指令，自旋锁的实现如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lock</span><span class="params">(<span class="keyword">lock_t</span>* lock)</span></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">		<span class="keyword">while</span>(LoadLinked(&amp;lock-&gt;flag)==<span class="number">1</span>)&#123;</span><br><span class="line">			; <span class="comment">//spin until it&#x27;s zero</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(StoreConditional(&amp;lock-&gt;flag,<span class="number">1</span>)==<span class="number">1</span>)&#123;</span><br><span class="line">			<span class="keyword">return</span>; </span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">unlock</span><span class="params">(<span class="keyword">lock_t</span>* lock)</span></span>&#123;</span><br><span class="line">	lock-&gt;flag=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="获取并增加"><a class="markdownIt-Anchor" href="#获取并增加"></a> 获取并增加</h5>
<p>这一指令可以原子地返回特定地址的旧值，并且让该值自增1。这一指令的伪代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">FetchAndAdd</span><span class="params">(<span class="keyword">int</span>* ptr)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> old=*ptr;</span><br><span class="line">	*ptr=old+<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">return</span> old;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用这一指令所实现的自旋锁如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">lock_t</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> ticket;</span><br><span class="line">	<span class="keyword">int</span> turn;</span><br><span class="line">&#125; <span class="keyword">lock_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lock_init</span><span class="params">(<span class="keyword">lock_t</span>* lock)</span></span>&#123;</span><br><span class="line">	lock-&gt;ticket=<span class="number">0</span>;</span><br><span class="line">	lock-&gt;turn=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lock</span><span class="params">(<span class="keyword">lock_t</span>* lock)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> myturn=FetchAndAdd(&amp;lock-&gt;ticket);</span><br><span class="line">	<span class="keyword">while</span>(lock-&gt;turn!=myturn)</span><br><span class="line">		; <span class="comment">//spin</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">unlock</span><span class="params">(<span class="keyword">lock_t</span>* lock)</span></span>&#123;</span><br><span class="line">	FetchAndAdd(&amp;lock-&gt;turn);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这一方法可以保证所有线程都能抢到锁，因为一个线程执行时一定会修改并获得一个<code>ticket</code>值，因此它最终一定会被调度。</p>
<h4 id="解决自旋过多"><a class="markdownIt-Anchor" href="#解决自旋过多"></a> 解决自旋过多</h4>
<p>基于硬件的锁简单且有效，但是自旋会浪费CPU的时间片。比如有N个线程去竞争一个锁，那么就会浪费掉N-1个时间片用于自旋并等待一个线程释放掉锁。如果要让锁不会不必要地自旋，需要操作系统的支持。</p>
<h5 id="放弃cpu"><a class="markdownIt-Anchor" href="#放弃cpu"></a> 放弃CPU</h5>
<p>一个简单的办法是在要自旋的时候放弃CPU的使用权，从而允许其他线程的执行。下面的伪代码以硬件原语测试并设置为例，其它的硬件原语实现使用类似的办法进行修改：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lock</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(TestAndSet(&amp;flag,<span class="number">1</span>)==<span class="number">1</span>)</span><br><span class="line">		yield(); <span class="comment">//放弃CPU</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在单CPU上，如果运行的线程数比较少，这种方法十分有效。但是在多个线程反复竞争一把锁的条件下，这一办法仍然成本很高，因为上下文切换的成本仍然存在。而且这种办法也没有考虑到饿死的问题，可能一个线程会一直处于让出的循环。</p>
<h5 id="使用队列"><a class="markdownIt-Anchor" href="#使用队列"></a> 使用队列</h5>
<p>在前面讨论的办法中，存在的真正问题是存在太多的偶然性。因此，我们需要显式地施加某种控制，决定锁释放时谁可以抢到。这需要操作系统的更多支持，并需要一个队列来保存等待锁的线程。使用这种方法的伪代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">lock_t</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> flag;</span><br><span class="line">	<span class="keyword">int</span> guard;</span><br><span class="line">	<span class="keyword">queue_t</span>* q;</span><br><span class="line">&#125; <span class="keyword">lock_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lock_init</span><span class="params">(<span class="keyword">lock_t</span>* m)</span></span>&#123;</span><br><span class="line">	m-&gt;flag=<span class="number">0</span>;</span><br><span class="line">	m-&gt;guard=<span class="number">0</span>;</span><br><span class="line">	queue_init(m-&gt;q);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lock</span><span class="params">(<span class="keyword">lock_t</span>* m)</span></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(TestAndSet(&amp;m-&gt;guard,<span class="number">1</span>)==<span class="number">1</span>)</span><br><span class="line">		;</span><br><span class="line">	<span class="keyword">if</span>(m-&gt;flag==<span class="number">0</span>)&#123;</span><br><span class="line">		m-&gt;flag=<span class="number">1</span>; <span class="comment">//获得锁</span></span><br><span class="line">		m-&gt;guard=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		queue_add(m-&gt;q,gettid());</span><br><span class="line">		setpark(); <span class="comment">//让调用线程休眠，同时避免唤醒/等待竞争的出现</span></span><br><span class="line">        m-&gt;guard=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">unlock</span><span class="params">(<span class="keyword">lock_t</span>* m)</span></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(TestAndSet(&amp;m-&gt;guard,<span class="number">1</span>)==<span class="number">1</span>)</span><br><span class="line">		; <span class="comment">//</span></span><br><span class="line">	<span class="keyword">if</span>(queue_empty(m-&gt;q))</span><br><span class="line">		m-&gt;flag=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		unpark(queue_remove(m-&gt;q)); <span class="comment">//唤醒threadID标识的线程</span></span><br><span class="line">	m-&gt;guard=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="两阶段锁"><a class="markdownIt-Anchor" href="#两阶段锁"></a> 两阶段锁</h5>
<p>两阶段锁的程序执行也如字面一样分为两个阶段：在第一阶段，会先自旋一段时间，程序希望可以获取锁；如果第一阶段没有获得锁，那么便会执行第二阶段，调用者进入睡眠状态直到锁可用。</p>
<h1 id="条件变量-2"><a class="markdownIt-Anchor" href="#条件变量-2"></a> 条件变量</h1>
<h2 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h2>
<p><strong>条件变量</strong>是一个显式队列，当某些执行状态（即条件）不满足时，线程可以把自己加入队列，等待该条件。当另外某个线程改变了这些状态时，就可以唤醒一个或者多个等待进程（通过在该条件上发信号），让它们继续执行。</p>
<p>条件变量的相关操作如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//声明</span></span><br><span class="line"><span class="keyword">pthread_cond_t</span> c=PTHREAD_COND_INITIALIZER; </span><br><span class="line"><span class="comment">//操作</span></span><br><span class="line">pthread_cond_wait(<span class="keyword">pthread_cond_t</span>* c,<span class="keyword">pthread_mutex_t</span>* m); <span class="comment">//线程休眠，当调用wait时，需要保证互斥量t处于上锁状态。函数会释放锁，并让调用线程休眠。而在线程被唤醒之后，仍需要重新获取锁。</span></span><br><span class="line">pthread_cond_signal(<span class="keyword">pthread_cond_t</span>* c); <span class="comment">//唤醒等待在某个条件变量上的睡眠线程</span></span><br></pre></td></tr></table></figure>
<h2 id="生产者消费者有界缓冲区问题"><a class="markdownIt-Anchor" href="#生产者消费者有界缓冲区问题"></a> 生产者/消费者（有界缓冲区）问题</h2>
<h3 id="问题描述"><a class="markdownIt-Anchor" href="#问题描述"></a> 问题描述</h3>
<p>假设有一个或者多个生产者线程，以及一个或者多个消费者线程。生产者将生成的数据项放入到缓冲区，消费者从缓冲区取走数据项，以某种方式消费。因为有界缓冲区是共享资源，因此必须通过同步机制来访问它，以免产生竞争条件。</p>
<p>很多实际的系统都有这种场景：例如多线程的网络服务器中，一个生产者将HTTP请求放入到工作队列中，消费线程从队列中取走请求并处理；在使用Linux的管道连接操作时，也使用到了有界缓冲区。</p>
<h3 id="实现"><a class="markdownIt-Anchor" href="#实现"></a> 实现</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> buffer[MAX];</span><br><span class="line"><span class="keyword">int</span> fill_ptr=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> use_ptr=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">put</span><span class="params">(<span class="keyword">int</span> value)</span></span>&#123;</span><br><span class="line">    buffer[fill_ptr]=value;</span><br><span class="line">    fill_ptr=(fill_ptr+<span class="number">1</span>)%MAX;</span><br><span class="line">    count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp=buffer[use_ptr];</span><br><span class="line">    use_ptr=(use_ptr+<span class="number">1</span>)%MAX;</span><br><span class="line">    count--;</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">cond_t</span> empty,fill; <span class="comment">//使用两个信号的目的是使得信号更具有指向性，消费者只唤醒生产者，生产者只唤醒消费者。否则可能会出现生产者唤醒生产者，或是消费者唤醒消费者的情况</span></span><br><span class="line"><span class="keyword">mutex_t</span> mutex;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span>* <span class="title">producer</span><span class="params">(<span class="keyword">void</span>* arg)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;loops;i++)&#123;</span><br><span class="line">        Pthread_mutex_lock(&amp;mutex);</span><br><span class="line">        <span class="keyword">while</span>(count==MAX) <span class="comment">//使用while而不是if，是为了保证线程再被唤醒之后，再一次检查条件是否仍旧满足。因为信号使用的是Mesa语义，也就是发信号给线程的时候只是唤醒它们，暗示状态发生了变化，但是并不会保证在它运行之前状态一直是期望的情况。（与之相反的叫做Hoare语义，保证被唤醒线程立刻执行）</span></span><br><span class="line">            Pthread_cond_wait(&amp;empty,&amp;mutex);</span><br><span class="line">        put(i);</span><br><span class="line">        Pthread_cond_signal(&amp;fill);</span><br><span class="line">        Pthread_mutex_unlock(&amp;mutex);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span>* <span class="title">consumer</span><span class="params">(<span class="keyword">void</span>* arg)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;loops;i++)&#123;</span><br><span class="line">        Pthread_mutex_lock(&amp;mutex);</span><br><span class="line">        <span class="keyword">while</span>(count==<span class="number">0</span>)</span><br><span class="line">            Pthread_cond_wait(&amp;fill,&amp;mutex);</span><br><span class="line">        <span class="keyword">int</span> tmp=get();</span><br><span class="line">        Pthread_cond_signal(&amp;empty);</span><br><span class="line">        Pthread_mutex_unlock(&amp;mutex);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,tmp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="覆盖条件"><a class="markdownIt-Anchor" href="#覆盖条件"></a> 覆盖条件</h2>
<p>下面是一个多线程分配库的代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> bytesLeft=MAX_HEAP_SIZE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">cond_t</span> c;</span><br><span class="line"><span class="keyword">mutex_t</span> m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span>* <span class="title">allocate</span><span class="params">(<span class="keyword">int</span> size)</span></span>&#123;</span><br><span class="line">	Pthread_mutex_lock(&amp;m);</span><br><span class="line">	<span class="keyword">while</span>(bytesLeft&lt;size)</span><br><span class="line">		Pthread_cont_wait(&amp;c,&amp;m);</span><br><span class="line">	<span class="keyword">void</span>* ptr=... <span class="comment">//从堆中获取内存</span></span><br><span class="line">    bytesLeft-=size;</span><br><span class="line">    Pthread_mutex_unlock(&amp;m);</span><br><span class="line">	<span class="keyword">return</span> ptr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">free</span><span class="params">(<span class="keyword">void</span>* ptr,<span class="keyword">int</span> size)</span></span>&#123;</span><br><span class="line">    Pthread_mutex_lock(&amp;m);</span><br><span class="line">    bytesLeft+=size;</span><br><span class="line">    Pthread_cond_broadcast(&amp;c); <span class="comment">//注意此处用的不是Pthread_cond_signal函数</span></span><br><span class="line">    Pthread_mutex_unlock(&amp;m);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在上面的代码中，使用<code>Pthread_cond_broadcast()</code>函数来唤醒所有的等待线程，因为此时无法确定哪一个内存申请程序所请求的空间可以被分配。这种条件变量被叫做覆盖条件，因为它可以覆盖所有需要唤醒线程的场景，但是这样会导致太多线程被唤醒，从而影响性能。</p>
<h1 id="信号量"><a class="markdownIt-Anchor" href="#信号量"></a> 信号量</h1>
<h2 id="定义-2"><a class="markdownIt-Anchor" href="#定义-2"></a> 定义</h2>
<p>信号量是有一个整数值的对象，可以用两个函数来操作它，在POSIX标准中为<code>sem_wait()</code>和<code>sem_post()</code>。信号量的初始值能够决定其行为，所以首先要初始化信号量，才能调用其它函数与之交互。初始化过程如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;semaphore.h&gt;</span></span></span><br><span class="line"><span class="keyword">sem_t</span> s;</span><br><span class="line">sem_init(&amp;s,<span class="number">0</span>,<span class="number">1</span>); <span class="comment">//第二个参数为0代表信号量在同一个进程的多个线程间共享，如果使用其他值可以用于跨不同进程的同步访问；第三个参数用于初始化信号量的值</span></span><br></pre></td></tr></table></figure>
<p>在初始化之后，可以调用<code>sem_wait()</code>和<code>sem_post()</code>进行交互。<code>sem_wait()</code>会将信号量减1，如果这一步操作之后信号量变为负值，则让调用线程挂起，直到之后的一个post操作。而<code>sem_post()</code>会直接增加信号量的值，如果有等待线程则唤醒其中的一个。当信号量的值为负数时，这个值的绝对值就是等待线程的个数。</p>
<h2 id="信号量的实现"><a class="markdownIt-Anchor" href="#信号量的实现"></a> 信号量的实现</h2>
<p>下面的代码是信号量的一个简单实现：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">My_sem_t</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> value;</span><br><span class="line">    <span class="keyword">pthread_cond_t</span> cond;</span><br><span class="line">    <span class="keyword">pthread_mutex_t</span> lock;</span><br><span class="line">&#125; My_sem_t;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">My_sem_t_init</span><span class="params">(My_sem_t* s,<span class="keyword">int</span> value)</span></span>&#123;</span><br><span class="line">    s-&gt;value=value;</span><br><span class="line">    Cond_init(&amp;s-&gt;cond);</span><br><span class="line">    Mutex_init(&amp;s-&gt;lock);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">My_sem_wait</span><span class="params">(My_sem_t* s)</span></span>&#123;</span><br><span class="line">    Mutex_lock(&amp;s-&gt;lock);</span><br><span class="line">    <span class="keyword">while</span>(s-&gt;value&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">        Cond_wait(&amp;s-&gt;cond,&amp;s-&gt;lock);</span><br><span class="line">    &#125;</span><br><span class="line">    s-&gt;value--;</span><br><span class="line">    Mutex_unlock(&amp;s-&gt;lock);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">My_sem_post</span><span class="params">(My_sem_t* s)</span></span>&#123;</span><br><span class="line">    Mutex_lock(&amp;s-&gt;lock);</span><br><span class="line">    s-&gt;value++;</span><br><span class="line">    Cond_signal(&amp;s-&gt;cond);</span><br><span class="line">    Mutex_unlock(&amp;s-&gt;lock);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="信号量的使用"><a class="markdownIt-Anchor" href="#信号量的使用"></a> 信号量的使用</h2>
<h3 id="二值信号量作为锁"><a class="markdownIt-Anchor" href="#二值信号量作为锁"></a> 二值信号量作为锁</h3>
<p>将信号量的初值设置为1，便可以将信号量用作锁来使用。此时，便可以用<code>sem_wait()</code>和<code>sem_post()</code>将临界区包裹起来，伪代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">sem_t</span> m;</span><br><span class="line">sem_init(&amp;m,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">sem_wait(&amp;m);</span><br><span class="line"><span class="comment">//临界区代码</span></span><br><span class="line">sem_post(&amp;m);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>例：</p>
<p>假设有两个线程的场景。一开始线程0调用了<code>sem_wait()</code>，它把信号量的值减为0。由于信号量小于0时才会等待，故线程0从函数返回之后便进入临界区。如果没有其它线程尝试获取锁，线程0在执行完临界区的代码并调用<code>sem_post()</code>时，信号量会被重置为1。</p>
<p>如果在线程0调用<code>sem_post()</code>之前，线程1调用<code>sem_wait()</code>尝试进入临界区，此时线程1会把信号量减为-1，然后等待。线程0继续运行，最后调用<code>sem_post()</code>将信号量增加到0。此时线程1便可以获取锁，并且当它执行结束的时候再次增加信号量的值，将其恢复为1。</p>
</blockquote>
<h3 id="信号量用作条件变量"><a class="markdownIt-Anchor" href="#信号量用作条件变量"></a> 信号量用作条件变量</h3>
<p>信号量也可以用在一个线程暂停执行，等待某一条件成立的场景。在这种场景下，通常一个线程等待条件成立，另一个线程修改条件并发送信号给等待线程，从而唤醒等待线程。因为等待线程在等待某些条件发生变化，因此此时的信号量作为条件变量。在这种情况下，信号量的初始值应该设置为0。</p>
<blockquote>
<p>例：</p>
<p>假设一个父线程创建一个子线程，并等待它结束再继续执行。此时有两种情况：</p>
<p>第一种是父进程创建了子进程，但是子进程并没有运行。这种情况下，父进程调用<code>sem_wait()</code>会先于子进程调用<code>sem_post()</code>。此时，父进程会首先把信号量减为-1，然后睡眠等待。子线程运行结束的时候调用<code>sem_post()</code>，信号量增加为0。此时，父进程被唤醒，从<code>sem_wait()</code>中返回，执行剩下的程序。</p>
<p>第二种是子进程在父进程调用<code>sem_wait()</code>之前就已经执行结束。在这种情况下，子进程首先调用<code>sem_post()</code>将信号量从0变为1。当父进程执行到<code>sem_wait()</code>时，信号量的值为1，父进程将信号量减为0，然后从函数中返回继续执行剩下的程序，无需等待。</p>
</blockquote>
<h3 id="生产者消费者问题"><a class="markdownIt-Anchor" href="#生产者消费者问题"></a> 生产者/消费者问题</h3>
<p>使用信号量来解决生产者/消费者问题的伪代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">sem_t</span> empty;</span><br><span class="line"><span class="keyword">sem_t</span> full;</span><br><span class="line"><span class="keyword">sem_t</span> mutex;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span>* <span class="title">producer</span><span class="params">(<span class="keyword">void</span>* arg)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;loops;i++)&#123;</span><br><span class="line">        sem_wait(&amp;empty); <span class="comment">//这一操作需要放在锁之前，否则会出现死锁的情况</span></span><br><span class="line">        sem_wait(&amp;mutex); <span class="comment">//放入队列或是从队列取出的操作必须是互斥的，否则可能会造成数据丢失</span></span><br><span class="line">        put(i);</span><br><span class="line">        sem_post(&amp;mutex);</span><br><span class="line">        sem_post(&amp;full);<span class="comment">//这一操作需要放在锁之后，否则会出现死锁的情况</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span>* <span class="title">consumer</span><span class="params">(<span class="keyword">void</span>* arg)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;loops;i++)&#123;</span><br><span class="line">        sem_wait(&amp;full);</span><br><span class="line">        sem_wait(&amp;mutex);</span><br><span class="line">        <span class="keyword">int</span> tmp=get();</span><br><span class="line">        sem_post(&amp;mutex);</span><br><span class="line">        sem_post(&amp;empty);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,tmp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span>* argv[])</span></span>&#123;</span><br><span class="line">    <span class="comment">//……</span></span><br><span class="line">    sem_init(&amp;empty,<span class="number">0</span>,MAX); <span class="comment">//MAX表示队列的上限</span></span><br><span class="line">    sem_init(&amp;full,<span class="number">0</span>,<span class="number">0</span>); <span class="comment">//信号量full为0的时候表示队列满</span></span><br><span class="line">    sem_init(&amp;mutex,<span class="number">0</span>,<span class="number">1</span>); <span class="comment">//互斥锁</span></span><br><span class="line">    <span class="comment">//……</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="读者写者锁"><a class="markdownIt-Anchor" href="#读者写者锁"></a> 读者—写者锁</h3>
<p>考虑到不同的数据结构访问可能需要不同类型的锁，人们发明了读者—写者锁。</p>
<p>如果某个线程要更新数据结构，需要调用<code>rwlock_acquire_writelock()</code>获得写锁，调用<code>rwlock_release_writelock()</code>来释放锁。内部通过一个<code>writelock</code>的信号量保证只有一个写者可以获得锁进入临界区，从而更新数据结构。</p>
<p>而在获取读锁时，读者首先要获取lock，然后增加reader变量，追踪目前有多少个读者在访问该数据结构。在函数<code>rwlock_acquire_readlock()</code>中，当第一个读者获取读锁的时候，也会同时获得写锁。一旦一个读者获取了读锁之后，其他的读者也可以获取读锁，但是想要获取写锁的线程就必须要等到所有的读者都结束。最后一个退出的读者会放弃写锁，从而让等待的写者可以获取写锁。</p>
<p>一个简单的读者—写者锁的代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">rwlock_t</span>&#123;</span></span><br><span class="line">    <span class="keyword">sem_t</span> lock;</span><br><span class="line">    <span class="keyword">sem_t</span> writelock;</span><br><span class="line">    <span class="keyword">int</span> readers;</span><br><span class="line">&#125; <span class="keyword">rwlock_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rwlock_init</span><span class="params">(<span class="keyword">rwlock_t</span>* rw)</span></span>&#123;</span><br><span class="line">    rw-&gt;readers=<span class="number">0</span>;</span><br><span class="line">    sem_init(&amp;rw-&gt;lock,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">    sem_init(&amp;rw-&gt;writelock,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rwlock_acquire_readlock</span><span class="params">(<span class="keyword">rwlock_t</span>* rw)</span></span>&#123;</span><br><span class="line">    sem_wait(&amp;rw-&gt;lock);</span><br><span class="line">    rw-&gt;readers++;</span><br><span class="line">    <span class="keyword">if</span>(rw-&gt;readers==<span class="number">1</span>)&#123;</span><br><span class="line">        sem_wait(&amp;rw-&gt;writelock);</span><br><span class="line">    &#125;</span><br><span class="line">    sem_post(&amp;rw-&gt;lock);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rwlock_release_readlock</span><span class="params">(<span class="keyword">rwlock_t</span>* rw)</span></span>&#123;</span><br><span class="line">    sem_wait(&amp;rw-&gt;lock);</span><br><span class="line">    rw-&gt;readers--;</span><br><span class="line">    <span class="keyword">if</span>(rw-&gt;readers==<span class="number">0</span>)&#123;</span><br><span class="line">        sem_post(&amp;rw-&gt;writelock);</span><br><span class="line">    &#125;</span><br><span class="line">    sem_post(&amp;rw-&gt;lock);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rwlock_acquire_writelock</span><span class="params">(<span class="keyword">rwlock_t</span>* rw)</span></span>&#123;</span><br><span class="line">    sem_wait(&amp;rw-&gt;writelock);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rwlock_release_writelock</span><span class="params">(<span class="keyword">rwlock_t</span>* rw)</span></span>&#123;</span><br><span class="line">    sem_post(&amp;rw-&gt;writelock);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="哲学家就餐问题"><a class="markdownIt-Anchor" href="#哲学家就餐问题"></a> 哲学家就餐问题</h3>
<p>这一问题的基本情况是：假定有N位哲学家围着一个圆桌，每两位哲学家中间有一把餐叉（共N把）。哲学家有时候需要思考，此时不需要餐叉；有时又需要就餐，而只有同时拿到左手和右手边的餐叉才能吃到东西。</p>
<p>每个哲学家的基本循环可以用如下的伪代码描述：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">    think();</span><br><span class="line">    getforks();</span><br><span class="line">	eat();</span><br><span class="line">    putforks();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这一问题的关键是如何实现<code>getforks()</code>和<code>putforks()</code>函数，保证没有死锁，没有哲学家饿死，并且尽可能有高的并发度。因此，每个餐叉需要用一个信号量来表示其是否被使用：<code>sem_t forks[N]</code>，每个信号量都被初始化为1。</p>
<p>下面是一个有问题的解决方案：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getforks</span><span class="params">()</span></span>&#123;</span><br><span class="line">	sem_wait(forks[p]);</span><br><span class="line">    sem_wait(forks[(p+<span class="number">1</span>)%N]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putforks</span><span class="params">()</span></span>&#123;</span><br><span class="line">    sem_post(forks[p]);</span><br><span class="line">    sem_post(forks[(p+<span class="number">1</span>)%N]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面的方案中，每个哲学家都首先获取左边的餐叉，然后获取右边的，在释放时也按照同样的顺序。但是这种方式会造成死锁，假设每个哲学家都拿取了左边的餐叉，此时所有的餐叉都被占有，所有的哲学家都被阻塞着，都在等待另一个哲学家占有的餐叉。解决这一问题最简单的办法，是修改某个或者某些（但一定不是全部）哲学家取餐叉的顺序，即改为先右后左，这样便会打破等待循环。</p>
<h1 id="常见问题"><a class="markdownIt-Anchor" href="#常见问题"></a> 常见问题</h1>
<h2 id="非死锁缺陷"><a class="markdownIt-Anchor" href="#非死锁缺陷"></a> 非死锁缺陷</h2>
<h3 id="违反原子性缺陷"><a class="markdownIt-Anchor" href="#违反原子性缺陷"></a> 违反原子性缺陷</h3>
<p>这种缺陷的定义是：违反了多次内存访问中预期的可串行性。也就是说，代码段本意是原子性的，但是在执行中却没有强制地实现原子性。通过给共享变量的访问加锁，便可以修复这一问题。</p>
<h3 id="违反顺序缺陷"><a class="markdownIt-Anchor" href="#违反顺序缺陷"></a> 违反顺序缺陷</h3>
<p>违反顺序缺陷的定义是：两个内存访问的预期顺序被打破。即A本来应该在B之前执行，但是实际运行中却不是这个顺序。使用条件变量来强制执行顺序即可修复这一缺陷。</p>
<h2 id="死锁缺陷"><a class="markdownIt-Anchor" href="#死锁缺陷"></a> 死锁缺陷</h2>
<h3 id="发生原因"><a class="markdownIt-Anchor" href="#发生原因"></a> 发生原因</h3>
<p>当线程1持有锁L1，正在等待另外一个锁L2；而线程2持有锁L2，正在等待锁L1释放时，便会因为两个线程互相等待而产生死锁，导致程序无法执行下去。在实际编程中，一个大型代码库里的组件之间通常会有复杂的依赖，这便会容易因循环依赖导致死锁；同时，软件开发中的封装思想与锁也不是很契合，因此一些看起来没有关系的接口也可能会导致死锁。</p>
<h3 id="产生条件"><a class="markdownIt-Anchor" href="#产生条件"></a> 产生条件</h3>
<ul>
<li>互斥：线程对于所需资源进行互斥地访问；</li>
<li>持有并等待：线程持有资源并且又在等待其他的资源；</li>
<li>非抢占：线程获得的资源不能被抢占；</li>
<li>循环等待：线程之间存在一个环路，环路上每个线程都持有一个资源，而这个资源又是下一个线程需要申请的。</li>
</ul>
<h3 id="死锁的处理"><a class="markdownIt-Anchor" href="#死锁的处理"></a> 死锁的处理</h3>
<h4 id="预防"><a class="markdownIt-Anchor" href="#预防"></a> 预防</h4>
<h5 id="避免循环等待"><a class="markdownIt-Anchor" href="#避免循环等待"></a> 避免循环等待</h5>
<p>最实用的预防技术是让代码不会产生循环等待。一个直接的办法是获取锁的时候提供一个全序，这也就是说，假如系统有两个锁L1和L2，每次都先申请L1再申请L2，这样便可以避免死锁。但是更复杂的系统中通常有许多锁，因此也常常使用偏序。</p>
<h5 id="避免持有并等待"><a class="markdownIt-Anchor" href="#避免持有并等待"></a> 避免持有并等待</h5>
<p>死锁的这一条件可以通过原子地抢锁来预防。在抢锁的过程中，不会发生不合适的线程切换，从而避免了死锁。但是这种方案不适用于封装，因为这一方案需要准确地知道要抢哪些锁，并且提前抢到这些锁。</p>
<h5 id="抢锁"><a class="markdownIt-Anchor" href="#抢锁"></a> 抢锁</h5>
<p>如果允许线程抢锁，则可以预防死锁的产生。但是这又会造成活锁的问题：两个线程可能一直重复抢锁的动作，又同时抢锁失败。此时，系统一直在运行这段代码，但是却没有进展。</p>
<h5 id="避免互斥"><a class="markdownIt-Anchor" href="#避免互斥"></a> 避免互斥</h5>
<p>完全避免互斥也可以预防死锁的形成。一些人设计了无等待的数据结构，这是通过使用硬件指令，从而构造出不需要锁的数据结构。但是这种方式也有可能会产生活锁。</p>
<h4 id="通过调度避免"><a class="markdownIt-Anchor" href="#通过调度避免"></a> 通过调度避免</h4>
<p>一些场景也更加适合使用死锁避免的方案。通过了解不同线程在运行过程中对锁的需求情况，以此进行调度，可以避免死锁的产生。</p>
<h4 id="检查和恢复"><a class="markdownIt-Anchor" href="#检查和恢复"></a> 检查和恢复</h4>
<p>有时我们允许死锁偶尔发生，检查到发生死锁之后再采取行动（如果死锁很少发生，并且产生死锁造成的代价很小，就无需花费大量精力避免死锁）。</p>
<h1 id="基于事件的并发"><a class="markdownIt-Anchor" href="#基于事件的并发"></a> 基于事件的并发</h1>
<h2 id="概述-2"><a class="markdownIt-Anchor" href="#概述-2"></a> 概述</h2>
<p>基于事件的并发指的是，我们等待事件的发生，当它发生时检查事件类型，然后做相应的工作。处理事件的代码叫做事件处理程序，它运行的时候，是系统中发生的唯一活动。</p>
<p>因此，调度就是决定接下来处理哪个事件。这种对调度的显式控制是基于事件方法的一个重要优点。由于一次只处理一个事件，所以不需要获取或者释放锁，线程化程序中常见的并发性错误也不会出现在基于事件的并发方法中。</p>
<h2 id="存在的问题与解决"><a class="markdownIt-Anchor" href="#存在的问题与解决"></a> 存在的问题与解决</h2>
<h3 id="接收事件"><a class="markdownIt-Anchor" href="#接收事件"></a> 接收事件</h3>
<p>基于事件的服务器需要决定哪个事件发生，也就是如何确定是否有它的消息已经到达。大多数系统提供了<code>select()</code>或<code>poll()</code>系统调用，这些接口检查是否有任何应该关注的进入I/O。</p>
<p>例如<code>select()</code>函数在MacOS X上的定义如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">select</span><span class="params">(<span class="keyword">int</span> nfds,</span></span></span><br><span class="line"><span class="function"><span class="params">           fd_set* <span class="keyword">restrict</span> readfds,</span></span></span><br><span class="line"><span class="function"><span class="params">           fd_set* <span class="keyword">restrict</span> writefds,</span></span></span><br><span class="line"><span class="function"><span class="params">           fd_set* <span class="keyword">restrict</span> errorfds,</span></span></span><br><span class="line"><span class="function"><span class="params">           struct timeval* <span class="keyword">restrict</span> timeout)</span></span></span><br></pre></td></tr></table></figure>
<p>这一函数检查I/O描述符集合，它们的地址通过<code>readfds</code>、<code>writefds</code>和<code>errorfds</code>传入，分别查看它们中的某些描述符是否已准备好读取、是否准备好写入、或是否有异常情况待处理，在每个集合中检查前<code>nfds</code>个描述符。该函数返回所有集合中就绪描述符的总数。</p>
<blockquote>
<p>补充—阻塞与非阻塞接口：</p>
<p>阻塞（又称同步）接口在返回给调用者之前完成所有的工作，而非阻塞（又称异步）接口开始一些工作，但是立即返回，剩余所有需要完成的工作都在后台完成。</p>
</blockquote>
<h3 id="阻塞系统调用"><a class="markdownIt-Anchor" href="#阻塞系统调用"></a> 阻塞系统调用</h3>
<p>在使用基于事件的方法时，只有主事件在执行，此时如果一个事件处理程序发出一个阻塞调用，整个服务器就会阻塞直到调用完成。当事件处于阻塞状态时，系统处于闲置，造成潜在的巨大资源浪费。因此，在基于事件的系统中不允许阻塞调用。</p>
<p>为了克服这一限制，许多现代操作系统引入了异步I/O的接口。这些接口使得应用程序可以发出I/O请求，并在I/O完成之前立即将控制权返回给调用者，另外的接口让应用程序能够确定各种I/O是否已完成。同时，为了能够确定I/O是否完成，一些系统提供了基于中断的方法，使用UNIX的信号在异步I/O完成时通知应用程序，从而避免了轮询系统的需要。</p>
<h3 id="状态管理"><a class="markdownIt-Anchor" href="#状态管理"></a> 状态管理</h3>
<p>基于事件方法的代码通常比传统基于线程的代码更加复杂，因为当事件处理程序发出异步I/O时，它必须打包一些程序状态，以便下一个事件处理程序在I/O最终完成时使用。这个额外的工作被称为手工栈管理。</p>
<h3 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h3>
<p>基于事件的方法还有一些其他困难，例如：</p>
<ul>
<li>在多核CPU上不可能使用基于事件的方法。因为利用多个CPU时，事件服务器必须并行运行多个事件处理程序，此时便会出现同步问题，并且必须采用通用的解决方案如加锁。</li>
<li>不能很好地与某些类型的系统活动集成，如分页等。</li>
<li>基于事件的代码可能难以管理。</li>
<li>异步网络I/O集成很难实现。</li>
</ul>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<ol>
<li>Operating Systems:  Three Easy Pieces</li>
<li>深入理解计算机系统 第三版</li>
</ol>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>操作系统-持久性</title>
    <url>/2021/01/09/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-%E6%8C%81%E4%B9%85%E6%80%A7/</url>
    <content><![CDATA[<h1 id="io设备"><a class="markdownIt-Anchor" href="#io设备"></a> I/O设备</h1>
<h2 id="标准设备"><a class="markdownIt-Anchor" href="#标准设备"></a> 标准设备</h2>
<p>一个标准设备包含两部分重要组件：其中一部分是向系统其他部分展示的硬件接口，用于让系统软件控制它的操作；另一部分是它的内部结构，包含设备相关的特定实现，负责具体实现设备展示给系统的抽象接口。标准设备的示意图如下所示：</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201115222652.png" alt="标准设备" style="zoom: 50%;" />
<p>从图中可以看出，一个设备接口包括3个寄存器：一个可以读取并查看当前设备状态的状态寄存器、一个通知设备执行某个具体任务的命令寄存器、和一个用于将数据传给设备或是从设备接收数据的数据寄存器。通过读写这些寄存器，操作系统可以控制设备的行为。</p>
<a id="more"></a>
<h2 id="操作系统与设备的交互"><a class="markdownIt-Anchor" href="#操作系统与设备的交互"></a> 操作系统与设备的交互</h2>
<p>操作系统与设备的交互有两种方式，第一种是使用明确的I/O指令，这些指令规定了操作系统将数据发送到特定设备寄存器的方法，从而允许构造交互协议。第二种是使用内存映射I/O，硬件将设备寄存器作为内存地址提供，当需要访问设备寄存器时，操作系统读取或者写入到该内存地址，硬件会将装载/存入转移到设备上而不是物理内存。</p>
<p>I/O设备与主机的信息传送分为3种方式：程序查询方式、程序中断方式和DMA(Direct Memory Access)方式。在这三种方式中，I/O设备的自治能力越来越强，同时效率也越来越高。更加详细的介绍可查看计算机组成原理相关内容。</p>
<p>由于设备的种类很多，因此我们需要实现一个设备无关的操作系统，这个问题是通过抽象来实现的。在文件系统的最底层有一部分是设备驱动程序，所有设备交互的细节都封装在其中。因此，所有需要插入系统的设备都需要安装对应的驱动程序，所以驱动程序的代码在整个内核中的代码会随着时间的推移而越来越多。但是这种封装也存在不足，如果一个设备可以提供很多特殊功能，但是为了兼容操作系统不得不提供一个通用接口，这样就可能会使得自身的特殊功能无法使用。一个文件系统栈的结构如下图所示：</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201115222657.png" alt="文件系统栈" style="zoom:50%;" />
<h2 id="磁盘驱动器"><a class="markdownIt-Anchor" href="#磁盘驱动器"></a> 磁盘驱动器</h2>
<h3 id="结构"><a class="markdownIt-Anchor" href="#结构"></a> 结构</h3>
<p>磁盘驱动器由大量扇区组成，每个扇区都可以读取或写入。在具有n个扇区的磁盘上，扇区从0到n-1编号。关于磁盘的物理结构以及工作原理可查看计算机组成原理的相关内容。</p>
<p>磁盘驱动器制造商保证每个扇区的写入是原子的，也就是要么完整地被写入要么一点都没有被写入。因此，如果在写入的时候突然断电，则只能完成较大写入的一部分（又称为不完整写入）。</p>
<h3 id="磁盘调度"><a class="markdownIt-Anchor" href="#磁盘调度"></a> 磁盘调度</h3>
<p>对于磁盘调度来说，可以通过估计请求的查找和可能的旋转延迟，猜测一个磁盘请求大致需要多长时间。因此，磁盘调度程序尝试在其操作中遵循最短任务优先的原则。一些调度算法如下：</p>
<ul>
<li>最短寻道时间优先（Shortest-Seek-Time-First, SSTF）：这种调度方法按照磁道对I/O请求队列排序，选择在最近磁道上的请求先完成。由于操作系统无法知道磁盘的几何结构，因此操作系统使用的是最近块优先的近似调度。但是这种方法却出现了饥饿问题，在一些情况下某些磁道的调度请求会被忽略。</li>
<li>电梯（SCAN或C-SCAN）：这种算法简单地以跨越磁道的顺序来服务磁盘请求，磁盘的磁头从内圈扫到外圈，再从外圈扫到内圈，如此循环下去。在此期间，按照类似于电梯调度的方式处理磁盘请求。这种方式可以避免饥饿，但是却忽略了磁盘的旋转。</li>
<li>最短定位时间优先（Shortest Positioning Time First, SPTF）：又称为最短接入时间优先。这种算法会按照当前磁头的位置，计算定位到目标扇区所需的时间，选择最短的一个进行调度。这种方法同时考虑了磁盘寻道和旋转所需的时间，但是对于操作系统来说却很难实现，因此通常在磁盘内部执行。</li>
</ul>
<p>在现代系统中，磁盘可以接受多个分离的请求，它们本身具有复杂的内部调度程序，可以准确地实现SPTF。同时，磁盘调度系统也会完成I/O合并，调度程序执行的是合并之后的请求，这样便减少了开销。</p>
<h2 id="廉价冗余磁盘阵列raid"><a class="markdownIt-Anchor" href="#廉价冗余磁盘阵列raid"></a> 廉价冗余磁盘阵列（RAID）</h2>
<h3 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h3>
<p>廉价冗余磁盘阵列（Redundant Array of Inexpensive Disks, RAID）技术使用多个磁盘一起构建更快、更大、更可靠的磁盘系统。RAID的内部是一个复杂的计算机系统，包括一个微控制器用于运行控制RAID操作的固件、用于缓冲数据块的易失性和非易失性存储器、多个磁盘用于存储数据、甚至包含专用的逻辑电路执行奇偶校验计算。当文件系统向RAID发出逻辑I/O请求时，RAID内部需要计算要访问的磁盘，然后发出一个或者多个I/O请求来执行此操作。</p>
<p>与单个磁盘相比，RAID的优点有：</p>
<ul>
<li>性能：并行使用多个磁盘可以大大加快I/O时间</li>
<li>容量：使用多个磁盘使得存储空间更大</li>
<li>提高可靠性：RAID通过某种形式的冗余可以容许损失一个硬盘并保持运行，就像没有错误一样。</li>
</ul>
<p>RAID为使用它们的系统透明地提供了这些优势，也就是说RAID对于主机系统看起来就像一个大磁盘，是一组可以读取或写入的块。这样就意味着可以简单地用RAID去替换磁盘，操作系统与用户程序无需做任何修改。通过这种方式，极大提高了RAID的可部署性和兼容性。</p>
<h3 id="raid-0"><a class="markdownIt-Anchor" href="#raid-0"></a> RAID-0</h3>
<h4 id="条带化"><a class="markdownIt-Anchor" href="#条带化"></a> 条带化</h4>
<p>RAID-0级是以轮转方式将磁盘阵列的块分布在磁盘上，这种方法的目的是在对数组的连续块进行请求时，从阵列中获取最大的并行性。一个块大小（chunk size）为2，共4个磁盘组成的RAID-0磁盘阵列如下表所示：</p>
<table>
<thead>
<tr>
<th style="text-align:center">磁盘0</th>
<th style="text-align:center">磁盘1</th>
<th style="text-align:center">磁盘2</th>
<th style="text-align:center">磁盘3</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">2</td>
<td style="text-align:center">4</td>
<td style="text-align:center">6</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">3</td>
<td style="text-align:center">5</td>
<td style="text-align:center">7</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td style="text-align:center">10</td>
<td style="text-align:center">12</td>
<td style="text-align:center">14</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td style="text-align:center">11</td>
<td style="text-align:center">13</td>
<td style="text-align:center">15</td>
</tr>
<tr>
<td style="text-align:center">……</td>
<td style="text-align:center">……</td>
<td style="text-align:center">……</td>
<td style="text-align:center">……</td>
</tr>
</tbody>
</table>
<p>通过这种方式，我们在磁盘上将块条带化。在上表中，我们将每两行（因为块大小为2）中的所有块称为一个条带。</p>
<h4 id="块大小的影响"><a class="markdownIt-Anchor" href="#块大小的影响"></a> 块大小的影响</h4>
<p>块大小主要影响阵列的性能。如果块大小设置的比较小，就意味着许多文件将跨磁盘进行条带化，从而增加了对于单个文件的读取和写入的并行性。但是跨多个磁盘访问块的定位时间会增加，因为整个请求的定位时间由所有驱动器上请求的最大定位时间决定。但是如果将块大小设置的比较大，则减少了文件内的并行性，但是却可以减少定位时间。因此，确定最佳的块大小是一件比较困难的事情，需要大量提供给磁盘系统工作负载的知识</p>
<h4 id="性能评估"><a class="markdownIt-Anchor" href="#性能评估"></a> 性能评估</h4>
<p>从容量的角度来看，RAID-0给定N个磁盘便提供了N个磁盘的有用容量。</p>
<p>从可靠性角度看，RAID-0具有最糟糕的可靠性。</p>
<p>从数据传输的角度来说，RAID-0可以获得系统的全部带宽，即无论是顺序读写还是随机读写，总带宽都为所有磁盘的总和。</p>
<p>从延迟的角度来看，单块请求的延迟与单个磁盘的延迟几乎相同。</p>
<h3 id="raid-1级"><a class="markdownIt-Anchor" href="#raid-1级"></a> RAID-1级</h3>
<h4 id="镜像"><a class="markdownIt-Anchor" href="#镜像"></a> 镜像</h4>
<p>在RAID-1级中，使用了镜像系统，即生成系统中每个块的多个副本，并且将每个副本放在一个单独的磁盘上。通过这种方式，便可以容许磁盘故障。一个保留两个物理副本的RAID-1级磁盘阵列如下表所示：</p>
<table>
<thead>
<tr>
<th style="text-align:center">磁盘0</th>
<th style="text-align:center">磁盘1</th>
<th style="text-align:center">磁盘2</th>
<th style="text-align:center">磁盘3</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
<td style="text-align:center">3</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">4</td>
<td style="text-align:center">5</td>
<td style="text-align:center">5</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td style="text-align:center">6</td>
<td style="text-align:center">7</td>
<td style="text-align:center">7</td>
</tr>
<tr>
<td style="text-align:center">……</td>
<td style="text-align:center">……</td>
<td style="text-align:center">……</td>
<td style="text-align:center">……</td>
</tr>
</tbody>
</table>
<p>从镜像阵列中读取块时，RAID可以读取任一副本；但是在写入块时，RAID必须更新两个副本的数据以保持可靠性，同时这些写入可以并行进行。</p>
<h4 id="性能分析"><a class="markdownIt-Anchor" href="#性能分析"></a> 性能分析</h4>
<p>从容量角度看，RAID-1价格昂贵，在镜像级别=2的情况下也只能获得峰值有用容量的一半。</p>
<p>从可靠性角度来看，RAID-1表现良好，它可以容许任何一个磁盘出现故障。考虑保留2个物理副本的RAID-1磁盘阵列，它最大容许的故障数为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">N/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord">/</span><span class="mord">2</span></span></span></span>（如上表所示，假设所有奇数编号的磁盘损坏）。</p>
<p>从延迟的角度来看，读取请求的延迟与单个磁盘上的延迟相同，但是写入时必须等待所有副本的写入都完成，其写入延迟为所有副本写入中最高者，因此比单个磁盘略高。</p>
<p>从数据传输的角度来看，顺序写入、随机写入与顺序读取时的带宽都为峰值带宽的一半，而随机读取可以获得完整的可用带宽。注意顺序读取与顺序读取的差别来自于，随机读取时可以在所有磁盘上分配读取数据的操作，而顺序读取时由于磁盘上的块连续，因此即使是从不同的磁盘上读取不同的块，它也需要在读取的时候扫过连续的块但是只读取一部分（比如顺序读取块0—23，磁盘0上保存的块如上表所示，即使是安排磁盘0读取块0、4、8、12、16、20，在读取的时候磁盘0也必须扫过2、6、10……这些块但是并不读取），因此无法获得阵列的全部带宽。</p>
<h3 id="raid-4级"><a class="markdownIt-Anchor" href="#raid-4级"></a> RAID-4级</h3>
<h4 id="奇偶校验"><a class="markdownIt-Anchor" href="#奇偶校验"></a> 奇偶校验</h4>
<p>在RAID-4级磁盘阵列中，使用了奇偶校验的方法来添加冗余，这种方法试图使用较少的容量来克服镜像系统付出的巨大空间损失，但是这种办法却损失了性能。一个5个磁盘组成的具有奇偶校验的RAID-4磁盘阵列如下表所示：</p>
<table>
<thead>
<tr>
<th style="text-align:center">磁盘0</th>
<th style="text-align:center">磁盘1</th>
<th style="text-align:center">磁盘2</th>
<th style="text-align:center">磁盘3</th>
<th style="text-align:center">磁盘4</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">2</td>
<td style="text-align:center">3</td>
<td style="text-align:center">P0</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">5</td>
<td style="text-align:center">6</td>
<td style="text-align:center">7</td>
<td style="text-align:center">P1</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td style="text-align:center">9</td>
<td style="text-align:center">10</td>
<td style="text-align:center">11</td>
<td style="text-align:center">P2</td>
</tr>
<tr>
<td style="text-align:center">12</td>
<td style="text-align:center">13</td>
<td style="text-align:center">14</td>
<td style="text-align:center">15</td>
<td style="text-align:center">P3</td>
</tr>
<tr>
<td style="text-align:center">……</td>
<td style="text-align:center">……</td>
<td style="text-align:center">……</td>
<td style="text-align:center">……</td>
<td style="text-align:center">……</td>
</tr>
</tbody>
</table>
<p>在表中，每一行的数据都有一个奇偶校验块，用于存储这一行数据的冗余信息。例如P0便是使用磁盘块0、1、2、3的信息，通过<em>异或函数</em>计算出来的。由于使用了异或函数，因此当某个磁盘中的信息丢失时，还可以使用奇偶校验块中的数据从故障中恢复。</p>
<h4 id="性能分析-2"><a class="markdownIt-Anchor" href="#性能分析-2"></a> 性能分析</h4>
<p>从容量角度来看，RAID-4磁盘阵列的有用容量为N-1。</p>
<p>从可靠性角度来看，RAID-4最多容许1个磁盘故障，如果丢失多个磁盘则无法恢复数据。</p>
<p>从延迟角度来看，单次读取（假设没有数据损坏）的延迟等同于单个磁盘请求的延迟，而单次写入则一共需要两次写入并且需要从其他磁盘中读取来计算校验块，因此总延迟大约为单个磁盘的两倍（可并行执行读写操作）。</p>
<p>从数据传输角度来看，顺序读取与随机读取的性能可以利用除了奇偶校验磁盘外的所有磁盘，顺序写入时使用全条带写入（例如上表中每次将块0、1、2、3同时写入）也可以利用除了奇偶校验磁盘外所有磁盘的带宽。而在随机写入时，则会面临基于奇偶校验的RAID的小写入问题，由于奇偶校验磁盘无法执行任何的并行，而且奇偶校验磁盘需要为每个写操作都进行一次读写操作，因此这种情况下的吞吐量很糟糕。</p>
<h3 id="raid-5级"><a class="markdownIt-Anchor" href="#raid-5级"></a> RAID-5级</h3>
<h4 id="旋转奇偶校验"><a class="markdownIt-Anchor" href="#旋转奇偶校验"></a> 旋转奇偶校验</h4>
<p>RAID-5的工作原理与RAID-4类似，但是它将奇偶校验块跨驱动器旋转，这样就消除了RAID-4的奇偶校验磁盘瓶颈。下表所示为一个RAID-5级的磁盘阵列：</p>
<table>
<thead>
<tr>
<th style="text-align:center">磁盘0</th>
<th style="text-align:center">磁盘1</th>
<th style="text-align:center">磁盘2</th>
<th style="text-align:center">磁盘3</th>
<th style="text-align:center">磁盘4</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">2</td>
<td style="text-align:center">3</td>
<td style="text-align:center">P0</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">5</td>
<td style="text-align:center">6</td>
<td style="text-align:center">P1</td>
<td style="text-align:center">7</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td style="text-align:center">9</td>
<td style="text-align:center">P2</td>
<td style="text-align:center">10</td>
<td style="text-align:center">11</td>
</tr>
<tr>
<td style="text-align:center">12</td>
<td style="text-align:center">P3</td>
<td style="text-align:center">13</td>
<td style="text-align:center">14</td>
<td style="text-align:center">15</td>
</tr>
<tr>
<td style="text-align:center">P4</td>
<td style="text-align:center">16</td>
<td style="text-align:center">17</td>
<td style="text-align:center">18</td>
<td style="text-align:center">19</td>
</tr>
<tr>
<td style="text-align:center">……</td>
<td style="text-align:center">……</td>
<td style="text-align:center">……</td>
<td style="text-align:center">……</td>
<td style="text-align:center">……</td>
</tr>
</tbody>
</table>
<h4 id="性能分析-3"><a class="markdownIt-Anchor" href="#性能分析-3"></a> 性能分析</h4>
<p>RAID-5的有效容量、容错能力、顺序读写能力、以及单个读写请求的延迟与RAID-4都相同。但是其随机读取的性能比RAID-4要稍好一些，此时可以利用所有的磁盘。对于随机写入来说，RAID-5的性能明显提高，因为它允许跨请求进行并行处理，如果有大量的随机请求便可以保持所有磁盘均匀忙碌。因为每个RAID-5写入会产生总计4个I/O操作，所以随机写入的最大带宽为总带宽的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>4</mn></mrow><annotation encoding="application/x-tex">1/4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord">4</span></span></span></span>。</p>
<h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3>
<p>假设RAID磁盘阵列中，所有磁盘的容量为N，每个磁盘在连续工作负载下的传输速度为S，随机工作负载下的传输速度为R，单个磁盘的读写延迟为T，则它们的性能对比可总结为下表：</p>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">RAID-0</th>
<th style="text-align:center">RAID-1(设副本数为2)</th>
<th style="text-align:center">RAID-4</th>
<th style="text-align:center">RAID-5</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">容量</td>
<td style="text-align:center">N</td>
<td style="text-align:center">N/2</td>
<td style="text-align:center">N-1</td>
<td style="text-align:center">N-1</td>
</tr>
<tr>
<td style="text-align:center">可靠性</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1(可以保证)、N/2(运气最好)</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">顺序读</td>
<td style="text-align:center">N*S</td>
<td style="text-align:center">(N/2)*S</td>
<td style="text-align:center">(N-1)*S</td>
<td style="text-align:center">(N-1)*S</td>
</tr>
<tr>
<td style="text-align:center">顺序写</td>
<td style="text-align:center">N*S</td>
<td style="text-align:center">(N/2)*S</td>
<td style="text-align:center">(N-1)*S</td>
<td style="text-align:center">(N-1)*S</td>
</tr>
<tr>
<td style="text-align:center">随机读</td>
<td style="text-align:center">N*R</td>
<td style="text-align:center">N*R</td>
<td style="text-align:center">(N-1)*R</td>
<td style="text-align:center">N*R</td>
</tr>
<tr>
<td style="text-align:center">随机写</td>
<td style="text-align:center">N*R</td>
<td style="text-align:center">(N/2)*R</td>
<td style="text-align:center">R/2</td>
<td style="text-align:center">N*R/4</td>
</tr>
<tr>
<td style="text-align:center">读延迟</td>
<td style="text-align:center">T</td>
<td style="text-align:center">T</td>
<td style="text-align:center">T</td>
<td style="text-align:center">T</td>
</tr>
<tr>
<td style="text-align:center">写延迟</td>
<td style="text-align:center">T</td>
<td style="text-align:center">T</td>
<td style="text-align:center">2T</td>
<td style="text-align:center">2T</td>
</tr>
</tbody>
</table>
<h1 id="文件系统的实现"><a class="markdownIt-Anchor" href="#文件系统的实现"></a> 文件系统的实现</h1>
<h2 id="简单文件系统"><a class="markdownIt-Anchor" href="#简单文件系统"></a> 简单文件系统</h2>
<h3 id="整体组织"><a class="markdownIt-Anchor" href="#整体组织"></a> 整体组织</h3>
<p>假设我们的磁盘有N个块，编号为0~N-1，在一个简单的文件系统中磁盘上保存着下面几种不同的数据：</p>
<ul>
<li>数据区域：存放用户数据。</li>
<li>inode表：用于存储文件包含的数据块、文件大小、所有者及访问权限、访问和修改时间等信息。</li>
<li>位图（bitmap）：包含inode位图和数据位图，用于指示相应的磁盘块是空闲还是正在使用。</li>
<li>超级块（Superblock）：包含文件系统的信息，如文件系统中inode和数据块的个数、inode表的开始位置、标识文件系统类型的幻数等。</li>
</ul>
<p>在挂载文件系统时，操作系统首先读取超级块，初始化各种参数，然后将该磁盘添加到文件系统树中。当磁盘中的文件被访问时，系统就会知道如何查找所需的磁盘上的结构。</p>
<p>通过这种方式便构造了一个简单文件系统（Very Simple File System, VSFS），这一文件系统对应的磁盘布局大致如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201115222710.png" alt="简单文件系统" /></p>
<h3 id="inode"><a class="markdownIt-Anchor" href="#inode"></a> inode</h3>
<p>inode是index node的缩写，表示索引节点。每个inode都由一个数字（inode号）隐式引用，这个数字为文件的低级名称（low-level name）。给定这个数字，便可以找到磁盘上相应inode所在的扇区号（也就是说一个扇区里面可能保存有多个inode）。</p>
<p>在每个inode中，实际上是所有关于文件的信息：文件类型（如常规文件、目录等），大小，分配给它的块数，保护信息（谁拥有该文件，谁可以访问它），时间信息（创建时间、修改时间、上次访问的时间等），以及有关其数据块驻留在磁盘上的位置的信息。这些关于文件的信息被成为元数据（文件系统中除了用户数据外其余的都叫元数据）。</p>
<p>对于inode引用数据块的方式有三种：</p>
<ul>
<li>一种是使用范围来表示，即使用一个磁盘指针表示开始位置，加上一个长度表示数据存储的范围。如果只有一个范围则分配文件时的局限性较大，因此通常允许使用多个范围。这种方法不够灵活，但是空间布局更加紧凑。Linux ext4文件系统使用这种方式。</li>
<li>另一种方式是使用指针来表示，inode中有一个或多个直接指针，每个指针都指向属于该文件的一个磁盘块。如果要支持更大的文件，则需要使用多级索引的方式，即使用间接指针，这一指针指向包含更多指针的块，这个块中的每个指针指向用户数据。这种方法最灵活，但是每个文件都需要使用大量的元数据。Linux的ext2和ext3文件系统使用这种方式。</li>
<li>还有一种方式是使用链表，在inode中只需要一个指针指向文件的第一个块，对于比较大的文件就在每个数据块的末尾加上指向下个数据块的指针即可。这种方式对于某些工作负载表现不佳，比如随机访问等。旧Windows文件系统FAT便使用的是这种方式。</li>
</ul>
<h3 id="目录组织"><a class="markdownIt-Anchor" href="#目录组织"></a> 目录组织</h3>
<p>一个目录基本上只包含一个二元组（条目名称，inode号）的列表，其中列表的每个条目都指向一个文件或一个其它的目录。在UNIX文件系统中，每个目录下面有两个特殊的条目：一个引用自身的条目（&quot;.&quot;）和一个引用其父目录的条目（&quot;…&quot;）。通常，文件系统将目录视为特殊类型的文件。因此目录也有一个inode，位于inode表的某处，该目录具有由inode指向的数据块，这些数据块存储在文件系统的数据块区域中。</p>
<p>通过这种方式，用户便可以构建任意的目录树（或成为目录层次结构），在该目录树下存储所有的文件和目录。目录层次结构从根目录开始（在基于UNIX的系统中记作&quot;/&quot;），而后续的子目录也将&quot;/&quot;符号放在目录名称之后用于与文件进行区分。按照惯例，一个文件名通常包含两部分，第一部分为任意名称，第二部分用于指示文件的类型。</p>
<p>在UNIX系统中，可以使用mount命令将一个新的文件系统挂载到当前的目录中（相当于是将新的文件系统粘贴到目录树的这个节点上）。通过这种方式，便将所有的文件系统统一到一棵树上，提供了一种统一的方式来访问磁盘、U盘、CD或是其它设备上的文件。</p>
<p>一个简单的目录树的结构如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201115222715.png" alt="目录树" /></p>
<h3 id="空闲空间管理"><a class="markdownIt-Anchor" href="#空闲空间管理"></a> 空闲空间管理</h3>
<p>文件系统需要记录哪些inode和数据块是空闲的，以便于在分配新文件或目录时可以为它找到空间。在简单文件系统中，我们使用inode位图和数据位图来记录空间的使用情况。</p>
<p>在创建一个文件时，我们为该文件分配一个inode，文件系统便通过inode位图搜索一个空闲的区域并将它分配给该文件。然后文件系统将分配到的inode标记为已使用，并使用正确的信息去更新位图。在分配数据块时也会发生类似的活动。</p>
<h3 id="读取与写入"><a class="markdownIt-Anchor" href="#读取与写入"></a> 读取与写入</h3>
<h4 id="从磁盘读取文件"><a class="markdownIt-Anchor" href="#从磁盘读取文件"></a> 从磁盘读取文件</h4>
<p>当我们要读取一个文件时，文件系统必须遍历路径名，从而找到文件所对应的inode。所有的遍历都是从文件系统的根目录&quot;/&quot;开始的（根目录的inode号必须是众所周知的，在大多数UNIX文件系统中为2），这一查找过程大致如下：</p>
<ol>
<li>读入根目录的inode；</li>
<li>文件系统在根目录的inode中查找指向数据块的指针，然后从数据块中读取根目录中的内容；</li>
<li>文件系统从根目录数据块中找到下一级目录所对应的inode号；</li>
<li>递归遍历路径名（重复上述步骤，除了每一次递归读取的inode号不同），直至读取到文件对应的inode。</li>
<li>文件系统最后进行权限检查，在每个进程的打开文件表中为此进程分配一个文件描述符并将它返回给用户，之后用户便可通过<code>read()</code>系统调用来读取文件。</li>
</ol>
<h4 id="写入磁盘"><a class="markdownIt-Anchor" href="#写入磁盘"></a> 写入磁盘</h4>
<p>在写入文件时，首先必须确保文件打开，然后应用程序调用<code>write()</code>使用新内容更新文件，最后将文件关闭。写入文件所需的操作比读取文件更加复杂。</p>
<p>当写入一个新文件（文件已经创建好）时，每次写入操作不仅要将数据写入磁盘，还必须在写入之前决定将哪个块分配给文件，从而相应地更新磁盘的其它结构（如数据位图和inode）。因此，每次写入文件的操作在逻辑上会导致5个I/O：一次读取数据位图（对新分配的块进行标记），一次写入数据位图（将新状态存入磁盘），一次读取inode，一次写inode（更新数据块的位置），最后一次写入真正的数据本身。</p>
<p>对于文件创建来说工作量更大，创建一个新文件时不仅要分配一个inode，还要在包含新文件的目录中分配空间。此时，需要的I/O操作更多：一个读取inode位图（查找空闲inode），一个写入inode位图（更新inode使用情况），一个写入新的inode本身（初始化），一个写入文件所在目录的数据块（将文件的高级名称与它的inode号的组合写入到它所在目录的文件列表中），一个读取文件所在目录inode和一个写入目录inode操作（更新它）。如果目录需要增长以容纳新条目，则还需要额外的I/O。</p>
<h3 id="缓存与缓冲"><a class="markdownIt-Anchor" href="#缓存与缓冲"></a> 缓存与缓冲</h3>
<p>由于读写文件都需要许多I/O操作，将会出现性能问题，因此大多数文件系统会使用内存来缓存重要的块。早期的文件系统使用一个固定大小的缓存来保存常用的块，这块缓存会在启动时分配，但是这种办法可能导致浪费。现代的文件系统采用动态划分的办法，将虚拟内存页面和文件系统页面集成到统一页面缓存中，这样便可在虚拟内存与文件系统之间更加灵活地分配内存。</p>
<p>通过使用缓存，便可以实现写缓冲，这样做有一些优点：</p>
<ul>
<li>延迟写入可以让我们将一些更新编成一批同时进行，从而节省了I/O；</li>
<li>将写入缓冲到内存中，系统可以对后续的I/O进行合理调度；</li>
<li>一些写入可以通过拖延来避免</li>
</ul>
<p>但是如果系统在更新传递到磁盘之前崩溃，那么更新就会丢失。因此一些应用程序如数据库，为了避免这种情况发生，数据写入采用的是强制写入的办法，这是通过使用绕过缓存的直接I/O或是使用原始磁盘接口来实现的。</p>
<h2 id="快速文件系统"><a class="markdownIt-Anchor" href="#快速文件系统"></a> 快速文件系统</h2>
<h3 id="简单文件系统的问题"><a class="markdownIt-Anchor" href="#简单文件系统的问题"></a> 简单文件系统的问题</h3>
<p>简单文件系统被用于早期的UNIX操作系统。这种文件系统将磁盘当成了随机存取内存，因此在使用过程中会导致数据遍布各处，文件系统变得碎片化，从而导致读写时昂贵的定位成本。另一个问题是块大小设置的太小，虽然这样会减少内部碎片的出现，但是这样会导致磁盘数据传输变得低效。</p>
<h3 id="解决方案"><a class="markdownIt-Anchor" href="#解决方案"></a> 解决方案</h3>
<p>为了让文件系统的结构与分配策略能够更加符合磁盘本身的工作特性，一些人构造了快速文件系统（Fast File System, FFS）。这一文件系统改变了内部实现从而提高性能，但是保持了相同的API以便兼容应用程序。</p>
<h4 id="柱面组"><a class="markdownIt-Anchor" href="#柱面组"></a> 柱面组</h4>
<p>FFS将磁盘划分为多个柱面组（这个柱面与计算机组成原理中磁盘的柱面相对应），如果要访问在同一个柱面组中放置的不同文件，可以确保访问这些文件时不会导致穿越磁盘的长时间寻道。这种分组方式是FFS用于改善性能的核心机制。同时，早期的FFS也针对性能对磁盘布局进行了优化，将块进行交错布局（现代磁盘不需要这么做，它会读取整个磁道并将其缓冲在内部的磁盘缓存中，之后便可从磁盘缓存中取数据）。</p>
<p>而在一个柱面组中，其构成与简单文件系统相似，都包括超级块、inode位图、数据位图、inodes和数据块。但是不同的一点是，每一个柱面组中的超级块都保存了一个副本，因此即使是其中一个被损伤，仍然可以通过使用副本来挂载和访问文件系统。同时为了改善内部碎片问题，FFS系统引入了子块的概念，这样就可以让小文件不会浪费掉整个的块。</p>
<h4 id="分配策略"><a class="markdownIt-Anchor" href="#分配策略"></a> 分配策略</h4>
<p>FFS在磁盘上放置文件、目录和相关元数据的基本思想就是将相关的数据放在一起（这样做使得数据访问具有了更好的局部性，便于磁盘的读写操作）。</p>
<p>对于目录的放置，FFS会找到分配数量少和具有大量自由inode的柱面组，并将目录数据和inode放在该分组中。这样做可以跨组平衡目录，并且能够尽量保证后续在分配文件的时候能够有充足的空间。</p>
<p>对于文件，FFS会尽量确保文件的数据块分配到与其inode相同的组中，从而避免了inode和数据之间的长时间寻道。同时，它会将位于同一目录中的所有文件，都放在它们所在目录的柱面组中。</p>
<p>但是对于大文件来说则例外。由于大文件会将它首先放入的块组填满，这样便会妨碍随后相关文件的放置，破坏了文件访问的局部性。因此，对于大文件来说，通常会将所有的块分成若干份。在将第一份分配到第一个块组之后，FFS便会将文件的第二份放在另一个块组中，然后以此类推。如果分割大文件时选择的分割份数合适，那么大部分时间仍然会花在从磁盘传输数据上，而花费在磁盘寻道上的时间相对较小。FFS会基于inode本身的结构来对大文件进行分割，前12个直接块与inode放在同一组中，每个后续的间接块及其指向的所有块被放置于不同的组中。</p>
<h2 id="崩溃一致性"><a class="markdownIt-Anchor" href="#崩溃一致性"></a> 崩溃一致性</h2>
<h3 id="概述-2"><a class="markdownIt-Anchor" href="#概述-2"></a> 概述</h3>
<p>假设我们要对文件进行追加写入，在使用简单文件系统时，我们需要同时更新inode、数据位图和写入的数据块，而且这三个写入是单独进行的。如果在所有步骤执行完成之前，突然发生了机器断电或者操作系统崩溃，此时磁盘状态只会被部分更新，文件系统将会处于不一致的状态。可能出现的崩溃场景如下：</p>
<ul>
<li>只将数据块写入磁盘：此时数据在磁盘上，但是没有指向它的inode，也没有表示块已分配的位图，好像写入从未发生过。</li>
<li>只有更新的inode写入磁盘：将会从磁盘中读取到垃圾数据。</li>
<li>只有更新后的位图写入磁盘：出现文件系统不一致的问题，如果不解决则会造成某些空间永远不会使用，从而导致浪费。</li>
<li>没有写入数据块：将会从磁盘中读取到垃圾数据。</li>
<li>没有写入位图：inode和位图之间存在不一致，可能会导致数据被覆盖掉。</li>
<li>没有写入inode：inode和位图之间不一致，文件系统无法找到新写入的数据。</li>
</ul>
<p>在上述的一些场景中，出现了崩溃之后文件系统不一致的情况。因此我们需要考虑崩溃一致性（crush-consistency）的问题，也称为一致性更新问题，确保磁盘上存储的文件系统保持合理的状态。</p>
<h3 id="文件系统检查程序"><a class="markdownIt-Anchor" href="#文件系统检查程序"></a> 文件系统检查程序</h3>
<p>fsck是一个UNIX工具，用于查找文件系统不一致并修复，但是这种方法无法修复全部问题。它会在许多阶段运行，比如在文件系统挂载并可用之前运行。fsck检查的步骤如下：</p>
<ol>
<li>超级块：检查超级块是否合理，主要是进行健全性检查，目的是找到冲突的超级块。如果有冲突的超级块则需要系统或管理员决定使用超级块的备用副本。</li>
<li>空闲块：扫描inode、间接块、双重间接块等，了解当前在文件系统中分配的块，并利用扫描的结果生成一个正确版本的分配位图。如果位图与inode之前存在差异则通过信任inode内的信息来解决它。</li>
<li>inode状态：检查inode是否存在损坏或其他问题。</li>
<li>inode链接：验证每个已分配的inode的链接数。如果链接计数不匹配则需要修正计数，如果发现已分配的inode但是没有目录引用它则将它移动到一个专门的文件夹内。</li>
<li>重复：检查重复指针，即两个不同inode引用同一个块的情况。或是清除一个inode，也或是生成一个副本。</li>
<li>坏块：检查坏块指针，并从inode中清除它。</li>
<li>目录检查：为每个目录内容进行完整性检查。</li>
</ol>
<p>这种方法的根本问题是速度过慢，它需要扫描整个磁盘；而如果要解决一个小文件导致的不一致性，扫描整个磁盘的这种做法也过于浪费，大部分的时间都被用于检查文件系统中正确的部分。随着磁盘容量的增长，这种方法变得不实用。</p>
<h3 id="预写日志"><a class="markdownIt-Anchor" href="#预写日志"></a> （预写）日志</h3>
<h4 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h4>
<p>预写日志的方法在Linux ext3和ext4、Windows NTFS等文件系统中都被使用。这种方法的思路是，在更新磁盘时，首先在磁盘的日志区写入“注释”再去覆写文件结构。通过将注释写入磁盘，可以保证在更新期间发生崩溃时，系统能够返回并查看这些注记然后重试。这样做可以在崩溃之后准确知道要修复的内容，而不必扫描整个磁盘，从而大大减少了恢复所需的工作量。</p>
<h4 id="数据日志"><a class="markdownIt-Anchor" href="#数据日志"></a> 数据日志</h4>
<p>在Linux ext3文件系统中，使用了数据日志（Data journaling）的方法。数据日志的方法指的是，在做文件系统更新的时候，先把需要更新的内容写入日志，然后再将其写入最终的磁盘位置。一个日志文件系统的大致结构如下图所示：</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201115222726.png" alt="数据日志" style="zoom: 50%;" />
<p>日志文件系统将日志视为一个循环数据结构，因此文件必须要在加检查点之后的某个时间将其在日志中占有的空间释放，允许重用空间。在日志文件系统内有一个日志超级块，用于记录哪些事务尚未加检查点，并且记录日志中最旧和最新的事务。这样便可减少恢复时间，并允许以循环的方式使用日志。</p>
<p>这种方法的操作顺序如下：</p>
<ol>
<li>日志写入：将一个事务写入日志，包括事务开始块、所有即将写入的数据和元数据，并等待写入完成。</li>
<li>日志提交：将事务提交块（即事务结束块）写入日志，在写完成之后事务被认为已经提交。将步骤1和2分开是为了防止在写日志时出现崩溃，从而导致文件系统的更新出错。</li>
<li>加检查点：将待处理的元数据和数据更新写入文件系统的最终位置。</li>
<li>释放：在一段时间后，通过更新日志超级块，在日志中标记事务为空闲。</li>
</ol>
<p>由于更新文件系统需要对磁盘上的许多结构进行更新，造成大量的磁盘流量，而且不同的事务可能更新的是同一个数据块。因此为了解决这一问题，一些文件系统不会一次一个地提交更新事务，而是会将更新缓冲到全局事务中，在写入磁盘时提交所有的更新。</p>
<p>另一个需要考虑的问题是块复用，当块被删除然后又重新分配时便会出现这个问题。此时如果发生崩溃，在之后的恢复过程中如果简单地重放日志内的所有内容，便会用旧内容覆盖当前的用户数据。为了解决这一问题，可以直到日志中的内容被清除之后再重复使用块，或是将撤销记录加入到日志中，在重放日志之前先扫描这样的记录，任何被撤销的数据都不会被重放。</p>
<h4 id="从崩溃中恢复"><a class="markdownIt-Anchor" href="#从崩溃中恢复"></a> 从崩溃中恢复</h4>
<p>在更新文件系统的过程中，任何时候都有可能发生崩溃。对于不同的情况，我们也有不同的处理办法：</p>
<ul>
<li>如果崩溃发生在事务被安全地写入日志之前（即步骤2完成之前），就简单地跳过待执行的更新；</li>
<li>如果在事务已经提交到日志之后，但是在加检查点之前发生崩溃，文件系统会按如下步骤恢复：
<ol>
<li>系统引导时，文件系统恢复过程会扫描日志，并查找已经提交到磁盘的事务；</li>
<li>这些事务被重放，文件系统再次尝试将事务中的块写入到最终的磁盘位置。</li>
</ol>
</li>
</ul>
<h4 id="元数据日志"><a class="markdownIt-Anchor" href="#元数据日志"></a> 元数据日志</h4>
<p>由于使用用户日志的方式记录了所有的用户数据，这样便显著增加了开销。为了提高性能，一些文件系统使用了一种更简单的日志形式，被称为有序日志（Ordered Journaling）或元数据日志（Metadata Journaling）。它与数据日志几乎相同，只是用户数据没有写入日志。在Windows NTFS与Linux ext3（可选）中使用了元数据日志的方法。</p>
<p>此时，数据写入的顺序对于元数据日志变得很重要。为了确保文件系统的一致，需要先将数据写入到最终位置，然后再执行与数据日志相同的四个步骤。通过强制先写入数据，文件系统可以保证inode中的指针永远不会指向垃圾。</p>
<h1 id="日志结构文件系统"><a class="markdownIt-Anchor" href="#日志结构文件系统"></a> 日志结构文件系统</h1>
<h2 id="概述-3"><a class="markdownIt-Anchor" href="#概述-3"></a> 概述</h2>
<p>日志结构文件系统（Log-structured File System, LFS）简单地将所有更新（如数据块，inode等）顺序地写入磁盘。在写入磁盘时，LFS首先将所有更新缓存在内存段中，当段已满时它就会在一次长时间的顺序传输中写入磁盘，并传输到磁盘的未使用部分。LFS永远不会覆盖现有数据，而是始终将段写入空闲位置。由于段很大，因此可以有效地使用磁盘，并使得文件系统的性能达到峰值。</p>
<p>下图所示为一个简单的文件系统示意图，其中每一部分的含义及用途会在下文详细描述：</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201115222731.png" alt="LFS概况" style="zoom: 67%;" />
<h2 id="写入"><a class="markdownIt-Anchor" href="#写入"></a> 写入</h2>
<p>LFS使用了写入缓冲的技术，在写入磁盘之前，LFS会跟踪内存中的更新，收到足够数量的更新时会立即将他们写入磁盘。LFS一次写入的大块更新被称为段，每次写入之前缓冲的数据越多，那么每次更新时的有效速率就会更加接近于峰值速率。</p>
<h2 id="查找inode"><a class="markdownIt-Anchor" href="#查找inode"></a> 查找inode</h2>
<p>为了在LFS中查找inode，引入了一个被称为inode映射（imap）的数据结构，在inode号和inode之间引入了一个间接层。imap结构中存储了inode的指针，使用inode号作为输入，便可获得相对应inode的磁盘地址。LFS将imap放在它写入的所有其他新信息的位置旁边。</p>
<p>在引入imap之后，由于imap分布于整个磁盘上，因此我们需要从磁盘上的某个固定位置开始找到这些imap。LFS在磁盘上有一个这样的区域，被称为检查点区域（Checkpoint Region, CR），它包含了指向最新的imap片段的指针。这一区域会定时更新，因此性能不会受到影响。</p>
<h2 id="目录"><a class="markdownIt-Anchor" href="#目录"></a> 目录</h2>
<p>LFS中的目录结构与传统的UNIX文件系统基本相同，因为目录只是一系列（名称，inode号）映射的集合。在磁盘上创建文件时，LFS需要同时写入新的inode、数据、引用此文件的目录数据及其inode。而在imap中，也同时保存了新创建文件和文件目录所对应的inode的映射。下图所示为在一个目录中创建一个名为foo的新文件所形成的结构：</p>
<img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201115222738.png" alt="LFS目录结构" style="zoom: 50%;" />
<p>按照上图，以访问文件foo为例，步骤如下：</p>
<ol>
<li>查看imap并找到目录dir所对应的inode的位置（即A3）；</li>
<li>读取目录的inode，从中可以找到目录数据的位置（即A2）；</li>
<li>从目录数据中找到文件foo的inode号码（本例中为k）；</li>
<li>再次访问imap，从中找到inode号k在磁盘中存储的位置（即A1）；</li>
<li>访问文件的inode，并读取到文件。</li>
</ol>
<p>LFS中存在的递归更新问题（任何不会原地更新的文件系统都会遇到这一问题，即更新inode时会导致沿着文件系统树一直向上更新）是通过使用imap被间接解决的。当inode的位置发生变化时，imap中存储的地址也会随之更新，但是目录中的内容仍然是文件名到inode号的映射，也就是说此时的一系列更改不会影响到目录结构本身。因此，这样的修改不会影响它的上级目录对它进行访问。</p>
<h2 id="垃圾收集"><a class="markdownIt-Anchor" href="#垃圾收集"></a> 垃圾收集</h2>
<h3 id="基本原理"><a class="markdownIt-Anchor" href="#基本原理"></a> 基本原理</h3>
<p>LFS会反复地将最新版本的文件写入到磁盘上的新位置，在文件系统中留下的旧版本就变成了垃圾。因此，LFS会定期的在后台查找文件数据、索引节点和其他结构的旧版本，并清理它们。具体来说，清理程序会定期地读入许多旧的段，确定哪些块在这些段中仍然在使用，然后写出一组新的段，只包含其中仍在使用的块。之后便可以将旧段释放掉，从而用于写入。</p>
<p>当然也可以保留旧版本的数据，并允许用户恢复旧文件版本。这样便形成了一个版本控制文件系统。</p>
<h3 id="确定块是否被使用"><a class="markdownIt-Anchor" href="#确定块是否被使用"></a> 确定块是否被使用</h3>
<p>为了确定块是否被使用，LFS会为每个段添加一些额外信息。具体来说，在段的头部添加一个段摘要块（标记为SS），里面包括每个数据块的inode号和偏移量。之后，如果要确定位于地址A的块D是否被使用，可以按如下步骤进行：</p>
<ol>
<li>先查看段摘要块从中找到它对应的inode号N和偏移量T；</li>
<li>接下来查看imap以找到N所在的位置，并从磁盘读取N；</li>
<li>最后查看inode N中保存的偏移量为T的块在磁盘中的实际位置A’；</li>
<li>如果A’=A，那么便可以确定块D正在被使用；反之则可以认为块D未被使用，它可以被删除掉。</li>
</ol>
<h3 id="清理策略"><a class="markdownIt-Anchor" href="#清理策略"></a> 清理策略</h3>
<p>在上述机制的基础上，LFS需要确定何时清理以及哪些块值得清理。要确定何时清理很容易，可以周期性清理，可以使用空闲时间，也可以在磁盘已满时清理。而确定清理哪些块则很难取得最佳方法，在最初的LFS中使用的是试图分离冷热段的方法，由于热段经常覆盖内容，因此每次清理的间隔时间较长，而冷段的内容比较稳定，每次清理的间隔短。</p>
<h2 id="崩溃恢复与日志"><a class="markdownIt-Anchor" href="#崩溃恢复与日志"></a> 崩溃恢复与日志</h2>
<p>LFS在更新检查点区域（CR）以及将段写入时都可能会发生崩溃。为了确保CR的更新以原子方式发生，LFS在磁盘两端各保留了一个CR，并交替写入它们。同时在CR中写入时间戳，这样便可以检测出更新时发生崩溃。而对于段写入时的崩溃，LFS会在重新启动时读取检查点区域、它指向的imap片段、以及后续的文件和目录，对文件系统进行恢复，同时使用了前滚的技术对许多段进行重建。</p>
<h1 id="数据完整性和保护"><a class="markdownIt-Anchor" href="#数据完整性和保护"></a> 数据完整性和保护</h1>
<h2 id="磁盘故障模式"><a class="markdownIt-Anchor" href="#磁盘故障模式"></a> 磁盘故障模式</h2>
<p>潜在扇区错误（Latent-Sector Errors, LSE）指的是磁盘扇区或扇区组以某种方式出现了讹误，此时会出现部分数据位不可读或是数据位的内容不正确。驱动器使用磁盘内纠错码（Error Correcting Code, ECC）来确定块中的磁盘位是否良好，并且在某些情况下修复它们。如果磁盘位确实有错，且驱动器没有足够的信息来修正错误，那么在发出读取请求时就会返回错误。这种错误很容易处理，当系统返回错误时，存储系统就可以使用它具有的任何冗余机制，例如RAID-1可以访问备用副本，基于奇偶校验的RAID-4和RAID-5可以使用奇偶校验块来重建。</p>
<p>块讹误（block corruption）指的是磁盘块出现问题，但是磁盘本身无法检测到，比如将块写入到错误的位置。在这种情况下，ECC指示块的内容没有问题，但是在随后访问时却会返回错误的块。在返回故障数据时，磁盘不会报告任何问题，因此这种类型的故障特别隐蔽。在下面的内容中我们将讨论这种错误如何解决。</p>
<h2 id="校验和"><a class="markdownIt-Anchor" href="#校验和"></a> 校验和</h2>
<h3 id="概述-4"><a class="markdownIt-Anchor" href="#概述-4"></a> 概述</h3>
<p>现代存储系统用于保持数据完整性的主要机制被称为校验和（checksum）。校验和指的是一个函数的结果，这个函数以一块数据作为输入，并计算这段数据的函数，产生数据内容的摘要，这个摘要便被称为校验和。</p>
<p>系统通过将原始数据和校验和一起存储，然后在访问时确认数据的当前校验和与原始的存储值是否可以相匹配，从而检测数据是否被破坏或者改变。</p>
<h3 id="校验和函数"><a class="markdownIt-Anchor" href="#校验和函数"></a> 校验和函数</h3>
<p>计算校验和的函数有许多，并且保护数据完整性的强度和计算速度都不同。因为摘要比元素数据会小得多，两个具有不相同数据块的校验和可能是相同的（即发生碰撞），所以没有完美的校验和函数。常用的校验和函数有：</p>
<ul>
<li>奇偶校验：将整个数据块均分成若干小块，然后计算每个数据块内所有比特的异或。异或值可以表示这一数据块中1的数量是奇数或者偶数。如果数据块内有两个位发生变化，就无法检测到讹误，而且这种方式计算速度较慢。</li>
<li>纵向冗余校验（XOR校验和）：将整个数据块均分成若干小块，然后以整个数据块作为计算单位，计算所有数据块的异或值。这种方式是对奇偶校验的扩展，只能检测纵向奇数个错误。</li>
<li>加法校验和：在每个数据块上执行二进制加法，忽略溢出。这种方法计算速度快，但是如果数据被移位则效果不好。</li>
<li>Fletcher校验和：假设块D由字节d1,……,dn组成，则从i=1~n重复计算：s1=(s1+di) mod 255, s2=(s1+s2) mod 255，取最后一步得到的s1和s2拼接在一起作为最终的校验和。</li>
<li>循环冗余校验（CRC）：将数据块中的内容看成一个大的二进制数字，然后用一个事先约定好的值k除以它，取最终的余数作为校验和。</li>
</ul>
<h3 id="校验和布局"><a class="markdownIt-Anchor" href="#校验和布局"></a> 校验和布局</h3>
<p>校验和的存储有两种方式：一种方式是驱动器制造厂商在划分扇区的时候将校验和考虑在内，也就是说一个扇区内部包括数据与它的校验和；另外一种方式是将n个校验和同时存储在一个扇区内部，后面接着n个数据块，然后按照这种排列方式重复，这种方法的效率较低，因其写入的时候需要一次读取和两次写入操作。</p>
<h3 id="校验和的使用"><a class="markdownIt-Anchor" href="#校验和的使用"></a> 校验和的使用</h3>
<p>当我们在读取数据时，计算机同时读取磁盘上这段数据的校验和。同时，计算机也会使用读取到的数据计算校验和。如果这两个校验和相等，则数据很可能没有被损坏，因此可以返回给用户；如果不等，则说明数据存在讹误，此时如果存储系统有冗余副本，则可以使用它来恢复数据，如果没有则返回错误。</p>
<h3 id="校验和的开销"><a class="markdownIt-Anchor" href="#校验和的开销"></a> 校验和的开销</h3>
<p>校验和的开销主要是空间和时间两个方面。空间开销包括存储介质开销以及系统内存开销，由于校验和相比于原始的数据块本身在磁盘中所占的比例很小，而且内存在使用完校验和之后便可以把它丢掉，因此空间开销很小。而校验和引起的时间开销会很大，因为使用校验和的时候需要CPU计算校验和，并且需要从磁盘中读取或是写入校验和，这就带来了额外的时间开销。</p>
<h2 id="其他问题"><a class="markdownIt-Anchor" href="#其他问题"></a> 其他问题</h2>
<h3 id="错误的写入"><a class="markdownIt-Anchor" href="#错误的写入"></a> 错误的写入</h3>
<p>有一种失败模式被称为错误位置的写入，指的是数据可以正确地写入磁盘，但是写入位置不正确。为了解决这一问题，需要在每个校验和中添加更多信息，具体为添加物理标识符（块的磁盘和扇区号）。</p>
<h3 id="丢失的写入"><a class="markdownIt-Anchor" href="#丢失的写入"></a> 丢失的写入</h3>
<p>当设备通知上层写入已完成，但是事实上这一过程并未完成，就会发生丢失写入的问题。此时，磁盘上留下的仍然是旧内容，而不是更新后的内容。这种情况下的校验和策略也会失效。解决这一问题的办法包括写入验证、写入后读取、在系统的其它位置添加校验和等。</p>
<h2 id="磁盘擦净"><a class="markdownIt-Anchor" href="#磁盘擦净"></a> 磁盘擦净</h2>
<p>由于存储在磁盘上的数据可能长时间未被访问，因此将保持未检查状态。为了解决这一问题，系统使用了各种形式的磁盘擦净（disk scrubbing）。系统会定期读取每一个块，并检查校验和是否有效，这样便减少了某个数据项的所有副本都被破坏的可能性。</p>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<ol>
<li>Operating Systems: Three Easy Pieces</li>
<li>深入理解计算机系统（第三版）</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2pjX2JlbmJlbi9hcnRpY2xlL2RldGFpbHMvMTA3OTA1MDMw">https://blog.csdn.net/jc_benben/article/details/107905030<i class="fa fa-external-link-alt"></i></span></li>
</ol>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>数据分析-NumPy</title>
    <url>/2021/01/09/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-NumPy/</url>
    <content><![CDATA[<h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1>
<p>NumPy全称Numeric Python，它具有如下特性：</p>
<ul>
<li>ndarray（多维数组对象），即对n维数组的基本操作</li>
<li>与ndarray相关的各种运算</li>
<li>支持I/O操作</li>
<li>线性代数、随机数、傅里叶变换等操作</li>
<li>与C/C++/Fortran等编程语言结合</li>
</ul>
<p>NumPy是专门为大型数组的相关操作所设计的函数库，它的底层为C语言。同时在内存分配上也是为数组开辟连续的空间进行存储。通过这些优化，使得其运行速度相比于Python的内置类型要快得多。</p>
<p>NumPy官方文档：<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnNjaXB5Lm9yZy9kb2MvbnVtcHkv">https://docs.scipy.org/doc/numpy/<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">&quot;ignore&quot;</span>)</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="ndarray"><a class="markdownIt-Anchor" href="#ndarray"></a> ndarray</h1>
<h2 id="创建"><a class="markdownIt-Anchor" href="#创建"></a> 创建</h2>
<h3 id="非随机方式"><a class="markdownIt-Anchor" href="#非随机方式"></a> 非随机方式</h3>
<p>在NumPy中，创建一个ndarray对象的方法有很多，下面为一些示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data=[[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],[<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]]</span><br><span class="line">data1=np.array(data,dtype=np.int64) <span class="comment">#将Python的list、tuple等数据类型转换为一个ndarray，数据类型可以自己指定或是让函数自动推断。默认情况下使用复制原始数据的方法创建。</span></span><br><span class="line">data2=np.asarray(data) <span class="comment">#与np.array()类似，但如果传入参数是一个ndarray则为引用方式而不是复制</span></span><br><span class="line">data3=np.arange(<span class="number">1</span>,<span class="number">100</span>,<span class="number">2</span>) <span class="comment">#与Python内置的range函数类似，但是该函数的返回值是一个ndarray</span></span><br><span class="line">data4=np.ones((<span class="number">3</span>,<span class="number">3</span>)) <span class="comment">#创建一个全为1的ndarray，数组形状可以通过传入一个list或者tuple指定。</span></span><br><span class="line">data5=np.ones_like(data1) <span class="comment">#创建一个全为1的ndarray，数组形状由传入的ndarray决定</span></span><br><span class="line">data6=np.zeros([<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>]) <span class="comment">#创建一个全0的ndarray，使用方法类似于np.ones()</span></span><br><span class="line">data7=np.zeros_like(data1) <span class="comment">#创建一个全0的ndarray，使用方法类似于np.ones_like()</span></span><br><span class="line">data8=np.empty((<span class="number">2</span>,<span class="number">2</span>)) <span class="comment">#创建一个新的ndarray，但是数组的内容没有被初始化，即数组内的元素是随机的。使用方法与np.ones类似</span></span><br><span class="line">data9=np.empty_like(data1) <span class="comment">#创建一个未初始化的ndarray，使用方法与np.ones_like()类似</span></span><br><span class="line">data10=np.eye(<span class="number">4</span>) <span class="comment">#创建一个二维的n*n对角矩阵，对角元素为1，其余元素为0。</span></span><br><span class="line">data11=np.identity(<span class="number">3</span>) <span class="comment">#功能与np.eye()相同</span></span><br><span class="line">data12=np.full((<span class="number">2</span>,<span class="number">2</span>),<span class="number">3</span>) <span class="comment">#创建一个全部由某个元素填充的ndarray</span></span><br><span class="line">data13=np.full_like(data1,<span class="number">3</span>) <span class="comment">#与np.full类似，数组形状与传入的ndarray相同</span></span><br><span class="line">data14=np.linspace(<span class="number">0.0</span>,<span class="number">2.0</span>,<span class="number">4</span>) <span class="comment">#在某个区间上生成若干个等间距的数据点，前两个参数对应于区间起点和终点，第三个参数对应于数据点的数量（注意是数量！）</span></span><br><span class="line"><span class="comment"># 注：以上这些创建ndarray的函数都可以传入dtype参数，从而手动指定ndarray中的元素类型。</span></span><br></pre></td></tr></table></figure>
<p>其中，每个ndarray都有如下的属性：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data1.ndim <span class="comment">#输出ndarray的维度</span></span><br></pre></td></tr></table></figure>
<pre><code>2
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data1.shape <span class="comment">#输出ndarray每个维度上的大小</span></span><br></pre></td></tr></table></figure>
<pre><code>(2, 4)
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data1.dtype <span class="comment">#输出ndarray中的元素类型</span></span><br></pre></td></tr></table></figure>
<pre><code>dtype('int64')
</code></pre>
<p>ndarray可以使用的数据类型如下：</p>
<table>
<thead>
<tr>
<th style="text-align:center">类型</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">int8, uint8</td>
<td style="text-align:center">有符号和无符号的8位整数</td>
</tr>
<tr>
<td style="text-align:center">int16, uint16</td>
<td style="text-align:center">有符号和无符号的16位整数</td>
</tr>
<tr>
<td style="text-align:center">int32, uint32</td>
<td style="text-align:center">有符号和无符号的32位整数</td>
</tr>
<tr>
<td style="text-align:center">int64, uint64</td>
<td style="text-align:center">有符号和无符号的64位整数</td>
</tr>
<tr>
<td style="text-align:center">float16</td>
<td style="text-align:center">半精度浮点数</td>
</tr>
<tr>
<td style="text-align:center">float32</td>
<td style="text-align:center">单精度浮点数</td>
</tr>
<tr>
<td style="text-align:center">float64</td>
<td style="text-align:center">双精度浮点数</td>
</tr>
<tr>
<td style="text-align:center">float128</td>
<td style="text-align:center">扩展精度的浮点数</td>
</tr>
<tr>
<td style="text-align:center">complex64, complex128, complex256</td>
<td style="text-align:center">使用32、64和128位浮点数表示的复数</td>
</tr>
<tr>
<td style="text-align:center">bool</td>
<td style="text-align:center">布尔类型</td>
</tr>
<tr>
<td style="text-align:center">object</td>
<td style="text-align:center">Python的对象类型</td>
</tr>
<tr>
<td style="text-align:center">string_</td>
<td style="text-align:center">固定长度的字符串类型</td>
</tr>
<tr>
<td style="text-align:center">unicode_</td>
<td style="text-align:center">固定长度的unicode类型</td>
</tr>
</tbody>
</table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data1=data1.astype(<span class="string">&#x27;string_&#x27;</span>) <span class="comment">#调用ndarray的astype()方法，可以进行数据类型的转换</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data1.dtype</span><br></pre></td></tr></table></figure>
<pre><code>dtype('S21')
</code></pre>
<p>一个ndarray的数据类型可以自己定义，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dtype_self=[(<span class="string">&#x27;x&#x27;</span>,np.float64),(<span class="string">&#x27;y&#x27;</span>,np.int32)]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">self_arr=np.array([(<span class="number">1.5</span>,<span class="number">6</span>),(np.pi,<span class="number">-2</span>)],dtype=dtype_self)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">self_arr</span><br></pre></td></tr></table></figure>
<pre><code>array([(1.5       ,  6), (3.14159265, -2)],
      dtype=[('x', '&lt;f8'), ('y', '&lt;i4')])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">self_arr[<span class="number">1</span>][<span class="string">&#x27;x&#x27;</span>] <span class="comment">#在索引时，便可以使用元素所在的index，加上数据类型里面的某个名字，索引出数据结构里面的某个元素</span></span><br></pre></td></tr></table></figure>
<pre><code>3.141592653589793
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">self_arr[<span class="number">1</span>] <span class="comment">#如果不加数据类型里面的名字，则得到整个数据结构</span></span><br></pre></td></tr></table></figure>
<pre><code>(3.14159265, -2)
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">self_arr[<span class="string">&#x27;y&#x27;</span>] <span class="comment">#如果不使用index，则索引数据类型里面某个名字对应的所有元素</span></span><br></pre></td></tr></table></figure>
<pre><code>array([ 6, -2])
</code></pre>
<p>在数据类型的定义上面比较灵活，支持内嵌的数组甚至是数据类型的嵌套。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dtype=[(<span class="string">&#x27;x&#x27;</span>,np.int64,<span class="number">3</span>),(<span class="string">&#x27;y&#x27;</span>,np.int32)]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.zeros(<span class="number">4</span>,dtype=dtype)</span><br></pre></td></tr></table></figure>
<pre><code>array([([0, 0, 0], 0), ([0, 0, 0], 0), ([0, 0, 0], 0), ([0, 0, 0], 0)],
      dtype=[('x', '&lt;i8', (3,)), ('y', '&lt;i4')])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dtype=[(<span class="string">&#x27;x&#x27;</span>,[(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;f8&#x27;</span>),(<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;f4&#x27;</span>)]),(<span class="string">&#x27;y&#x27;</span>,np.int32)]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">self_arr2=np.array([((<span class="number">1</span>,<span class="number">2</span>),<span class="number">5</span>),((<span class="number">3</span>,<span class="number">4</span>),<span class="number">6</span>)],dtype=dtype)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">self_arr2[<span class="string">&#x27;x&#x27;</span>][<span class="string">&#x27;a&#x27;</span>]</span><br></pre></td></tr></table></figure>
<pre><code>array([1., 3.])
</code></pre>
<h3 id="随机方式"><a class="markdownIt-Anchor" href="#随机方式"></a> 随机方式</h3>
<p>此外，NumPy也提供了一些生成随机元素的方式来创建ndarray，这些随机数可以满足不同的概率分布。下面为一些使用示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.random.seed(<span class="number">0</span>) <span class="comment">#设置随机数种子</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.random.permutation(test) <span class="comment">#将一个array随机打乱，不改变原数组的内容</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[ 3.8,  2.1, -5.4,  0. ],
       [ 0.5, -0.3,  2.5,  2.8]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.random.shuffle(test) <span class="comment">#同样是将array随机打乱，但是对array进行就地修改</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.random.permutation(<span class="number">20</span>) <span class="comment">#也可以传入一个整数，生成0至n-1所有数字的一个全排列</span></span><br></pre></td></tr></table></figure>
<pre><code>array([15, 10, 14, 13,  1, 12, 11, 19,  8,  6, 16,  4,  2,  5, 17,  9,  7,
       18,  3,  0])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.random.rand(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>) <span class="comment">#传入n个数字，生成一个n维数组，数组中的元素服从0到1的均匀分布</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[[0.3927848 , 0.83607876],
        [0.33739616, 0.64817187]]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.random.uniform(low=<span class="number">-2.0</span>,high=<span class="number">4.0</span>,size=(<span class="number">3</span>,<span class="number">4</span>)) <span class="comment">#生成一个n维数组，所有的元素在区间[low,high)中间均匀分布，size代表产生ndarray的规模（下同）</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[ 0.20944924,  3.74293095, -1.15789532,  3.22052355],
       [ 0.84164827,  2.80546451,  1.12286488,  2.07327718],
       [ 2.32379593,  1.49211875,  1.22423938,  2.55169375]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.random.randn(<span class="number">3</span>,<span class="number">3</span>) <span class="comment">#传入n个数字，生成一个n维数组，数组中的元素服从均值为0，标准差为1的正态分布</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[-0.06491034, -0.96898025,  0.59124281],
       [-0.7827755 , -0.44423283, -0.34518616],
       [-0.88180055, -0.44265324, -0.5409163 ]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.random.normal(loc=<span class="number">-2.0</span>,scale=<span class="number">2.0</span>,size=(<span class="number">3</span>,<span class="number">3</span>)) <span class="comment">#生成元素服从正态分布的随机数组，loc代表均值，scale代表标准差</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[-4.64645474, -2.22559784, -0.18530811],
       [-0.36946018, -1.5418041 , -4.05235756],
       [-1.04494906,  0.58539646, -3.46291647]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.random.randint(<span class="number">0</span>,<span class="number">5</span>,size=(<span class="number">3</span>,<span class="number">4</span>)) <span class="comment">#生成均匀分布的随机整数，第一个参数代表下限（可取到），第二个代表上限（不能取到）</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[3, 4, 1, 2],
       [4, 3, 4, 4],
       [4, 3, 4, 4]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.random.binomial(<span class="number">10</span>,<span class="number">0.3</span>,size=(<span class="number">4</span>,<span class="number">3</span>)) <span class="comment">#生成元素服从二项分布的数组，第一个参数为整数，第二个参数为概率</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[3, 3, 3],
       [3, 2, 4],
       [2, 4, 5],
       [4, 0, 3]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.random.beta(<span class="number">3</span>,<span class="number">4</span>,size=(<span class="number">2</span>,<span class="number">2</span>)) <span class="comment">#生成元素服从beta分布的数组，前两个参数对应于beta分布的参数</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[0.30826832, 0.46266575],
       [0.68918031, 0.67705037]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.random.chisquare(<span class="number">2</span>,size=(<span class="number">2</span>,<span class="number">2</span>)) <span class="comment">#生成元素服从chi-square分布的数组，第一个参数为chi-square分布的参数</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[4.97116465, 5.08060897],
       [0.17354098, 0.65068082]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.random.gamma(<span class="number">3</span>,scale=<span class="number">1.0</span>,size=(<span class="number">2</span>,<span class="number">2</span>)) <span class="comment">#生成元素服从gamma分布的数组，第一个参数对应于gamma分布的shape</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[4.6552704 , 3.43428893],
       [1.11959827, 2.99619096]])
</code></pre>
<h2 id="ndarray的内部构造"><a class="markdownIt-Anchor" href="#ndarray的内部构造"></a> ndarray的内部构造</h2>
<h3 id="ndarray的数据结构"><a class="markdownIt-Anchor" href="#ndarray的数据结构"></a> ndarray的数据结构</h3>
<p>ndarray的内部包含如下内容：一个指向数据的指针，数据类型dtype，一个shape属性表示数组形状的tuple，一个表示stride（用于指示应进行维度转换的字节数）的tuple</p>
<h3 id="数据类型的关系"><a class="markdownIt-Anchor" href="#数据类型的关系"></a> 数据类型的关系</h3>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210105233630.png" alt="datatypes" /></p>
<h1 id="数组的io操作"><a class="markdownIt-Anchor" href="#数组的io操作"></a> 数组的I/O操作</h1>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.save(<span class="string">&#x27;test_array&#x27;</span>,test) <span class="comment">#保存一个ndarray，第一个参数为文件名，文件后缀为.npy，默认保存格式为未压缩的二进制文件</span></span><br><span class="line">np.savez(<span class="string">&#x27;test_array2&#x27;</span>,a=test1,b=test2) <span class="comment">#同时将多个ndarray保存在一个文件中，但是不同的ndarray要使用不同的命名参数区分开</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">arch1=np.load(<span class="string">&#x27;test_array.npy&#x27;</span>) <span class="comment">#读取.npy文件</span></span><br><span class="line">arch2=np.load(<span class="string">&#x27;test_array2.npz&#x27;</span>) <span class="comment">#如果原始的.npy文件中包含了多个ndarray，可以用保存时为它们添加的命名参数进行索引，例如arch2[&#x27;a&#x27;]</span></span><br><span class="line">np.loadtxt(<span class="string">&#x27;txtname.txt&#x27;</span>,delimiter=<span class="string">&#x27;&#x27;</span>) <span class="comment">#从.txt中读取一个ndarray</span></span><br></pre></td></tr></table></figure>
<h1 id="切片和索引操作"><a class="markdownIt-Anchor" href="#切片和索引操作"></a> 切片和索引操作</h1>
<p>NumPy的ndarray也支持类似于list、tuple的切片和索引操作，但是稍有不同。具体表现为：</p>
<ol>
<li>一个ndarray的切片或者索引是对原始array的引用，在对切片和索引得到的ndarray进行修改的时候会直接对原始的ndarray进行修改。如果要使得切片或索引部分是一个副本，则可以调用ndarray的<code>copy()</code>方法。</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_slice1=np.array([<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>])</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">arr_slice=test_slice1[<span class="number">5</span>:<span class="number">8</span>]</span><br><span class="line">arr_slice[<span class="number">1</span>]=<span class="number">12345</span></span><br><span class="line">test_slice1</span><br></pre></td></tr></table></figure>
<pre><code>array([    0,     1,     2,     3,     4,     5, 12345,     7,     8,
           9])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">arr_slice[:]=<span class="number">32</span> <span class="comment">#赋值时使用标量，这一标量会自动做broadcast操作</span></span><br><span class="line">test_slice1</span><br></pre></td></tr></table></figure>
<pre><code>array([ 0,  1,  2,  3,  4, 32, 32, 32,  8,  9])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_slice1.put([<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>],<span class="number">33</span>) <span class="comment">#与上面的赋值操作等价。put函数输入一个元素全部为整数的list，以及一个数字或者一个list，将相应位置上的元素修改为所传入的数字或者list中的值。</span></span><br><span class="line"><span class="comment">#注意：如果是多维数组，索引的时候元素对应的编号是按照从里到外的顺序将ndarray展开成一维之后所对应位置的编号。</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_slice1</span><br></pre></td></tr></table></figure>
<pre><code>array([ 0,  1,  2,  3,  4, 33, 33, 33,  8,  9])
</code></pre>
<ol start="2">
<li>多维数组也可以做切片和索引操作。如果要对多个维度同时做切片操作，则需要在每一个维度的切片操作之间，用逗号把它们隔开。而对于多维数组的索引，规则比起多维数组的切片更加复杂，下面以具体的代码来进行说明。</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_slice2=np.array([[ <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],[ <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>],[ <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>],[<span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>],[<span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>],[<span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>],[<span class="number">24</span>, <span class="number">25</span>, <span class="number">26</span>, <span class="number">27</span>],[<span class="number">28</span>, <span class="number">29</span>, <span class="number">30</span>, <span class="number">31</span>]])</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_slice2[<span class="number">-5</span>:<span class="number">-1</span>:<span class="number">2</span>,:<span class="number">2</span>] <span class="comment">#对ndarray做切片时，最终结果是维度相同的ndarray。切片时支持倒序切片</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[12, 13],
       [20, 21]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_slice2[:,<span class="number">2</span>:] <span class="comment">#如果要在某个维度上不做切片，则分成两种情况。如果这个维度及其之后的所有维度都不切片，那么后面的切片部分就可以省略，比如test_slice2[:1]就是合法的，代表只在维度0上面切片。</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[ 2,  3],
       [ 6,  7],
       [10, 11],
       [14, 15],
       [18, 19],
       [22, 23],
       [26, 27],
       [30, 31]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_slice2[...,:<span class="number">2</span>] <span class="comment">#可以使用省略号来表示任意多个维度上都不做切片操作。省略号具体省略哪些维度需要根据ndarray的维度大小以及表达式共同决定。但是这种用法可读性不好，尽量不要使用。</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[ 0,  1],
       [ 4,  5],
       [ 8,  9],
       [12, 13],
       [16, 17],
       [20, 21],
       [24, 25],
       [28, 29]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_slice2[<span class="number">1</span>,:<span class="number">2</span>] <span class="comment">#索引与slice可以合用</span></span><br></pre></td></tr></table></figure>
<pre><code>array([4, 5])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_slice2[[<span class="number">2</span>,<span class="number">-1</span>]] <span class="comment">#对一个ndarray进行索引时可以传入list，表示在第一个维度上同时索引多个元素，此时得到的是ndarray。同时索引的顺序可以任意，也支持倒序索引。下面会对这种索引方式进行详细说明。</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[ 8,  9, 10, 11],
       [28, 29, 30, 31]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_slice2.take([<span class="number">2</span>,<span class="number">-1</span>],axis=<span class="number">0</span>) <span class="comment">#这一操作等价于上面的操作。take函数传入一个元素全为整数的list，代表在某个维度上挑选相应位置的元素，其中list中的元素可以重复，例如[2,2,-1]是可以的。</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[ 8,  9, 10, 11],
       [28, 29, 30, 31]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_slice2[<span class="number">1</span>][<span class="number">3</span>] <span class="comment">#等同于test_slice2[1,3]，但是它们的原理不一样。test_slice2[1][3]相当于在test_slice2[1]的结果基础之上，再使用[3]进行索引；而test_slice2[1,3]则是直接选取坐标为(1,3)的元素。</span></span><br></pre></td></tr></table></figure>
<pre><code>7
</code></pre>
<p>注意下面三种不同的索引方式得到的结果也有很大差别：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_slice2[[<span class="number">2</span>,<span class="number">-1</span>],[<span class="number">0</span>,<span class="number">1</span>]] <span class="comment">#索引位置为(2,0)和(-1,1)的元素</span></span><br></pre></td></tr></table></figure>
<pre><code>array([ 8, 29])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_slice2[[<span class="number">2</span>,<span class="number">-1</span>]][[<span class="number">0</span>,<span class="number">1</span>]] <span class="comment">#在test_slice2[[2,-1]]的基础之上再索引[[0,1]]。与上面的结果进行对比可以发现它们在运算时的不同之处。此处使用test_slice2[[2,-1]][:,[0,1]]可以得到与上面相同的结果。</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[ 8,  9, 10, 11],
       [28, 29, 30, 31]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_slice2[np.ix_([<span class="number">2</span>,<span class="number">-1</span>],[<span class="number">0</span>,<span class="number">1</span>])] <span class="comment">#相当于在维度0上索引2和-1，然后在维度0索引结果的基础上，在维度1上索引0和1。</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[ 8,  9],
       [28, 29]])
</code></pre>
<ol start="3">
<li>ndarray在索引时支持传入一个布尔类型的ndarray进行索引，只选出布尔值为真的位置上对应的那些值。</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_slice2[test_slice2&gt;<span class="number">5</span>] <span class="comment">#如果布尔类型的ndarray与被索引的ndarray大小相同，则输出一个1维数组，里面包含了布尔类型的ndarray上为true的元素</span></span><br></pre></td></tr></table></figure>
<pre><code>array([ 6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
       23, 24, 25, 26, 27, 28, 29, 30, 31])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_slice2[test_slice2[:,<span class="number">0</span>]&lt;<span class="number">10</span>] <span class="comment">#如果布尔类型的ndarray在某个维度上大小为1，则输出结果是一个array。</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[ 0,  1,  2,  3],
       [ 4,  5,  6,  7],
       [ 8,  9, 10, 11]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.where(np.array([<span class="literal">True</span>,<span class="literal">False</span>,<span class="literal">False</span>,<span class="literal">True</span>]),np.array([<span class="number">1.1</span>,<span class="number">1.2</span>,<span class="number">1.3</span>,<span class="number">1.4</span>]),np.array([<span class="number">2.1</span>,<span class="number">2.2</span>,<span class="number">2.3</span>,<span class="number">2.4</span>])) <span class="comment">#这一函数传入三个参数，第一个为一个布尔类型的ndarray，后两个为其他类型，可以是一个数字，也可以是一个相同规模的ndarray。按照布尔类型数组的值，如果为True则取第二个ndarray中对应位置的元素或是取相应的数字参数，False则从第三个ndarray中取值或是取相应的数字。</span></span><br></pre></td></tr></table></figure>
<pre><code>array([1.1, 2.2, 2.3, 1.4])
</code></pre>
<h1 id="ndarray的运算"><a class="markdownIt-Anchor" href="#ndarray的运算"></a> ndarray的运算</h1>
<h2 id="ndarray的一元运算"><a class="markdownIt-Anchor" href="#ndarray的一元运算"></a> ndarray的一元运算</h2>
<p>ndarray的一元运算是对其中的每一个元素都进行运算操作。常用的操作如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test=np.array([[<span class="number">0.5</span>,<span class="number">-0.3</span>,<span class="number">2.5</span>,<span class="number">2.8</span>],[<span class="number">3.8</span>,<span class="number">2.1</span>,<span class="number">-5.4</span>,<span class="number">0.0</span>]])</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test</span><br></pre></td></tr></table></figure>
<pre><code>array([[ 0.5, -0.3,  2.5,  2.8],
       [ 3.8,  2.1, -5.4,  0. ]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.abs(test) <span class="comment">#输出ndarray内所有元素的绝对值，函数的返回值是一个与输入参数规模相同的ndarray。np.fabs()函数作用相同。</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[0.5, 0.3, 2.5, 2.8],
       [3.8, 2.1, 5.4, 0. ]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.sqrt(test) <span class="comment">#输出所有元素的二次方根，等同于arr**0.5，如果遇到负数则返回nan</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[0.70710678,        nan, 1.58113883, 1.67332005],
       [1.94935887, 1.44913767,        nan, 0.        ]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.square(test) <span class="comment">#输出所有元素的平方，等同于arr**2</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[ 0.25,  0.09,  6.25,  7.84],
       [14.44,  4.41, 29.16,  0.  ]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.exp(test) <span class="comment">#输出所有元素的e^x的值</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[1.64872127e+00, 7.40818221e-01, 1.21824940e+01, 1.64446468e+01],
       [4.47011845e+01, 8.16616991e+00, 4.51658094e-03, 1.00000000e+00]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.log(test) <span class="comment">#输出所有元素的ln(x)的值，类似的函数还有以10为底的np.log10()，以2为底的np.log2()，以及计算ln(1+x)的np.log1p()。如果数字不在函数的定义域内，则输出nan。</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[-0.69314718,         nan,  0.91629073,  1.02961942],
       [ 1.33500107,  0.74193734,         nan,        -inf]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.sign(test) <span class="comment">#输出每个元素的符号，1代表正数，0代表0，-1代表负数</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[ 1., -1.,  1.,  1.],
       [ 1.,  1., -1.,  0.]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.ceil(test) <span class="comment">#对每个元素向上取整</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[ 1., -0.,  3.,  3.],
       [ 4.,  3., -5.,  0.]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.floor(test) <span class="comment">#对每个元素向下取整</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[ 0., -1.,  2.,  2.],
       [ 3.,  2., -6.,  0.]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.rint(test) <span class="comment">#对每个元素做四舍五入求近似</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[ 0., -0.,  2.,  3.],
       [ 4.,  2., -5.,  0.]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.modf(test) <span class="comment">#返回两个ndarray，第一个包含每个元素的小数部分，第二个包含每个元素的整数部分</span></span><br></pre></td></tr></table></figure>
<pre><code>(array([[ 0.5, -0.3,  0.5,  0.8],
        [ 0.8,  0.1, -0.4,  0. ]]),
 array([[ 0., -0.,  2.,  2.],
        [ 3.,  2., -5.,  0.]]))
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.isnan(np.log2(test)) <span class="comment">#返回一个布尔类型的ndarray，指示每个元素是否为nan</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[False,  True, False, False],
       [False, False,  True, False]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.isinf(test) <span class="comment">#返回一个布尔类型的ndarray，指示每个元素是否为inf。np.isfinite()的作用相同</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[False, False, False, False],
       [False, False, False, False]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.cos(test) <span class="comment">#np.cos()、np.sin()和np.tan()分别求每个元素的三角函数值；np.cosh()、np.sinh()和np.tanh()分别求每个元素的双曲三角函数值</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[ 0.87758256,  0.95533649, -0.80114362, -0.94222234],
       [-0.79096771, -0.5048461 ,  0.63469288,  1.        ]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.arccos(test) <span class="comment">#np.arccos()、np.arcsin()和np.arctan()分别求每个元素的反三角函数值；np.arccosh()、np.arcsinh()和np.arctanh()分别求每个元素的反双曲三角函数值。如果元素的值不合法，则返回nan。</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[1.04719755, 1.87548898,        nan,        nan],
       [       nan,        nan,        nan, 1.57079633]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.logical_not(test) <span class="comment">#返回每个元素取非逻辑运算之后的值。如果ndarray中的元素不是bool类型，则0为false，非零为true</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[False, False, False, False],
       [False, False, False,  True]])
</code></pre>
<h2 id="ndarray的二元运算"><a class="markdownIt-Anchor" href="#ndarray的二元运算"></a> ndarray的二元运算</h2>
<p>对于ndarray的二元运算，它是对两个ndarray相对应位置上的元素分别进行计算，输出结果是一个形状相同的二维数组。如果它们形状不同，则首先判断能否对ndarray做broadcast使之变为形状相同。如果可以则按照broadcast之后的ndarray计算，反之则报错。broadcast操作将在下面进行详细描述。</p>
<p>因此，如果是一个ndarray与一个标量进行计算，则相当于自动把标量做broadcast使之与ndarray具有相同的形状，然后再进行计算。</p>
<p>下面是一些常用的二元操作：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test1=np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],[<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]])</span><br><span class="line">test2=np.array([[<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">0</span>]])</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test1+test2 <span class="comment">#等同于np.add(arr1,arr2)</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[ 4,  6,  8, 10],
       [12, 14, 16,  8]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test1-test2 <span class="comment">#等同于np.subtract(arr1,arr2)</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[-2, -2, -2, -2],
       [-2, -2, -2,  8]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test1*test2 <span class="comment">#等同于np.multiply(arr1,arr2)</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[ 3,  8, 15, 24],
       [35, 48, 63,  0]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test1/test2 <span class="comment">#等同于np.divide(arr1,arr2)</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[0.33333333, 0.5       , 0.6       , 0.66666667],
       [0.71428571, 0.75      , 0.77777778,        inf]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test1//test2 <span class="comment">#等同于np.floor_divide(arr1,arr2)</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[0, 0, 0, 0],
       [0, 0, 0, 0]], dtype=int32)
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test1**test2 <span class="comment">#等同于np.power(arr1,arr2)</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[       1,       16,      243,     4096],
       [   78125,  1679616, 40353607,        1]], dtype=int32)
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test1%test2 <span class="comment">#等同于np.mod(arr1,arr2)</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[1, 2, 3, 4],
       [5, 6, 7, 0]], dtype=int32)
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.maximum(test1,test2) <span class="comment">#输出每个位置上的最大值，可以传入任意多个参数。如果使用np.fmax()则忽略nan。相应地，求每个位置上的最小值有np.minimum()和np.fmin()两个函数。</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[3, 4, 5, 6],
       [7, 8, 9, 8]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test1&gt;=test2 <span class="comment">#等同于np.greater_equal(arr1,arr2)，返回一个布尔类型的ndarray，表示每个位置上第一个数组中的元素是否大于等于第二个数组中的元素。如果是则为True，反之为False。此外还有一些类似的用法：</span></span><br><span class="line"><span class="comment"># &gt;和np.greater()：每个位置上第一个数组中的元素是否大于第二个</span></span><br><span class="line"><span class="comment"># &lt;和np.less()：每个位置上第一个数组中的元素是否小于第二个</span></span><br><span class="line"><span class="comment"># &lt;=和np.less_equal()：每个位置上第一个数组中的元素是否小于等于第二个</span></span><br><span class="line"><span class="comment"># ==和!=：判断两个数组中对应位置上的元素是否相等或不等</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[False, False, False, False],
       [False, False, False,  True]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.logical_and(test1,test2) <span class="comment">#对两个ndarray中的值做逻辑与运算。如果传入的两个ndarray不是布尔类型，则会自动做类型转换。如果两个ndarray是布尔类型，那么等同于arr1&amp;arr2，注意如果不是布尔类型则这样做会出现非期望的结果。与之类似的用法还有：</span></span><br><span class="line"><span class="comment"># arr1|arr2和np.logical_or()：每个位置做或运算</span></span><br><span class="line"><span class="comment"># arr1^arr2和np.logical_xor()：每个位置做异或运算</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[ True,  True,  True,  True],
       [ True,  True,  True, False]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.copysign(np.array([<span class="number">-2</span>,<span class="number">2</span>,<span class="number">-2</span>,<span class="number">2</span>]),np.array([<span class="number">1</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">1</span>])) <span class="comment">#将第二个ndarray中元素的符号赋给第一个ndarray的对应元素。相当于取第一个ndarray中元素的绝对值与第二个ndarray中元素的符号，组成一个新的ndarray。</span></span><br></pre></td></tr></table></figure>
<pre><code>array([ 2., -2., -2.,  2.])
</code></pre>
<h2 id="ndarray的统计运算"><a class="markdownIt-Anchor" href="#ndarray的统计运算"></a> ndarray的统计运算</h2>
<p>ndarray支持一些类型的统计运算，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test3=np.array([[<span class="number">0.3</span>,<span class="number">1.5</span>,<span class="number">-0.5</span>,<span class="number">2.4</span>],[<span class="number">3.3</span>,<span class="number">-5.5</span>,<span class="number">8.1</span>,<span class="number">-2.8</span>]])</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.sum(test3) <span class="comment">#在没有指定维度的情况下计算所有元素的和，输出结果为一个数字。</span></span><br></pre></td></tr></table></figure>
<pre><code>6.8
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.sum(test3,axis=<span class="number">1</span>) <span class="comment">#计算指定维度上元素的和，输出结果为一个ndarray</span></span><br></pre></td></tr></table></figure>
<pre><code>array([3.7, 3.1])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.mean(test3) <span class="comment">#计算算数平均数。没有指定维度时对所有元素做计算，如果指定维度则按指定的维度进行计算</span></span><br></pre></td></tr></table></figure>
<pre><code>0.85
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.std(test3) <span class="comment">#计算标准差，没有指定维度时对所有元素做计算，如果指定维度则按指定的维度进行计算</span></span><br></pre></td></tr></table></figure>
<pre><code>3.826878623630491
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.var(test3) <span class="comment">#计算方差，没有指定维度时对所有元素做计算，如果指定维度则按指定的维度进行计算</span></span><br></pre></td></tr></table></figure>
<pre><code>14.645000000000001
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.min(test3) <span class="comment">#计算最小值，没有指定维度时对所有元素做计算，如果指定维度则按指定的维度进行计算。计算最大值用np.max()</span></span><br></pre></td></tr></table></figure>
<pre><code>-5.5
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.argmin(test3) <span class="comment">#输出最小值的indice，没有指定维度时对所有元素做计算，如果指定维度则按指定的维度进行计算。最大值的indice使用np.argmax()计算</span></span><br></pre></td></tr></table></figure>
<pre><code>5
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.cumprod(test3) <span class="comment">#从0开始，计算元素的累乘结果，输出为一个ndarray，每一个元素表示从起始位置计算到当前位置时的值。没有指定维度时对所有元素做计算，如果指定维度则按指定的维度进行计算</span></span><br></pre></td></tr></table></figure>
<pre><code>array([   0.3    ,    0.45   ,   -0.225  ,   -0.54   ,   -1.782  ,
          9.801  ,   79.3881 , -222.28668])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.cumsum(test3,axis=<span class="number">0</span>) <span class="comment">#从0开始计算元素的累加结果，输出一个ndarray。没有指定维度时对所有元素做计算，如果指定维度则按指定的维度进行计算</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[ 0.3,  1.5, -0.5,  2.4],
       [ 3.6, -4. ,  7.6, -0.4]])
</code></pre>
<p>对于布尔类型的ndarray有如下这些特殊的统计运算操作：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_bool=np.array([<span class="literal">False</span>,<span class="literal">True</span>,<span class="literal">True</span>,<span class="literal">False</span>,<span class="literal">False</span>,<span class="literal">True</span>,<span class="literal">False</span>])</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_bool.sum() <span class="comment">#统计True的个数</span></span><br></pre></td></tr></table></figure>
<pre><code>3
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_bool.any() <span class="comment">#计算所有元素的或</span></span><br></pre></td></tr></table></figure>
<pre><code>True
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_bool.all() <span class="comment">#计算所有元素的与</span></span><br></pre></td></tr></table></figure>
<pre><code>False
</code></pre>
<blockquote>
<p>备注：在NumPy的一些函数中，如果传入<code>axis=……</code>参数，则代表这一函数操作在这个传入的维度上面进行。假设有一个三维的array，它的元素可以用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">a_{ijk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>来表示，当我们在<code>np.sum()</code>函数中传入<code>axis=1</code>，那么最终得到的结果便可以用数学公式表示为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\sum_{j=1}^{n}a_{ijk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.24011em;vertical-align:-0.43581800000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，也就是说这个操作是在维度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>上进行的。</p>
</blockquote>
<h2 id="聚合运算"><a class="markdownIt-Anchor" href="#聚合运算"></a> 聚合运算</h2>
<p>NumPy中的一些函数支持进一步的聚合操作，支持聚合操作的函数包括<code>add</code>、<code>multiply</code>、<code>subtract</code>、<code>logical_and</code>等。</p>
<p><code>reduce</code>函数是对某个维度上的数据做连续的累计操作，最终得到的ndarray相比于传入的ndarray维度减1。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.multiply.reduce(test3,axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<pre><code>array([ -0.54 , 411.642])
</code></pre>
<p><code>reduceat</code>函数与<code>reduce</code>函数类似，但是需要额外传入一个list，用于确定参与聚合计算的范围。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.subtract.reduceat(test3,[<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>],axis=<span class="number">1</span>) <span class="comment">#假设传入的list中的元素为[a,b,c]，axis方向的元素个数为n，那么参与reduce运算的范围分别为[a,b-1],[b,c-1],[c,n-1]。</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[-1.2, -0.5,  2.4],
       [ 8.8,  8.1, -2.8]])
</code></pre>
<p><code>accumulate</code>函数与<code>reduce</code>函数类似，但是会保留在这个维度上进行计算时的中间结果，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.add.accumulate(test3,axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<pre><code>array([[ 0.3,  1.8,  1.3,  3.7],
       [ 3.3, -2.2,  5.9,  3.1]])
</code></pre>
<p><code>outer</code>函数传入两个ndarray，代表第一个与第二个ndarray中所有的元素可以组成的元素对进行计算。假设传入的两个ndarray为x和y，那么<code>outer</code>函数生成的ndarray的规模为(x.shape,y.shape)。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.add.outer(test1,test2)</span><br></pre></td></tr></table></figure>
<pre><code>array([[[[ 4,  5,  6,  7],
         [ 8,  9, 10,  1]],

        [[ 5,  6,  7,  8],
         [ 9, 10, 11,  2]],

        [[ 6,  7,  8,  9],
         [10, 11, 12,  3]],

        [[ 7,  8,  9, 10],
         [11, 12, 13,  4]]],

       [[[ 8,  9, 10, 11],
         [12, 13, 14,  5]],

        [[ 9, 10, 11, 12],
         [13, 14, 15,  6]],

        [[10, 11, 12, 13],
         [14, 15, 16,  7]],

        [[11, 12, 13, 14],
         [15, 16, 17,  8]]]])
</code></pre>
<h2 id="数组的线性代数运算"><a class="markdownIt-Anchor" href="#数组的线性代数运算"></a> 数组的线性代数运算</h2>
<p>NumPy提供了一些线性代数运算。需要注意的是，本节中的一些操作可以对大于二维的array进行计算，如果要这样使用需要注意维度大小上的要求，并清楚运算的数学含义。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_linalg1=np.random.rand(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">test_linalg2=np.random.rand(<span class="number">4</span>,<span class="number">3</span>)</span><br><span class="line">test_linalg3=np.random.rand(<span class="number">4</span>,<span class="number">4</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_linalg1</span><br></pre></td></tr></table></figure>
<pre><code>array([[0.67166004, 0.67521641, 0.92385308, 0.17172312],
       [0.08287326, 0.91389572, 0.50537867, 0.44940627],
       [0.49319114, 0.24830729, 0.7845657 , 0.0541078 ]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_linalg2</span><br></pre></td></tr></table></figure>
<pre><code>array([[0.39854758, 0.88405379, 0.46193288],
       [0.17077872, 0.48180729, 0.4009363 ],
       [0.21988187, 0.74787762, 0.12843288],
       [0.87389188, 0.35833092, 0.58089653]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_linalg3</span><br></pre></td></tr></table></figure>
<pre><code>array([[0.91681047, 0.0559406 , 0.90109644, 0.85956406],
       [0.5495678 , 0.01228935, 0.40510975, 0.00860076],
       [0.63290332, 0.88460151, 0.58796459, 0.25524597],
       [0.0586652 , 0.16806904, 0.28365241, 0.29483814]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.dot(test_linalg1,test_linalg2) <span class="comment">#计算矩阵乘法，注意两个矩阵的大小必须要满足矩阵乘法的要求!</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[0.73620706, 1.67157054, 0.7993871 ],
       [0.69295897, 1.0525836 , 0.73066163],
       [0.45876187, 1.16179138, 0.45957167]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_linalg1.dot(test_linalg2) <span class="comment">#与上面的语句等价</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[0.73620706, 1.67157054, 0.7993871 ],
       [0.69295897, 1.0525836 , 0.73066163],
       [0.45876187, 1.16179138, 0.45957167]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_linalg1.T <span class="comment">#矩阵的转置操作</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[0.67166004, 0.08287326, 0.49319114],
       [0.67521641, 0.91389572, 0.24830729],
       [0.92385308, 0.50537867, 0.7845657 ],
       [0.17172312, 0.44940627, 0.0541078 ]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_transpose=np.random.rand(<span class="number">2</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>)</span><br><span class="line">np.shape(test_transpose.T) <span class="comment">#ndarray.T转置操作的实质相当于是将原数组的维度倒过来，例如原来位于位置(0,1,2,3)的元素在转置之后的位置变为(3,2,1,0)</span></span><br></pre></td></tr></table></figure>
<pre><code>(3, 4, 5, 2)
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.linalg.inv(test_linalg3) <span class="comment">#求矩阵的逆，必须传入一个正方形的数组</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[ 1.41156052, -0.98749103,  0.83882032, -4.81260336],
       [-0.21076796, -1.03011343,  1.23951372, -0.42854889],
       [-1.94482628,  3.90240586, -1.18111701,  6.57857386],
       [ 1.71032402, -2.97066486,  0.26283316, -1.73542744]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.linalg.pinv(test_linalg2) <span class="comment">#求矩阵的伪逆，伪逆矩阵指的是，对于一个矩阵A，存在一个矩阵B，满足(AB)^T=AB，(BA)^T=BA</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[-0.46907312, -1.92370125,  1.09489796,  1.45867813],
       [ 0.48237103, -0.25944216,  1.15432715, -0.45973217],
       [ 0.54234896,  2.95669978, -2.44534867, -0.20987198]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.diag(test_linalg2) <span class="comment">#第一种用法：取一个矩阵的对角线元素组成一个一维数组（可以不是正方形矩阵）</span></span><br></pre></td></tr></table></figure>
<pre><code>array([0.39854758, 0.48180729, 0.12843288])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.diag(np.diag(test_linalg3)) <span class="comment">#第二种用法：将一个一维的数组转变为一个二维的正方形对角矩阵，非对角的元素全为0</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[0.91681047, 0.        , 0.        , 0.        ],
       [0.        , 0.01228935, 0.        , 0.        ],
       [0.        , 0.        , 0.58796459, 0.        ],
       [0.        , 0.        , 0.        , 0.29483814]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.trace(test_linalg2) <span class="comment">#计算所有对角元素的和，传入的矩阵可以不必是正方形矩阵</span></span><br></pre></td></tr></table></figure>
<pre><code>1.0087877438514739
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.linalg.det(test_linalg3) <span class="comment">#计算正方形矩阵对应行列式的值</span></span><br></pre></td></tr></table></figure>
<pre><code>-0.060734760345177434
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.linalg.qr(test_linalg2) <span class="comment">#对矩阵做QR分解</span></span><br></pre></td></tr></table></figure>
<pre><code>(array([[-0.39853949, -0.55826311,  0.1397547 ],
        [-0.17077525, -0.34967478,  0.76189453],
        [-0.2198774 , -0.58700406, -0.63012748],
        [-0.87387414,  0.4706337 , -0.05408067]]),
 array([[-1.0000203 , -0.91218862, -0.78843843],
        [ 0.        , -0.93237507, -0.20007854],
        [ 0.        ,  0.        ,  0.2576841 ]]))
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.linalg.svd(test_linalg2)<span class="comment">#对矩阵做奇异值分解</span></span><br></pre></td></tr></table></figure>
<pre><code>(array([[-0.6124607 ,  0.31110915,  0.13463208, -0.71412688],
        [-0.36061856,  0.14909045,  0.76134499,  0.51776452],
        [-0.4109163 ,  0.50488233, -0.60516287,  0.45827887],
        [-0.57095879, -0.79125025, -0.18975224,  0.10919333]]),
 array([1.72222085, 0.64558318, 0.21609566]),
 array([[-0.51967203, -0.71251265, -0.4714517 ],
        [-0.66761255,  0.68299619, -0.29632698],
        [-0.53313644, -0.16075423,  0.83061641]]))
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_linalg4=np.random.rand(<span class="number">4</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.linalg.lstsq(test_linalg3,test_linalg4) <span class="comment">#解方程Ax=b，A为正方形矩阵，b为一维矩阵，或者第二个维度为1的二维矩阵</span></span><br></pre></td></tr></table></figure>
<pre><code>(array([[-0.85081594],
        [ 0.23595236],
        [ 2.3445102 ],
        [-0.76479464]]),
 array([], dtype=float64),
 4,
 array([1.97814445, 0.75043168, 0.40950042, 0.09991112]))
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.linalg.norm(test_linalg2,ord=<span class="number">2</span>,axis=<span class="number">1</span>) <span class="comment">#求矩阵的范数，ord代表范数的阶数，axis代表在某个维度上求范数（结果为一维数组），如果不传入axis参数则对整个矩阵求范数（结果是一个数字）</span></span><br></pre></td></tr></table></figure>
<pre><code>array([1.07413838, 0.64965648, 0.79004049, 1.10884122])
</code></pre>
<p>对于numpy中的ndarray类，如果要对其做线性代数运算，需要写成上面那些函数调用的形式，比较麻烦。为了便于对一个矩阵做线性代数运算，我们可以将一个ndarray转换为一个matrix类。这样，就可以像matlab一样，直接使用运算符。例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">X1=np.matrix(test_linalg1)</span><br><span class="line">X2=np.matrix(test_linalg2)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">X1*X2 <span class="comment">#矩阵乘法可以直接表示为公式计算</span></span><br></pre></td></tr></table></figure>
<pre><code>matrix([[0.73620706, 1.67157054, 0.7993871 ],
        [0.69295897, 1.0525836 , 0.73066163],
        [0.45876187, 1.16179138, 0.45957167]])
</code></pre>
<h2 id="自定义函数"><a class="markdownIt-Anchor" href="#自定义函数"></a> 自定义函数</h2>
<p>NumPy可以将一个自定义函数从标量运算转变为支持numpy数组运算的函数，从而使得ndarray可以作为函数的参数。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_elements</span>(<span class="params">x,y</span>):</span></span><br><span class="line">    <span class="keyword">return</span> x+y</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">add_them=np.frompyfunc(add_elements,<span class="number">2</span>,<span class="number">1</span>) <span class="comment">#第一个参数为函数名，第二个和第三个参数分别代表输入和输出参数的个数</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">add_them=np.vectorize(add_elements) <span class="comment">#与上面的函数等价</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">add_them(np.arange(<span class="number">4</span>),np.arange(<span class="number">4</span>))</span><br></pre></td></tr></table></figure>
<pre><code>array([0, 2, 4, 6], dtype=object)
</code></pre>
<h1 id="排序与筛选操作"><a class="markdownIt-Anchor" href="#排序与筛选操作"></a> 排序与筛选操作</h1>
<h2 id="排序"><a class="markdownIt-Anchor" href="#排序"></a> 排序</h2>
<p>numpy中的排序函数可以对元素进行排序。同时，这些排序函数支持三种类型的排序：quicksort、mergesort、heapsort，可以使用kind参数传入排序函数内。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_sort1=np.array([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">3</span>])</span><br><span class="line">test_sort2=np.array([<span class="number">6</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">1</span>])</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_sort2.sort(kind=<span class="string">&#x27;mergesort&#x27;</span>) <span class="comment">#对ndarray的元素做排序，这一命令会将ndarray中的元素变为有序。可以传入一个数字表示在哪个维度上排序，默认为数值最大方向。</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_sort2</span><br></pre></td></tr></table></figure>
<pre><code>array([1, 2, 2, 3, 3, 5, 6, 6, 7, 7])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.sort(test_sort1) <span class="comment">#同样是排序，但是输出结果是一个新的ndarray</span></span><br></pre></td></tr></table></figure>
<pre><code>array([1, 2, 2, 3, 3, 4, 4, 5, 8])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_sort1.argsort(kind=<span class="string">&#x27;quicksort&#x27;</span>) <span class="comment">#生成有序排列所对应的元素序号顺序，也即test_sort1[test_sort1.argsort()]可以得到排序后的数组。如果要稳定排序则只能使用mergesort</span></span><br></pre></td></tr></table></figure>
<pre><code>array([3, 0, 5, 1, 8, 2, 4, 6, 7], dtype=int64)
</code></pre>
<p>numpy中的searchsorted函数可以在已经排序好的array中做二分查找，返回一个表示位置的整数，被查找元素插入到这个位置上时不会影响到array中的元素排序。</p>
<p>如果有相同元素，在返回位置时会默认返回最左端那个元素的位置。也可以传入参数使其返回右端元素的位置。例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_sort2.searchsorted([<span class="number">2</span>,<span class="number">3</span>])</span><br></pre></td></tr></table></figure>
<pre><code>array([1, 3], dtype=int64)
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_sort2.searchsorted([<span class="number">2</span>,<span class="number">3</span>],side=<span class="string">&#x27;right&#x27;</span>)</span><br></pre></td></tr></table></figure>
<pre><code>array([3, 5], dtype=int64)
</code></pre>
<h2 id="筛选操作"><a class="markdownIt-Anchor" href="#筛选操作"></a> 筛选操作</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.unique(test_sort1) <span class="comment">#去除重复元素并排序</span></span><br></pre></td></tr></table></figure>
<pre><code>array([1, 2, 3, 4, 5, 8])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.intersect1d(test_sort1,test_sort2) <span class="comment">#求两个ndarray中元素的交集，结果为一个1维的array</span></span><br></pre></td></tr></table></figure>
<pre><code>array([1, 2, 3, 5])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.union1d(test_sort1,test_sort2) <span class="comment">#求两个ndarray中元素的并集，结果为一个1维的array</span></span><br></pre></td></tr></table></figure>
<pre><code>array([1, 2, 3, 4, 5, 6, 7, 8])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.in1d(test_sort1,test_sort2) <span class="comment">#输出一个布尔类型的ndarray，表示第一个ndarray中的元素是否出现在第二个ndarray中</span></span><br></pre></td></tr></table></figure>
<pre><code>array([ True,  True, False,  True, False,  True,  True, False,  True])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.setdiff1d(test_sort1,test_sort2) <span class="comment">#输出第一个ndarray中，所有与第二个ndarray的元素都不相同的值，结果是一个1维的array</span></span><br></pre></td></tr></table></figure>
<pre><code>array([4, 8])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.setxor1d(test_sort1,test_sort2) <span class="comment">#输出只出现在其中一个ndarray中的所有元素，结果是一个1维的array</span></span><br></pre></td></tr></table></figure>
<pre><code>array([4, 6, 7, 8])
</code></pre>
<h1 id="ndarray的形状改变"><a class="markdownIt-Anchor" href="#ndarray的形状改变"></a> ndarray的形状改变</h1>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_shape=np.arange(<span class="number">20</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_shape</span><br></pre></td></tr></table></figure>
<pre><code>array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_shape.reshape((<span class="number">2</span>,<span class="number">2</span>,<span class="number">5</span>)) <span class="comment">#将原数组按照reshape传入的tuple改变形状，tuple中元素个数对应于维度，每个元素的值对应于该维度上的大小，所有维度大小的乘积必须等于总的元素个数。</span></span><br><span class="line"><span class="comment"># 对于reshape前后元素是如何对应到具体的位置，只需要记住在print出ndarray中内容的时候，将print的内容按照从上到下从左到右的顺序排列起来之后，这一顺序始终保持不变。</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[[ 0,  1,  2,  3,  4],
        [ 5,  6,  7,  8,  9]],

       [[10, 11, 12, 13, 14],
        [15, 16, 17, 18, 19]]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_shape.reshape(<span class="number">5</span>,<span class="number">-1</span>) <span class="comment">#在使用reshape函数时，某一个维度上的值可以为-1，然后会自动根据其他维度的值以及元素总个数来推断这个维度的大小。</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[ 0,  1,  2,  3],
       [ 4,  5,  6,  7],
       [ 8,  9, 10, 11],
       [12, 13, 14, 15],
       [16, 17, 18, 19]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_shape2=test_shape.reshape((<span class="number">2</span>,<span class="number">2</span>,<span class="number">5</span>))</span><br><span class="line">test_shape2.transpose((<span class="number">2</span>,<span class="number">0</span>,<span class="number">1</span>)) <span class="comment">#任意维数组的转置，需要传入包含0—n-1的n个整数的一个tuple。这种操作可以理解为改变了矩阵元素的“坐标值”，比如之前位置为(3,1,2)的元素在按照(2,0,1)的参数进行转置时，这一元素的新位置为(2,3,1)</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[[ 0,  5],
        [10, 15]],

       [[ 1,  6],
        [11, 16]],

       [[ 2,  7],
        [12, 17]],

       [[ 3,  8],
        [13, 18]],

       [[ 4,  9],
        [14, 19]]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_shape2</span><br></pre></td></tr></table></figure>
<pre><code>array([[[ 0,  1,  2,  3,  4],
        [ 5,  6,  7,  8,  9]],

       [[10, 11, 12, 13, 14],
        [15, 16, 17, 18, 19]]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_shape2.flatten(<span class="string">&#x27;C&#x27;</span>) <span class="comment">#将一个高维数组变成一维，可以传入参数&#x27;C&#x27;或&#x27;F&#x27;。其中，&#x27;C&#x27;代表按照shape属性中从后往前的顺序进行遍历，即先内后外；&#x27;F&#x27;代表按照shape属性中从前往后的顺序进行遍历，即先外后内</span></span><br></pre></td></tr></table></figure>
<pre><code>array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_shape2.ravel(<span class="string">&#x27;F&#x27;</span>) <span class="comment">#功能同flatten()函数</span></span><br></pre></td></tr></table></figure>
<pre><code>array([ 0, 10,  5, 15,  1, 11,  6, 16,  2, 12,  7, 17,  3, 13,  8, 18,  4,
       14,  9, 19])
</code></pre>
<h1 id="数组的合并与分离"><a class="markdownIt-Anchor" href="#数组的合并与分离"></a> 数组的合并与分离</h1>
<h2 id="数组的合并"><a class="markdownIt-Anchor" href="#数组的合并"></a> 数组的合并</h2>
<p>将两个数组合并，可以使用下面这些操作：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.concatenate([test_shape2,test_shape2],axis=<span class="number">2</span>) <span class="comment">#将两个ndarray在axis的方向上进行拼接</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[[ 0,  1,  2,  3,  4,  0,  1,  2,  3,  4],
        [ 5,  6,  7,  8,  9,  5,  6,  7,  8,  9]],

       [[10, 11, 12, 13, 14, 10, 11, 12, 13, 14],
        [15, 16, 17, 18, 19, 15, 16, 17, 18, 19]]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.vstack((test_shape2,test_shape2)) <span class="comment">#将两个数组在垂直方向进行拼接，即axis=0的方向，等同于row_stack()。</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[[ 0,  1,  2,  3,  4],
        [ 5,  6,  7,  8,  9]],

       [[10, 11, 12, 13, 14],
        [15, 16, 17, 18, 19]],

       [[ 0,  1,  2,  3,  4],
        [ 5,  6,  7,  8,  9]],

       [[10, 11, 12, 13, 14],
        [15, 16, 17, 18, 19]]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.hstack([test_shape2,test_shape2]) <span class="comment">#将两个数组在水平方向进行拼接，即axis=1的方向。与之相似的函数为column_stack()，但是这一函数会默认先将一维数组转为二维数组，然后再做拼接。</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[[ 0,  1,  2,  3,  4],
        [ 5,  6,  7,  8,  9],
        [ 0,  1,  2,  3,  4],
        [ 5,  6,  7,  8,  9]],

       [[10, 11, 12, 13, 14],
        [15, 16, 17, 18, 19],
        [10, 11, 12, 13, 14],
        [15, 16, 17, 18, 19]]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.dstack([test_shape2,test_shape2]) <span class="comment">#将两个数组在深度方向进行拼接，即axis=2的方向</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[[ 0,  1,  2,  3,  4,  0,  1,  2,  3,  4],
        [ 5,  6,  7,  8,  9,  5,  6,  7,  8,  9]],

       [[10, 11, 12, 13, 14, 10, 11, 12, 13, 14],
        [15, 16, 17, 18, 19, 15, 16, 17, 18, 19]]])
</code></pre>
<h2 id="数组的复制"><a class="markdownIt-Anchor" href="#数组的复制"></a> 数组的复制</h2>
<p>下面这些函数可以将数组中的元素复制一定的次数，从而形成一个更大的数组：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_shape2.repeat([<span class="number">2</span>,<span class="number">3</span>],axis=<span class="number">1</span>) <span class="comment">#repeat函数将原数组中的元素在某个方向上按照从0到n-1的顺序进行复制并拼接起来。需要传入一个list（或一个数字）和一个axis参数。</span></span><br><span class="line"><span class="comment">#其中，axis参数代表复制的方向。而list中需要传入1个或者n个整数参数：传入1个参数代表将所有值都按照这个大小进行复制（与传入一个数字的作用相同）；传入n个参数代表每个元素相应地重复不同的次数。</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[[ 0,  1,  2,  3,  4],
        [ 0,  1,  2,  3,  4],
        [ 5,  6,  7,  8,  9],
        [ 5,  6,  7,  8,  9],
        [ 5,  6,  7,  8,  9]],

       [[10, 11, 12, 13, 14],
        [10, 11, 12, 13, 14],
        [15, 16, 17, 18, 19],
        [15, 16, 17, 18, 19],
        [15, 16, 17, 18, 19]]])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.tile(test_shape2,(<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>)) <span class="comment">#tile()函数则是对整个数组进行复制并拼接。第一个参数代表待复制的数组，第二个参数为一个tuple，代表每个维度上面复制的次数。</span></span><br></pre></td></tr></table></figure>
<pre><code>array([[[ 0,  1,  2,  3,  4,  0,  1,  2,  3,  4],
        [ 5,  6,  7,  8,  9,  5,  6,  7,  8,  9]],

       [[10, 11, 12, 13, 14, 10, 11, 12, 13, 14],
        [15, 16, 17, 18, 19, 15, 16, 17, 18, 19]],

       [[ 0,  1,  2,  3,  4,  0,  1,  2,  3,  4],
        [ 5,  6,  7,  8,  9,  5,  6,  7,  8,  9]],

       [[10, 11, 12, 13, 14, 10, 11, 12, 13, 14],
        [15, 16, 17, 18, 19, 15, 16, 17, 18, 19]]])
</code></pre>
<h2 id="数组的分割"><a class="markdownIt-Anchor" href="#数组的分割"></a> 数组的分割</h2>
<p>下面的函数可以将一个ndarray分成多个：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.split(test_shape2,[<span class="number">0</span>,<span class="number">2</span>],axis=<span class="number">2</span>) <span class="comment">#传入三个参数，第一个为待分离的数组，第二个代表分割的位置，第三个代表进行分割操作的维度。</span></span><br><span class="line"><span class="comment">#假设传入的分割位置为[a1,a2,…,an]，axis参数所对应的那个维度的大小为a，则最终分割之后在axis方向上所对应的原数组内容为：[0,a1-1],[a1,a2-1],……,[an,a-1]。如果区间内左边的数字大于右边，则形成空数组。</span></span><br></pre></td></tr></table></figure>
<pre><code>[array([], shape=(2, 2, 0), dtype=int32),
 array([[[ 0,  1],
         [ 5,  6]],
 
        [[10, 11],
         [15, 16]]]),
 array([[[ 2,  3,  4],
         [ 7,  8,  9]],
 
        [[12, 13, 14],
         [17, 18, 19]]])]
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.hsplit(test_shape2,[<span class="number">1</span>]) <span class="comment">#在水平方向，即axis=0的方向上做分割</span></span><br></pre></td></tr></table></figure>
<pre><code>[array([[[ 0,  1,  2,  3,  4]],
 
        [[10, 11, 12, 13, 14]]]),
 array([[[ 5,  6,  7,  8,  9]],
 
        [[15, 16, 17, 18, 19]]])]
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.vsplit(test_shape2,[<span class="number">1</span>]) <span class="comment">#在竖直方向，即axis=1的方向上做分割</span></span><br></pre></td></tr></table></figure>
<pre><code>[array([[[0, 1, 2, 3, 4],
         [5, 6, 7, 8, 9]]]),
 array([[[10, 11, 12, 13, 14],
         [15, 16, 17, 18, 19]]])]
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.dsplit(test_shape2,[<span class="number">2</span>]) <span class="comment">#在深度方向，即axis=2的方向上做分割</span></span><br></pre></td></tr></table></figure>
<pre><code>[array([[[ 0,  1],
         [ 5,  6]],
 
        [[10, 11],
         [15, 16]]]),
 array([[[ 2,  3,  4],
         [ 7,  8,  9]],
 
        [[12, 13, 14],
         [17, 18, 19]]])]
</code></pre>
<h1 id="broadcast操作"><a class="markdownIt-Anchor" href="#broadcast操作"></a> Broadcast操作</h1>
<p>前面已经提到，在对两个形状不同的数/数组进行运算操作的时候，可能会对数字或者数组做一些扩展操作。</p>
<p>只有当两个array相容时才能做数据扩展，即它们每个维度上的长度按照从右往左的顺序进行比较时，要么在某个维度上二者维度相等，要么某个维度上其中一个array的长度为1（如果缺失则可以看作为1）。如果两个array相容，会在长度为1的维度上通过复制元素将array扩展至与另一个array长度相同。</p>
<p>下面为一些broadcast操作的图例：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210105233413.png" alt="1" /></p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210105233455.png" alt="2" /></p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20210105233518.png" alt="3" /></p>
<p>可以在slide操作中结合np.newaxis，手动添加一个新的维度，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">test_shape2[:,np.newaxis,:,:]</span><br></pre></td></tr></table></figure>
<pre><code>array([[[[ 0,  1,  2,  3,  4],
         [ 5,  6,  7,  8,  9]]]
       [[[10, 11, 12, 13, 14],
         [15, 16, 17, 18, 19]]]])
</code></pre>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<ol>
<li>Python for Data Analysis, 2nd Edition.</li>
</ol>
]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>数据分析</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机组成原理-程序的机器级表示</title>
    <url>/2021/01/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%9C%BA%E5%99%A8%E7%BA%A7%E8%A1%A8%E7%A4%BA/</url>
    <content><![CDATA[<h1 id="寄存器"><a class="markdownIt-Anchor" href="#寄存器"></a> 寄存器</h1>
<ul>
<li>
<p>通用寄存器：X64将x86的8个通用寄存器扩展为64位，并且增加8个新的64位寄存器。64位寄存器命名以“r”开始，例如：eax扩展为64位就是rax，8个新的64位寄存器命名为r8到r15。每个寄存器的低32位，16位，8位可以作为操作数直接寻址，这包括向esi这样的寄存器，以前他的低8位不可以直接寻址。下表说明了64位通用寄存器的低位部分在汇编语言中的命名。</p>
<p>除了r8~r15这8个寄存器只能供64位程序使用外，其余8个可以只使用低32字节以兼容32位程序。</p>
</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">64-bit register</th>
<th style="text-align:center">Lower 32 bits</th>
<th style="text-align:center">Lower 16 bits</th>
<th style="text-align:center">Lower 8 bits</th>
<th style="text-align:center">用途</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">rax</td>
<td style="text-align:center">eax</td>
<td style="text-align:center">ax</td>
<td style="text-align:center">al</td>
<td style="text-align:center">返回值</td>
</tr>
<tr>
<td style="text-align:center">rbx</td>
<td style="text-align:center">ebx</td>
<td style="text-align:center">bx</td>
<td style="text-align:center">bl</td>
<td style="text-align:center">被调用者保存</td>
</tr>
<tr>
<td style="text-align:center">rcx</td>
<td style="text-align:center">ecx</td>
<td style="text-align:center">cx</td>
<td style="text-align:center">cl</td>
<td style="text-align:center">第4个参数</td>
</tr>
<tr>
<td style="text-align:center">rdx</td>
<td style="text-align:center">edx</td>
<td style="text-align:center">dx</td>
<td style="text-align:center">dl</td>
<td style="text-align:center">第3个参数</td>
</tr>
<tr>
<td style="text-align:center">rsi</td>
<td style="text-align:center">esi</td>
<td style="text-align:center">si</td>
<td style="text-align:center">sil</td>
<td style="text-align:center">第2个参数</td>
</tr>
<tr>
<td style="text-align:center">rdi</td>
<td style="text-align:center">edi</td>
<td style="text-align:center">di</td>
<td style="text-align:center">dil</td>
<td style="text-align:center">第1个参数</td>
</tr>
<tr>
<td style="text-align:center">rbp</td>
<td style="text-align:center">ebp</td>
<td style="text-align:center">bp</td>
<td style="text-align:center">bpl</td>
<td style="text-align:center">被调用者保存</td>
</tr>
<tr>
<td style="text-align:center">rsp</td>
<td style="text-align:center">esp</td>
<td style="text-align:center">sp</td>
<td style="text-align:center">spl</td>
<td style="text-align:center">栈指针</td>
</tr>
<tr>
<td style="text-align:center">r8</td>
<td style="text-align:center">r8d</td>
<td style="text-align:center">r8w</td>
<td style="text-align:center">r8b</td>
<td style="text-align:center">第5个参数</td>
</tr>
<tr>
<td style="text-align:center">r9</td>
<td style="text-align:center">r9d</td>
<td style="text-align:center">r9w</td>
<td style="text-align:center">r9b</td>
<td style="text-align:center">第6个参数</td>
</tr>
<tr>
<td style="text-align:center">r10</td>
<td style="text-align:center">r10d</td>
<td style="text-align:center">r10w</td>
<td style="text-align:center">r10b</td>
<td style="text-align:center">调用者保存</td>
</tr>
<tr>
<td style="text-align:center">r11</td>
<td style="text-align:center">r11d</td>
<td style="text-align:center">r11w</td>
<td style="text-align:center">r11b</td>
<td style="text-align:center">调用者保存</td>
</tr>
<tr>
<td style="text-align:center">r12</td>
<td style="text-align:center">r12d</td>
<td style="text-align:center">r12w</td>
<td style="text-align:center">r12b</td>
<td style="text-align:center">被调用者保存</td>
</tr>
<tr>
<td style="text-align:center">r13</td>
<td style="text-align:center">r13d</td>
<td style="text-align:center">r13w</td>
<td style="text-align:center">r13b</td>
<td style="text-align:center">被调用者保存</td>
</tr>
<tr>
<td style="text-align:center">r14</td>
<td style="text-align:center">r14d</td>
<td style="text-align:center">r14w</td>
<td style="text-align:center">r14b</td>
<td style="text-align:center">被调用者保存</td>
</tr>
<tr>
<td style="text-align:center">r15</td>
<td style="text-align:center">r15d</td>
<td style="text-align:center">r15w</td>
<td style="text-align:center">r15b</td>
<td style="text-align:center">被调用者保存</td>
</tr>
</tbody>
</table>
<p>​		生成1字节和2字节数字的指令会保持剩下的字节不变；生成4字节数字的指令会把高位4个字节置为0。</p>
<a id="more"></a>
<ul>
<li>
<p>8个64位媒体和浮点指针寄存器MMX0/FPR0-MMX7/FPR7</p>
</li>
<li>
<p>16个256位媒体寄存器YMM0-YMM15（低128位为XMM0-XMM15）</p>
</li>
<li>
<p>指令指针寄存器rip（低32位为eip）</p>
</li>
<li>
<p>标志寄存器rflags（高32位为0，低32位Eflags与32位处理器相同）</p>
<p>（1） 状态标志位</p>
<ul>
<li>CF：进位标志位，当前加减运算时是否往前有进位；如果有进位则无符号运算结果溢出；</li>
<li>ZF：零标志位，结果是0，ZF位是1；</li>
<li>SF：符号标志位，最高位为1则SF=1；</li>
<li>PF：奇偶标志位，最低字节中1的个数为奇数PF=0；</li>
<li>OF：溢出标志位，有符号数运算结果是否有溢出；当加数、被加数、和的最高位都相等则OF=0；当加数、被加数最高位相等但与结果最高位不等，则OF=1；当被加数与加数符号位不等时，OF=0；（溢出表示有符号数运算结果超出范围，进位表示无符号数运算结果超出范围</li>
</ul>
<p>（2） 控制标志位</p>
<ul>
<li>方向标志位DF：用汇编语言可以设置其值，控制数组操作的方向；</li>
<li>中断允许标志位IF：是否允许外源设备产生中断请求暂时终止CPU运行，当IF=1时，那按鼠标按键盘CPU可以响应，否则不行；最简单的模拟机器死机，就可以用CLI（不允许外源设备中断），STI（允许）；</li>
<li>陷阱标志位TF（Trag Flag）：开发VS等调试软件才会用到；</li>
</ul>
</li>
<li>
<p>调试寄存器DR0-DR7</p>
</li>
<li>
<p>浮点寄存器ST0-ST7</p>
</li>
<li>
<p>段寄存器：</p>
<ul>
<li>
<p>CS：代码段的段选择符，代码段保存正在执行的指令。处理器从代码段读取指令时，使用有CS寄存器中的段选择符与EIP寄存器联合构成的逻辑地址。EIP保存要执行的下一条指令在代码段中的偏移量。CS寄存器不能有应用程序显式地的加载。相反，可以通过某些指令或处理器内部操作隐式地加载。这些指令/内部操作，例如过程调用，中断处理，或者任务切换，用于改变程序的执行流，从而导致更新CS寄存器。</p>
</li>
<li>
<p>DS/ES/FS/GS：指向四个数据段。多个数据段的存在允许高效地且安全地访问不同的数据结构类型。</p>
</li>
<li>
<p>SS：栈段的段选择符，这里栈段用于存储程序/任务/当前正在执行的处理器程序的栈帧。所有的栈操作都使用SS栈段寄存器来定位栈段。与CS代码段寄存器不同，SS寄存器可以显式地加载，这样就允许应用程序建立多个栈段，并在这些段间切换。</p>
<p>在64位模式下，处理器把CS/DS/ES/SS的段基都当作0，忽略与之关联的段描述符中的段基地址，相当于分段机制被禁用。这样就为代码/数据/栈创建了平坦的地址空间。但是FS/GS段寄存器是例外。在计算线性地址时，这两个段寄存器可能被用作额外的基址寄存器（当寻址局部数据或寻址某些操作系统数据结构时）。</p>
</li>
</ul>
</li>
</ul>
<h1 id="数据传输"><a class="markdownIt-Anchor" href="#数据传输"></a> 数据传输</h1>
<h2 id="数据格式"><a class="markdownIt-Anchor" href="#数据格式"></a> 数据格式</h2>
<p>C语言数据格式，对应大小，及其汇编代码后缀</p>
<table>
<thead>
<tr>
<th style="text-align:center">C声明</th>
<th style="text-align:center">Intel数据类型</th>
<th style="text-align:center">汇编代码后缀</th>
<th style="text-align:center">大小(字节)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">char</td>
<td style="text-align:center">字节</td>
<td style="text-align:center">b</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">short</td>
<td style="text-align:center">字</td>
<td style="text-align:center">w</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:center">int</td>
<td style="text-align:center">双字</td>
<td style="text-align:center">l</td>
<td style="text-align:center">4</td>
</tr>
<tr>
<td style="text-align:center">long</td>
<td style="text-align:center">四字</td>
<td style="text-align:center">q</td>
<td style="text-align:center">8</td>
</tr>
<tr>
<td style="text-align:center">char*</td>
<td style="text-align:center">四字(64位，如果32位为双字)</td>
<td style="text-align:center">q</td>
<td style="text-align:center">8</td>
</tr>
<tr>
<td style="text-align:center">float</td>
<td style="text-align:center">单精度</td>
<td style="text-align:center">s</td>
<td style="text-align:center">4</td>
</tr>
<tr>
<td style="text-align:center">double</td>
<td style="text-align:center">双精度</td>
<td style="text-align:center">l</td>
<td style="text-align:center">8</td>
</tr>
</tbody>
</table>
<p>GCC生成的汇编代码会有一个字符的后缀，代表操作数的大小。</p>
<h2 id="操作数指示符"><a class="markdownIt-Anchor" href="#操作数指示符"></a> 操作数指示符</h2>
<p>在下面的表格中，$Imm表示立即数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>r</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">r_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示某个寄存器，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo stretchy="false">[</mo><msub><mi>r</mi><mi>a</mi></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">R[r_a]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>表示引用某个寄存器的值，M[Addr]表示引用内存的数值，Addr有多种不同的寻址模式，允许不同形式的内存引用。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>r</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">r_b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示基址寄存器，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>r</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">r_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示变址寄存器，s表示比例因子，s必须为1，2，4或8</p>
<table>
<thead>
<tr>
<th style="text-align:center">类型</th>
<th style="text-align:center">格式</th>
<th style="text-align:center">操作数值</th>
<th style="text-align:center">名称</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">立即数</td>
<td style="text-align:center">$Imm</td>
<td style="text-align:center">Imm</td>
<td style="text-align:center">立即数寻址</td>
</tr>
<tr>
<td style="text-align:center">寄存器</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>r</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">r_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo stretchy="false">[</mo><msub><mi>r</mi><mi>a</mi></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">R[r_a]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span></td>
<td style="text-align:center">寄存器寻址</td>
</tr>
<tr>
<td style="text-align:center">存储器</td>
<td style="text-align:center">Imm</td>
<td style="text-align:center">M[Imm]</td>
<td style="text-align:center">绝对寻址</td>
</tr>
<tr>
<td style="text-align:center">存储器</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>r</mi><mi>a</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r_a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo stretchy="false">[</mo><mi>R</mi><mo stretchy="false">[</mo><msub><mi>r</mi><mi>a</mi></msub><mo stretchy="false">]</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">M[R[r_a]]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mclose">]</span></span></span></span></td>
<td style="text-align:center">间接寻址</td>
</tr>
<tr>
<td style="text-align:center">存储器</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mi>m</mi><mi>m</mi><mo stretchy="false">(</mo><msub><mi>r</mi><mi>b</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Imm(r_b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo stretchy="false">[</mo><mi>I</mi><mi>m</mi><mi>m</mi><mo>+</mo><mi>R</mi><mo stretchy="false">[</mo><msub><mi>r</mi><mi>b</mi></msub><mo stretchy="false">]</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">M[Imm+R[r_b]]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mclose">]</span></span></span></span></td>
<td style="text-align:center">（基址+ 偏移量）寻址</td>
</tr>
<tr>
<td style="text-align:center">存储器</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>r</mi><mi>b</mi></msub><mo separator="true">,</mo><msub><mi>r</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r_b, r_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo stretchy="false">[</mo><mi>R</mi><mo stretchy="false">[</mo><msub><mi>r</mi><mi>b</mi></msub><mo stretchy="false">]</mo><mo>+</mo><mi>R</mi><mo stretchy="false">[</mo><msub><mi>r</mi><mi>i</mi></msub><mo stretchy="false">]</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">M[R[r_b]+R[r_i]]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mclose">]</span></span></span></span></td>
<td style="text-align:center">变址寻址</td>
</tr>
<tr>
<td style="text-align:center">存储器</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mi>m</mi><mi>m</mi><mo stretchy="false">(</mo><msub><mi>r</mi><mi>b</mi></msub><mo separator="true">,</mo><msub><mi>r</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Imm(r_b, r_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo stretchy="false">[</mo><mi>I</mi><mi>m</mi><mi>m</mi><mo>+</mo><mi>R</mi><mo stretchy="false">[</mo><msub><mi>r</mi><mi>b</mi></msub><mo stretchy="false">]</mo><mo>+</mo><mi>R</mi><mo stretchy="false">[</mo><msub><mi>r</mi><mi>i</mi></msub><mo stretchy="false">]</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">M[Imm+R[r_b]+R[r_i]]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mclose">]</span></span></span></span></td>
<td style="text-align:center">变址寻址</td>
</tr>
<tr>
<td style="text-align:center">存储器</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mo separator="true">,</mo><msub><mi>r</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(, r_i, s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo stretchy="false">[</mo><mi>R</mi><mo stretchy="false">[</mo><msub><mi>r</mi><mi>i</mi></msub><mo stretchy="false">]</mo><mo>∗</mo><mi>s</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">M[R[r_i]*s]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mclose">]</span></span></span></span></td>
<td style="text-align:center">比例变址寻址</td>
</tr>
<tr>
<td style="text-align:center">存储器</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mi>m</mi><mi>m</mi><mo stretchy="false">(</mo><mo separator="true">,</mo><msub><mi>r</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Imm(, r_i, s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo stretchy="false">[</mo><mi>I</mi><mi>m</mi><mi>m</mi><mo>+</mo><mi>R</mi><mo stretchy="false">[</mo><msub><mi>r</mi><mi>i</mi></msub><mo stretchy="false">]</mo><mo>∗</mo><mi>s</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">M[Imm+R[r_i]*s]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mclose">]</span></span></span></span></td>
<td style="text-align:center">比例变址寻址</td>
</tr>
<tr>
<td style="text-align:center">存储器</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>r</mi><mi>b</mi></msub><mo separator="true">,</mo><msub><mi>r</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r_b, r_i, s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo stretchy="false">[</mo><mi>R</mi><mo stretchy="false">[</mo><msub><mi>r</mi><mi>b</mi></msub><mo stretchy="false">]</mo><mo>+</mo><mi>R</mi><mo stretchy="false">[</mo><msub><mi>r</mi><mi>i</mi></msub><mo stretchy="false">]</mo><mo>∗</mo><mi>s</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">M[R[r_b]+R[r_i]*s]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mclose">]</span></span></span></span></td>
<td style="text-align:center">比例变址寻址</td>
</tr>
<tr>
<td style="text-align:center">存储器</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mi>m</mi><mi>m</mi><mo stretchy="false">(</mo><msub><mi>r</mi><mi>b</mi></msub><mo separator="true">,</mo><msub><mi>r</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Imm(r_b, r_i, s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo stretchy="false">[</mo><mi>I</mi><mi>m</mi><mi>m</mi><mo>+</mo><mi>R</mi><mo stretchy="false">[</mo><msub><mi>r</mi><mi>b</mi></msub><mo stretchy="false">]</mo><mo>+</mo><mi>R</mi><mo stretchy="false">[</mo><msub><mi>r</mi><mi>i</mi></msub><mo stretchy="false">]</mo><mo>∗</mo><mi>s</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">M[Imm+R[r_b]+R[r_i]*s]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault">m</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mclose">]</span></span></span></span></td>
<td style="text-align:center">比例变址寻址</td>
</tr>
</tbody>
</table>
<p>在32位模式下寻址时，如果基址寄存器是%ebp或%esp，默认的段寄存器为ss（对应于栈操作）；否则默认的段寄存器为ds（注意32位下访问存储单元时，没有16位下寄存器的使用限制）。如果显式指定段寄存器，则使用指定的段寄存器。</p>
<p>如果是浮点数，操作数不能是立即数，编译器需要为所有的浮点数常量分配并初始化存储空间，然后代码把这些值从内存读入。</p>
<h2 id="数据传送指令"><a class="markdownIt-Anchor" href="#数据传送指令"></a> 数据传送指令</h2>
<h3 id="整数"><a class="markdownIt-Anchor" href="#整数"></a> 整数</h3>
<ol>
<li>
<p>不做任何变化的数据传递</p>
<table>
<thead>
<tr>
<th style="text-align:center">指令</th>
<th style="text-align:center">功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">mov S, D</td>
<td style="text-align:center">将S的值赋给D</td>
</tr>
</tbody>
</table>
<p>根据操作数大小不同分为movb，movw，movl，movq</p>
<p>S为一个立即数，存储在寄存器或者内存中</p>
<p>D为一个位置，是寄存器或内存</p>
<p>x86-64的限制：传送指令的两个操作数不能都指向内存位置，需要借助寄存器</p>
</li>
<li>
<p>零扩展数据传送</p>
<table>
<thead>
<tr>
<th style="text-align:center">指令</th>
<th style="text-align:center">功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">movz S, R</td>
<td style="text-align:center">将S的内容通过零扩展赋给R</td>
</tr>
</tbody>
</table>
<p>根据操作数大小分为movzbw, movzbl, movzwl, movzbq, movzwq</p>
</li>
<li>
<p>符号扩展数据传送</p>
<table>
<thead>
<tr>
<th style="text-align:center">指令</th>
<th style="text-align:center">功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">movs S, R</td>
<td style="text-align:center">将S的内容通过符号扩展赋给R</td>
</tr>
</tbody>
</table>
<p>根据操作数大小分为movsbw, movsbl, movswl, movsbq, movswq, movslq</p>
<p>cltq：直接将%eax寄存器中的数字做符号扩展赋给%rax</p>
</li>
<li>
<p>压入和弹出栈数据</p>
<table>
<thead>
<tr>
<th style="text-align:center">指令</th>
<th style="text-align:center">功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">pushq S</td>
<td style="text-align:center">将数据压入栈中，实际效果等同于R[%rsp]←R[%rsp]-8, M[R[%rsp]]←S</td>
</tr>
<tr>
<td style="text-align:center">popq D</td>
<td style="text-align:center">将栈顶数据弹出，实际效果等同于D←M[R[%rsp]]，R[%rsp]←R[%rsp]+8</td>
</tr>
</tbody>
</table>
<p>注意栈是从上往下增长的！</p>
</li>
</ol>
<h3 id="浮点数"><a class="markdownIt-Anchor" href="#浮点数"></a> 浮点数</h3>
<ol>
<li>
<p>浮点传送指令</p>
<table>
<thead>
<tr>
<th style="text-align:center">指令</th>
<th style="text-align:center">源</th>
<th style="text-align:center">目的</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">vmovss</td>
<td style="text-align:center">M32</td>
<td style="text-align:center">X</td>
<td style="text-align:center">传送单精度数</td>
</tr>
<tr>
<td style="text-align:center">vmovss</td>
<td style="text-align:center">X</td>
<td style="text-align:center">Mn</td>
<td style="text-align:center">传送单精度数</td>
</tr>
<tr>
<td style="text-align:center">vmovsd</td>
<td style="text-align:center">M64</td>
<td style="text-align:center">X</td>
<td style="text-align:center">传送双精度数</td>
</tr>
<tr>
<td style="text-align:center">vmovsd</td>
<td style="text-align:center">X</td>
<td style="text-align:center">M64</td>
<td style="text-align:center">传送双精度数</td>
</tr>
<tr>
<td style="text-align:center">vmovaps</td>
<td style="text-align:center">X</td>
<td style="text-align:center">X</td>
<td style="text-align:center">传送对齐的封装好的单精度数</td>
</tr>
<tr>
<td style="text-align:center">vmovapd</td>
<td style="text-align:center">X</td>
<td style="text-align:center">X</td>
<td style="text-align:center">传送对齐的封装好的双精度数</td>
</tr>
</tbody>
</table>
<p>表中X表示XMM寄存器，M表示内存</p>
</li>
<li>
<p>浮点转换指令</p>
<table>
<thead>
<tr>
<th style="text-align:center">指令</th>
<th style="text-align:center">源</th>
<th style="text-align:center">目的</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">vcvttss2si</td>
<td style="text-align:center">X/M32</td>
<td style="text-align:center">R32</td>
<td style="text-align:center">用截断的方法把单精度数转换成整数</td>
</tr>
<tr>
<td style="text-align:center">vcvttsd2si</td>
<td style="text-align:center">X/M64</td>
<td style="text-align:center">R32</td>
<td style="text-align:center">用截断的方法把双精度数转换成整数</td>
</tr>
<tr>
<td style="text-align:center">vcvttss2siq</td>
<td style="text-align:center">X/M32</td>
<td style="text-align:center">R64</td>
<td style="text-align:center">用截断的方法把单精度数转换成四字整数</td>
</tr>
<tr>
<td style="text-align:center">vcvttsd2siq</td>
<td style="text-align:center">X/M64</td>
<td style="text-align:center">R64</td>
<td style="text-align:center">用截断的方法把双精度数转换成四字整数</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:center">指令</th>
<th style="text-align:center">源1</th>
<th style="text-align:center">源2</th>
<th style="text-align:center">目的</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">vcvtsi2ss</td>
<td style="text-align:center">M32/R32</td>
<td style="text-align:center">X</td>
<td style="text-align:center">X</td>
<td style="text-align:center">把整数转换成单精度数</td>
</tr>
<tr>
<td style="text-align:center">vcvtsi2sd</td>
<td style="text-align:center">M32/R32</td>
<td style="text-align:center">X</td>
<td style="text-align:center">X</td>
<td style="text-align:center">把整数转换成双精度数</td>
</tr>
<tr>
<td style="text-align:center">vcvtsi2ssq</td>
<td style="text-align:center">M64/R64</td>
<td style="text-align:center">X</td>
<td style="text-align:center">X</td>
<td style="text-align:center">把四字整数转换成单精度数</td>
</tr>
<tr>
<td style="text-align:center">vcvtsi2sdq</td>
<td style="text-align:center">M64/R64</td>
<td style="text-align:center">X</td>
<td style="text-align:center">X</td>
<td style="text-align:center">把四字整数转换成双精度数</td>
</tr>
</tbody>
</table>
<p>在三操作数浮点转换指令中，第二个操作数可以忽略。在最常见的使用场景中，第二个源和目的操作数都是一样的。</p>
</li>
</ol>
<h1 id="控制语句"><a class="markdownIt-Anchor" href="#控制语句"></a> 控制语句</h1>
<h2 id="条件码"><a class="markdownIt-Anchor" href="#条件码"></a> 条件码</h2>
<p>常用的条件码包括：</p>
<ul>
<li>CF：进位标志，最近的操作使最高位产生进位。可用来检测无符号操作的溢出</li>
<li>ZF：零标志。最近的操作结果为0</li>
<li>SF：符号标志，最近操作得到结果为负数</li>
<li>OF：溢出标志，最近的操作导致补码溢出</li>
</ul>
<h2 id="条件码的设置"><a class="markdownIt-Anchor" href="#条件码的设置"></a> 条件码的设置</h2>
<h3 id="整数-2"><a class="markdownIt-Anchor" href="#整数-2"></a> 整数</h3>
<p>除了leaq指令，所有整数的算数和逻辑操作都会设置条件码</p>
<p>还有两类指令，只设置条件码，但是却不修改任何其他寄存器（二者分别对应了字节，字，双字和四字的四类指令）：</p>
<table>
<thead>
<tr>
<th style="text-align:center">指令</th>
<th style="text-align:center">基于</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">cmp S, T</td>
<td style="text-align:center">基于T-S进行比较（即二者的大小关系为T ? S）</td>
</tr>
<tr>
<td style="text-align:center">test S, T</td>
<td style="text-align:center">基于S&amp;T进行比较</td>
</tr>
</tbody>
</table>
<h3 id="浮点数-2"><a class="markdownIt-Anchor" href="#浮点数-2"></a> 浮点数</h3>
<table>
<thead>
<tr>
<th style="text-align:center">指令</th>
<th style="text-align:center">基于</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">ucomiss S1, S2</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mn>2</mn></msub><mo>−</mo><msub><mi>S</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">S_2-S_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center">比较单精度值</td>
</tr>
<tr>
<td style="text-align:center">ucomisd S1, S2</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mn>2</mn></msub><mo>−</mo><msub><mi>S</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">S_2-S_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center">比较双精度值</td>
</tr>
</tbody>
</table>
<p>浮点数在比较之后，条件码的设置条件如下表所示：</p>
<table>
<thead>
<tr>
<th style="text-align:center">顺序S2:S1</th>
<th style="text-align:center">CF</th>
<th style="text-align:center">ZF</th>
<th style="text-align:center">PF</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">无序的(S1和S2其中一个为NaN)</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">S2&lt;S1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
</tr>
<tr>
<td style="text-align:center">S2=S1</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
</tr>
<tr>
<td style="text-align:center">S2&gt;S1</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
</tr>
</tbody>
</table>
<h2 id="条件码的访问"><a class="markdownIt-Anchor" href="#条件码的访问"></a> 条件码的访问</h2>
<p>条件码通常不会直接读取，常用的使用方法包括：</p>
<ol>
<li>根据条件码的某些组合，将一个字节设置为0或1</li>
<li>条件跳转到程序的某个其他部分</li>
<li>有条件地传送数据</li>
</ol>
<p>上述第一条对应了set这一类指令，set指令的目的操作数是低位单字节寄存器元素之一，或是一个字节的内存位置，指令会将这个字节设置为0或1</p>
<table>
<thead>
<tr>
<th style="text-align:center">指令</th>
<th style="text-align:center">同义名</th>
<th style="text-align:center">效果</th>
<th style="text-align:center">设置条件</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">sete D</td>
<td style="text-align:center">setz</td>
<td style="text-align:center">D←ZF</td>
<td style="text-align:center">相等/零</td>
</tr>
<tr>
<td style="text-align:center">setne D</td>
<td style="text-align:center">setnz</td>
<td style="text-align:center">D←~ZF</td>
<td style="text-align:center">相等/零</td>
</tr>
<tr>
<td style="text-align:center">sets D</td>
<td style="text-align:center"></td>
<td style="text-align:center">D←SF</td>
<td style="text-align:center">负数</td>
</tr>
<tr>
<td style="text-align:center">setns D</td>
<td style="text-align:center"></td>
<td style="text-align:center">D←~SF</td>
<td style="text-align:center">非负数</td>
</tr>
<tr>
<td style="text-align:center">setg D</td>
<td style="text-align:center">setnle</td>
<td style="text-align:center">D←~(SF^OF)&amp;~ZF</td>
<td style="text-align:center">有符号大于</td>
</tr>
<tr>
<td style="text-align:center">setge D</td>
<td style="text-align:center">setnl</td>
<td style="text-align:center">D←~(SF^OF)</td>
<td style="text-align:center">有符号大于等于</td>
</tr>
<tr>
<td style="text-align:center">setl D</td>
<td style="text-align:center">setnge</td>
<td style="text-align:center">D←SF^OF</td>
<td style="text-align:center">有符号小于</td>
</tr>
<tr>
<td style="text-align:center">setle D</td>
<td style="text-align:center">setng</td>
<td style="text-align:center">D←(SF^OF)|ZF</td>
<td style="text-align:center">有符号小于等于</td>
</tr>
<tr>
<td style="text-align:center">seta D</td>
<td style="text-align:center">setnbe</td>
<td style="text-align:center">D←~CF&amp;~ZF</td>
<td style="text-align:center">无符号大于（超过）</td>
</tr>
<tr>
<td style="text-align:center">setae D</td>
<td style="text-align:center">setnb</td>
<td style="text-align:center">D←~CF</td>
<td style="text-align:center">无符号大于等于</td>
</tr>
<tr>
<td style="text-align:center">setb D</td>
<td style="text-align:center">setnae</td>
<td style="text-align:center">D←CF</td>
<td style="text-align:center">无符号小于（低于）</td>
</tr>
<tr>
<td style="text-align:center">setbe D</td>
<td style="text-align:center">setna</td>
<td style="text-align:center">D←CF|ZF</td>
<td style="text-align:center">无符号小于等于</td>
</tr>
</tbody>
</table>
<p>表中效果一栏的助记可以用cmp S, T，即T-S的结果来理解：</p>
<ul>
<li>当S和T为无符号数时(无符号数的减法也是通过对减数求补码相加，结果按照无符号数来进行解释，参见https://www.zhihu.com/question/51493338)：
<ul>
<li>T==S时ZF=1</li>
<li>如果T&lt;S，则运算结果会发生溢出，CF会被设置为1</li>
<li>反之则CF为0</li>
</ul>
</li>
<li>当S和T为有符号数时
<ul>
<li>T==S时ZF=1</li>
<li>如果T&lt;S，可能OF=0&amp;SF=1（未溢出），也可能OF=1&amp;SF=0（发生溢出）</li>
<li>如果T&gt;S，可能OF=0&amp;SF=0（未溢出），也可能OF=1&amp;SF=1（发生溢出）</li>
</ul>
</li>
</ul>
<h2 id="跳转指令"><a class="markdownIt-Anchor" href="#跳转指令"></a> 跳转指令</h2>
<p>跳转指令会导致执行切换到程序中一个全新的位置。在汇编代码中，跳转目的地通常用一个标号指明。跳转指令包含无条件跳转和有条件跳转两类</p>
<p>跳转目标分为直接和间接两种，直接跳转是直接给出一个标号作为跳转目标，间接跳转是从寄存器或者内存中读取跳转位置</p>
<p>常见的跳转指令有：</p>
<table>
<thead>
<tr>
<th style="text-align:center">指令</th>
<th style="text-align:center">同义名</th>
<th style="text-align:center">跳转条件</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">jmp Label</td>
<td style="text-align:center"></td>
<td style="text-align:center">1</td>
<td style="text-align:center">直接跳转</td>
</tr>
<tr>
<td style="text-align:center">jmp *Operand</td>
<td style="text-align:center"></td>
<td style="text-align:center">1</td>
<td style="text-align:center">间接跳转</td>
</tr>
<tr>
<td style="text-align:center">je Label</td>
<td style="text-align:center">jz</td>
<td style="text-align:center">ZF</td>
<td style="text-align:center">相等/零</td>
</tr>
<tr>
<td style="text-align:center">jne Label</td>
<td style="text-align:center">jnz</td>
<td style="text-align:center">~ZF</td>
<td style="text-align:center">不相等/非零</td>
</tr>
<tr>
<td style="text-align:center">js Label</td>
<td style="text-align:center"></td>
<td style="text-align:center">SF</td>
<td style="text-align:center">负数</td>
</tr>
<tr>
<td style="text-align:center">jns Label</td>
<td style="text-align:center"></td>
<td style="text-align:center">~SF</td>
<td style="text-align:center">非负数</td>
</tr>
<tr>
<td style="text-align:center">jg Label</td>
<td style="text-align:center">jnle</td>
<td style="text-align:center">~(SF^OF)&amp;~ZF</td>
<td style="text-align:center">有符号大于</td>
</tr>
<tr>
<td style="text-align:center">jge Label</td>
<td style="text-align:center">jnl</td>
<td style="text-align:center">~(SF^OF)</td>
<td style="text-align:center">有符号大于等于</td>
</tr>
<tr>
<td style="text-align:center">jl Label</td>
<td style="text-align:center">jnge</td>
<td style="text-align:center">SF^OF</td>
<td style="text-align:center">有符号小于</td>
</tr>
<tr>
<td style="text-align:center">jle Label</td>
<td style="text-align:center">jng</td>
<td style="text-align:center">(SF^OF)|ZF</td>
<td style="text-align:center">有符号小于等于</td>
</tr>
<tr>
<td style="text-align:center">ja Label</td>
<td style="text-align:center">jnbe</td>
<td style="text-align:center">~CF&amp;~ZF</td>
<td style="text-align:center">无符号大于</td>
</tr>
<tr>
<td style="text-align:center">jae Label</td>
<td style="text-align:center">jnb</td>
<td style="text-align:center">~CF</td>
<td style="text-align:center">无符号大于等于</td>
</tr>
<tr>
<td style="text-align:center">jb Label</td>
<td style="text-align:center">jnae</td>
<td style="text-align:center">CF</td>
<td style="text-align:center">无符号小于</td>
</tr>
<tr>
<td style="text-align:center">jbe Label</td>
<td style="text-align:center">jna</td>
<td style="text-align:center">CF|ZF</td>
<td style="text-align:center">无符号小于等于</td>
</tr>
</tbody>
</table>
<p>这些转移指令中，又分为长转移和短转移：短转移使用short关键字，转移范围被限制在当前指令的-128~127字节范围内；长转移对转移范围无限制。因此，短转移的机器码长度也相应会比长转移要短。</p>
<h2 id="条件传送"><a class="markdownIt-Anchor" href="#条件传送"></a> 条件传送</h2>
<table>
<thead>
<tr>
<th style="text-align:center">指令</th>
<th style="text-align:center">同义名</th>
<th style="text-align:center">跳转条件</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">cmove S, R</td>
<td style="text-align:center">cmovz</td>
<td style="text-align:center">ZF</td>
<td style="text-align:center">相等/零</td>
</tr>
<tr>
<td style="text-align:center">cmovne S, R</td>
<td style="text-align:center">cmovnz</td>
<td style="text-align:center">~ZF</td>
<td style="text-align:center">不相等/非零</td>
</tr>
<tr>
<td style="text-align:center">cmovs S, R</td>
<td style="text-align:center"></td>
<td style="text-align:center">SF</td>
<td style="text-align:center">负数</td>
</tr>
<tr>
<td style="text-align:center">cmovns S, R</td>
<td style="text-align:center"></td>
<td style="text-align:center">~SF</td>
<td style="text-align:center">非负数</td>
</tr>
<tr>
<td style="text-align:center">cmovg S, R</td>
<td style="text-align:center">cmovnle</td>
<td style="text-align:center">~(SF^OF)&amp;~ZF</td>
<td style="text-align:center">有符号大于</td>
</tr>
<tr>
<td style="text-align:center">cmovge S, R</td>
<td style="text-align:center">comvnl</td>
<td style="text-align:center">~(SF^OF)</td>
<td style="text-align:center">有符号大于等于</td>
</tr>
<tr>
<td style="text-align:center">cmovl S, R</td>
<td style="text-align:center">cmovnge</td>
<td style="text-align:center">SF^OF</td>
<td style="text-align:center">有符号小于</td>
</tr>
<tr>
<td style="text-align:center">cmovle S, R</td>
<td style="text-align:center">cmovng</td>
<td style="text-align:center">(SF^OF)|ZF</td>
<td style="text-align:center">有符号小于等于</td>
</tr>
<tr>
<td style="text-align:center">cmova S, R</td>
<td style="text-align:center">cmovnbe</td>
<td style="text-align:center">~CF&amp;~ZF</td>
<td style="text-align:center">无符号大于</td>
</tr>
<tr>
<td style="text-align:center">cmovae S, R</td>
<td style="text-align:center">cmovnb</td>
<td style="text-align:center">~CF</td>
<td style="text-align:center">无符号大于等于</td>
</tr>
<tr>
<td style="text-align:center">cmovb S, R</td>
<td style="text-align:center">cmovnae</td>
<td style="text-align:center">CF</td>
<td style="text-align:center">无符号小于</td>
</tr>
<tr>
<td style="text-align:center">cmovbe S, R</td>
<td style="text-align:center">cmovna</td>
<td style="text-align:center">CF|ZF</td>
<td style="text-align:center">无符号小于等于</td>
</tr>
</tbody>
</table>
<h2 id="程序实例"><a class="markdownIt-Anchor" href="#程序实例"></a> 程序实例</h2>
<h3 id="条件分支"><a class="markdownIt-Anchor" href="#条件分支"></a> 条件分支</h3>
<p>对于C++中的if-else条件分支语句，汇编语言中的实现通常类似于下面形式的伪代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">	t = test-expr;</span><br><span class="line">	<span class="keyword">if</span> (!t)</span><br><span class="line">		<span class="keyword">goto</span> <span class="literal">false</span>;</span><br><span class="line">	then-statement</span><br><span class="line">	<span class="keyword">goto</span> done;</span><br><span class="line"><span class="literal">false</span>:</span><br><span class="line">	<span class="keyword">else</span>-statement</span><br><span class="line">done:</span><br></pre></td></tr></table></figure>
<p>例如，我们在C++中写这样的主函数：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">5</span>;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">4</span>;</span><br><span class="line">	<span class="keyword">int</span> c;</span><br><span class="line">	<span class="keyword">if</span> (a &gt; b) c = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span> c = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在编译之后反汇编，得到的汇编代码如下(删除了一些参数入栈出栈的操作)：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">00007FF65585173C | mov     dword ptr ss:[rbp+4],5                                 </span><br><span class="line">00007FF655851743 | mov     dword ptr ss:[rbp+24],4     </span><br><span class="line">00007FF65585174A | mov     eax,dword ptr ss:[rbp+24]   </span><br><span class="line">00007FF65585174D | cmp     dword ptr ss:[rbp+4],eax     </span><br><span class="line">00007FF655851750 | jle     consoleapplication3.7FF65585175B  </span><br><span class="line">00007FF655851752 | mov     dword ptr ss:[rbp+44],1     </span><br><span class="line">00007FF655851759 | jmp     consoleapplication3.7FF655851762                       </span><br><span class="line">00007FF65585175B | mov     dword ptr ss:[rbp+44],0     </span><br><span class="line">00007FF655851762 | xor     eax,eax</span><br></pre></td></tr></table></figure>
<p>对于一些比较特殊的条件分支，可能会使用数据的条件传送策略，这种方法计算一个条件操作的两种结果，然后再根据条件是否满足从中选取一个。在一些受限制的情况下，这种策略可行。条件传送指令更加符合现代处理器流水线操作的性能特性。</p>
<h3 id="循环"><a class="markdownIt-Anchor" href="#循环"></a> 循环</h3>
<p>在C++中，循环语句有3种关键词：do while，while和for 。我们使用这三种不同的关键词实现同样的功能，并对它们产生的汇编语言代码进行比较</p>
<h4 id="do-while"><a class="markdownIt-Anchor" href="#do-while"></a> do while</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">	&#123;</span><br><span class="line">		sum += i;</span><br><span class="line">		i++;</span><br><span class="line">	&#125; <span class="keyword">while</span> (i&lt;<span class="number">100</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">00007FF663CF1559 | mov     dword ptr ss:[rbp],0         </span><br><span class="line">00007FF663CF1560 | mov     dword ptr ss:[rbp+4],0       </span><br><span class="line">00007FF663CF1567 | mov     eax,dword ptr ss:[rbp+4]     </span><br><span class="line">00007FF663CF156A | mov     ecx,dword ptr ss:[rbp]       </span><br><span class="line">00007FF663CF156D | add     ecx,eax                     </span><br><span class="line">00007FF663CF156F | mov     eax,ecx                     </span><br><span class="line">00007FF663CF1571 | mov     dword ptr ss:[rbp],eax       </span><br><span class="line">00007FF663CF1574 | mov     eax,dword ptr ss:[rbp+4]     </span><br><span class="line">00007FF663CF1577 | inc     eax                         </span><br><span class="line">00007FF663CF1579 | mov     dword ptr ss:[rbp+4],eax     </span><br><span class="line">00007FF663CF1580 | jl      consoleapplication3.7FF663CF1567                       </span><br></pre></td></tr></table></figure>
<p>从中可以看出，do-while语句产生的汇编代码大致相当于是如下的C++伪代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">loop</span>:</span><br><span class="line">	body-statement</span><br><span class="line">	t = test-expr;</span><br><span class="line">	<span class="keyword">if</span> (t)</span><br><span class="line">		<span class="keyword">goto</span> <span class="built_in">loop</span>;</span><br></pre></td></tr></table></figure>
<h4 id="while"><a class="markdownIt-Anchor" href="#while"></a> while</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (i&lt;<span class="number">100</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		sum += i;</span><br><span class="line">		i++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">00007FF69E9E1559	mov dword ptr ss:[rbp],0</span><br><span class="line">00007FF69E9E1560	mov dword ptr ss:[rbp+4],0</span><br><span class="line">00007FF69E9E1567	cmp dword ptr ss:[rbp+4],64</span><br><span class="line">00007FF69E9E156B	jge consoleapplication3.7FF69E9E1584</span><br><span class="line">00007FF69E9E156D	mov eax,dword ptr ss:[rbp+4]</span><br><span class="line">00007FF69E9E1570	mov ecx,dword ptr ss:[rbp]</span><br><span class="line">00007FF69E9E1573	add ecx,eax</span><br><span class="line">00007FF69E9E1575	mov eax,ecx</span><br><span class="line">00007FF69E9E1577	mov dword ptr ss:[rbp],eax</span><br><span class="line">00007FF69E9E157A	mov eax,dword ptr ss:[rbp+4]</span><br><span class="line">00007FF69E9E157D	inc eax</span><br><span class="line">00007FF69E9E157F	mov dword ptr ss:[rbp+4],eax</span><br><span class="line">00007FF69E9E1582	jmp consoleapplication3.7FF69E9E1567</span><br><span class="line">00007FF69E9E1584	xor eax,eax</span><br><span class="line">00007FF69E9E1586	lea rsp,qword ptr ss:[rbp+50]</span><br><span class="line">00007FF69E9E158A	pop rbp</span><br><span class="line">00007FF69E9E158B	ret</span><br></pre></td></tr></table></figure>
<p>此时产生的汇编代码大致等同于如下的伪代码：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">t = test-expr;</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">	<span class="keyword">goto</span> done;</span><br><span class="line">loop:</span><br><span class="line">	body-statement</span><br><span class="line">	t = test-expr;</span><br><span class="line">	<span class="keyword">if</span> (t)</span><br><span class="line">		<span class="keyword">goto</span> loop;</span><br><span class="line">done:</span><br></pre></td></tr></table></figure>
<h4 id="for"><a class="markdownIt-Anchor" href="#for"></a> for</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		sum += i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">00007FF7D1FE1559	mov dword ptr ss:[rbp],0</span><br><span class="line">00007FF7D1FE1560	mov dword ptr ss:[rbp+4],0</span><br><span class="line">00007FF7D1FE1567	jmp consoleapplication3.7FF7D1FE1571</span><br><span class="line">00007FF7D1FE1569	mov eax,dword ptr ss:[rbp+4]</span><br><span class="line">00007FF7D1FE156C	inc eax</span><br><span class="line">00007FF7D1FE156E	mov dword ptr ss:[rbp+4],eax</span><br><span class="line">00007FF7D1FE1571	cmp dword ptr ss:[rbp+4],64</span><br><span class="line">00007FF7D1FE1575	jge consoleapplication3.7FF7D1FE1586</span><br><span class="line">00007FF7D1FE1577	mov eax,dword ptr ss:[rbp+4]</span><br><span class="line">00007FF7D1FE157A	mov ecx,dword ptr ss:[rbp]</span><br><span class="line">00007FF7D1FE157D	add ecx,eax</span><br><span class="line">00007FF7D1FE157F	mov eax,ecx</span><br><span class="line">00007FF7D1FE1581	mov dword ptr ss:[rbp],eax</span><br><span class="line">00007FF7D1FE1584	jmp consoleapplication3.7FF7D1FE1569</span><br><span class="line">00007FF7D1FE1586	xor eax,eax</span><br><span class="line">00007FF7D1FE1588	lea rsp,qword ptr ss:[rbp+50]</span><br><span class="line">00007FF7D1FE158C	pop rbp</span><br><span class="line">00007FF7D1FE158D	ret</span><br></pre></td></tr></table></figure>
<p>此时产生的汇编语言大致等同于以下的伪代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">	init-expr;</span><br><span class="line">	<span class="keyword">goto</span> test;</span><br><span class="line"><span class="built_in">loop</span>:</span><br><span class="line">	update-expr;</span><br><span class="line">test:</span><br><span class="line">	t=test-expr;</span><br><span class="line">	<span class="keyword">if</span>(!t)</span><br><span class="line">		<span class="keyword">goto</span> done;</span><br><span class="line">	body-statement;</span><br><span class="line">	<span class="keyword">goto</span> <span class="built_in">loop</span>;</span><br><span class="line">done:</span><br></pre></td></tr></table></figure>
<p>通过比较do while，while和for循环产生的汇编指令，我们发现它们都是通过条件测试和跳转指令组合起来实现循环效果，但是实现方法略有差异。</p>
<p>此外，while和for循环在编译时如果使用不同的优化等级时，可能会产生不同的汇编指令。参见<a href="#refer-anchor-1"><sup>1</sup></a></p>
<h3 id="switch语句"><a class="markdownIt-Anchor" href="#switch语句"></a> switch语句</h3>
<p>以如下的switch语句为例，编译后再反汇编得到汇编代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">5</span>;</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">switch</span> (a)</span><br><span class="line">	&#123;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">		b += <span class="number">2</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">		b += a;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">		b += <span class="number">5</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">100</span>:</span><br><span class="line">		b -= <span class="number">10</span>;</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">default</span>:</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">00007FF6EC601559	mov dword ptr ss:[rbp],5</span><br><span class="line">00007FF6EC601560	mov dword ptr ss:[rbp+4],1</span><br><span class="line">00007FF6EC601567	mov eax,dword ptr ss:[rbp]</span><br><span class="line">00007FF6EC60156A	mov dword ptr ss:[rbp+48],eax</span><br><span class="line">00007FF6EC60156D	cmp dword ptr ss:[rbp+48],1</span><br><span class="line">00007FF6EC601571	je consoleapplication3.7FF6EC601587</span><br><span class="line">00007FF6EC601573	cmp dword ptr ss:[rbp+48],2</span><br><span class="line">00007FF6EC601577	je consoleapplication3.7FF6EC601592</span><br><span class="line">00007FF6EC601579	cmp dword ptr ss:[rbp+48],3</span><br><span class="line">00007FF6EC60157D	je consoleapplication3.7FF6EC60159F</span><br><span class="line">00007FF6EC60157F	cmp dword ptr ss:[rbp+48],64</span><br><span class="line">00007FF6EC601583	je consoleapplication3.7FF6EC6015AA</span><br><span class="line">00007FF6EC601585	jmp consoleapplication3.7FF6EC6015B3</span><br><span class="line">00007FF6EC601587	mov eax,dword ptr ss:[rbp+4]</span><br><span class="line">00007FF6EC60158A	add eax,2</span><br><span class="line">00007FF6EC60158D	mov dword ptr ss:[rbp+4],eax</span><br><span class="line">00007FF6EC601590	jmp consoleapplication3.7FF6EC6015B3</span><br><span class="line">00007FF6EC601592	mov eax,dword ptr ss:[rbp]</span><br><span class="line">00007FF6EC601595	mov ecx,dword ptr ss:[rbp+4]</span><br><span class="line">00007FF6EC601598	add ecx,eax</span><br><span class="line">00007FF6EC60159A	mov eax,ecx</span><br><span class="line">00007FF6EC60159C	mov dword ptr ss:[rbp+4],eax</span><br><span class="line">00007FF6EC60159F	mov eax,dword ptr ss:[rbp+4]</span><br><span class="line">00007FF6EC6015A2	add eax,5</span><br><span class="line">00007FF6EC6015A5	mov dword ptr ss:[rbp+4],eax</span><br><span class="line">00007FF6EC6015A8	jmp consoleapplication3.7FF6EC6015B3</span><br><span class="line">00007FF6EC6015AA	mov eax,dword ptr ss:[rbp+4]</span><br><span class="line">00007FF6EC6015AD	sub eax,A</span><br><span class="line">00007FF6EC6015B0	mov dword ptr ss:[rbp+4],eax</span><br><span class="line">00007FF6EC6015B3	xor eax,eax</span><br><span class="line">00007FF6EC6015B5	lea rsp,qword ptr ss:[rbp+50]</span><br><span class="line">00007FF6EC6015B9	pop rbp</span><br><span class="line">00007FF6EC6015BA	ret</span><br></pre></td></tr></table></figure>
<p>从中我们发现，此时switch语句的汇编实现是通过一系列的比较与跳转指令实现的。</p>
<p>当case值的间隔比较小的时候，汇编也可能会采用case表的方式实现switch语句。</p>
<h1 id="过程"><a class="markdownIt-Anchor" href="#过程"></a> 过程</h1>
<h2 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h2>
<p>过程是软件中一种很重要的抽象。它提供了一种封装代码的方式，用一组指定的参数和一个可选的返回值实现了某种功能。然后，可以在程序中不同的地方调用这个函数。</p>
<p>假设过程P调用过程Q，Q执行完成后返回P，这些动作包括下面的一个或多个机制：</p>
<ul>
<li>传递控制：从P进入过程Q的时候，程序计数器需要设置为Q代码的起始地址，然后返回时将程序计数器设置为P中进入Q的下一条指令</li>
<li>传递数据：P向Q提供参数，Q向P返回值</li>
<li>分配和释放内存：在执行Q时，Q为局部变量分配空间，而在返回时必须释放这些空间。</li>
</ul>
<p>在汇编中，转移控制使用如下两个指令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">call	Label 	&#x2F;&#x2F;过程调用</span><br><span class="line">ret			  	&#x2F;&#x2F;从过程调用中返回</span><br></pre></td></tr></table></figure>
<h2 id="运行时栈"><a class="markdownIt-Anchor" href="#运行时栈"></a> 运行时栈</h2>
<p>C语言过程调用机制的一个关键特性在于使用了栈数据结构提供的后进先出的内存管理原则。在过程P调用过程Q的例子中，当Q在执行时，P以及所有在向上追溯到P的调用链中的过程，都是暂时被挂起的。当Q运行时，它只需要为局部变量分配新的存储空间，或者设置到另一个过程的调用。另一方面，当Q返回时，任何它所分配的局部存储空间都可以被释放。</p>
<p>因此，程序可以用栈来管理它的过程所需要的存储空间，栈和程序寄存器存放着传递控制和数据、分配内存所需要的信息。当P调用Q时，控制和数据信息添加到栈尾。当P返回时，这些信息会释放掉。</p>
<p>栈帧结构如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201104232939.jpg" alt="栈结构" /></p>
<p>x86-64 过程能够递归地调用它们自身。每个过程调用在栈中都有它自己的私有空间，因此多个未完成调用的局部变量不会相互影响。此外，栈的原则很自然地就提供了适当的策略，当过程被调用时分配局部存储，当返回时释放存储。这种实现函数调用和返回的方法甚至对更复杂的情况也适用，包括相互递归调用。</p>
<p>如果一些函数需要的局部存储是变长的，则使用寄存器%rbp作为帧指针（基指针），从而在栈上灵活地分配空间。</p>
<h2 id="栈上的局部存储"><a class="markdownIt-Anchor" href="#栈上的局部存储"></a> 栈上的局部存储</h2>
<p>在一些情况下，局部数据必须存放在内存中，如：</p>
<ul>
<li>寄存器不足够存放本地数据</li>
<li>对一个局部变量使用地址运算符 &amp;</li>
<li>某些局部变量是数组或结构</li>
</ul>
<h2 id="过程调用中的寄存器使用"><a class="markdownIt-Anchor" href="#过程调用中的寄存器使用"></a> 过程调用中的寄存器使用</h2>
<p>大部分过程间的数据传送是通过寄存器的，当过程P调用过程Q时，P的代码必须首先把参数复制到适当的寄存器中。类似地，当Q返回到P时，P的代码可以访问寄存器%rax中的返回值。</p>
<p>在x86-64中，通过寄存器可以最多传递6个参数，而且这些寄存器的使用是有顺序的。多于6个的参数通过栈来传递。</p>
<table>
<thead>
<tr>
<th style="text-align:center">操作数大小(位)</th>
<th style="text-align:center">1</th>
<th style="text-align:center">2</th>
<th style="text-align:center">3</th>
<th style="text-align:center">4</th>
<th style="text-align:center">5</th>
<th style="text-align:center">6</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">64</td>
<td style="text-align:center">%rdi</td>
<td style="text-align:center">%rsi</td>
<td style="text-align:center">%rdx</td>
<td style="text-align:center">%rcx</td>
<td style="text-align:center">%r8</td>
<td style="text-align:center">%r9</td>
</tr>
<tr>
<td style="text-align:center">32</td>
<td style="text-align:center">%edi</td>
<td style="text-align:center">%esi</td>
<td style="text-align:center">%edx</td>
<td style="text-align:center">%ecx</td>
<td style="text-align:center">%r8d</td>
<td style="text-align:center">%r9d</td>
</tr>
<tr>
<td style="text-align:center">16</td>
<td style="text-align:center">%di</td>
<td style="text-align:center">%si</td>
<td style="text-align:center">%dx</td>
<td style="text-align:center">%cx</td>
<td style="text-align:center">%r8w</td>
<td style="text-align:center">%r9w</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td style="text-align:center">%dil</td>
<td style="text-align:center">%sil</td>
<td style="text-align:center">%dl</td>
<td style="text-align:center">%cl</td>
<td style="text-align:center">%r8b</td>
<td style="text-align:center">%r9b</td>
</tr>
</tbody>
</table>
<p>被调用者保存寄存器：%rbx, %rbp, %r12~%r15，当过程P调用过程Q时，Q必须保存这些寄存器的值。过程Q保存一个寄存器的值不变，要么就是根本不去改变它，要么就是把原始值压人栈中，改变寄存器的值，然后在返回前从栈中弹出旧值。</p>
<p>调用者保存寄存器，除了%rbx, %rbp, %r12~%r15和%rsp之外所有其他的寄存器，在过程P调用过程Q之后，Q可以随意修改这些寄存器，因此P需要在调用Q之前妥善处理这些寄存器中的值。</p>
<p>对于任何大于8字节，或者不是1、2、4、8字节的参数，都通过地址传递的方式来传递参数。</p>
<h2 id="过程中的浮点代码"><a class="markdownIt-Anchor" href="#过程中的浮点代码"></a> 过程中的浮点代码</h2>
<p>XMM寄存器用于向函数传递浮点参数，以及从函数返回浮点值，需要满足如下规则：</p>
<ul>
<li>XMM寄存器%xmm0~%xmm7最多可以传递8个浮点参数，按照0~7的顺序使用，额外的浮点参数通过栈传递</li>
<li>函数使用寄存器%xmm0来返回浮点值</li>
<li>所有的XMM寄存器都是调用者保存的，被调用者可以任意使用</li>
<li>注意指向浮点数指针使用通用寄存器传递</li>
</ul>
<h1 id="数据结构的汇编代码"><a class="markdownIt-Anchor" href="#数据结构的汇编代码"></a> 数据结构的汇编代码</h1>
<h2 id="数组"><a class="markdownIt-Anchor" href="#数组"></a> 数组</h2>
<p>对于简单的一位数组<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mtext> </mtext><mi>A</mi><mo stretchy="false">[</mo><mi>N</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">T~A[N]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mspace nobreak"> </span><span class="mord mathdefault">A</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">]</span></span></span></span> ，起始位置为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">x_{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。这一声明在内存中分配了一段连续区域，同时引入标识符<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>，可以用来作为指向<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">x_{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的指针，数组元素便被存放在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>A</mi></msub><mo>+</mo><mi>L</mi><mo>⋅</mo><mi>i</mi><mtext> </mtext><mo stretchy="false">(</mo><mn>0</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>N</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_{A}+L\cdot i~(0\le i\le N-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">i</span><span class="mspace nobreak"> </span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79549em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>的位置。</p>
<p>假设T为int类型，要访问<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">A[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span></span></span></span>，假设%rdx存放的是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>的地址，%rcx存放的是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>的值，则对应的汇编代码为movl (%rdx,%rcx,4),%eax。这一表达式等同于* (A+i)</p>
<p>多维数组可看作是多个一维数组的嵌套，对于数组T D[R][C]，数组元素D[i][j]的内存地址为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">&amp;</mi><mi>D</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><msub><mi>x</mi><mi>D</mi></msub><mo>+</mo><mi>L</mi><mo stretchy="false">(</mo><mi>C</mi><mo>⋅</mo><mi>i</mi><mo>+</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\&amp; D[i][j]=x_{D}+L(C\cdot i+j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">&amp;</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>. 假设从数组int A[5][3]中取元素A[i][j]，其对应的汇编代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A in %rdi, i in %rsi, and j in %rdx</span><br><span class="line">leaq (%rsi,%rsi,2),%rax		&#x2F;&#x2F;Compute 3i</span><br><span class="line">leaq (%rdi,%rax,4),%rax		&#x2F;&#x2F;Compute xA+12i</span><br><span class="line">movl (%rax,%rdx,4),%eax		&#x2F;&#x2F;Read from M[xA+12i+4j]</span><br></pre></td></tr></table></figure>
<p>对于定长数组，编译器可能会对数组的操作自动做一些优化，从而减少数组索引时的乘法运算</p>
<h2 id="异质数据结构"><a class="markdownIt-Anchor" href="#异质数据结构"></a> 异质数据结构</h2>
<h3 id="结构体"><a class="markdownIt-Anchor" href="#结构体"></a> 结构体</h3>
<p>类似于数组的实现，结构的所有组成部分都存放在内存中一段连续的区域内，而指向结构的指针就是结构第一个字节的地址。编译器维护关于每个结构类型的信息，指示每个字段(field)的字节偏移。要产生一个指向结构内部对象的指针，我们只需将结构的地址加上该字段的偏移量。</p>
<h3 id="联合"><a class="markdownIt-Anchor" href="#联合"></a> 联合</h3>
<p>联合提供了一种方式，能够规避C 语言的类型系统，允许以多种类型来引用一个对象。联合声明的语法与结构的语法一样，只不过语义相差比较大。它们是用不同的字段来引用相同的内存块。</p>
<p>对于联合类型的指针，引用的都是数据结构的起始指针，同时一个联合总的大小等于它最大字段的大小。</p>
<h3 id="数据对齐"><a class="markdownIt-Anchor" href="#数据对齐"></a> 数据对齐</h3>
<p>许多计算机系统对基本数据类型的合法地址做出了一些限制，要求某种类型对象的地址必须是某个值K( 通常是2、4 或8)的倍数。这种对齐限制简化了形成处理器和内存系统之间接口的硬件设计。</p>
<p>无论数据是否对齐，X86-64硬件都能正确工作。不过，Intel还是建议要对齐数据以提高内存系统的性能。对齐原则是任何K字节的基本对象的地址必须是K的倍数。但是对于多媒体操作的SSE指令需要对齐操作，否则无法执行。</p>
<h1 id="数学运算"><a class="markdownIt-Anchor" href="#数学运算"></a> 数学运算</h1>
<h2 id="整数-3"><a class="markdownIt-Anchor" href="#整数-3"></a> 整数</h2>
<h3 id="算数和逻辑操作"><a class="markdownIt-Anchor" href="#算数和逻辑操作"></a> 算数和逻辑操作</h3>
<ol>
<li>
<p>加载有效地址</p>
<p>leaq：mov指令的变形，它的指令形式是从内存读取数据到寄存器。但是它实际上并没有引用内存，而是将有效地址写入到操作数，可以理解为C++中的&amp;操作</p>
<p>可以使用leaq指令完成一些简单的算术操作</p>
</li>
<li>
<p>一元和二元操作</p>
<p>常见的一元操作：</p>
<table>
<thead>
<tr>
<th style="text-align:center">指令</th>
<th style="text-align:center">操作</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">inc D</td>
<td style="text-align:center">自增1</td>
</tr>
<tr>
<td style="text-align:center">dec D</td>
<td style="text-align:center">自减1</td>
</tr>
<tr>
<td style="text-align:center">neg D</td>
<td style="text-align:center">自身取负</td>
</tr>
<tr>
<td style="text-align:center">not D</td>
<td style="text-align:center">自身取非</td>
</tr>
</tbody>
</table>
<p>常见的二元操作：</p>
<table>
<thead>
<tr>
<th style="text-align:center">操作</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">add S, D</td>
<td style="text-align:center">D←D+S</td>
</tr>
<tr>
<td style="text-align:center">sub S, D</td>
<td style="text-align:center">D←D-S</td>
</tr>
<tr>
<td style="text-align:center">imul S, D</td>
<td style="text-align:center">D←D*S</td>
</tr>
<tr>
<td style="text-align:center">xor S, D</td>
<td style="text-align:center">D←D^S</td>
</tr>
<tr>
<td style="text-align:center">and S, D</td>
<td style="text-align:center">D←D&amp;S</td>
</tr>
<tr>
<td style="text-align:center">or S, D</td>
<td style="text-align:center">D←D</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>移位操作</p>
<table>
<thead>
<tr>
<th style="text-align:center">操作</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">SAL k, D</td>
<td style="text-align:center">D←D&lt;&lt;k 算数左移</td>
</tr>
<tr>
<td style="text-align:center">SHL k, D</td>
<td style="text-align:center">D←D&lt;&lt;k 逻辑左移</td>
</tr>
<tr>
<td style="text-align:center">SAR k, D</td>
<td style="text-align:center">D←D&gt;&gt;(A)k 算数右移</td>
</tr>
<tr>
<td style="text-align:center">SHR k, D</td>
<td style="text-align:center">D←D&gt;&gt;(L)k 逻辑右移</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>特殊的算数操作</p>
<table>
<thead>
<tr>
<th style="text-align:center">操作</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">imulq S</td>
<td style="text-align:center">有符号全乘法 R[%rdx]:R[%rax]←S*R[%rax] （%rdx存放高64位，%rax存放低64位）</td>
</tr>
<tr>
<td style="text-align:center">mulq S</td>
<td style="text-align:center">无符号全乘法 R[%rdx]:R[%rax]←S*R[%rax] （%rdx存放高64位，%rax存放低64位）</td>
</tr>
<tr>
<td style="text-align:center">clto</td>
<td style="text-align:center">R[%rdx]:R[%rax]←符号扩展R[%rax]，将其转换为8位</td>
</tr>
<tr>
<td style="text-align:center">idivq S</td>
<td style="text-align:center">有符号除法 R[%rdx]←R[%rdx]:R[%rax] mod S, R[%rax]←R[%rdx]:R[%rax] / S</td>
</tr>
<tr>
<td style="text-align:center">divq S</td>
<td style="text-align:center">无符号除法 R[%rdx]←R[%rdx]:R[%rax] mod S, R[%rax]←R[%rdx]:R[%rax] / S</td>
</tr>
</tbody>
</table>
</li>
</ol>
<p>在生成汇编语言时，一些编译器会使用lea和左移/右移指令对算数操作做优化；同时一些除法操作可能会使用magic number将其转换为乘法和移位等操作的组合。</p>
<h2 id="浮点数-3"><a class="markdownIt-Anchor" href="#浮点数-3"></a> 浮点数</h2>
<h3 id="浮点运算操作"><a class="markdownIt-Anchor" href="#浮点运算操作"></a> 浮点运算操作</h3>
<p>下表中的每条指令都有一个或两个源操作数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">S_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">S_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和目的操作数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>.  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">S_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>可以是一个XMM寄存器或内存位置，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">S_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>必须是XMM寄存器，结果存放在目的寄存器中。对应于每一种计算都有单精度和双精度两种指令。</p>
<table>
<thead>
<tr>
<th style="text-align:center">单精度</th>
<th style="text-align:center">双精度</th>
<th style="text-align:center">效果</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">vaddss</td>
<td style="text-align:center">vaddsd</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mo>←</mo><msub><mi>S</mi><mn>2</mn></msub><mo>+</mo><msub><mi>S</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">D\leftarrow S_2+S_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center">浮点数加</td>
</tr>
<tr>
<td style="text-align:center">vsubss</td>
<td style="text-align:center">vsubsd</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mo>←</mo><msub><mi>S</mi><mn>2</mn></msub><mo>−</mo><msub><mi>S</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">D\leftarrow S_2-S_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center">浮点数减</td>
</tr>
<tr>
<td style="text-align:center">vmulss</td>
<td style="text-align:center">vmulsd</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mo>←</mo><msub><mi>S</mi><mn>2</mn></msub><mo>⋅</mo><msub><mi>S</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">D\leftarrow S_2\cdot S_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center">浮点数乘</td>
</tr>
<tr>
<td style="text-align:center">vdivss</td>
<td style="text-align:center">vdivsd</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mo>←</mo><msub><mi>S</mi><mn>2</mn></msub><mi mathvariant="normal">/</mi><msub><mi>S</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">D\leftarrow S_2/S_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center">浮点数除</td>
</tr>
<tr>
<td style="text-align:center">vmaxss</td>
<td style="text-align:center">vmaxsd</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mo>←</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>S</mi><mn>2</mn></msub><mi mathvariant="normal">，</mi><msub><mi>S</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D\leftarrow max(S_2，S_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center">浮点数最大值</td>
</tr>
<tr>
<td style="text-align:center">vminss</td>
<td style="text-align:center">vminsd</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mo>←</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><msub><mi>S</mi><mn>2</mn></msub><mi mathvariant="normal">，</mi><msub><mi>S</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D\leftarrow min(S_2，S_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td>
<td style="text-align:center">浮点数最小值</td>
</tr>
<tr>
<td style="text-align:center">sqrtss</td>
<td style="text-align:center">sqrtsd</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mo>←</mo><msqrt><msub><mi>S</mi><mn>1</mn></msub></msqrt></mrow><annotation encoding="application/x-tex">D\leftarrow \sqrt{S_1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.18833500000000003em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.851665em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.811665em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,
-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,
-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,
35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,
-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467
s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422
s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.18833500000000003em;"><span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center">浮点数平方根</td>
</tr>
</tbody>
</table>
<h3 id="浮点位级操作"><a class="markdownIt-Anchor" href="#浮点位级操作"></a> 浮点位级操作</h3>
<table>
<thead>
<tr>
<th style="text-align:center">单精度</th>
<th style="text-align:center">双精度</th>
<th style="text-align:center">效果</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">vxorps</td>
<td style="text-align:center">vorpd</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mo>←</mo><msub><mi>S</mi><mn>2</mn></msub><mtext> </mtext><mi>x</mi><mi>o</mi><mi>r</mi><mtext> </mtext><msub><mi>S</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">D \leftarrow S_{2}~xor~ S_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord mathdefault">x</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center">位级异或(EXCLUSIVE-OR)</td>
</tr>
<tr>
<td style="text-align:center">vandps</td>
<td style="text-align:center">andpd</td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mo>←</mo><msub><mi>S</mi><mn>2</mn></msub><mi mathvariant="normal">&amp;</mi><msub><mi>S</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">D \leftarrow S_2\&amp;S_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">&amp;</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td style="text-align:center">位级与(AND)</td>
</tr>
</tbody>
</table>
<h1 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h1>
<h2 id="指针"><a class="markdownIt-Anchor" href="#指针"></a> 指针</h2>
<ul>
<li>
<p>每个指针都对应于一个数据类型：这一类型表面了指针指向的对象</p>
</li>
<li>
<p>每个指针都有一个值：这个值是某个指定类型对象的内存地址</p>
</li>
<li>
<p>指针用&amp;运算符创建：这一运算符可以用于任何的左值（出现于赋值语句左侧）类型数据</p>
</li>
<li>
<p>*操作符用于间接引用指针：通过内存引用，存储到指针指向的地址，或是从指针指向的地址读取</p>
</li>
<li>
<p>数组与指针紧密联系</p>
</li>
<li>
<p>将指针进行强制类型转换，只改变它的类型，不改变它的值</p>
</li>
<li>
<p>指针可以指向函数，函数指针的值是这一函数机器代码中第一条指令的地址</p>
</li>
</ul>
<h2 id="内存越界引用与缓冲区溢出"><a class="markdownIt-Anchor" href="#内存越界引用与缓冲区溢出"></a> 内存越界引用与缓冲区溢出</h2>
<p>C对于数组引用不进行任何边界检查，而且局部变量和状态信息（例如保存的寄存器值和返回地址）都存放在栈中。</p>
<p>数组越界的操作被称为缓冲区溢出，对越界的数组元素的写操作会破坏存储在栈中的状态信息。</p>
<p>此外，缓冲区溢出可能会使程序执行它本来不愿意执行的函数，这会导致系统的安全受到影响</p>
<h3 id="对抗缓冲区溢出攻击"><a class="markdownIt-Anchor" href="#对抗缓冲区溢出攻击"></a> 对抗缓冲区溢出攻击</h3>
<ul>
<li>栈随机化：栈的位置在每次程序运行时都发生变化。在linux系统中，它已经变成了标准行为，属于地址空间布局随机化技术中的一种。地址空间布局随机化使得每次运行时程序的不同部分都会被加载到内存的不同区域。</li>
<li>栈破坏检测：在栈帧中的局部缓冲区与栈状态之间存入一个特殊的哨兵值，这个值是程序每次运行时随机产生的。如果这个值改变则程序异常终止。</li>
<li>限制可执行代码区域：一些硬件和系统会为内存区域提供保护措施。</li>
</ul>
<h1 id="64位与32位汇编的不同"><a class="markdownIt-Anchor" href="#64位与32位汇编的不同"></a> 64位与32位汇编的不同</h1>
<h2 id="寄存器的不同"><a class="markdownIt-Anchor" href="#寄存器的不同"></a> 寄存器的不同</h2>
<p>64位有16个寄存器，32位只有8个。但是32位前8个都有不同的命名，分别是e _ ，而64位前8个使用了r代替e，也就是r _。e开头的寄存器命名依然可以直接运用于相应寄存器的低32位。而剩下的寄存器名则是从r8 - r15，其低位分别用d，w，b指定长度。</p>
<h2 id="过程函数调用的不同"><a class="markdownIt-Anchor" href="#过程函数调用的不同"></a> 过程（函数）调用的不同</h2>
<ol>
<li>参数通过寄存器传递（见前文）</li>
<li>callq 在栈里存放一个8位的返回地址</li>
<li>许多函数不再有栈帧，只有无法将所有本地变量放在寄存器里的才会在栈上分配空间。</li>
<li>函数可以获取到栈至多128字节的空间。这样函数就可以在不更改栈指针的情况下在栈上存储信息（也就是说，可以提前用rsp以下的128字节空间，这段空间被称为red zone，在x86-64里，时刻可用）</li>
<li>不再有栈帧指针。现在栈的位置和栈指针相关。大多数函数在调用的一开始就分配全部所需栈空间，之后保持栈指针不改变。</li>
<li>一些寄存器被设计成为被调用者-存储的寄存器。这些必须在需要改变他们值的时候存储他们并且之后恢复他们。</li>
</ol>
<h2 id="参数传递的不同"><a class="markdownIt-Anchor" href="#参数传递的不同"></a> 参数传递的不同</h2>
<ol>
<li>6个寄存器用来传递参数（见前文）。</li>
<li>剩下的寄存器按照之前的方式传递（不过是与rsp相关了，ebp不再作为栈帧指针，并且从rsp开始第7个参数，rsp+8开始第8个，以此类推）。</li>
<li>调用时，rsp向下移动8位（存入返回地址），寄存器参数无影响，第7个及之后的参数现在则是从rsp+8开始第7个，rsp+16开始第8个，以此类推。</li>
</ol>
<h2 id="栈帧的不同"><a class="markdownIt-Anchor" href="#栈帧的不同"></a> 栈帧的不同</h2>
<p>很多情况下不再需要栈帧，比如在没有调用别的函数，且寄存器足以存储参数，那么就只需要存储返回地址即可。<br />
需要栈帧的情况：</p>
<ol>
<li>本地变量太多，寄存器不够</li>
<li>一些本地变量是数组或结构体</li>
<li>函数使用了取地址操作符来计算一个本地变量的地址</li>
<li>函数必须用栈传送一些参数给另外一个函数</li>
</ol>
<p>函数需要保存一些由被调用者存储的寄存器的状态（以便于恢复），但是现在的栈帧经常是固定大小的，在函数调用的最开始就被设定，在整个调用期间，栈顶指针保持不变，这样就可以通过对其再加上偏移量来对相应的值进行操作，于是EBP就不再需要作为栈帧指针了。虽然很多时候我们认为没有“栈帧”，但是每次函数调用都一定有一个返回地址被压栈，我们可以也认为这一个地址就是一个“栈帧”，因为它也保存了调用者的状态。</p>
<h1 id="备注"><a class="markdownIt-Anchor" href="#备注"></a> 备注</h1>
<p>本文的汇编代码格式为==<strong>ATT格式</strong>==，在一些地方也会看到intel格式的汇编代码，二者的主要区别包括：</p>
<ul>
<li>
<p>Intel代码省略了指示大小的后缀，ATT语法中内存操作数的长度（宽度）由操作码最后一个字符来确定。Intel语法则通过在内存操作数前使用前缀‘byte ptr’，‘word ptr’，‘dword ptr’和’qword ptr’来达到同样的目的。</p>
</li>
<li>
<p>Intel代码省略了寄存器名字前面的‘%’符号，ATT格式中寄存器操作数名前要加字符百分号’%’。例如intel格式用的是esp，而ATT格式为%esp。</p>
</li>
<li>
<p>Intel立即数(immediate),也就是常数值，不使用前缀’$’；ATT语法中立即数前面加一个字符’$’。如，intel格式的十进制数123，而ATT格式为$123；intel格式的十六进制数123h，ATT格式为是$0x123；</p>
</li>
<li>
<p>Intel指令一般使用从右到左的顺序，而ATT使用从左到右，如Intel是 mov dst, src，而ATT是 mov src, dst</p>
</li>
<li>
<p>ATT格式中，绝对跳转/调用操作数前面要加星号’*’，而Intel汇编语法没有这一限制。</p>
</li>
<li>
<p>AT&amp;T汇编器不提供对多代码段程序的支持</p>
</li>
<li>
<p>Intel代码与ATT代码用不同的方式来描述寄存器中的位置，具体为：</p>
<p>Intel:  segreg:[base+index*scale+disp]<br />
ATT：%segreg:disp(base,index,scale)</p>
</li>
</ul>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<div id="ref-anchor-1"></div> [1] 深入理解计算机系统 
<div id="refer-anchor-2"></div> [2] 王爽  汇编语言
<p>[3] <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MzQzMjAxL2FydGljbGUvZGV0YWlscy81MTI3ODc5OA==">64位和32位寄存器与汇编的比较<i class="fa fa-external-link-alt"></i></span></p>
<p>[4] [IATT与Intel汇编代码格式][<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2dvb2Rjcm9ueS9hcnRpY2xlL2RldGFpbHMvOTI3OTQ5Mzg=">https://blog.csdn.net/goodcrony/article/details/92794938<i class="fa fa-external-link-alt"></i></span>]</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
        <category>汇编语言</category>
      </categories>
      <tags>
        <tag>计算机组成原理</tag>
        <tag>汇编语言</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机网络-传输层</title>
    <url>/2021/01/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E4%BC%A0%E8%BE%93%E5%B1%82/</url>
    <content><![CDATA[<h1 id="传输层服务"><a class="markdownIt-Anchor" href="#传输层服务"></a> 传输层服务</h1>
<h2 id="进程到进程通信"><a class="markdownIt-Anchor" href="#进程到进程通信"></a> 进程到进程通信</h2>
<p>传输层位于应用层和网络层之间，它在两个应用层之间提供进程到进程的通信，两个进程分别位于本地和远程主机上。</p>
<p>注意：网络层负责的是计算机层次的通信（即主机到主机），但是网络层协议只是把报文传递到目的计算机。由于报文需要递交给正确的进程，而这一部分正是传输层负责的部分。</p>
<a id="more"></a>
<h2 id="寻址端口号"><a class="markdownIt-Anchor" href="#寻址端口号"></a> 寻址：端口号</h2>
<p>一个远程计算机在同一时间可以运行多个服务器程序。因此在通信过程中，我们需要定义本地主机、本地进程、远程主机和远程进程。本地主机和远程主机使用IP地址来定义，而本地进程和远程进程则是通过<strong>端口号</strong>来定义的。在TCP/IP协议簇中，端口号是0~65536之间的16位整数。</p>
<p>客户程序一般使用临时端口号来定义它自己，临时表明这个端口号是短期的。为了客户-服务器程序可以正常工作，临时端口号推荐值为大于1023。</p>
<p>对于服务器而言，TCP/IP协议使用全局端口号，它们被称为熟知端口号。但是这一条规则也有例外，例如一些客户端也可能被分配熟知端口号。</p>
<p>ICANN将端口号编码划分为如下的三个范围：</p>
<ul>
<li>熟知端口：端口号范围0~1023，由ICANN分配和控制</li>
<li>注册端口：端口号范围1024~49151，ICANN不分配也不控制，它们可在ICANN注册以防止重复</li>
<li>动态端口：端口号范围49152~65535，这一范围内的端口号即不受控制也不需要注册，可以由任何进程使用。它们是临时或者私有端口号。</li>
</ul>
<p>一个IP地址和一个端口号结合起来被称为<strong>套接字地址</strong>，客户套接字地址唯一定义了客户进程，而服务器套接字地址唯一定义了服务器进程。</p>
<h2 id="封装与解封装"><a class="markdownIt-Anchor" href="#封装与解封装"></a> 封装与解封装</h2>
<p>为了将报文从一个进程发送到另一个进程，传输层协议负责封装和解封装报文。封装在发送端发生，当进程有报文要发送，它将报文与一组套接字地址和其他信息一起发送到传输层，这依赖于传输层协议。传输层接收这些数据并加入到传输层头部。</p>
<p>解封装发生在接收端。当报文到达目的传输层，头部被丢弃，传输层将报文传递到应用层运行的进程。如果需要响应接收到的报文，发送方的套接字地址被发送到进程。</p>
<h2 id="多路复用与多路分解"><a class="markdownIt-Anchor" href="#多路复用与多路分解"></a> 多路复用与多路分解</h2>
<p><strong>多路复用</strong>指的是一个实体从一个以上的源接收到数据项，源端的传输层执行复用。例如一个用户将不同进程的请求发送到对应的服务器进程。</p>
<p><strong>多路分解</strong>指的是一个实体将数据项传递到一个以上的源，目的端的传输层执行多路分解。例如一个服务器接收到应该分发给不同进程的请求。</p>
<h2 id="流量控制"><a class="markdownIt-Anchor" href="#流量控制"></a> 流量控制</h2>
<p>每当一个实体创建数据项并且有另一个实体消耗它们时，就存在生产速率和消费速率的平衡问题。流量控制主要是解决数据项的生产比消费快的问题。</p>
<h3 id="推或拉"><a class="markdownIt-Anchor" href="#推或拉"></a> 推或拉</h3>
<p>发送方生产数据项时，它无需事先获得消费者请求就发送，这种传递被称为推；如果生产者在消费者请求这些数据时才进行传送，这种传递被称为拉。</p>
<p>当生产者<strong>推</strong>数据项时，消费者需要相反方向的流量控制，以此来防止丢弃这些数据项。因此消费者需要告诉生产者停止传递，并且当它再次准备好接受数据时通知生产者。当消费者拉数据项时则不需要流量控制。</p>
<h3 id="传输层流量控制"><a class="markdownIt-Anchor" href="#传输层流量控制"></a> 传输层流量控制</h3>
<p>传输层通信中，四个实体的关系如下：</p>
<ul>
<li>发送方的应用层是一个生产者，它生产报文块并推给传输层</li>
<li>发送方传输层既是生产者又是消费者，它消费来自于应用层的报文块，同时有奖报文封装并传给接收方传输层</li>
<li>接收方传输层既是生产者又是消费者，它消费从发送方接收来的分组，同时解封装报文并传给应用层</li>
<li>接收方的应用层通常使用拉传递，传输层等待应用层进程请求报文，它是一个消费者</li>
</ul>
<p>因此，这一过程至少需要两种流量控制：从发送方传输层到发送方应用层的流量控制，以及接收方传输层到发送方传输层的流量控制。</p>
<h3 id="缓冲区"><a class="markdownIt-Anchor" href="#缓冲区"></a> 缓冲区</h3>
<p>流量控制通常使用缓冲区来实现，一个位于发送方传输层，另一个位于接收方传输层（也就是说缓冲区位于消费者处）。消费者向生产者发送信号从而进行流量控制通信，当缓冲区满的时候，通知生产者停止传输；当有空闲位置的时候，通知生产者可以再次传输。</p>
<h2 id="差错控制"><a class="markdownIt-Anchor" href="#差错控制"></a> 差错控制</h2>
<p>在因特网中，网络层是不可靠的，应用层的可靠性是通过传输层来实现的。传输层的差错控制通过负责以下几个方面来实现可靠性：</p>
<ul>
<li>发现并丢弃被破坏的分组</li>
<li>记录丢失和丢弃的分组并重传</li>
<li>识别重复分组并丢弃</li>
<li>缓冲失序分组直到丢失的分组到达</li>
</ul>
<p>大多数情况下，接收方传输层管理差错控制，它通过告知发送方传输层存在问题来进行管理。</p>
<h3 id="序号"><a class="markdownIt-Anchor" href="#序号"></a> 序号</h3>
<p>可以在传输层分组中加入一个字段来保存分组的序号。当分组被破坏或者丢失，接收方传输层可以按照某种方式通知发送方传输层利用序号来重传分组；如果两个接收到的分组具有相同序号，接收方传输层可以发现重复分组；可以通过观察序号间隔来辨别失序分组。</p>
<p>分组一般按序编号，假设分组头部允许序号最多为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>比特位，那么所有的序号都是模<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>m</mi></msup></mrow><annotation encoding="application/x-tex">2^m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span></span></span></span></span></span></span>的。</p>
<h3 id="确认"><a class="markdownIt-Anchor" href="#确认"></a> 确认</h3>
<p>接收方可以为每一组正确到达的分组发送一个确认（ACK）。当一个分组被发送，发送方就开启一个计时器，如果ACK在计时器超时之前没有到达，那么发送方就重新发送这个分组。重复的分组可以被接收方默默丢弃；失序的分组既可以被丢弃，也可以存储直到丢失的那个分组被传输过来。</p>
<h3 id="流量和差错控制的组合"><a class="markdownIt-Anchor" href="#流量和差错控制的组合"></a> 流量和差错控制的组合</h3>
<p>由于流量控制要求使用两个缓冲区，一个在发送端另一个在接收端；而差错控制也要求两端使用序号和确认号。因此如果我们使用两个带有序号的缓冲区，一个位于发送端，一个位于接收端，便可将流量控制与差错控制功能结合起来。</p>
<p>在发送端，当分组准备发送时，我们使用下一个缓冲区空闲位置号码<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>作为分组的序号；当分组被发送，一个分组的备份存储在位置<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>，直到与被发送分组相关的确认信息到达时，将这一位置清除出来。</p>
<p>在接收端，当带有序号<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>的分组到达时，它也被存储在缓冲区的位置<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>上，直到应用层准备好接收它。此时发送一个确认表明分组<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>到达。</p>
<h2 id="拥塞控制"><a class="markdownIt-Anchor" href="#拥塞控制"></a> 拥塞控制</h2>
<p>如果网络中的复杂大于网络的容量，那么网络就可能会发生拥塞。TCP协议提供了拥塞控制机制，它控制拥塞并将负载保持在容量以内。</p>
<h2 id="无连接和面向连接服务"><a class="markdownIt-Anchor" href="#无连接和面向连接服务"></a> 无连接和面向连接服务</h2>
<h3 id="无连接服务"><a class="markdownIt-Anchor" href="#无连接服务"></a> 无连接服务</h3>
<p>在无连接服务中，源进程需要将报文分成传输层可接受大小的数据块，并把它们一个个地传递到传输层。传输层将每一个数据块看作彼此没有关系的单元，因此，它们可能会失序地传递给服务器进程。</p>
<p>流量控制、差错控制以及拥塞控制都不能在无连接服务中有效实现。</p>
<h3 id="面向连接服务"><a class="markdownIt-Anchor" href="#面向连接服务"></a> 面向连接服务</h3>
<p>在面向连接的服务中，首先需要建立客户和服务器之间的逻辑连接。只有连接建立之后才能进行数据交换。在数据交换之后，连接需要拆除。</p>
<p>在面向连接协议中，可以实现流量控制、差错控制以及拥塞控制。</p>
<h1 id="udp协议"><a class="markdownIt-Anchor" href="#udp协议"></a> UDP协议</h1>
<h2 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h2>
<p>用户数据报协议（User Datagram Protocol, UDP）是无连接不可靠传输层协议。它不提供主机到主机通信，它除了提供进程到进程之间的通信之外没有给IP服务增加任何内容。此外它进行非常有限的差错检验。</p>
<p>UDP是一个简单的协议，开销很小。如果一个进程想发送一个很短的报文，而且不在意可靠性，就可以使用UDP。使用UDP发送一个很短的报文，在发送方和接收方之间的交互要比使用TCP时少得多。</p>
<h2 id="用户数据报"><a class="markdownIt-Anchor" href="#用户数据报"></a> 用户数据报</h2>
<p>UDP分组被称为用户数据报，有8个字节的固定头部，这个头部由4个字段组成，每个字段2字节。头两个字段定义了源和目的端口号，第三个字段定义了用户数据报的总长，即头部加数据的长度。16位可以定义的总长度范围是0~65535，但是因为UDP数据报需要存储在总长度为65535的IP数据报中，因此总长度需要更小一些。最后一个字段可以携带可选校验和。一个UDP用户数据报的结构如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201201232153.png" alt="UDP数据报" /></p>
<h2 id="udp服务"><a class="markdownIt-Anchor" href="#udp服务"></a> UDP服务</h2>
<h3 id="进程到进程的通信"><a class="markdownIt-Anchor" href="#进程到进程的通信"></a> 进程到进程的通信</h3>
<p>UDP使用套接字地址提供进程到进程的通信，这是IP地址与端口号的组合。</p>
<h3 id="无连接服务-2"><a class="markdownIt-Anchor" href="#无连接服务-2"></a> 无连接服务</h3>
<p>UDP提供无连接服务，这表示UDP发送出去的每一个用户数据报都是一个独立的数据报。即使这些数据报来自于相同的源进程并且发送到相同的目的进程，不同的数据报之间也没有关系。用户数据报不进行编号，此外也没有像TCP协议那样的连接建立和终止。</p>
<p>无连接的一个结果就是使用UDP的进程不能向UDP发送数据流，并期望它将这个数据流分割成许多相关联的用户数据报。相反，每一个请求需要足够小以使其可以被装入用户数据报中，因此只有那些发送短报文的进程才应当使用UDP。</p>
<p>UDP没有流量控制，因而也没有窗口机制。如果到来的报文太多时，接收方可能会溢出。因此，如果需要流量控制，这个服务应该由使用UDP的进程来提供。同时，UDP也不提供拥塞控制。UDP假设被发送的分组很小且零星，不会造成拥塞。但是UDP被用作音频和视频的交互实时传输时，这一假设可能不成立。</p>
<h3 id="校验和"><a class="markdownIt-Anchor" href="#校验和"></a> 校验和</h3>
<p>UDP没有差错控制机制，发送方不知道报文是丢失还是重传，仅仅提供了简单的校验和功能。因此如果需要差错控制需要由应用层提供。</p>
<p>UDP的校验和是可选的，如果不计算校验和，则将校验和字段全部填充为0。如果计算校验和时恰巧校验和全部为0，则将它改为全1。这一方法不会产生混淆，因为校验和的值在正常情况下不会全为1。</p>
<h3 id="封装和解封装"><a class="markdownIt-Anchor" href="#封装和解封装"></a> 封装和解封装</h3>
<p>UDP协议提供了报文的封装和解封装功能。</p>
<h3 id="多路复用与多路分解-2"><a class="markdownIt-Anchor" href="#多路复用与多路分解-2"></a> 多路复用与多路分解</h3>
<p>在运行TCP/IP协议簇的主机上只有一个UDP，但可能有多个想使用UDP服务的进程。UDP使用多路复用和多路分解来处理这种情况。</p>
<h2 id="udp应用"><a class="markdownIt-Anchor" href="#udp应用"></a> UDP应用</h2>
<h3 id="udp特性"><a class="markdownIt-Anchor" href="#udp特性"></a> UDP特性</h3>
<p>UDP连接具有的特性以及它们的优势和劣势如下：</p>
<ul>
<li>无连接服务：当客户需要向服务器发送短请求并接收短响应时，这一特性是优势，因为这种情况下建立和关闭连接的开销可能很可观。假设请求和响应各自可以填充进一个数据报时，TCP连接需要至少交换9个分组，而UDP最少只需要2个。同时，无连接服务提供了更小的延迟，如果延迟是应用的重要问题时选择UDP连接更可取。</li>
<li>缺乏差错控制：TCP提供可靠服务，如果报文一部分丢失或被破坏则需要重传。这就意味着接收方传向应用层的不同报文间有不一致的延迟。对于一些应用来说，这一延迟可能至关重要。</li>
<li>缺乏拥塞控制：在一些网络中可能出错的概率较大，如果使用TCP连接需要多次重发，这样便会促使拥塞的发生或者使得拥塞情况加重。因此，一些情况下，这一特性可以看作是优势。</li>
</ul>
<h3 id="典型应用"><a class="markdownIt-Anchor" href="#典型应用"></a> 典型应用</h3>
<ul>
<li>需要简单的请求-响应通信，而较少考虑流量控制和差错控制，例如DNS协议。如果需要传输成块数据的进程如FTP，则通常不适用UDP协议。</li>
<li>适用于应用层实现了内部流量控制和差错控制机制的进程，如TFTP协议。</li>
<li>对于多播来说UDP是一个合适的传输协议。</li>
<li>UDP可用于管理进程，如SNMP协议。</li>
<li>UDP可用于某些路由选择更新协议，如路由选择信息协议（RIP）。</li>
<li>UDP通常用于交互实时应用，如Skype，这些应用无法忍受报文之间的不一致延迟。</li>
</ul>
<h1 id="tcp协议"><a class="markdownIt-Anchor" href="#tcp协议"></a> TCP协议</h1>
<h2 id="概述-2"><a class="markdownIt-Anchor" href="#概述-2"></a> 概述</h2>
<p>传输控制协议（Transmission Control Protocol, TCP）是一个面向连接可靠的协议。TCP显式定义了连接建立、数据传输以及连接拆除阶段来提供面向连接服务。</p>
<h2 id="tcp服务"><a class="markdownIt-Anchor" href="#tcp服务"></a> TCP服务</h2>
<h3 id="进程到进程的通信-2"><a class="markdownIt-Anchor" href="#进程到进程的通信-2"></a> 进程到进程的通信</h3>
<p>与UDP一样，TCP通过使用端口号来提供进程到进程的通信</p>
<h3 id="流传递服务"><a class="markdownIt-Anchor" href="#流传递服务"></a> 流传递服务</h3>
<p>TCP是一个面向流的协议，它允许发送进程以字节流的形式传递数据，并且接收进程也以字节流的形式接收数据。TCP建立一种环境，在这种环境中，两个进程之间类似于有一条假想的“管道”连接，发送进程产生字节流并输入到管道，接收进程从管道中读出这些字节流。</p>
<p>因为发送和接收进程可能以不同的速度写入和读出数据，所以TCP需要用于存储的缓冲区。缓冲区一般使用循环数组来实现。</p>
<p>由于IP层作为TCP服务的提供者，它需要以分组的方式而不是字节流的方式发送数据。因此，在传输层，TCP将多个字节组合在一起成为一个分组，这个分组被称为段，同时给每个段添加头部，并将该段传递给IP层。</p>
<p>上述这一系列流程可以用下图来表示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201201232200.png" alt="TCP缓冲区" /></p>
<h3 id="全双工通信"><a class="markdownIt-Anchor" href="#全双工通信"></a> 全双工通信</h3>
<p>TCP提供全双工服务，即数据可以在同一时间双向流动。每一个方向TCP都有发送和接收缓冲区，它们可以在双向发送和接收段。</p>
<h3 id="多路复用和多路分解"><a class="markdownIt-Anchor" href="#多路复用和多路分解"></a> 多路复用和多路分解</h3>
<p>TCP在发送端执行多路复用，在接收端执行多路分解。由于TCP是一个面向连接的协议，因此需要为每对进程建立连接。</p>
<h3 id="面向连接的服务"><a class="markdownIt-Anchor" href="#面向连接的服务"></a> 面向连接的服务</h3>
<p>TCP是一种面向连接的协议。位于站点A的一个进程和与站点B的另外一个进程想要进行数据的发送和接收时要经过如下三步：</p>
<ol>
<li>在两个TCP之间建立一个连接</li>
<li>在两个方向交换数据</li>
<li>连接终止</li>
</ol>
<p>上述建立的连接是一个逻辑连接，而不是一个物理连接。TCP建立一种面向字节流的环境，在这种环境中，TCP能承担按顺序传递这些字节到其他站点的服务。</p>
<h3 id="可靠的服务"><a class="markdownIt-Anchor" href="#可靠的服务"></a> 可靠的服务</h3>
<p>TCP是一种可靠的传输协议，它使用确认机制来检查数据是否安全和完整地到达。</p>
<h2 id="tcp的特点"><a class="markdownIt-Anchor" href="#tcp的特点"></a> TCP的特点</h2>
<h3 id="序号系统"><a class="markdownIt-Anchor" href="#序号系统"></a> 序号系统</h3>
<h4 id="字节序号"><a class="markdownIt-Anchor" href="#字节序号"></a> 字节序号</h4>
<p>TCP为在一个连接中传输的所有数据字节编号，在每个方向上的序号都是独立的。当TCP接收来自一个进程的数据字节时，TCP将它们存储在发送缓冲区中并给它们编号。在编码时，不必从0开始编码，TCP在0到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>32</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{32}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>之间生成一个随机数作为第一个字节的序号。这些字节序号被用于流量和差错控制。</p>
<h4 id="序号-2"><a class="markdownIt-Anchor" href="#序号-2"></a> 序号</h4>
<p>字节被编号之后，TCP对发送的每一个段也分配一个序号。第一个段的序号是初始随机生成的那个字节序号；其他段的序号是之前段的序号加上之前段携带的字节数。</p>
<h4 id="确认号"><a class="markdownIt-Anchor" href="#确认号"></a> 确认号</h4>
<p>TCP中的通信是全双工的，当建立一个连接时，双方同时都能发送和接收数据。因此，每一方会使用确认号来确认它已经收到的字节。确认号的值是该方向预期接收的下一个字节的序号，如果接收方安全并完整地接收到这一字节的序号，就会将它加1。</p>
<h3 id="tcp分组段"><a class="markdownIt-Anchor" href="#tcp分组段"></a> TCP分组—段</h3>
<h4 id="格式"><a class="markdownIt-Anchor" href="#格式"></a> 格式</h4>
<p>在TCP中的分组被称为段，它包含20~60字节的头部，接着是来自应用程序的数据。如果没有选项，那么头部为20字节；如果有选项则最多是60字节。TCP的段格式如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201201232216.png" alt="TCP段结构" /></p>
<p>一些头部字段的意义如下：</p>
<ul>
<li>源端口地址：一个16位字段，定义了在主机中发送该段的应用程序的端口号。</li>
<li>目的端口地址：一个16位字段，定义了主机中接收该段的应用程序的端口号。</li>
<li>序号：这个32位字段定义了一个数，分配给段中数据的第一个字节。这个序号告诉目的端，在这个序列中的哪一个字节是该段的第一个字节。在连接建立时，每一方都使用随机数产生器生成一个初始序号（Initial Sequence Number, ISN），通常每一个方向的ISN都不同。</li>
<li>确认号：这个32位字段定义了段的接收方期待从对方接收的字节号。如果段的接收方成功地接收了对方发来的字节号x，确认号就被定义为x+1，确认和数据可以捎带一起发送。</li>
<li>头部长度：这个4位字段指明了TCP头部中有多少个4字节长的字。由于头部长度可以在20~60字节之间，因此这个字段的值在5~15之间。</li>
<li>控制：这个字段定义了6种不同的控制位或标记，在同一时间可以设置一位或多位。其中：
<ul>
<li>URG：紧急指针有效</li>
<li>ACK：确认有效</li>
<li>PSH：请求推送</li>
<li>RST：连接复位</li>
<li>SYN：同步序号</li>
<li>FIN：终止连接</li>
</ul>
</li>
<li>窗口大小：定义对方必须维持的窗口的大小（以字节为单位）。这个字段长度为16位，因此窗口的最大长度为65535字节。这个值通常称为接收窗口，它由接收方确定。</li>
<li>校验和：TCP的校验和是强制的，它的计算与UDP相同。</li>
<li>紧急指示符：这个16位字段只有当紧急标志置位时才有效，这个段包含了紧急数据。它定义了一个数，将此数加到序号上就可以得出此段数据部分中最后一个紧急字节。</li>
<li>选项：在TCP头部可以有最多40字节的可选信息。</li>
</ul>
<h4 id="封装"><a class="markdownIt-Anchor" href="#封装"></a> 封装</h4>
<p>一个TCP段封装了来自应用层的数据。TCP段被封装在IP数据报中，IP数据报被封装在数据链路层的帧中。</p>
<h2 id="tcp连接"><a class="markdownIt-Anchor" href="#tcp连接"></a> TCP连接</h2>
<h3 id="连接建立"><a class="markdownIt-Anchor" href="#连接建立"></a> 连接建立</h3>
<p>在TCP中连接的建立被称为<strong>三次握手</strong>。我们假设客户应用程序想要与另一个服务器应用程序之间使用TCP作为传输层协议建立连接。</p>
<p>这一过程从服务器开始，服务器程序会一直处于被动打开状态，准备接收从任何一个用户发过来的连接。当客户程序想要与某个特定服务器进行TCP连接时，它发出请求进行主动打开。接下来，TCP进行三次握手的过程来建立连接，这一过程如下：</p>
<ol>
<li>用户发送的第一个段是SYN段。这个段只有SYN标志被置位，它被用于序号同步。当数据传输开始时，用户随机选择一个数字作为初始序号ISN。SYN段不包含确认号，也没有定义窗口大小。需要注意的是，SYN段是一个控制段并且不携带数据，但是它需要消耗一个序号（因为它需要被确认），因此可以说SYN段携带了一个假想字节。</li>
<li>服务器发送第二个段，即两个标志位SYN和ACK置位的段。这个段有两个目的：首先，它是另一方向通信的SYN段，服务器使用这个段来初始化序号，这个序号用于给从服务器发向客户的字节编号；同时，服务器也通过给ACK置位并展示下一个序号来确认接收到来自客户的SYN段。因为它包含确认，因此也需要定义接收窗口（即rwnd）给客户使用。同时，因为这个段也起到SYN段的作用，它需要被确认，因此它也占用一个序号。</li>
<li>客户发送第三个段。这个段仅仅是一个ACK段。它使用ACK标志和确认序号字段来确认收到了第二个段。如果不携带数据，ACK段没有占用任何序号；也有一些实现允许第三个段在连接阶段从客户端携带第一块数据，这种情况下段消耗的序号与数据字节数相同。</li>
</ol>
<p>上述的过程可以用下图来表示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201201232232.png" alt="TCP三次握手" /></p>
<p>在TCP中，连接建立的过程容易遭受到SYN泛洪攻击的严重安全问题。一个恶意攻击者将大量的SYN段发送到一个服务器，在数据报中通过伪装源IP地址假装这些SYN段来自于不同的客户端。此时，服务器发送SYN+ACK段给这些假客户，但是这些段都会丢失。服务器会等待第三段的握手过程，此时许多资源被占用但是没有被使用。如果在短时间内，SYN段的数量很大，服务器最终会因为耗尽资源而崩溃。一些TCP的实现拥有减轻SYN攻击影响的策略。</p>
<h3 id="数据传输"><a class="markdownIt-Anchor" href="#数据传输"></a> 数据传输</h3>
<p>连接建立之后，便可进行双向的数据传输，客户端与服务器双方都可以发生数据和确认。</p>
<p>当两个应用程序进行交互式通信时，希望收到立即响应。此时，发送端的TCP需要设置推送位（PSH）来告诉接收端的TCP，这个段所包含的数据需要尽快传递给接收应用程序，而不需要等待更多数据的到来。此时，发送端的TCP也不会等待窗口被填满，它创建一个段就立即将其发送。</p>
<p>如果一些情况下，应用程序需要发送紧急字节，需要另一端的应用以特殊方式对待。此时，应用程序会将URG标志置位。同时，紧急数据被放在段的开始，并使用紧急指针字段定义紧急数据的结束。而在其余部分，则可以存放来自于缓冲区的普通数据，这一部分数据是非紧急的。但是TCP的紧急数据并不意味着优先服务，仅仅是让接收端TCP通知应用程序紧急数据的开始和结束，留给应用程序决定如何处理紧急数据。</p>
<h3 id="连接终止"><a class="markdownIt-Anchor" href="#连接终止"></a> 连接终止</h3>
<p>交换数据双方的任意一方都可以关闭连接。连接终止的实现有两种方法：三次挥手和带有半关闭选项的四次挥手。</p>
<h4 id="三次挥手"><a class="markdownIt-Anchor" href="#三次挥手"></a> 三次挥手</h4>
<p>三次挥手断开连接的步骤如下：</p>
<ol>
<li>客户TCP发送一个FIN段，其中的FIN标志被置位。同时，FIN段可以包含客户要发送的最后数据块。如果它只是控制段，则只占有一个序号。</li>
<li>服务器TCP接收到FIN段之后，通知进程并发送第二个FIN+ACK段，证明它接收到了来自客户端的FIN段，同时告诉客户端，服务器端的连接已关闭。这个段还可以包含来自服务器的最后数据块。如果不携带数据，则只占用一个序号。</li>
<li>客户端的TCP发送最后一个ACK段，证明它接收到了服务器的FIN段。这个段包含确认号，它是来自服务器的FIN段的序号再加1。这个段不携带数据也不占用序号。</li>
</ol>
<p>这一过程可总结为下图：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201201232343.png" alt="TCP三次挥手" /></p>
<h4 id="带有半关闭选项的四次挥手"><a class="markdownIt-Anchor" href="#带有半关闭选项的四次挥手"></a> 带有半关闭选项的四次挥手</h4>
<p>在TCP中，一端可以在停止发送数据之后继续接收数据，这就是所谓的半关闭。虽然任意一端都可发出半关闭指令，但是通常情况下是由客户端发起。例如，当服务器在开始处理之前需要接收到所有的数据，此时就会出现半关闭。客户端发送全部数据之后，它在客户到服务器方向便可关闭连接；但是为了接收返回数据，服务器到客户的方向必须保持打开。此时的关闭过程为四次挥手，它的过程如下：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201201232350.png" alt="TCP四次挥手" /></p>
<h3 id="连接重置"><a class="markdownIt-Anchor" href="#连接重置"></a> 连接重置</h3>
<p>在一段的TCP可能会拒绝连接请求、终止已存在的连接、或是结束空闲连接。这些操作是通过RST标志完成的。</p>
<h2 id="tcp的窗口"><a class="markdownIt-Anchor" href="#tcp的窗口"></a> TCP的窗口</h2>
<p>TCP在每个方向的数据传输上使用两个窗口：发送和接收窗口，也就是说双向通信有四个窗口。</p>
<h3 id="发送窗口"><a class="markdownIt-Anchor" href="#发送窗口"></a> 发送窗口</h3>
<p>发送窗口是一个想象的盒子，它覆盖了处于运送途中的以及可以被发送的数据分组序号。在每个窗口位置，一些序号定义了已经被发送的分组，其他序号定义了可以被发送的分组。</p>
<p>在任何时候，发送窗口将序号从左向右分成四部分：</p>
<ol>
<li>窗口左侧：已经确认的分组的序号，发送方可以丢弃掉这些分组</li>
<li>未完成分组：发送方已经发送，但是状态未知的序号，发送方需要等待，从而确认这些分组是否已被接收还是丢失</li>
<li>可发送分组：可以发送的分组的序号，但是相应的数据还没有从应用层接收到</li>
<li>窗口右侧：直到窗口滑动之前都不能使用的序号</li>
</ol>
<p>在TCP中使用的发送窗口中，窗口的大小是字节的数量，控制窗口的变量是以字节为单位的。在某些实现中，TCP可以存储来自于进程的数据并且在之后发送它们。同时，TCP只使用一个计时器。计时器被用来实现分组的重发，在发送一个分组时需要打开计时器（如果已运行则不用再打开），当计时器终止时，发送方需要重发所有的未完成分组。</p>
<p>TCP的发送窗口如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201201232356.png" alt="TCP发送窗口" /></p>
<h3 id="接收窗口"><a class="markdownIt-Anchor" href="#接收窗口"></a> 接收窗口</h3>
<p>接收窗口用于确保正确的分组数据被接收，并且确保正确的确认被发送。</p>
<p>TCP允许接收进程以自己的速率拉取数据，因此接收方部分被分配缓冲区可以被已接收并且确认的字节所占据，但是它们正在等待被接收进程拉过去。因此，接收窗口的大小总是小于或等于缓冲区大小，它决定了接收窗口在被淹没之前可以从发送方接收的字节数量，又被称为rwnd。</p>
<p>同时，TCP协议中的主要确认机制是累积确认，它声明了下一个预期接收字节。在TCP的新版本中也使用了选择性确认。</p>
<p>TCP的接收窗口如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201201232405.png" alt="TCP接收窗口" /></p>
<h3 id="流量控制-2"><a class="markdownIt-Anchor" href="#流量控制-2"></a> 流量控制</h3>
<p>为了实现流量控制，TCP可以迫使发送方和接收方调整它们的窗口大小。当更多的数据从发送方到来时，接收方窗口关闭；当更多的数据被进程拉取后，它打开窗口。发送窗口的打开、关闭和收缩由接收方控制。</p>
<h2 id="差错控制-2"><a class="markdownIt-Anchor" href="#差错控制-2"></a> 差错控制</h2>
<p>TCP使用差错控制来提供可靠性，它包括用于检测并重发损坏段的机制、用于重发丢失段的机制、用于存储失序的段直到丢失段到达的机制、以及检测并丢弃重复段的机制。上述机制主要是通过使用校验和、确认和超时来完成的。</p>
<h3 id="校验和-2"><a class="markdownIt-Anchor" href="#校验和-2"></a> 校验和</h3>
<p>TCP的每个段都包括校验和字段，用于检查损坏的段。如果段被损坏，它将目的端TCP丢弃，因此发送端会认为其丢失而重发。</p>
<h3 id="确认-2"><a class="markdownIt-Anchor" href="#确认-2"></a> 确认</h3>
<p>TCP使用确认方法来证实收到了数据段，不携带数据但是占用序号额一些控制段也需要确认，但是ACK段因为不占用序号所以不需要确认。</p>
<p>TCP的确认方式有两种，累积确认和选择性确认。累积确认指的是接收方通告下一个预期接收的字节，忽略所有的失序段。TCP头部的32位ACK字段用于累积确认，且只有当ACK标志为1时才有效。选择性确认（SACK）指的是向发送方报告额外信息，包括失序字节块和重复字节块。SACK以TCP头部末端选项的形式实现。</p>
<p>接收方产生确认的规则有：</p>
<ul>
<li>终端A向终端B发送一个数据段时，必须包含一个确认，这个确认给出下一个期待接收的序号。这个规则降低了所需段的数量。</li>
<li>如果只有一个未完成的有序段，接收方需要延迟发送ACK段。这一规则减少了ACK段。</li>
<li>任何时候不能多于两个有序的未确认段存在。这样防止了不必要的重传，避免引起网络拥塞。</li>
<li>当一个失序段到达，且序号大于预期，接收方立即发送一个ACK段，声明下一个预期段的序号。这使得丢失段可以快速重传。</li>
<li>当一个丢失段到达，接收方发送一个ACK段，声明下一个预期序号。这通知接收方被报告丢失段已经到达。</li>
<li>如果重复段到达，接收方丢弃段，但是立即发送一个确认指出下一个预期的有序段。这解决了当ACK段丢失时的一些问题。</li>
</ul>
<h3 id="重传"><a class="markdownIt-Anchor" href="#重传"></a> 重传</h3>
<p>当一个段被发送，它会被储存在一个队列中直到被确认。当重传计时器超时或者当发送方接收到对队列中第一个段的三次重复ACK时，就重传这个段。</p>
<p>发送方TCP为每个连接维护一个重传超时，当计时器到时即超时，TCP重发队列中具有最小序号的段并重启计时器。</p>
<p>而三次重复ACK立即重发的规则，允许发送方不等待超时而重传，这加速了因特网中的服务。这一特性也被称为快速重传。</p>
<h3 id="失序段"><a class="markdownIt-Anchor" href="#失序段"></a> 失序段</h3>
<p>TCP不丢弃失序段，它们暂时存储这些失序段，并将其标记为失序段直到缺失的段到达。但是TCP会确保传递给进程的段是非失序的。</p>
<h2 id="拥塞控制-2"><a class="markdownIt-Anchor" href="#拥塞控制-2"></a> 拥塞控制</h2>
<h3 id="拥塞窗口"><a class="markdownIt-Anchor" href="#拥塞窗口"></a> 拥塞窗口</h3>
<p>TCP使用称为拥塞窗口（cwnd）的变量来控制段的发送数量，这个变量的值由网络中的拥塞情况所控制。cwnd变量和rwnd变量一起定义了TCP中的发送窗口大小。cwnd与网络中间的拥塞相关，而rwnd与终端的拥塞相关，实际窗口的大小为二者中的最小值。</p>
<h3 id="拥塞检测"><a class="markdownIt-Anchor" href="#拥塞检测"></a> 拥塞检测</h3>
<p>TCP的发送方使用两个事件来作为网络中拥塞的标志：</p>
<ul>
<li>超时：如果一个TCP发送方在超时之前没有接收到对于某个段或者某些段的ACK，那么它就假设它们丢失，并且丢失是由于<em>严重拥塞</em>引起的。</li>
<li>接收到三次重复ACK：当接收方发送三次重复ACK时，这意味着一个段丢失，说明网络此时处于<em>轻微拥塞</em>或者已经从拥塞中恢复。</li>
</ul>
<h3 id="拥塞策略"><a class="markdownIt-Anchor" href="#拥塞策略"></a> 拥塞策略</h3>
<h4 id="慢启动"><a class="markdownIt-Anchor" href="#慢启动"></a> 慢启动</h4>
<p>慢启动算法是基于拥塞窗口大小的思想，它以最大段长度（MSS）开始，但是每当一个确认到达时它只增加一个MSS。</p>
<p>初始时cwnd=1，当一个ACK到达时，cwnd=cwnd+1。这一算法启动慢，但是它是以指数增长的。因此，它不能一直继续下去，存在一个停止该阶段的阈值，当窗口中的字节达到这个阈值时，慢启动停止且下一个阶段开始。</p>
<h4 id="拥塞避免"><a class="markdownIt-Anchor" href="#拥塞避免"></a> 拥塞避免</h4>
<p>由于慢启动算法使得拥塞窗口大小按照指数规律增大，因此为了在拥塞发生之前避免堵塞，TCP定义了另一个被称为拥塞避免的算法。</p>
<p>在这个算法中，每次整个窗口的所有段都被确认之后，拥塞窗口才增加1。也就是说，此时如果有一个ACK到达，cwnd=cwnd+(1/cwnd)。此时，增长速率以每次往返时间为单位是线性的，因此这种方法比慢启动方法保守得多。</p>
<h4 id="快速恢复"><a class="markdownIt-Anchor" href="#快速恢复"></a> 快速恢复</h4>
<p>快速恢复算法在TCP中是可选的。它开始于三次重复ACK到达，这被解释为网络的轻微阻塞。这个算法也是加性增加的，在三次重复ACK触发使用这个算法之后（三次重复ACK通常会使得cwnd的值减小），当一个重复ACK到达时，cwnd=cwnd+(1/cwnd)。</p>
<h2 id="tcp计时器"><a class="markdownIt-Anchor" href="#tcp计时器"></a> TCP计时器</h2>
<h3 id="重传计时器"><a class="markdownIt-Anchor" href="#重传计时器"></a> 重传计时器</h3>
<p>为了重传丢失的段，TCP在整个连接期间使用一种重传计时器来处理重传超时（RTO）。重传计时器的使用有如下规则：</p>
<ul>
<li>当TCP发送位于发送队列前端中的段时，它开启计时器</li>
<li>当计时器到时，TCP重发队列前端的第一个段并且重启计时器</li>
<li>当一个或者多个段被累积确认，一个或者多个段从队列中被清除，如果清除至队列为空，则停止计时器。而当队列不为空时重启计时器。</li>
</ul>
<p>RTO的计算依赖于RTT的计算，我们将每一个包从发出到接收的时间称为往返时间（Round-Trip Time, RTT）。RTO的计算公式为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>T</mi><mi>O</mi><mo>=</mo><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>S</mi></msub><mo>+</mo><mn>4</mn><mo>×</mo><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>D</mi></msub></mrow><annotation encoding="application/x-tex">RTO=RTT_{S}+4\times RTT_{D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>S</mi></msub></mrow><annotation encoding="application/x-tex">RTT_S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>代表平滑RTT，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>D</mi></msub></mrow><annotation encoding="application/x-tex">RTT_D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>代表RTT偏差。将每一次测量的RTT记作<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">RTT_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，二者的值通过多次测量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">RTT_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>并迭代计算而得。在第一次测量后，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>S</mi></msub><mo>=</mo><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">RTT_{S}=RTT_{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>D</mi></msub><mo>=</mo><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>M</mi></msub><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">RTT_{D}=RTT_{M}/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord">2</span></span></span></span>；而在这之后每一次测量出新的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">RTT_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>S</mi></msub></mrow><annotation encoding="application/x-tex">RTT_S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>D</mi></msub></mrow><annotation encoding="application/x-tex">RTT_D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>通过下面两个式子更新：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>S</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy="false">)</mo><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>S</mi></msub><mo>+</mo><mi>α</mi><mo>×</mo><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">RTT_{S}=(1-\alpha)RTT_{S}+\alpha \times RTT_{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>D</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>β</mi><mo stretchy="false">)</mo><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>D</mi></msub><mo>+</mo><mi>β</mi><mo>×</mo><mi mathvariant="normal">∣</mi><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>S</mi></msub><mo>−</mo><mi>R</mi><mi>T</mi><msub><mi>T</mi><mi>M</mi></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">RTT_{D}=(1-\beta)RTT_{D}+\beta \times |RTT_{S}-RTT_{M}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span>。</p>
<h3 id="坚持计时器"><a class="markdownIt-Anchor" href="#坚持计时器"></a> 坚持计时器</h3>
<p>为了处理0窗口大小的通告，TCP需要使用坚持计时器。如果接收TCP声明了0窗口大小，那么发送TCP停止传输段，直到接收TCP发送一个ACK段声明非零的窗口大小。由于这个声明非0的ACK段可能会丢失，而且它不存在重传计时器，如果不使用坚持计数器就可能会因为双方TCP互相等待造成死锁。</p>
<p>因此，当发送方TCP接收一个窗口大小为0的确认时，开启坚持计时器。当坚持计时器到时，发送方TCP发送一个特殊的探测段，这个段只包含一个字节的新数据，同时有一个序号，但是序号从来不被确认。探测报文引发接收方TCP重发确认。</p>
<h3 id="保活计时器"><a class="markdownIt-Anchor" href="#保活计时器"></a> 保活计时器</h3>
<p>保活计时器用于防止两个TCP之间的长期空闲连接。假设一个用户与服务器建立了连接，传输了一些数据并进入沉默状态，但是此时连接会永远保持打开。为了消除这种情况，每当服务器从客户收到一次数据就重置保活计时器。而当保活计时器超时之后，它发送一个探测段，如果多次发送探测段之后仍然无响应，那么服务器就认为用户出现故障，会终止连接。</p>
<h3 id="时间等待计时器"><a class="markdownIt-Anchor" href="#时间等待计时器"></a> 时间等待计时器</h3>
<p>时间等待（2MSL）计时器在连接终止期间使用。最大报文段寿命（Maximum Segment Lifetime, MSL）是任意报文在被丢弃之前在网络中的存在时间。当TCP执行主动关闭并发送最后一个ACK时，使用2MSL计时器，连接保持2MSL的时间，从而允许TCP重发最后一个ACK，以防ACK丢失。</p>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<ol>
<li>计算机网络：自顶向下方法</li>
</ol>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenSSL-BIO（摘录）</title>
    <url>/2021/01/09/OpenSSL-BIO%EF%BC%88%E6%91%98%E5%BD%95%EF%BC%89/</url>
    <content><![CDATA[<p>注：本文内容摘录自参考部分的相关资料</p>
<h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1>
<p>OpenSSL抽象I/O(Basic I/O abstraction，即BIO)是OpenSSL对于I/O类型的抽象封装，包括内存、文件、日志、标准输入输出、socket、加解密、摘要和ssl通道等。OpenSSL BIO通过回调函数为用户隐藏了底层的实现细节，所有类型的BIO调用大体类似。BIO中的数据能从一个BIO传递给另一个BIO或是应用程序。</p>
<p>BIO的详细介绍参见[2]</p>
<a id="more"></a>
<h1 id="bio结构体"><a class="markdownIt-Anchor" href="#bio结构体"></a> BIO结构体</h1>
<p>BIO的结构体的定义如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">bio_st</span> <span class="title">BIO</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">bio_st</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	BIO_METHOD *method; <span class="comment">//BIO方法结构，是决定BIO类型和行为的重要参数，各种BIO的不同之处主要也正在于此项。</span></span><br><span class="line">	<span class="comment">/* bio, mode, argp, argi, argl, ret */</span></span><br><span class="line">	<span class="keyword">long</span> (*callback)(struct bio_st *,<span class="keyword">int</span>,<span class="keyword">const</span> <span class="keyword">char</span> *,<span class="keyword">int</span>, <span class="keyword">long</span>, <span class="keyword">long</span>);</span><br><span class="line">	<span class="keyword">char</span> *cb_arg; <span class="comment">/* first argument for the callback */</span></span><br><span class="line">	<span class="keyword">int</span> init; <span class="comment">//具体句柄初始化标记，初始化之后为1</span></span><br><span class="line">	<span class="keyword">int</span> <span class="built_in">shutdown</span>; <span class="comment">//BIO关闭标记，当该值不为0时释放资源，数值修改可以通过控制函数来设置</span></span><br><span class="line">	<span class="keyword">int</span> flags; <span class="comment">//用于控制各个函数的行为</span></span><br><span class="line">	<span class="keyword">int</span> retry_reason; <span class="comment">//重试原因，主要用在socket和ssl BIO的异步阻塞</span></span><br><span class="line">	<span class="keyword">int</span> num; <span class="comment">//因具体BIO而异</span></span><br><span class="line">	<span class="keyword">void</span> *ptr; <span class="comment">//具体bio有不同含义。比如文件BIO中它用来存放文件句柄；mem bio中它用来存放内存地址；connect bio中它用来存放BIO_CONNECT数据，accept bio中它用来存放BIO_ACCEPT数据。</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">bio_st</span> *<span class="title">next_bio</span>;</span>	<span class="comment">/*下一个BIO地址，used by filter BIOs*/</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">bio_st</span> *<span class="title">prev_bio</span>;</span>	<span class="comment">/*上一个BIO地址，used by filter BIOs*/</span></span><br><span class="line">	<span class="keyword">int</span> references; <span class="comment">//被引用数量</span></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> num_read; <span class="comment">//已读入字节数</span></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> num_write; <span class="comment">//已写入字节数</span></span><br><span class="line">	CRYPTO_EX_DATA ex_data; <span class="comment">//存放额外数据</span></span><br><span class="line">&#125;；</span><br></pre></td></tr></table></figure>
<p>在BIO的成员中，method是最关键的一个，它决定了BIO的类型。在定义一个新的BIO结构时，使用下面的函数：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">BIO* <span class="title">BIO_new</span><span class="params">(BIO_METHOD *type)</span></span>;</span><br></pre></td></tr></table></figure>
<p>BIO_new函数除了给一些初始变量赋值之外，主要就是把type中的各个变量赋值给BIO结构中的method成员。一般type参数是通过一个返回值为BIO_METHOD类型的函数来提供的，这样的函数有：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 【source/sink型】</span></span><br><span class="line"><span class="function">BIO_METHOD* <span class="title">BIO_s_accept</span><span class="params">()</span>   <span class="comment">//一个封装了类似TCP/IP socket Accept规则的接口，并且使TCP/IP操作对于BIO接口透明。</span></span></span><br><span class="line"><span class="function">BIO_METHOD* <span class="title">BIO_s_connect</span><span class="params">()</span>  <span class="comment">//一个封装了类似TCP/IP socket Connect规则的接口，并且使TCP/IP操作对于BIO接口透明</span></span></span><br><span class="line"><span class="function">BIO_METHOD* <span class="title">BIO_s_socket</span><span class="params">()</span>   <span class="comment">//封装了socket接口的BIO类型</span></span></span><br><span class="line"><span class="function">BIO_METHOD* <span class="title">BIO_s_bio</span><span class="params">()</span>      <span class="comment">//封装了一个BIO对，数据从其中一个BIO写入，从另外一个BIO读出</span></span></span><br><span class="line"><span class="function">BIO_METHOD* <span class="title">BIO_s_fd</span><span class="params">()</span>       <span class="comment">//是一个封装了文件描述符的BIO接口，提供类似文件读写操作的功能</span></span></span><br><span class="line"><span class="function">BIO_METHOD* <span class="title">BIO_s_file</span><span class="params">()</span>     <span class="comment">//封装了标准的文件接口的BIO，包括标准的输入输出设备如stdin等</span></span></span><br><span class="line"><span class="function">BIO_METHOD* <span class="title">BIO_s_mem</span><span class="params">()</span>      <span class="comment">//封装了内存操作的BIO接口，包括了对内存的读写操作</span></span></span><br><span class="line"><span class="function">BIO_METHOD* <span class="title">BIO_s_null</span><span class="params">()</span>     <span class="comment">//返回空的sink型BIO接口，写入这种接口的所有数据读被丢弃，读的时候总是返回EOF</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">//【filter型】</span></span></span><br><span class="line"><span class="function">BIO_METHOD* <span class="title">BIO_f_base64</span><span class="params">()</span>   <span class="comment">//封装了base64编码方法的BIO,写的时候进行编码，读的时候解码 </span></span></span><br><span class="line"><span class="function">BIO_METHOD* <span class="title">BIO_f_cipher</span><span class="params">()</span>   <span class="comment">//封装了加解密方法的BIO，写的时候加密，读的时候解密</span></span></span><br><span class="line"><span class="function">BIO_METHOD* <span class="title">BIO_f_md</span><span class="params">()</span>       <span class="comment">//封装了信息摘要方法的BIO，通过该接口读写的数据都是已经经过摘要的。</span></span></span><br><span class="line"><span class="function">BIO_METHOD* <span class="title">BIO_f_ssl</span><span class="params">()</span>      <span class="comment">//封装了openssl 的SSL协议的BIO类型，也就是为SSL协议增加了一些BIO操作方法。</span></span></span><br><span class="line"><span class="function">BIO_METHOD* <span class="title">BIO_f_null</span><span class="params">()</span>     <span class="comment">//一个不作任何事情的BIO，对它的操作都简单传到下一个BIO去了，相当于不存在。</span></span></span><br><span class="line"><span class="function">BIO_METHOD* <span class="title">BIO_f_buffer</span><span class="params">()</span>   <span class="comment">//封装了缓冲区操作的BIO，写入该接口的数据一般是准备传入下一个BIO接口的，从该接口读出的数据一般也是从另一个BIO传过来的。</span></span></span><br></pre></td></tr></table></figure>
<h1 id="bio_method"><a class="markdownIt-Anchor" href="#bio_method"></a> BIO_METHOD</h1>
<p>一个BIO_METHOD类型的结构体包含如下这些成员：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">bio_method_st</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">int</span> type; <span class="comment">//BIO类型，type取值对应的BIO_METHOD类型见附录</span></span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">char</span> *name; <span class="comment">//BIO的名字</span></span><br><span class="line">	<span class="keyword">int</span> (*bwrite)(BIO *, <span class="keyword">const</span> <span class="keyword">char</span> *, <span class="keyword">int</span>); <span class="comment">//写操作回调函数</span></span><br><span class="line">	<span class="keyword">int</span> (*bread)(BIO *, <span class="keyword">char</span> *, <span class="keyword">int</span>); <span class="comment">//读操作回调函数</span></span><br><span class="line">	<span class="keyword">int</span> (*bputs)(BIO *, <span class="keyword">const</span> <span class="keyword">char</span> *); <span class="comment">//写入字符串回调函数</span></span><br><span class="line">	<span class="keyword">int</span> (*bgets)(BIO *, <span class="keyword">char</span> *, <span class="keyword">int</span>); <span class="comment">//读取字符串函数</span></span><br><span class="line">	<span class="keyword">long</span> (*ctrl)(BIO *, <span class="keyword">int</span>, <span class="keyword">long</span>, <span class="keyword">void</span> *); <span class="comment">//控制回调函数</span></span><br><span class="line">	<span class="keyword">int</span> (*)(BIO *); <span class="comment">//生成回调函数</span></span><br><span class="line">	<span class="keyword">int</span> (*destroy)(BIO *); <span class="comment">//销毁回调函数</span></span><br><span class="line">    <span class="keyword">long</span> (*callback_ctrl)(BIO *, <span class="keyword">int</span>, bio_info_cb *); <span class="comment">//控制回调函数，可以由调用者实现</span></span><br><span class="line">&#125; BIO_METHOD;</span><br></pre></td></tr></table></figure>
<h1 id="bio的相关函数"><a class="markdownIt-Anchor" href="#bio的相关函数"></a> BIO的相关函数</h1>
<h2 id="bio的声明与释放"><a class="markdownIt-Anchor" href="#bio的声明与释放"></a> BIO的声明与释放</h2>
<p>下面是用于BIO分配和释放操作的一些基本操作系列函数：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/bio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BIO*  <span class="title">BIO_new</span><span class="params">(BIO_METHOD *type)</span></span>; <span class="comment">//调用BIO_set()函数创建一个新的BIO</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>   <span class="title">BIO_set</span><span class="params">(BIO *a,BIO_METHOD *type)</span></span>; <span class="comment">//对一个已经创建好的BIO设置新的BIO类型，其实就是简单的对BIO的各个成员进行初始化，并将参数type赋值给该BIO</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>   <span class="title">BIO_free</span><span class="params">(BIO *a)</span></span>; <span class="comment">//释放单个BIO占用的资源，成功返回1，失败返回0</span></span><br><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">BIO_vfree</span><span class="params">(BIO *a)</span></span>; <span class="comment">//功能与BIO_free完全相同，但是无返回值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">BIO_free_all</span><span class="params">(BIO *a)</span></span>; <span class="comment">//释放一个BIO链，如果中间某个过程出错也不会停止释放过程</span></span><br></pre></td></tr></table></figure>
<p>一些类型的BIO使用BIO_new()函数创建之后便可以直接使用，如memory类型的BIO；有些BIO在创建之后还需要做一些初始化工作，如文件BIO，一般也会提供一些这样的函数来创建和初始化它们。</p>
<h2 id="bio的控制函数"><a class="markdownIt-Anchor" href="#bio的控制函数"></a> BIO的控制函数</h2>
<p>BIO的控制函数较多，见附录。这些函数用于控制BIO的状态等。</p>
<h2 id="bio的io操作"><a class="markdownIt-Anchor" href="#bio的io操作"></a> BIO的I/O操作</h2>
<p>BIO的基本读写函数有四个：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openss/bio.h&gt;</span></span></span><br><span class="line"><span class="comment">//以下四个函数，成功返回真正读出/写入的数据长度，失败返回0或-1，BIO未实现这一函数返回-2</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">BIO_read</span><span class="params">(BIO *b, <span class="keyword">void</span> *buf, <span class="keyword">int</span> len)</span></span>; <span class="comment">//从BIO接口中读取len字节数据到buf，</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">BIO_write</span><span class="params">(BIO *b, <span class="keyword">const</span> <span class="keyword">void</span> *buf, <span class="keyword">int</span> len)</span></span>; <span class="comment">//往BIO写入长度为len的数据</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">BIO_gets</span><span class="params">(BIO *b,<span class="keyword">char</span> *buf, <span class="keyword">int</span> <span class="built_in">size</span>)</span></span>; <span class="comment">//从BIO中读取一行长度最大为size的数据</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">BIO_puts</span><span class="params">(BIO *b,<span class="keyword">const</span> <span class="keyword">char</span> *buf)</span></span>; <span class="comment">//往BIO中写入一个以NULL为结束符的字符串</span></span><br></pre></td></tr></table></figure>
<p>BIO也提供了一组出错原因的诊断函数，用于诊断为什么BIO在读写数据的时候不能读写数据：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_should_read(a)       ((a)-&gt;flags &amp; BIO_FLAGS_READ) <span class="comment">//如果导致IO失败的原因是BIO此时要读取数据，则返回true</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_should_write(a)      ((a)-&gt;flags &amp; BIO_FLAGS_WRITE) <span class="comment">//如果导致IO失败的原因是BIO此时要写数据，则返回true</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_should_io_special(a) ((a)-&gt;flags &amp; BIO_FLAGS_IO_SPECIAL) <span class="comment">//如果导致IO失败的原因是读写之外的原因则返回true</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_retry_type(a)        ((a)-&gt;flags &amp; BIO_FLAGS_RWS) </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_should_retry(a)      ((a)-&gt;flags &amp; BIO_FLAGS_SHOULD_RETRY) <span class="comment">//如果读写出错的情况是要求程序稍后重试，那么该函数返回true</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_FLAGS_READ 0x01</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_FLAGS_WRITE 0x02</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_FLAGS_IO_SPECIAL 0x04</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_FLAGS_RWS (BIO_FLAGS_READ|BIO_FLAGS_WRITE|BIO_FLAGS_IO_SPECIAL)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_FLAGS_SHOULD_RETRY 0x08</span></span><br><span class="line"></span><br><span class="line"><span class="function">BIO*    <span class="title">BIO_get_retry_BIO</span><span class="params">(BIO *bio, <span class="keyword">int</span> *reason)</span></span>; <span class="comment">//给出特殊情况错误的简短原因</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>     <span class="title">BIO_get_retry_reason</span><span class="params">(BIO *bio)</span></span>; <span class="comment">//返回失败的原因</span></span><br></pre></td></tr></table></figure>
<h2 id="bio对"><a class="markdownIt-Anchor" href="#bio对"></a> BIO对</h2>
<p>BIO对是BIO中专门创建的一对缓存BIO，创建BIO对的函数如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/bio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">BIO_new_bio_pair</span><span class="params">(BIO **bio1, <span class="keyword">size_t</span> writebuf1, BIO **bio2, <span class="keyword">size_t</span> writebuf2)</span></span>;</span><br></pre></td></tr></table></figure>
<p>函数调用成功之后返回1，此时bio1和bio2都变得有效；否则返回0，bio1和bio2被设为NULL。但是注意它们在不使用的时候必须分别释放，因为有些SSL函数会隐含调用BIO_free函数。</p>
<p>当BIO对创建之后，它的两端都能作为数据缓冲的输入和输出，典型的应用为它一端和SSL的IO连接，另一端被应用控制。</p>
<p>这两个BIO对的功能是完全对称的，它们的缓冲区大小由参数writebuf1和writebuf2决定，如果设为0则使用默认大小。注意这个函数不会检查bio1和bio2是否指向其他BIO，二者的值都会被重写，且不会调用BIO_free()函数。因此在使用之前必须自己保证这两个变量为空，否则会造成内存泄漏。</p>
<p>因为BIO对只会简单的缓存数据，而不会直接涉及到连接，所以它看起来<strong>就像非阻塞型的接口</strong>，如果<strong>写缓存满了或读缓存空的时候，调用IO函数就会立刻返回</strong>。也就是说，应用程序必须自己对写缓存执行flush操作或对读缓存执行fill操作。</p>
<h2 id="bio链操作"><a class="markdownIt-Anchor" href="#bio链操作"></a> BIO链操作</h2>
<p>BIO结构其实是一个链式结构，在BIO链上添加或删除BIO的函数有：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">BIO * <span class="title">BIO_push</span><span class="params">(BIO *b,BIO *append)</span></span>; <span class="comment">//把名为append的链附加到名为b的链上，返回b</span></span><br><span class="line"><span class="function">BIO * <span class="title">BIO_pop</span><span class="params">(BIO *b)</span></span>; <span class="comment">//把名为b的BIO从它所在的BIO链中移除，并返回下一个BIO。如果没有则返回NULL</span></span><br></pre></td></tr></table></figure>
<p>如同链表一样，一个BIO链的第一个元素便代表了整个链。在构造完BIO链之后，从链中的第一个元素开始做写操作时，数据会经过BIO链上每一个元素的处理，然后将BIO链最后一个元素的输出写入到文件中。而对于读操作来说，则是从BIO链的最后一个元素开始，沿着相反的方向进行操作，最后读取BIO链的第一个元素的输出。</p>
<p><img data-src="https://img-blog.csdn.net/20170815180254544?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGlhbzIwMDgxMjI4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述" /></p>
<p>BIO链也提供了遍历与查找的函数：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">BIO* <span class="title">BIO_find_type</span><span class="params">(BIO *b,<span class="keyword">int</span> bio_type)</span></span>; <span class="comment">//在BIO链中根据特定类型的bio_type进行搜索，起始位置为b，返回最先找到的那个BIO，如果未找到则返回null</span></span><br><span class="line"><span class="function">BIO* <span class="title">BIO_next</span><span class="params">(BIO *b)</span></span>; <span class="comment">//返回b所在BIO链中的下一个BIO</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_method_type(b) ((b)-&gt;method-&gt;type)</span></span><br></pre></td></tr></table></figure>
<p>其中，bio_type的值定义见附录。</p>
<h1 id="bio分类"><a class="markdownIt-Anchor" href="#bio分类"></a> BIO分类</h1>
<h2 id="sourcesink类型bio"><a class="markdownIt-Anchor" href="#sourcesink类型bio"></a> Source/Sink类型BIO</h2>
<h3 id="文件指针类型bio"><a class="markdownIt-Anchor" href="#文件指针类型bio"></a> 文件指针类型BIO</h3>
<p>文件类型BIO的相关函数和定义如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/bio.h&gt;    </span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BIO_METHOD*  <span class="title">BIO_s_file</span><span class="params">(<span class="keyword">void</span>)</span></span>; <span class="comment">//返回文件BIO的BIO_METHOD定义</span></span><br><span class="line"></span><br><span class="line"><span class="function">BIO* <span class="title">BIO_new_file</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *filename, <span class="keyword">const</span> <span class="keyword">char</span> *mode)</span></span>; <span class="comment">//从文件名新建BIO</span></span><br><span class="line"><span class="function">BIO* <span class="title">BIO_new_fp</span><span class="params">(FILE *stream, <span class="keyword">int</span> flags)</span></span>; <span class="comment">//从文件指针新建BIO</span></span><br><span class="line"></span><br><span class="line">BIO_set_fp(BIO *b,FILE *fp, <span class="keyword">int</span> flags);  <span class="comment">//将bio与文件指针绑定</span></span><br><span class="line">BIO_get_fp(BIO *b,FILE **fpp);           <span class="comment">//获取bio绑定的的文件指针</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">BIO_read_filename</span><span class="params">(BIO *b, <span class="keyword">char</span> *name)</span> <span class="comment">//设置BIO的读文件名</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">BIO_write_filename</span><span class="params">(BIO *b, <span class="keyword">char</span> *name)</span> <span class="comment">//设置BIO的写文件名</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">BIO_append_filename</span><span class="params">(BIO *b, <span class="keyword">char</span> *name)</span> <span class="comment">//设置BIO的附加文件名</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">BIO_rw_filename</span><span class="params">(BIO *b, <span class="keyword">char</span> *name)</span> <span class="comment">//设置BIO的读写文件名</span></span></span><br></pre></td></tr></table></figure>
<p>file类型的BIO_METHOD结构体变量如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> BIO_METHOD methods_filep =</span><br><span class="line">&#123;</span><br><span class="line">     BIO_TYPE_FILE,</span><br><span class="line">     <span class="string">&quot;FILE pointer&quot;</span>,</span><br><span class="line">     file_write,</span><br><span class="line">     file_read,</span><br><span class="line">     file_puts,</span><br><span class="line">     file_gets,</span><br><span class="line">     file_ctrl,</span><br><span class="line">     file_new,</span><br><span class="line">     file_free,</span><br><span class="line">     <span class="literal">NULL</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>在file类型中，使用前面介绍过的<strong>BIO_read和BIO_write</strong>对底层的file数据流进行读写操作，file类型BIO是支持<strong>BIO_gets和BIO_puts</strong>函数的。</p>
<p><strong>BIO_flush</strong>函数在file类型BIO中只是简单调用了API函数fflush。</p>
<p><strong>BIO_reset</strong>函数则将文件指针重新指向文件的开始位置，它调用fseek(stream,0,0) 函数实现该功能。</p>
<p><strong>BIO_seek</strong>函数将文件指针位置至于所定义的位置ofs上（从文件开头开始计算的偏移ofs），它调用了文件的操作函数fseek(stream,ofs,0)，是一个宏定义形式的函数，需要注意的是，因为该函数调用了fseek函数，所以成功的时候返回0，失败的时候返回－1，这是跟标准BIO_seek函数定义不一样的，因为标准的定义是成功返回1，失败返回非正值。</p>
<p><strong>BIO_eof</strong>调用了feof函数。 如果在BIO结构中<strong>设置了BIO_CLOSE</strong>的标志，则在BIO释放的时候会<strong>自动调用fclose函数</strong>。</p>
<p><strong>BIO_tell</strong>返回位置指针的值。是一个宏定义函数。</p>
<p>BIO文件类型操作的程序示例（省略了头文件等）：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1.最简单的实例程序</span></span><br><span class="line">BIO *bio_out;</span><br><span class="line">bio_out = BIO_new_fp(<span class="built_in">stdout</span>, BIO_NOCLOSE); </span><br><span class="line">BIO_printf(bio_out, <span class="string">&quot;Hello World\n&quot;</span>);</span><br><span class="line"><span class="comment">//  2.上述例子的另一种实现方法</span></span><br><span class="line">BIO *bio_out;</span><br><span class="line">bio_out = BIO_new(BIO_s_file());</span><br><span class="line"><span class="keyword">if</span>(bio_out == <span class="literal">NULL</span>) </span><br><span class="line">    <span class="comment">/*error handling*/</span></span><br><span class="line"><span class="keyword">if</span>(!BIO_set_fp(bio_out, <span class="built_in">stdout</span>, BIO_NOCLOSE)) </span><br><span class="line">    <span class="comment">/* 出错则将文件流定向到标准输出*/</span></span><br><span class="line">BIO_printf(bio_out, <span class="string">&quot;Hello World\n&quot;</span>);</span><br><span class="line"><span class="comment">//  3.写文件操作</span></span><br><span class="line">BIO *out;</span><br><span class="line">out = BIO_new_file(<span class="string">&quot;filename.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(!out) <span class="comment">/*出错*/</span></span><br><span class="line">BIO_printf(out, <span class="string">&quot;Hello World\n&quot;</span>);</span><br><span class="line">BIO_free(out);</span><br><span class="line"><span class="comment">//   4.上述例子的另一种实现方法</span></span><br><span class="line">BIO *out;</span><br><span class="line">out = BIO_new(BIO_s_file());</span><br><span class="line"><span class="keyword">if</span>(out == <span class="literal">NULL</span>) </span><br><span class="line">    <span class="comment">/* Error handling */</span></span><br><span class="line"><span class="keyword">if</span>(!BIO_write_filename(out, (<span class="keyword">void</span>*)<span class="string">&quot;filename.txt&quot;</span>)) </span><br><span class="line">    <span class="comment">/* Error handling */</span></span><br><span class="line">BIO_printf(out, <span class="string">&quot;Hello World\n&quot;</span>); <span class="comment">//此处换成BIO_read或BIO_gets可以实现读文件操作</span></span><br><span class="line">BIO_free(out);</span><br></pre></td></tr></table></figure>
<h3 id="文件描述符类型bio"><a class="markdownIt-Anchor" href="#文件描述符类型bio"></a> 文件描述符类型BIO</h3>
<p>文件描述符类型BIO是一个Source/Sink类型的BIO，定义了以下一些类型的函数：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/bio.h&gt;     </span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BIO_METHOD * <span class="title">BIO_s_fd</span><span class="params">(<span class="keyword">void</span>)</span></span>; <span class="comment">//返回一个文件描述符类型的BIO_METHOD结构</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_set_fd(b,fd,c) BIO_int_ctrl(b,BIO_C_SET_FD,c,fd) <span class="comment">//将BIO的底层文件描述符设置为fd</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_get_fd(b,c)    BIO_ctrl(b,BIO_C_GET_FD,0,(char *)c) <span class="comment">//返回相应的BIO底层文件描述符，存储在参数c中</span></span></span><br><span class="line"><span class="function">BIO*    <span class="title">BIO_new_fd</span><span class="params">(<span class="keyword">int</span> fd, <span class="keyword">int</span> close_flag)</span></span>; <span class="comment">//创建并返回一个底层描述符为fd，关闭标志位close_flag的文件描述符类型的BIO</span></span><br></pre></td></tr></table></figure>
<p>fd类型的BIO_METHOD结构体变量定义如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> BIO_METHOD methods_fdp=</span><br><span class="line">&#123;</span><br><span class="line">         BIO_TYPE_FD,</span><br><span class="line">         <span class="string">&quot;file descriptor&quot;</span>,</span><br><span class="line">         fd_write,</span><br><span class="line">         fd_read,</span><br><span class="line">         fd_puts,</span><br><span class="line">         <span class="literal">NULL</span>, <span class="comment">/* fd_gets, 与file类型的BIO相比它没有实现gets方法*/</span> </span><br><span class="line">         fd_ctrl,</span><br><span class="line">         fd_new,</span><br><span class="line">         fd_free,</span><br><span class="line">         <span class="literal">NULL</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>BIO_read</strong>和<strong>BIO_write</strong>对底层的文件描述符结构进行读写操作。这两个函数的一些行为取决于他们所在的平台的文件描述符的读写函数的行为，如果底层的文件描述符是非阻塞型的，那么他们基本上是跟前面介绍过的BIO的IO操作函数一样的。</p>
<p><strong>BIO_puts</strong>是支持的，但是<strong>BIO_gets</strong>在本类型描述符中是不支持的。</p>
<p><strong>BIO_reset</strong>调用lseek(fd,0,0)函数，使文件指针指向开始的位置。调用成功返回0，失败返回－1。</p>
<p><strong>BIO_seek</strong>调用了lseek(fd,ofs,0)函数，设置文件指针的位置到从文件头偏移ofs的位置，成功返回文件指针的位置，失败返回－1。</p>
<p><strong>BIO_tell</strong>返回目前文件指针的位置，它其实调用了lseek(fd,0,1)函数，失败返回－1。 如果设置了关闭标志，那么当BIO被释放的时候底层的文件描述符就会被关闭。</p>
<p>程序示例（省略了头文件和主函数部分）：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">BIO *out;</span><br><span class="line">out = BIO_new_fd(fileno(<span class="built_in">stdout</span>), BIO_NOCLOSE);</span><br><span class="line">BIO_write(out, <span class="string">&quot;Hello World\n&quot;</span>, <span class="number">13</span>); </span><br><span class="line">BIO_free(out); </span><br></pre></td></tr></table></figure>
<p>附：Linux系统的文件描述符介绍https://blog.csdn.net/cywosp/article/details/38965239</p>
<h3 id="socket类型bio"><a class="markdownIt-Anchor" href="#socket类型bio"></a> Socket类型BIO</h3>
<p>Socket类型的BIO是一种source/sink型BIO，封装了Socket的IO操作，它相关的一 些函数定义如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/bio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BIO_METHOD*  <span class="title">BIO_s_socket</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>      BIO_set_fd(b,fd,c)  BIO_int_ctrl(b,BIO_C_SET_FD,c,fd) <span class="comment">//将Socket描述符fd设置为BIO的底层IO结构，同时可以设置关闭标志c</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>      BIO_get_fd(b,c)     BIO_ctrl(b,BIO_C_GET_FD,0,(char *)c) <span class="comment">//返回指定BIO的Socket描述符</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BIO*         <span class="title">BIO_new_socket</span><span class="params">(<span class="keyword">int</span> sock, <span class="keyword">int</span> close_flag)</span></span>; <span class="comment">//根据一个给定参数返回一个socket类型的BIO，成功则返回该BIO指针，失败返回NULL</span></span><br></pre></td></tr></table></figure>
<p>Socket类型的BIO_METHOD结构定义如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> BIO_METHOD methods_sockp=</span><br><span class="line">&#123;</span><br><span class="line">     BIO_TYPE_SOCKET,</span><br><span class="line">     <span class="string">&quot;socket&quot;</span>,</span><br><span class="line">     sock_write,</span><br><span class="line">     sock_read,</span><br><span class="line">     sock_puts,</span><br><span class="line">     <span class="literal">NULL</span>, <span class="comment">/* sock_gets, 在Socket的BIO类型中不支持*/</span></span><br><span class="line">     sock_ctrl,</span><br><span class="line">     sock_new,</span><br><span class="line">     sock_free,</span><br><span class="line">     <span class="literal">NULL</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="null型bio"><a class="markdownIt-Anchor" href="#null型bio"></a> NULL型BIO</h3>
<p>NULL类型的BIO是一个空的Source/Sink型BIO，写入这个BIO的数据都被丢掉，从这里执行读操作也总是返回EOF。其相关函数定义如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/bio.h&gt; </span></span></span><br><span class="line">     　　</span><br><span class="line"><span class="function">BIO_METHOD * <span class="title">BIO_s_null</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br></pre></td></tr></table></figure>
<p>NULL类型的BIO_METHOD结构定义如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">static BIO_METHOD null_method&#x3D;</span><br><span class="line">&#123;</span><br><span class="line">        BIO_TYPE_NULL,</span><br><span class="line">    　　 &quot;NULL&quot;,</span><br><span class="line">    　　 null_write,</span><br><span class="line">    　　 null_read,</span><br><span class="line">    　　 null_puts,</span><br><span class="line">    　　 null_gets,</span><br><span class="line">    　　 null_ctrl,</span><br><span class="line">    　　 null_new,</span><br><span class="line">    　　 null_free,</span><br><span class="line">    　　 NULL,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>从结构上看，这个类型的BIO实现了不少的函数，但是，所有这些函数都只是简单返回0、1或者输入数据的长度，而不作任何事情。</p>
<p>一般来说，在openssl里面，<strong>这种类型的BIO是置放在BIO链的末尾</strong>的，比如在应用程序中，如果你要将一些数据通过filter型的BIO  digest进行摘要算法，但不需要把它送往任何地方，又因为一个BIO链要求以source/sink型BIO开始或结束，所以这时候就可以在BIO链的末尾添加一个source/sink型的NUll类型BIO来实现这个功能。</p>
<h3 id="内存类型bio"><a class="markdownIt-Anchor" href="#内存类型bio"></a> 内存类型BIO</h3>
<p>内存型BIO是source/sink型BIO，它<strong>使用内存作为它的I/O</strong>。它定义的相关函数如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/bio.h&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BIO_METHOD * <span class="title">BIO_s_mem</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">BIO_set_mem_eof_return(BIO *b,<span class="keyword">int</span> v) <span class="comment">//设置一个没有数据的内存型BIO的执行读动作的行为</span></span><br><span class="line"><span class="function"><span class="keyword">long</span>  <span class="title">BIO_get_mem_data</span><span class="params">(BIO *b, <span class="keyword">char</span> **pp)</span> <span class="comment">//将参数pp的指针指向内存型BIO的数据开始处</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">BIO_set_mem_buf</span><span class="params">(BIO *b,BUF_MEM *bm,<span class="keyword">int</span> c)</span> <span class="comment">//将参数bm代表的BUF_MEM结构作为该BIO的底层结构</span></span></span><br><span class="line"><span class="function"><span class="title">BIO_get_mem_ptr</span><span class="params">(BIO *b,BUF_MEM **pp)</span> <span class="comment">//将底层的BUF_MEM结构放在指针pp中</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">BIO *<span class="title">BIO_new_mem_buf</span><span class="params">(<span class="keyword">void</span> *buf, <span class="keyword">int</span> len)</span></span>; <span class="comment">//创建一个内存型BIO，其数据为buf里面长度为len的数据，如果参数len是－1，那么就默认buf是以null结束的，使用strlen计算长度。这时候BIO被设置为只读的，不能执行写操作。它用于数据需要存储在一块静态内存中并以BIO形式存在的时候。所需要的数据是直接从内存中读取的，而不是先要执行拷贝操作（读写方式的内存BIO就是要先拷贝），这也就要求这块内存是只读的，不能改变，一直维持到BIO被释放。</span></span><br></pre></td></tr></table></figure>
<p>写进该类型BIO的数据被存储在BUF_MEM结构中，该结构被定义为适合存储数据的一种结构，其结构定义如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">buf_mem_st</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">     <span class="keyword">int</span> length； <span class="comment">/* current number of bytes */</span></span><br><span class="line">     <span class="keyword">char</span> *data;</span><br><span class="line">     <span class="keyword">int</span> <span class="built_in">max</span>; <span class="comment">/* size of buffer */</span></span><br><span class="line">&#125; BUF_MEM;</span><br></pre></td></tr></table></figure>
<p>注意内存型BIO的内存是可以无限扩大的，也就是说无论写入多少数据都可以成功执行。一般任何写入内存型BIO的数据都可以被读出，除非该内存型BIO为只读类型。</p>
<p>内存型的BIO_METHOD定义如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> BIO_METHOD mem_method=</span><br><span class="line">&#123;</span><br><span class="line">     BIO_TYPE_MEM,</span><br><span class="line">     <span class="string">&quot;memory buffer&quot;</span>,</span><br><span class="line">     mem_write,</span><br><span class="line">     mem_read,</span><br><span class="line">     mem_puts,</span><br><span class="line">     mem_gets,</span><br><span class="line">     mem_ctrl,</span><br><span class="line">     mem_new,</span><br><span class="line">     mem_free,</span><br><span class="line">     <span class="literal">NULL</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><strong>BIO_write和BIO_read</strong>函数是支持的。对内存型BIO执行写操作总是成功的，因为内存型BIO的内存能够无限扩大。<strong>任何一个对可读写的内存型BIO的</strong>读操作都会在使用内部拷贝操作从BIO里面删除该段数据，这样一来，如果BIO里面有大量的数据，而读的却只是很小的一些片断，那么会导致操作非常慢。<strong>使用只读的内存型BIO避免了这个问题</strong>。在使用的时候，如果内存型BIO必须使用可读写的，那么可以加一个Buffer型BIO到BIO链中，这可以使操作速度更快。</p>
<p><strong>BIO_gets和BIO_puts</strong>操作在内存型BIO是支持的。</p>
<p>如果设置了BIO_CLOSE标志，那么内存型BIO被释放的时候其底层的BUF_MEM型BIO也同时被释放。</p>
<p><strong>BIO_reset</strong>函数被调用时，如果该BIO是可读写的，那么该BIO所有数据都会被清空；如果该BIO是只读的，那么该操作只会简单将指针指向原始位置，里面的数据可以再读。</p>
<p><strong>BIO_eof</strong>返回true，表明只读时候BIO里面没有可读数据。</p>
<p><strong>BIO_ctrl_pending</strong>返回目前BIO里面存储的数据的字节(byte)数。</p>
<p>程序示例：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	BIO     *b=<span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">int</span>     len=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">char</span>    *out=<span class="literal">NULL</span>;</span><br><span class="line">	b=BIO_new(BIO_s_mem());</span><br><span class="line">	len=BIO_write(b,<span class="string">&quot;openssl&quot;</span>,<span class="number">4</span>); <span class="comment">//将4字节的数据写入b（即只写入了&quot;open&quot;），返回值为4</span></span><br><span class="line">	len=BIO_printf(b,<span class="string">&quot;%s&quot;</span>,<span class="string">&quot;Hello world!\n&quot;</span>); <span class="comment">//将字符串写入b</span></span><br><span class="line">	len=BIO_ctrl_pending(b); <span class="comment">//返回存储字节数</span></span><br><span class="line">	out=(<span class="keyword">char</span> *)OPENSSL_malloc(len);</span><br><span class="line">	len=BIO_read(b,out,len); <span class="comment">//从b的缓冲区中读取全部字符串</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,out);<span class="comment">//使用printf可以将out中的内容打印出来</span></span><br><span class="line">	OPENSSL_free(out);</span><br><span class="line">	BIO_free(b);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="bio对-2"><a class="markdownIt-Anchor" href="#bio对-2"></a> BIO对</h3>
<p>BIO对也是作为一种source/sink类型的BIO来处理的，也就是说，BIO里面还提供了一种专门的BIO_METHO方法来处理BIO对的各种操作。BIO对类型的BIO各种相关的函数定义如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/bio.h&gt; </span></span></span><br><span class="line"><span class="function">BIO_METHOD *<span class="title">BIO_s_bio</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_make_bio_pair(b1,b2) (int)BIO_ctrl(b1,BIO_C_MAKE_BIO_PAIR,0,b2) <span class="comment">//将两个单独的BIO连接起来形成BIO对</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_destroy_bio_pair(b) (int)BIO_ctrl(b,BIO_C_DESTROY_BIO_PAIR,0,NULL) <span class="comment">//将两个连接起来的BIO对拆开，如果一个BIO对的任何一个被释放则自动执行该操作</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_shutdown_wr(b) (int)BIO_ctrl(b, BIO_C_SHUTDOWN_WR, 0, NULL) <span class="comment">//关闭BIO对中的其中一个BIO，在这之后，针对于该BIO的写操作返回错误，从另一个BIO读取数据的时候返回剩余有效数据或者EOF</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_set_write_buf_size(b,size) (int)BIO_ctrl(b,BIO_C_SET_WRITE_BUF_SIZE,size,NULL) <span class="comment">//设置BIO的缓冲区大小</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_get_write_buf_size(b,size) (size_t)BIO_ctrl(b,BIO_C_GET_WRITE_BUF_SIZE,size,NULL) <span class="comment">//返回写缓冲区的大小</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">BIO_new_bio_pair</span><span class="params">(BIO **bio1, <span class="keyword">size_t</span> writebuf1, BIO **bio2, <span class="keyword">size_t</span> writebuf2)</span></span>; <span class="comment">//其实是调用BIO_new,BIO_make_bio_pair和BIO_set_write_buf_size函数来创建一对BIO对</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_get_write_guarantee(b) (int)BIO_ctrl(b,BIO_C_GET_WRITE_GUARANTEE,0,NULL) <span class="comment">//返回当前能够写入BIO的数据的最大长度</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">size_t</span> <span class="title">BIO_ctrl_get_write_guarantee</span><span class="params">(BIO *b)</span></span>; <span class="comment">//返回当前能够写入BIO的数据的最大长度</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_get_read_request(b) (int)BIO_ctrl(b,BIO_C_GET_READ_REQUEST,0,NULL) <span class="comment">//返回要求发送的数据的长度</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">size_t</span> <span class="title">BIO_ctrl_get_read_request</span><span class="params">(BIO *b)</span></span>; <span class="comment">//返回要求发送的数据的长度</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>    <span class="title">BIO_ctrl_reset_read_request</span><span class="params">(BIO *b)</span></span>; <span class="comment">//把BIO_get_read_request要返回值设置为0</span></span><br></pre></td></tr></table></figure>
<p>所谓的BIO对只是将两个BIO的终端输出（BIO结构中参数peer的ptr成员）相互设置为对方，从而形成一种对称的结构：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bio1-&gt;peer-&gt;ptr&#x3D;bio2</span><br><span class="line">bio2-&gt;peer-&gt;ptr&#x3D;bio1</span><br></pre></td></tr></table></figure>
<p>BIO对类型的BIO_METHOD定义如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> BIO_METHOD methods_biop =</span><br><span class="line">&#123;       </span><br><span class="line">     BIO_TYPE_BIO,</span><br><span class="line">     <span class="string">&quot;BIO pair&quot;</span>,</span><br><span class="line">     bio_write,</span><br><span class="line">     bio_read,</span><br><span class="line">     bio_puts,</span><br><span class="line">     <span class="literal">NULL</span> <span class="comment">/* 没有定义 bio_gets */</span>,</span><br><span class="line">     bio_ctrl,</span><br><span class="line">     bio_new,</span><br><span class="line">     bio_free,</span><br><span class="line">     <span class="literal">NULL</span> <span class="comment">/* 没有定义 bio_callback_ctrl */</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>因为没有提供内部数据结构的内存锁结构(lock)，所以，<strong>一般来说一个BIO对的两个BIO都必须在一个线程下使用</strong>。因为BIO链通常是以一个source/sink  BIO结束的，所以就可以实现应用程序通过控制BIO对的一个BIO从而控制整个BIO链的数据处理。其实，也就相当于BIO对给应用程序提供了一个处理整个BIO链的入口。BIO对的一个典型应用就是在应用程序里面控制TLS/SSL的I/O接口，一般来说，在应用程序想在TLS/SSL中使用非标准的传输方法或者不适合使用标准的socket方法的时候就可以采用这样的方法来实现。</p>
<p>BIO对释放的时候，需要分别释放两个BIO，如果在使用BIO_free或者BIO_free_all释放了其中一个BIO的时候，另一个BIO就也必须要释放。</p>
<p>当BIO对使用在双向应用程序的时候，如TLS/SSL，一定要对写缓冲区里面的数据执行flush操作。当然，也可以通过在BIO对中的另一个BIO调用BIO_pending函数，如果有数据在缓冲区中，那么就将它们读出并发送到底层的传输通道中去。为了使请求或BIO_should_read函数调用成功（为true），在执行任何正常的操作（如select）之前，都必须这样做才行。</p>
<p><strong>BIO_read</strong>函数从缓冲BIO中读取数据，如果没有数据，则发出一个重试请求。</p>
<p><strong>BIO_write</strong>函数往缓冲BIO中写入数据，如果缓冲区已满，则发出一个重试请求。</p>
<p><strong>BIO_ctrl_pending和BIO_ctrl_wpending</strong>函数可以用来查看在读或写缓冲区里面有效的数据的数量。</p>
<p><strong>BIO_reset</strong>函数将写缓冲区里面的数据清除。</p>
<h3 id="连接类型bio"><a class="markdownIt-Anchor" href="#连接类型bio"></a> 连接类型BIO</h3>
<p>该类型的BIO封装了socket的Connect方法，它使得编程的时候可以使用统一的BIO规则进行socket的connect连接的操作和数据的发送接受，而不用关心具体平台的Socket的connect方法的区别。其相关定义的一些函数如下(openssl\bio.h)：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">BIO_METHOD * <span class="title">BIO_s_connect</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>      BIO_set_conn_hostname(b,name)  BIO_ctrl(b,BIO_C_SET_CONNECT,0,(char *)name) <span class="comment">//使用字符串设置主机名，可以是IP地址或是网址等形式</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>      BIO_set_conn_port(b,port)      BIO_ctrl(b,BIO_C_SET_CONNECT,1,(char *)port) <span class="comment">//设置主机端口号</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>      BIO_set_conn_ip(b,ip)          BIO_ctrl(b,BIO_C_SET_CONNECT,2,(char *)ip) <span class="comment">//使用二进制模式设置ip</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>      BIO_set_conn_int_port(b,port)  BIO_ctrl(b,BIO_C_SET_CONNECT,3,(char *)port) <span class="comment">//以整数形式设置主机端口号</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>      BIO_get_conn_hostname(b)       BIO_ptr_ctrl(b,BIO_C_GET_CONNECT,0) <span class="comment">//返回连接类型BIO的主机名</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>      BIO_get_conn_port(b)           BIO_ptr_ctrl(b,BIO_C_GET_CONNECT,1) <span class="comment">//返回字符串类型的端口信息</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>      BIO_get_conn_ip(b,ip)          BIO_ptr_ctrl(b,BIO_C_SET_CONNECT,2) <span class="comment">//返回二进制形式的ip地址</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>      BIO_get_conn_int_port(b,port)  BIO_int_ctrl(b,BIO_C_SET_CONNECT,3,port) <span class="comment">//返回整数形式端口号</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>      BIO_set_nbio(b,n)              BIO_ctrl(b,BIO_C_SET_NBIO,(n),NULL) <span class="comment">//设置I/O的非阻塞标志</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>      BIO_do_connect(b)              BIO_do_handshake(b) <span class="comment">//进行连接操作，如果连接成功返回1，否则返回0或负值</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BIO *        <span class="title">BIO_new_connect</span><span class="params">(<span class="keyword">char</span> *str)</span> <span class="comment">//创建并返回一个连接类型的BIO，其实，它调用了BIO_s_connect、BIO_new和BIO_set_conn_hostname函数完成了整个操作。成功则返回一个BIO，否则返回NULL。</span></span></span><br></pre></td></tr></table></figure>
<p>这种类型的BIO_METHOD结构定义如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">static BIO_METHOD methods_connectp&#x3D;</span><br><span class="line">&#123;</span><br><span class="line">     BIO_TYPE_CONNECT,</span><br><span class="line">     &quot;socket connect&quot;,</span><br><span class="line">     conn_write,</span><br><span class="line">     conn_read,</span><br><span class="line">     conn_puts,</span><br><span class="line">     NULL, &#x2F;* connect_gets, *&#x2F;</span><br><span class="line">     conn_ctrl,</span><br><span class="line">     conn_new,</span><br><span class="line">     conn_free,</span><br><span class="line">     conn_callback_ctrl,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><strong>BIO_read和BIO_write</strong>的操作调用底层的连接的IO操作来完成。如果在服务器地址和端口设置正确，但连接没有建立的时候调用读写操作函数，那么会先进行连接的建立操作，然后再进行读写操作。</p>
<p><strong>BIO_puts</strong>操作是支持的，但是<strong>BIO_gets操作不支持</strong>，这在该类型BIO的BIO_METHOD结构定义中就可以看出来。</p>
<p>如果<strong>关闭标志设置了，那么在BIO被释放的时候，任何活动的连接和socket都会被关闭</strong>。</p>
<p><strong>BIO_reset</strong>方法被调用的时候，连接（connect）类型的BIO的任何活动连接都会被关闭，从而回到可以重新跟同样的主机建立连接的状态。</p>
<p><strong>BIO_get_fd</strong>函数返回连接类型的BIO的底层socket，当参数c不是NULL的时候，就将该socket赋值给c，当然，socket也作为返回值。c参数应该为int*类型。如果BIO没有初始化，则返回－1。</p>
<p>例：连接到本地Web服务器</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/bio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span>	<span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BIO *cbio, *out;</span><br><span class="line">    <span class="keyword">int</span> len;</span><br><span class="line">    <span class="keyword">char</span> tmpbuf[<span class="number">1024</span>];</span><br><span class="line"></span><br><span class="line">    cbio = BIO_new_connect(<span class="string">&quot;localhost:http&quot;</span>);</span><br><span class="line">    out = BIO_new_fp(<span class="built_in">stdout</span>, BIO_NOCLOSE);</span><br><span class="line">    <span class="keyword">if</span>(BIO_do_connect(cbio) &lt;= <span class="number">0</span>) </span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Error connecting to server\n&quot;</span>);</span><br><span class="line">    BIO_puts(cbio, <span class="string">&quot;GET / HTTP/1.0\n\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(;;) </span><br><span class="line">    &#123;</span><br><span class="line">           len = BIO_read(cbio, tmpbuf, <span class="number">1024</span>);</span><br><span class="line">           <span class="keyword">if</span>(len &lt;= <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">           BIO_write(out, tmpbuf, len);</span><br><span class="line">    &#125;</span><br><span class="line">    BIO_free(cbio);</span><br><span class="line">    BIO_free(out);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="接受类型bio"><a class="markdownIt-Anchor" href="#接受类型bio"></a> 接受类型BIO</h3>
<p>接受（accept）类型的BIO跟连接（connect）类型BIO是相对应的，它封装了Socket的accept方法及其相关的一些操作，使得能够对不同的平台使用同一的函数进行操作。其定义的相关函数如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include&lt;openssl&#x2F;bio.h&gt;</span><br><span class="line">BIO_METHOD * BIO_s_accept(void);  </span><br><span class="line"></span><br><span class="line">#define      BIO_set_accept_port(b,name) BIO_ctrl(b,BIO_C_SET_ACCEPT,0,(char*)name) &#x2F;&#x2F;使用字串名来设置接受端口，形式为&quot;host:port&quot;，这两部分可以为*，表示可以使用任意接口和端口</span><br><span class="line">#define      BIO_get_accept_port(b) BIO_ptr_ctrl(b,BIO_C_GET_ACCEPT,0)  </span><br><span class="line"></span><br><span class="line">BIO *        BIO_new_accept(char *host_port); &#x2F;&#x2F;该函数将BIO_new和BIO_set_accept_port函数放在一个函数里面调用，创建一个新的接受类型BIO</span><br><span class="line"></span><br><span class="line">#define      BIO_set_nbio_accept(b,n) BIO_ctrl(b,BIO_C_SET_ACCEPT,1,(n)?&quot;a&quot;:NULL) &#x2F;&#x2F;设置接受socket是否为阻塞模式，参数n为0为阻塞模式，1为非阻塞模式</span><br><span class="line">#define      BIO_set_accept_bios(b,bio) BIO_ctrl(b,BIO_C_SET_ACCEPT,2,(char *)bio) &#x2F;&#x2F;设置一个BIO链，当接受到一个连接之后，这个设置好的BIO链就会被附加到整个BIO链上。调用这一函数之后，只有在接受BIO被释放后链上的BIO才能自动释放</span><br><span class="line">#define      BIO_set_bind_mode(b,mode) BIO_ctrl(b,BIO_C_SET_BIND_MODE,mode,NULL) &#x2F;&#x2F;设置绑定模式</span><br><span class="line">#define      BIO_get_bind_mode(b,mode) BIO_ctrl(b,BIO_C_GET_BIND_MODE,0,NULL) &#x2F;&#x2F;获得绑定模式</span><br><span class="line">#define      BIO_BIND_NORMAL 0 &#x2F;&#x2F;默认绑定模式，那么另外一个socket就不能绑定到同一个端口</span><br><span class="line">#define      BIO_BIND_REUSEADDR_IF_UNUSED 1 &#x2F;&#x2F;绑定模式1，首先会尝试BIO_BIND_NORMAL的模式绑定到端口，如果失败了而且端口没有使用，那么就会使用BIO_BIND_REUSEADDR 模式绑定到端口</span><br><span class="line">#define      BIO_BIND_REUSEADDR 2 &#x2F;&#x2F;绑定模式2，另外的socket可以绑定到同一个端口</span><br><span class="line">#define      BIO_do_accept(b) BIO_do_handshake(b) 当它在接受（accept）BIO设置好之后第一被调用的时候，它会创建一个接受socket并把它跟地址绑定；第二次被调用的时候，它会等待连接的到来</span><br></pre></td></tr></table></figure>
<p>接受类型BIO的BIO_METHOD结构定义如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> BIO_METHOD methods_acceptp=</span><br><span class="line">&#123;</span><br><span class="line">     BIO_TYPE_ACCEPT,</span><br><span class="line">     <span class="string">&quot;socket accept&quot;</span>,</span><br><span class="line">     acpt_write,</span><br><span class="line">     acpt_read,</span><br><span class="line">     acpt_puts,</span><br><span class="line">     <span class="literal">NULL</span>, <span class="comment">/* connect_gets, */</span></span><br><span class="line">     acpt_ctrl,</span><br><span class="line">     acpt_new,</span><br><span class="line">     acpt_free,</span><br><span class="line">     <span class="literal">NULL</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>这一类型的BIO对各种平台的TCP/IP的accept做了封装，所以在使用的时候就可以同一的使用BIO的规则进行操作，而不用担心因为不同的平台带来程序改写或增加移植的工作量。</p>
<p><strong>BIO_read和BIO_write</strong>函数操作调用了底层平台连接的I/O相关操作，如果这时候没有连接建立，端口设置正确，那么该BIO就会等待连接的建立。事实上，当一个连接建立的时候，一个新的socket类型BIO就会被创建并附加到BIO链中，形成accept-&gt;socket的BIO结构，所以这时候对初始化了的接受socket进行IO操作就会导致它处于等待连接建立的状态。当一个接受类型的BIO在BIO链的末尾的时候，在处理I/O调用之前它会先等待一个连接的建立；如果不是在末尾，那么它简单的把I/O调用传到下一个BIO。</p>
<p>如果接受（accept）类型BIO的<strong>关闭标志设置</strong>了，那么当BIO被释放的时候，该BIO链上任何活动的连接和socket都会被关闭。</p>
<p><strong>BIO_get_fd和BIO_set_fd</strong>可以用来取得和设置该连接的socket描述符。</p>
<h2 id="filter类型bio"><a class="markdownIt-Anchor" href="#filter类型bio"></a> Filter类型BIO</h2>
<h3 id="null型过滤bio"><a class="markdownIt-Anchor" href="#null型过滤bio"></a> NULL型过滤BIO</h3>
<p>NULL型的filterBIO的定义如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/bio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BIO_METHOD * <span class="title">BIO_f_null</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br></pre></td></tr></table></figure>
<p>该函数返回一个NULL型的过滤BIO_METHOD结构，NULL过滤型BIO是一个不作任何事情的BIO。针对该类型BIO的任何调用都会被简单传递中BIO链中的下一个BIO中去，也就相当于该BIO是不存在的一样。</p>
<h3 id="缓冲类型bio"><a class="markdownIt-Anchor" href="#缓冲类型bio"></a> 缓冲类型BIO</h3>
<p>缓冲类型BIO的相关定义如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/bio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_get_buffer_num_lines(b)         BIO_ctrl(b,BIO_C_GET_BUFF_NUM_LINES,0,NULL) <span class="comment">//返回缓冲区中目前数据的行数</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_set_read_buffer_size(b,size)    BIO_int_ctrl(b,BIO_C_SET_BUFF_SIZE,size,0) <span class="comment">//设置读缓冲区大小</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_set_write_buffer_size(b,size)   BIO_int_ctrl(b,BIO_C_SET_BUFF_SIZE,size,1) <span class="comment">//设置写缓冲区大小</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_set_buffer_size(b,size)         BIO_ctrl(b,BIO_C_SET_BUFF_SIZE,size,NULL) <span class="comment">//设置读写缓冲区大小</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_set_buffer_read_data(b,buf,num) BIO_ctrl(b,BIO_C_SET_BUFF_READ_DATA,num,buf) <span class="comment">//清空缓冲区原有的数据</span></span></span><br></pre></td></tr></table></figure>
<p>buffer类型的BIO_METHOD结构定义如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">static BIO_METHOD methods_buffer&#x3D;</span><br><span class="line">&#123;</span><br><span class="line">     BIO_TYPE_BUFFER,</span><br><span class="line">     &quot;buffer&quot;,</span><br><span class="line">     buffer_write,</span><br><span class="line">     buffer_read,</span><br><span class="line">     buffer_puts,</span><br><span class="line">     buffer_gets,</span><br><span class="line">     buffer_ctrl,</span><br><span class="line">     buffer_new,</span><br><span class="line">     buffer_free,</span><br><span class="line">     buffer_callback_ctrl,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>由结构定义可见，<strong>该类型BIO支持所有BIO的I/O函数</strong>。</p>
<p>写入缓冲(buffer)BIO的数据存储在缓冲区里面，定期写入到BIO链的下一个BIO中。事实上，<strong>只有缓冲区已满或者调用了BIO_flush函数时</strong>，数据才会写入下面的BIO，所以，当任何存储在缓冲区的数据需要写入的时候（如在使用BIO_pop函数从BIO链中删除一个buffer类型BIO之前），<strong>必须使用BIO_flush函数</strong>，如果BIO链的末尾是一个非阻塞型的BIO，有时候调用BIO_flush可能出现失败，需要重试的情况。</p>
<p>从该类型BIO读取数据时，数据从下一个BIO填充到该BIO内部缓冲区中，然后再读出来。该类型BIO支持BIO_gets和BIO_puts方法，事实上，BIO_gets函数是通过在下一个BIO的BIO_read函数来实现的，所以，如果一个BIO不支持BIO_gets方法（如SSL类型的BIO），可以通过预先附加一个buffer类型BIO来实现BIO_gets的功能。</p>
<p><strong>BIO_reset</strong>被调用的时候，该类型BIO里面的所有数据都会被清空。</p>
<h3 id="base64类型bio"><a class="markdownIt-Anchor" href="#base64类型bio"></a> Base64类型BIO</h3>
<p>Base64类型的BIO定义在evp目录下。当往该BIO写入数据时，数据被Base64编码，当从该BIO读数据时，数据被Base64解码。该BIO不支持BIO_gets和BIO_puts的功能。它的定义如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/bio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BIO_METHOD * <span class="title">BIO_f_base64</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br></pre></td></tr></table></figure>
<p>Base64类型的BIO_METHOD结构定义如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> BIO_METHOD methods_b64=</span><br><span class="line">&#123;</span><br><span class="line">     BIO_TYPE_BASE64,</span><br><span class="line">     <span class="string">&quot;base64 encoding&quot;</span>,</span><br><span class="line">     b64_write,</span><br><span class="line">     b64_read,</span><br><span class="line">     <span class="literal">NULL</span>, <span class="comment">/* b64_puts, */</span></span><br><span class="line">     <span class="literal">NULL</span>, <span class="comment">/* b64_gets, */</span></span><br><span class="line">     b64_ctrl,</span><br><span class="line">     b64_new,</span><br><span class="line">     b64_free,</span><br><span class="line">     b64_callback_ctrl,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>BIO_set_flags函数可以用来设置标记BIO_FLAGS_BASE64_NO_NL，该标记设置后，将把所有数据编码成为一行。由于base64编码本身格式的原因，不能准确可靠的决定编码后的数据块的结束位置，使用的时候需要注意数据的长度问题。</p>
<p>程序示例：将字符串进行编码并将编码后的数据输出到标准输出设备</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">BIO *bio, *b64;</span><br><span class="line"><span class="keyword">char</span> message[] = <span class="string">&quot;Hello World \n&quot;</span>;</span><br><span class="line">b64 = BIO_new(BIO_f_base64());</span><br><span class="line">bio = BIO_new_fp(<span class="built_in">stdout</span>, BIO_NOCLOSE);</span><br><span class="line">bio = BIO_push(b64, bio);</span><br><span class="line">BIO_write(bio, message, <span class="built_in">strlen</span>(message));</span><br><span class="line">BIO_flush(bio);</span><br><span class="line">BIO_free_all(bio);</span><br></pre></td></tr></table></figure>
<h3 id="cipher类型bio"><a class="markdownIt-Anchor" href="#cipher类型bio"></a> Cipher类型BIO</h3>
<p>该类型的BIO将<strong>写入该BIO的数据加密，从该BIO读数据时数据被解密</strong>，它事实上封装了EVP_CipherInit、EVP_CipherUpdate、EVP_CipherFinal三种方法。它不支持BIO_puts和BIO_gets的方法，如果要使用这两个方法，可以通过在前面附加一个buffer类型的BIO来实现。它的定义如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/bio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BIO_METHOD * <span class="title">BIO_f_cipher</span><span class="params">(<span class="keyword">void</span>)</span></span>; <span class="comment">//返回cipher类型的BIO_METHOD</span></span><br><span class="line"><span class="function"><span class="keyword">void</span>         <span class="title">BIO_set_cipher</span><span class="params">(BIO *b,<span class="keyword">const</span> EVP_CIPHER *cipher,<span class="keyword">unsigned</span> <span class="keyword">char</span> *key, <span class="keyword">unsigned</span> <span class="keyword">char</span> *iv, <span class="keyword">int</span> enc)</span></span>; <span class="comment">//设置BIO的加密算法，key为加密密钥，iv为初始化的IV，enc=1为加密，enc=0为解密</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span>          <span class="title">BIO_get_cipher_status</span><span class="params">(BIO *b)</span> <span class="comment">//检测解密是否成功执行</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span>          <span class="title">BIO_get_cipher_ctx</span><span class="params">(BIO *b, EVP_CIPHER_CTX **pctx)</span> <span class="comment">//返回BIO的内部加密体制</span></span></span><br></pre></td></tr></table></figure>
<p>cipher类型的BIO_METHOD结构如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> BIO_METHOD methods_enc=</span><br><span class="line">&#123;</span><br><span class="line">     BIO_TYPE_CIPHER,</span><br><span class="line">     <span class="string">&quot;cipher&quot;</span>,</span><br><span class="line">     enc_write,</span><br><span class="line">     enc_read,</span><br><span class="line">     <span class="literal">NULL</span>, <span class="comment">/* enc_puts, */</span></span><br><span class="line">     <span class="literal">NULL</span>, <span class="comment">/* enc_gets, */</span></span><br><span class="line">     enc_ctrl,</span><br><span class="line">     enc_new,</span><br><span class="line">     enc_free,</span><br><span class="line">     enc_callback_ctrl,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>跟base64型BIO相似，当调用<strong>BIO_flush函数</strong>时，表明所有数据都已经通过该类型BIO加密了，用来将最后的一段数据通过该BIO进行加密。在进行加密的时候，<strong>必须调用BIO_flush</strong>函数来把最后的数据通过BIO进行加密，否则最后的数据会在解密的时候出现失败的情况。当从一个加密类型的BIO读取数据时，当读到最后一段数据时，会通过检测EOF自动检测到数据结束标志并自动将这段数据解密。</p>
<h3 id="md类型bio"><a class="markdownIt-Anchor" href="#md类型bio"></a> MD类型BIO</h3>
<p>MD类型BIO对通过它的任何数据都进行摘要操作（message digest），事实上，该类型BIO封装了EVP_DigestInit、EVP_DigestUpdate和EVP_DigestFinal三个函数的功能和行为。该类型BIO是完全对称的，也就是说，不管是读数据（BIO_read）还是写数据（BIO_write），都进行相同的摘要操作。</p>
<p>MD类型BIO的定义如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/bio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BIO_METHOD * <span class="title">BIO_f_md</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">BIO_set_md</span><span class="params">(BIO *b,EVP_MD *md)</span></span>; <span class="comment">//用参数md设置给定的BIO摘要算法。该函数必须在执行读写操作前调用，用于初始化一个摘要类型的BIO，调用成功返回1，失败返回0</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">BIO_get_md</span><span class="params">(BIO *b,EVP_MD **mdp)</span></span>; <span class="comment">//返回BIO摘要方法的指针到mdp参数里面。调用成功返回1，否则返回0。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">BIO_get_md_ctx</span><span class="params">(BIO *b,EVP_MD_CTX **mdcp)</span></span>; <span class="comment">//返回摘要BIO的方法结构到mdcp参数里面</span></span><br></pre></td></tr></table></figure>
<p>MD类型的BIO_METHOD结构如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> BIO_METHOD methods_md=</span><br><span class="line">&#123;</span><br><span class="line">     BIO_TYPE_MD,<span class="string">&quot;message digest&quot;</span>,</span><br><span class="line">     md_write,</span><br><span class="line">     md_read,</span><br><span class="line">     <span class="literal">NULL</span>, <span class="comment">/* md_puts, */</span></span><br><span class="line">     md_gets,</span><br><span class="line">     md_ctrl,</span><br><span class="line">     md_new,</span><br><span class="line">     md_free,</span><br><span class="line">     md_callback_ctrl,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><strong>BIO_gets</strong>函数执行的时候，如果给定的size参数足够大，可以完成摘要（digest）计算，那么就会返回摘要值。BIO_puts函数是不支持的，如果需要支持该函数，可以在前面附加一个buffer类型的BIO。<br />
<strong>BIO_reset</strong>函数重新初始化一个摘要类型的BIO，事实上，它是简单重新调用了EVP_DigestInit函数进行初始化。<br />
注意，在从一个摘要BIO里面读取完摘要信息之后，在重新使用该BIO之前，<strong>必须</strong>调用BIO_reset或BIO_set_md重新初始化该BIO才行。</p>
<p>示例：从标准输入流中读取数据然后输出数据摘要</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/bio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        BIO *bio,*mdtmp;</span><br><span class="line">        <span class="keyword">char</span> buf[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> rdlen;</span><br><span class="line"></span><br><span class="line">		bio=BIO_new_fp(<span class="built_in">stdin</span>,BIO_NOCLOSE);</span><br><span class="line">        mdtmp=BIO_new(BIO_f_md());</span><br><span class="line">        BIO_set_md(mdtmp,EVP_sha1());</span><br><span class="line"></span><br><span class="line">        bio=BIO_push(mdtmp,bio);</span><br><span class="line">        mdtmp=BIO_new(BIO_f_md());</span><br><span class="line">        BIO_set_md(mdtmp,EVP_md5());</span><br><span class="line">        bio=BIO_push(mdtmp,bio);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">                rdlen=BIO_read(bio,buf,<span class="keyword">sizeof</span>(buf));</span><br><span class="line">        &#125;<span class="keyword">while</span>(rdlen&gt;<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">                EVP_MD* md;</span><br><span class="line">                mdtmp=BIO_find_type(mdtmp,BIO_TYPE_MD);</span><br><span class="line">                <span class="keyword">if</span>(!mdtmp)</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                BIO_get_md(mdtmp,&amp;md);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,OBJ_nid2sn(EVP_MD_type(md)));</span><br><span class="line">                <span class="keyword">int</span> mdlen=BIO_gets(mdtmp,buf,EVP_MAX_MD_SIZE);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;mdlen;i++)</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;:%02X&quot;</span>,buf[i]);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                mdtmp=BIO_next(mdtmp);</span><br><span class="line">        &#125;<span class="keyword">while</span>(mdtmp);</span><br><span class="line">        BIO_free_all(bio);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="ssl类型bio"><a class="markdownIt-Anchor" href="#ssl类型bio"></a> SSL类型BIO</h3>
<p>SSL类型BIO封装了openssl里面的ssl规则和函数，相当于提供了一个使用SSL很好的有效工具。它的定义如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/bio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openss/ssl.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BIO_METHOD *<span class="title">BIO_f_ssl</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_set_ssl(b,ssl,c)       BIO_ctrl(b,BIO_C_SET_SSL,c,(char *)ssl) <span class="comment">//设置ssl类型BIO的内部ssl指针指向ssl</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_get_ssl(b,sslp)        BIO_ctrl(b,BIO_C_GET_SSL,0,(char *)sslp) <span class="comment">//返回ssl类型BIO内部的ssl结构指针，得到该指针后可以用标志的ssl函数对它进行操作</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_set_ssl_mode(b,client) BIO_ctrl(b,BIO_C_SSL_MODE,client,NULL) <span class="comment">//设置ssl的工作模式，参数client为1代表客户端模式，client为0代表服务器模式</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_set_ssl_renegotiate_bytes(b,num) BIO_ctrl(b,BIO_C_SET_SSL_RENEGOTIATE_BYTES,num,NULL); <span class="comment">//设置重新进行session协商的读写数据的长度为num</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_set_ssl_renegotiate_timeout(b,seconds) </span></span><br><span class="line">BIO_ctrl(b,BIO_C_SET_SSL_RENEGOTIATE_TIMEOUT,seconds,<span class="literal">NULL</span>); <span class="comment">//设置重新进行session协商的时间</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_get_num_renegotiates(b) BIO_ctrl(b,BIO_C_SET_SSL_NUM_RENEGOTIATES,0,NULL); <span class="comment">//返回ssl连接在因为字节限制或时间限制导致session重新协商之前总共读写的数据长度</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BIO*    <span class="title">BIO_new_ssl</span><span class="params">(SSL_CTX *ctx,<span class="keyword">int</span> client)</span></span>; <span class="comment">//使用ctx参数所代表的SSL_CTX结构创建一个SSL类型的BIO，如果client不为0则使用客户端模式</span></span><br><span class="line"><span class="function">BIO*    <span class="title">BIO_new_ssl_connect</span><span class="params">(SSL_CTX *ctx)</span></span>; <span class="comment">//创建一个包含ssl类型BIO的新BIO链，并在后面附加了一个连接类型的BIO</span></span><br><span class="line"><span class="function">BIO*    <span class="title">BIO_new_buffer_ssl_connect</span><span class="params">(SSL_CTX *ctx)</span></span>; <span class="comment">//创建一个包含buffer型的BIO，一个SSL类型的BIO和一个连接类型的BIO</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>     <span class="title">BIO_ssl_copy_session_id</span><span class="params">(BIO *to,BIO *from)</span></span>; <span class="comment">//将BIO链from的SSL Session ID拷贝到BIO链to中</span></span><br><span class="line"><span class="function"><span class="keyword">void</span>    <span class="title">BIO_ssl_shutdown</span><span class="params">(BIO *bio)</span></span>; <span class="comment">//关闭一个BIO链中的ssl连接</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_do_handshake(b) BIO_ctrl(b,BIO_C_DO_STATE_MACHINE,0,NULL) <span class="comment">//在相关的BIO上启动SSL握手过程并建立SSL连接。连接成功建立返回1，否则返回0或负值</span></span></span><br></pre></td></tr></table></figure>
<p>SSL类型的BIO_METHOD结构如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> BIO_METHOD methods_sslp=</span><br><span class="line">&#123;</span><br><span class="line">    BIO_TYPE_SSL,<span class="string">&quot;ssl&quot;</span>,</span><br><span class="line">    ssl_write,</span><br><span class="line">    ssl_read,</span><br><span class="line">    ssl_puts,</span><br><span class="line">    <span class="literal">NULL</span>, <span class="comment">/* ssl_gets, */</span></span><br><span class="line">    ssl_ctrl,</span><br><span class="line">    ssl_new,</span><br><span class="line">    ssl_free,</span><br><span class="line">    ssl_callback_ctrl,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><strong>BIO_read和BIO_write</strong>函数调用的时候，SSL类型的BIO会使用SSL协议进行底层的I/O操作。如果此时SSL连接并没有建立，那么就会在调用第一个IO函数的时候先进行连接的建立。</p>
<p>如果使用<strong>BIO_push</strong>将一个BIO附加到一个SSL类型的BIO上，那么SSL类型的BIO读写数据的时候，它会被自动调用。</p>
<p><strong>BIO_reset</strong>调用的时候，会调用SSL_shutdown函数关闭目前所有处于连接状态的SSL，然后再对下一个BIO调用BIO_reset，这功能一般就是将底层的传输连接断开。调用完成之后，SSL类型的BIO就处于初始的接受或连接状态。</p>
<p>如果<strong>设置了BIO关闭标志</strong>，那么SSL类型BIO释放的时候，内部的SSL结构也会被SSL_free函数释放。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/bio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/ssl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        BIO *sbio,*out;</span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        <span class="keyword">char</span> tmpbuf[<span class="number">1024</span>];</span><br><span class="line">        SSL_CTX* ctx;</span><br><span class="line">        SSL* ssl;</span><br><span class="line"></span><br><span class="line">        SSLeay_add_ssl_algorithms();</span><br><span class="line">        OpenSSL_add_all_algorithms();</span><br><span class="line">        ctx=SSL_CTX_new(SSLv23_client_method());</span><br><span class="line">        sbio=BIO_new_ssl_connect(ctx);</span><br><span class="line">        BIO_get_ssl(sbio,&amp;ssl);</span><br><span class="line">        <span class="keyword">if</span>(!ssl)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">&quot;Cannot locate SSL pointer\n&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        SSL_set_mode(ssl,SSL_MODE_AUTO_RETRY);</span><br><span class="line">        BIO_set_conn_hostname(sbio,<span class="string">&quot;mybank.icbc.com.cn:https&quot;</span>); <span class="comment">//这里可以改</span></span><br><span class="line">        out=BIO_new_fp(<span class="built_in">stdout</span>,BIO_NOCLOSE);</span><br><span class="line">        BIO_printf(out,<span class="string">&quot;Connecting......\n&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(BIO_do_connect(sbio)&lt;=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">&quot;Error connecting to server\n&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(BIO_do_handshake(sbio)&lt;=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">&quot;Error establishing SSL connection\n&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        BIO_puts(sbio,<span class="string">&quot;GET/HTTP/1.0\n&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(;;)</span><br><span class="line">        &#123;</span><br><span class="line">                len=BIO_read(sbio,tmpbuf,<span class="number">1024</span>);</span><br><span class="line">                <span class="keyword">if</span>(len&lt;=<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">                BIO_write(out,tmpbuf,len);</span><br><span class="line">        &#125;</span><br><span class="line">        BIO_free_all(sbio);</span><br><span class="line">        BIO_free(out);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h1>
<p>不同的BIO_METHOD对应的type取值：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#define BIO_TYPE_NONE 0</span><br><span class="line">#define BIO_TYPE_MEM (1|0x0400)</span><br><span class="line">#define BIO_TYPE_FILE (2|0x0400)</span><br><span class="line">#define BIO_TYPE_FD (4|0x0400|0x0100)</span><br><span class="line">#define BIO_TYPE_SOCKET (5|0x0400|0x0100)</span><br><span class="line">#define BIO_TYPE_NULL (6|0x0400)</span><br><span class="line">#define BIO_TYPE_SSL (7|0x0200)</span><br><span class="line">#define BIO_TYPE_MD (8|0x0200)</span><br><span class="line">#define BIO_TYPE_BUFFER (9|0x0200)</span><br><span class="line">#define BIO_TYPE_CIPHER (10|0x0200)</span><br><span class="line">#define BIO_TYPE_BASE64 (11|0x0200)</span><br><span class="line">#define BIO_TYPE_CONNECT (12|0x0400|0x0100)</span><br><span class="line">#define BIO_TYPE_ACCEPT (13|0x0400|0x0100)</span><br><span class="line">#define BIO_TYPE_PROXY_CLIENT (14|0x0200)</span><br><span class="line">#define BIO_TYPE_PROXY_SERVER (15|0x0200)</span><br><span class="line">#define BIO_TYPE_NBIO_TEST (16|0x0200)</span><br><span class="line">#define BIO_TYPE_NULL_FILTER (17|0x0200)</span><br><span class="line">#define BIO_TYPE_BER (18|0x0200)</span><br><span class="line">#define BIO_TYPE_BIO (19|0x0400)</span><br><span class="line">#define BIO_TYPE_DESCRIPTOR 0x0100</span><br><span class="line">#define BIO_TYPE_FILTER 0x0200</span><br><span class="line">#define BIO_TYPE_SOURCE_SINK 0x0400</span><br></pre></td></tr></table></figure>
<p>BIO的控制函数</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/bio.h&gt;</span></span></span><br><span class="line"><span class="comment">//最底层BIO控制函数，支持不同的命令输入从而产生不同的功能，一般无需调用</span></span><br><span class="line"><span class="function"><span class="keyword">long</span>   <span class="title">BIO_ctrl</span><span class="params">(BIO *bp,<span class="keyword">int</span> cmd,<span class="keyword">long</span> larg,<span class="keyword">void</span> *parg)</span></span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">//上层BIO控制函数</span></span><br><span class="line"><span class="function"><span class="keyword">char</span>*  <span class="title">BIO_ptr_ctrl</span><span class="params">(BIO *bp,<span class="keyword">int</span> cmd,<span class="keyword">long</span> larg)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">long</span>   <span class="title">BIO_int_ctrl</span><span class="params">(BIO *bp,<span class="keyword">int</span> cmd,<span class="keyword">long</span> larg,<span class="keyword">int</span> iarg)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//最上层BIO控制函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>    <span class="title">BIO_reset</span><span class="params">(BIO *b)</span></span>; <span class="comment">//将BIO状态初始化</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>    <span class="title">BIO_seek</span><span class="params">(BIO *b, <span class="keyword">int</span> ofs)</span></span>; <span class="comment">//将文件相关的BIO的文件指针设置到距离开始位置ofs字节的位置上</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>    <span class="title">BIO_tell</span><span class="params">(BIO *b)</span></span>; <span class="comment">//返回文件相关BIO的当前文件指针位置</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>    <span class="title">BIO_flush</span><span class="params">(BIO *b)</span></span>; <span class="comment">//将BIO内部缓冲区的数据写出</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>    <span class="title">BIO_eof</span><span class="params">(BIO *b)</span></span>; <span class="comment">//如果BIO读取到EOF返回1，否则返回0</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>    <span class="title">BIO_set_close</span><span class="params">(BIO *b,<span class="keyword">long</span> flag)</span></span>; <span class="comment">//设置BIO的关闭标志</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>    <span class="title">BIO_get_close</span><span class="params">(BIO *b)</span></span>; <span class="comment">//读取BIO的关闭标志</span></span><br><span class="line"><span class="comment">//下面四个函数都用于得到BIO中读缓存或写缓存中字符的数目</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>    <span class="title">BIO_pending</span><span class="params">(BIO *b)</span></span>; </span><br><span class="line"><span class="function"><span class="keyword">int</span>    <span class="title">BIO_wpending</span><span class="params">(BIO *b)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">size_t</span> <span class="title">BIO_ctrl_pending</span><span class="params">(BIO *b)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">size_t</span> <span class="title">BIO_ctrl_wpending</span><span class="params">(BIO *b)</span></span>;  </span><br><span class="line"></span><br><span class="line"><span class="comment">//最上层BIO控制函数的宏定义方式</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_reset(b)       (int)BIO_ctrl(b,BIO_CTRL_RESET,0,NULL)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_seek(b,ofs)    (int)BIO_ctrl(b,BIO_C_FILE_SEEK,ofs,NULL)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_tell(b)        (int)BIO_ctrl(b,BIO_C_FILE_TELL,0,NULL)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_flush(b)       (int)BIO_ctrl(b,BIO_CTRL_FLUSH,0,NULL)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_eof(b)         (int)BIO_ctrl(b,BIO_CTRL_EOF,0,NULL)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_set_close(b,c) (int)BIO_ctrl(b,BIO_CTRL_SET_CLOSE,(c),NULL)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_get_close(b)   (int)BIO_ctrl(b,BIO_CTRL_GET_CLOSE,0,NULL)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_pending(b)     (int)BIO_ctrl(b,BIO_CTRL_PENDING,0,NULL)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_wpending(b)    (int)BIO_ctrl(b,BIO_CTRL_WPENDING,0,NULL)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//最底层BIO回调函数控制函数，一般不需要调用。</span></span><br><span class="line"><span class="function"><span class="keyword">long</span>   <span class="title">BIO_callback_ctrl</span><span class="params">(BIO *b, <span class="keyword">int</span> cmd, <span class="keyword">void</span> (*fp)(struct bio_st *, <span class="keyword">int</span>, <span class="keyword">const</span> <span class="keyword">char</span> *, <span class="keyword">int</span>, <span class="keyword">long</span>, <span class="keyword">long</span>))</span></span>;</span><br><span class="line"><span class="comment">//上层BIO回调函数控制函数</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_set_callback(b,cb)      ((b)-&gt;callback=(cb)) <span class="comment">//设置callback函数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_get_callback(b)         ((b)-&gt;callback) <span class="comment">//返回callback函数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_set_callback_arg(b,arg) ((b)-&gt;cb_arg=(char *)(arg)) <span class="comment">//设置callback函数的参数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BIO_get_callback_arg(b)     ((b)-&gt;cb_arg) <span class="comment">//得到callback函数的参数</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//其中，callback函数本身的声明在BIO结构体中。callback函数非常重要，许多控制功能需要用它来协助完成</span></span><br><span class="line"><span class="comment">/*函数参数的解释：</span></span><br><span class="line"><span class="comment">	b：callback函数对应的BIO</span></span><br><span class="line"><span class="comment">	oper：设置BIO将要执行的操作</span></span><br><span class="line"><span class="comment">	argp，argi，argl：根据oper定义操作的不同而不同，是相应操作中要使用到的参数</span></span><br><span class="line"><span class="comment">	retvalue：默认的callback函数返回值*/</span></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="title">callback</span><span class="params">(BIO *b, <span class="keyword">int</span> oper, <span class="keyword">const</span> <span class="keyword">char</span> *argp,<span class="keyword">int</span> argi, <span class="keyword">long</span> argl, <span class="keyword">long</span> retvalue)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//此外，还有一个用于调试目的的函数，其声明如下：</span></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="title">BIO_debug_callback</span><span class="params">(BIO *bio,<span class="keyword">int</span> cmd,<span class="keyword">const</span> <span class="keyword">char</span> *argp,<span class="keyword">int</span> argi,<span class="keyword">long</span> argl,<span class="keyword">long</span> ret)</span></span>;</span><br></pre></td></tr></table></figure>
<p>bio_type的定义：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#define BIO_TYPE_NONE 0</span><br><span class="line">#define BIO_TYPE_MEM (1|0x0400)</span><br><span class="line">#define BIO_TYPE_FILE (2|0x0400)</span><br><span class="line">#define BIO_TYPE_FD (4|0x0400|0x0100)</span><br><span class="line">#define BIO_TYPE_SOCKET (5|0x0400|0x0100)</span><br><span class="line">#define BIO_TYPE_NULL (6|0x0400)</span><br><span class="line">#define BIO_TYPE_SSL (7|0x0200)</span><br><span class="line">#define BIO_TYPE_MD (8|0x0200)</span><br><span class="line">#define BIO_TYPE_BUFFER (9|0x0200)</span><br><span class="line">#define BIO_TYPE_CIPHER (10|0x0200)</span><br><span class="line">#define BIO_TYPE_BASE64 (11|0x0200)</span><br><span class="line">#define BIO_TYPE_CONNECT (12|0x0400|0x0100)</span><br><span class="line">#define BIO_TYPE_ACCEPT (13|0x0400|0x0100)</span><br><span class="line">#define BIO_TYPE_PROXY_CLIENT (14|0x0200)</span><br><span class="line">#define BIO_TYPE_PROXY_SERVER (15|0x0200)</span><br><span class="line">#define BIO_TYPE_NBIO_TEST (16|0x0200)</span><br><span class="line">#define BIO_TYPE_NULL_FILTER (17|0x0200)</span><br><span class="line">#define BIO_TYPE_BER (18|0x0200)</span><br><span class="line">#define BIO_TYPE_BIO (19|0x0400)</span><br><span class="line"></span><br><span class="line">#define BIO_TYPE_DESCRIPTOR 0x0100</span><br><span class="line">#define BIO_TYPE_FILTER 0x0200</span><br><span class="line">#define BIO_TYPE_SOURCE_SINK 0x0400</span><br></pre></td></tr></table></figure>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<p>[1] OpenSSL编程 赵春平</p>
<p>[2] <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpYW8yMDA4MTIyOC9hcnRpY2xlL2RldGFpbHMvNzcxOTM3Mjkv">https://blog.csdn.net/liao20081228/article/details/77193729/<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>信息安全</category>
        <category>OpenSSL</category>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>信息安全</tag>
        <tag>OpenSSL</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenSSL-EVP（摘录）</title>
    <url>/2021/01/09/OpenSSL-EVP%EF%BC%88%E6%91%98%E5%BD%95%EF%BC%89/</url>
    <content><![CDATA[<p>注：本文内容摘自参考部分的相关资料</p>
<h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1>
<p>Openssl EVP(high-level cryptographic functions[1])提供了丰富的密码学中的各种函数。Openssl 中实现了各种对称算法、摘要算法以及签名/验签算法。EVP 函数将这些具体的算法进行了封装。 官方建议使用这些算法时最好调用EVP的上层封装，不建议单独使用某个算法。</p>
<p>EVP系列的函数的声明包含在”evp.h”里面，这是一系列封装了openssl加密库里面所有算法的函数。通过这样的统一的封装，使得只需要在初始化参数的时候做很少的改变，就可以使用相同的代码但采用不同的加密算法进行数据的加密和解密。</p>
<p>EVP系列函数主要封装了<strong>加密、摘要、编码</strong>三大类型的算法，使用算法前需要调用OpenSSL_add_all_algorithms函数。</p>
<p>其中以<strong>加密算法与摘要算法</strong>为基本，公开密钥算法是对数据加密采用了对称加密算法，对密钥采用非对称加密（公钥加密，私钥解密）。数字签名是非对称算法（私钥签名，公钥认证）。</p>
<a id="more"></a>
<p>EVP封装的功能函数有：</p>
<ul>
<li>实现了base64编解码BIO；</li>
<li>实现了加解密BIO；</li>
<li>实现了摘要BIO；</li>
<li>实现了reliable BIO；</li>
<li>封装了摘要算法；</li>
<li>封装了对称加解密算法；</li>
<li>封装了非对称密钥的加密(公钥)、解密(私钥)、签名与验证以及辅助函数；</li>
<li>基于口令的加密(PBE)；</li>
<li>对称密钥处理；</li>
<li>数字信封：数字信封用对方的公钥加密对称密钥，数据则用此对称密钥加密。发送给对方时，同时发送对称密钥密文和数据密文。接收方首先用自己的私钥解密密钥密文，得到对称密钥，然后用它解密数据。</li>
<li>其他辅助函数。</li>
</ul>
<h1 id="源码结构"><a class="markdownIt-Anchor" href="#源码结构"></a> 源码结构</h1>
<p>evp源码位于crypto/evp目录，可以分为如下几类：</p>
<h2 id="全局函数"><a class="markdownIt-Anchor" href="#全局函数"></a> 全局函数</h2>
<p>主要包括 c_allc.c、c_alld.c、c_all.c 以及names.c。他们加载openssl  支持的所有的对称算法和摘要算法，放入到哈希表中。实现了OpenSSL_add_all_digests、OpenSSL_add_all_ciphers  以及OpenSSL_add_all_algorithms(调用了前两个函数)函数。在进行计算时，用户也可以单独加载摘要函数（EVP_add_digest）和对称计算函数（EVP_add_cipher）。</p>
<h2 id="bio扩充"><a class="markdownIt-Anchor" href="#bio扩充"></a> BIO扩充</h2>
<p>包括 bio_b64.c、bio_enc.c、bio_md.c 和bio_ok.c，各自实现了BIO_METHOD方法，分别用于base64 编解码、对称加解密以及摘要。</p>
<h2 id="摘要算法封装"><a class="markdownIt-Anchor" href="#摘要算法封装"></a> 摘要算法封装</h2>
<p>由 digest.c 实现，实现过程中调用了对应摘要算法的回调函数。各个摘要算法提供了自己的EVP_MD 静态结构，对应源码为m_xxx.c。</p>
<h2 id="对称算法封装"><a class="markdownIt-Anchor" href="#对称算法封装"></a> 对称算法封装</h2>
<p>由evp_enc.c 实现，实现过程调用了具体对称算法函数，实现了Update 操作。各种对称算法都提供了一个EVP_CIPHER  静态结构，对应源码为e_xxx.c。需要注意的是，e_xxx.c  中不提供完整的加解密运算，它只提供基本的对于一个block_size数据的计算，完整的计算由evp_enc.c  来实现。</p>
<p>想实现一个自己的对称算法时，可以参考e_xxx.c 的实现方式。一般至少需要实现如下功能：</p>
<ul>
<li>构造一个新的静态的 EVP_CIPHER 结构；</li>
<li>实现 EVP_CIPHER 结构中的init 函数，该函数用于设置iv，设置加解密标记、以及根据外送密钥生成自己的内部密钥；</li>
<li>实现 do_cipher 函数，该函数仅对block_size 字节的数据进行对称运算；</li>
<li>实现 cleanup 函数，该函数主要用于清除内存中的密钥信息。</li>
</ul>
<h2 id="非对称算法封装"><a class="markdownIt-Anchor" href="#非对称算法封装"></a> 非对称算法封装</h2>
<p>主要是以 p_开头的文件。其中，p_enc.c 封装了公钥加密；p_dec.c 封装了私钥解密；p_lib.c  实现一些辅助函数；p_sign.c 封装了签名函数；p_verify.c 封装了验签函数；p_seal.c 封装了数字信封；p_open.c  封装了解数字信封。</p>
<h2 id="基于口令的加密"><a class="markdownIt-Anchor" href="#基于口令的加密"></a> 基于口令的加密</h2>
<p>包括 p5_crpt2.c、p5_crpt.c 和evp_pbe.c。</p>
<h1 id="主要函数"><a class="markdownIt-Anchor" href="#主要函数"></a> 主要函数</h1>
<h2 id="对称加解密函数"><a class="markdownIt-Anchor" href="#对称加解密函数"></a> 对称加解密函数</h2>
<ul>
<li>EVP_BytesToKey：计算密钥函数，它根据算法类型、摘要算法、salt 以及输入数据计算出一个对称密钥和初始化向量iv。</li>
<li>PKCS5_PBE_keyivgen 和PKCS5_v2_PBE_keyivgen：实现了 PKCS5 基于口令生成密钥和初始化向量的算法。</li>
<li>PKCS5_PBE_add：加载所有 openssl 实现的基于口令生成密钥的算法。</li>
<li>EVP_PBE_alg_add：添加一个 PBE 算法。</li>
</ul>
<h2 id="其他函数"><a class="markdownIt-Anchor" href="#其他函数"></a> 其他函数</h2>
<ul>
<li>EVP_add_cipher：将对称算法加入到全局变量，以供调用。</li>
<li>EVP_add_digest：将摘要算法加入到全局变量中，以供调用。</li>
<li>EVP_CIPHER_CTX_ctrl：对称算法控制函数，它调用了用户实现的ctrl 回调函数。</li>
<li>EVP_CIPHER_CTX_set_key_length：当对称算法密钥长度为可变长时，设置对称算法的密钥长度。</li>
<li>EVP_CIPHER_CTX_set_padding：设置对称算法的填充，对称算法有时候会涉及填充。加密分组长度大于一时，用户输入数据不是加密分组的整数倍时，会涉及到填充。填充在最后一个分组来完成，openssl 分组填充时，如果有n 个填充，则将最后一个分组用n 来填满。</li>
<li>EVP_CIPHER_get_asn1_iv：获取原始iv，存放在ASN1_TYPE 结构中。</li>
<li>EVP_CIPHER_param_to_asn1：设置对称算法参数，参数存放在ASN1_TYPE 类型中，它调用用户实现的回调函数set_asn1_parameters 来实现。</li>
<li>EVP_CIPHER_type：获取对称算法的类型。</li>
<li>EVP_CipherInit/EVP_CipherInit_ex：对称算法计算(加/解密)初始化函数，_ex 函数多了硬件enginge 参数，EVP_EncryptInit 和EVP_DecryptInit 函数也调用本函数。</li>
<li>EVP_CipherUpdate：对称计算（加/解密）函数，它调用了EVP_EncryptUpdate 和EVP_DecryptUpdate函数。</li>
<li>EVP_CipherFinal/EVP_CipherFinal_ex：对称计算( 加/ 解) 函数， 调用了EVP_EncryptFinal(ex) 和EVP_DecryptFinal(ex)；本函数主要用来处理最后加密分组，可能会有对称计算。</li>
<li>EVP_cleanup：清除加载的各种算法，包括对称算法、摘要算法以及PBE 算法，并清除这些算法相关的哈希表的内容。</li>
<li>EVP_get_cipherbyname：根据字串名字来获取一种对称算法(EVP_CIPHER)，本函数查询对称算法哈希表。</li>
<li>EVP_get_digestbyname：根据字串获取摘要算法(EVP_MD)，本函数查询摘要算法哈希表。</li>
<li>EVP_get_pw_prompt：获取口令提示信息字符串.</li>
<li>int EVP_PBE_CipherInit(ASN1_OBJECT *pbe_obj, const char *pass, int passlen,<br />
ASN1_TYPE *param, EVP_CIPHER_CTX *ctx, int en_de)：PBE 初始化函数。本函数用口令生成对称算法的密钥和初始化向量，并作加/解密初始化操作。本函数再加上后续的EVP_CipherUpdate 以及EVP_CipherFinal_ex构成一个完整的加密过程（可参考crypto/p12_decr.c 的PKCS12_pbe_crypt 函数）.</li>
<li>EVP_PBE_cleanup：删除所有的PBE 信息，释放全局堆栈中的信息.</li>
<li>EVP_PKEY *EVP_PKCS82PKEY(PKCS8_PRIV_KEY_INFO *p8)：将PKCS8_PRIV_KEY_INFO(x509.h 中定义)中保存的私钥转换为EVP_PKEY结构。</li>
<li>EVP_PKEY2PKCS8/EVP_PKEY2PKCS8_broken：将EVP_PKEY 结构中的私钥转换为PKCS8_PRIV_KEY_INFO 数据结构存储。</li>
<li>EVP_PKEY_bits：非对称密钥大小，为比特数。</li>
<li>EVP_PKEY_cmp_parameters：比较非对称密钥的密钥参数，用于DSA 和ECC 密钥。</li>
<li>EVP_PKEY_copy_parameters：拷贝非对称密钥的密钥参数，用于DSA 和ECC 密钥。</li>
<li>EVP_PKEY_free：释放非对称密钥数据结构。</li>
<li>EVP_PKEY_get1_DH/EVP_PKEY_set1_DH：获取/设置EVP_PKEY 中的DH 密钥。</li>
<li>EVP_PKEY_get1_DSA/EVP_PKEY_set1_DSA：获取/设置EVP_PKEY 中的DSA 密钥。</li>
<li>EVP_PKEY_get1_RSA/EVP_PKEY_set1_RSA：获取/设置EVP_PKEY 中结构中的RSA 结构密钥。</li>
<li>EVP_PKEY_missing_parameters：检查非对称密钥参数是否齐全，用于DSA 和ECC 密钥。</li>
<li>EVP_PKEY_new：生成一个EVP_PKEY 结构。</li>
<li>EVP_PKEY_size：获取非对称密钥的字节大小。</li>
<li>EVP_PKEY_type：获取EVP_PKEY 中表示的非对称密钥的类型。</li>
<li>int EVP_read_pw_string(char *buf,int length,const char *prompt,int verify)：获取用户输入的口令；buf 用来存放用户输入的口令，length 为buf 长度，prompt为提示给用户的信息，如果为空，它采用内置的提示信息，verify 为0 时，不要求验证用户输入的口令，否则回要求用户输入两遍。返回0 表示成功。</li>
<li>EVP_set_pw_prompt：设置内置的提示信息，用于需要用户输入口令的场合。</li>
</ul>
<h1 id="对称加密"><a class="markdownIt-Anchor" href="#对称加密"></a> 对称加密</h1>
<h2 id="基本数据结构"><a class="markdownIt-Anchor" href="#基本数据结构"></a> 基本数据结构</h2>
<p>EVP_CIPHER与EVP_CIPHER_CTX两个基本结构，加密函数EVP_Encrypt(EVP_Cipher)一些列函数都是以这两个结构为基础实现了。文件evp_enc.c是最高层的封装实现，，而各个e_*.c文件则是真正实现了各种算法的加解密功能，当然它们其实也是一些封装函数，真正的算法实现在各个算法同名目录里面的文件实现。</p>
<p>注意:  EVP_CIPHER是、EVP_CIPHER_CTX的成员，在加密时通过指定的加密算法（其实就是加密函数），返回对应的EVP_CIPHER的指针，然后EVP_EncryptInit函数中 调用 EVP_CIPHER来初化EVP_CIPHER_CTX。</p>
<h3 id="evp_cipher结构体"><a class="markdownIt-Anchor" href="#evp_cipher结构体"></a> EVP_CIPHER结构体</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">evp_cipher_st</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> nid; <span class="comment">//是算法类型的nid识别号，openssl里面每个对象都有一个内部唯一的识别ID</span></span><br><span class="line">    <span class="keyword">int</span> block_size;        <span class="comment">//是每次加密的数据块的长度，以字节为单位</span></span><br><span class="line">    <span class="keyword">int</span> key_len;           <span class="comment">//是每次加密的数据块的长度，以字节为单位</span></span><br><span class="line">    <span class="keyword">int</span> iv_len;            <span class="comment">//初始化向量的长度</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> flags;   <span class="comment">//标志位</span></span><br><span class="line">    <span class="keyword">int</span> (*init)(EVP_CIPHER_CTX *ctx, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *key, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *iv, <span class="keyword">int</span> enc); <span class="comment">//算法结构初始化函数，可以设置为加密模式还是解密模式</span></span><br><span class="line">    <span class="keyword">int</span> (*do_cipher)(EVP_CIPHER_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *out, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *in, <span class="keyword">unsigned</span> <span class="keyword">int</span> inl);   <span class="comment">//进行数据加密或解密的函数</span></span><br><span class="line">    <span class="keyword">int</span> (*cleanup)(EVP_CIPHER_CTX *);   <span class="comment">//释放EVP_CIPHER_CTX结构里面的数据和设置</span></span><br><span class="line">    <span class="keyword">int</span> ctx_size;  <span class="comment">//设定ctx-&gt;cipher_data数据的长度</span></span><br><span class="line">    <span class="keyword">int</span> (*set_asn1_parameters)(EVP_CIPHER_CTX *, ASN1_TYPE *);  <span class="comment">// 在EVP_CIPHER_CTX结构中通过参数设置一个ASN1_TYPE</span></span><br><span class="line">    <span class="keyword">int</span> (*get_asn1_parameters)(EVP_CIPHER_CTX *, ASN1_TYPE *);  <span class="comment">//从一个ASN1_TYPE中取得参数</span></span><br><span class="line">    <span class="keyword">int</span> (*ctrl)(EVP_CIPHER_CTX *, <span class="keyword">int</span> type, <span class="keyword">int</span> arg, <span class="keyword">void</span> *ptr); <span class="comment">//其它各种操作函数</span></span><br><span class="line">    <span class="keyword">void</span> *app_data;  <span class="comment">//应用数据</span></span><br><span class="line">&#125;EVP_CIPHER;</span><br></pre></td></tr></table></figure>
<h3 id="evp_cipher_ctx结构体"><a class="markdownIt-Anchor" href="#evp_cipher_ctx结构体"></a> EVP_CIPHER_CTX结构体</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">evp_cipher_ctx_st</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">const</span> EVP_CIPHER *cipher;  <span class="comment">//是该结构相关的一个EVP_CIPHER算法结构</span></span><br><span class="line">    ENGINE *engine;            <span class="comment">//如果加密算法是ENGINE提供的，那么该成员保存了相关的函数接口</span></span><br><span class="line">    <span class="keyword">int</span> encrypt;               <span class="comment">//加密或解密的标志</span></span><br><span class="line">    <span class="keyword">int</span> buf_len;               <span class="comment">//该结构缓冲区里面当前的数据长度</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> oiv[EVP_MAX_IV_LENGTH];      <span class="comment">//初始的初始化向量</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> iv[EVP_MAX_IV_LENGTH];       <span class="comment">//工作时候使用的初始化向量</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> buf[EVP_MAX_BLOCK_LENGTH];   <span class="comment">//保存下来的部分需要数据</span></span><br><span class="line">    <span class="keyword">int</span> num;                   <span class="comment">//在cfb/ofb模式的时候指定块长度</span></span><br><span class="line">    <span class="keyword">void</span> *app_data;            <span class="comment">//应用程序要处理数据</span></span><br><span class="line">    <span class="keyword">int</span> key_len;               <span class="comment">//密钥长度，算法不一样长度也不一样</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> flags; </span><br><span class="line">    <span class="keyword">void</span> *cipher_data;         <span class="comment">//加密后的数据</span></span><br><span class="line">    <span class="keyword">int</span> final_used;</span><br><span class="line">    <span class="keyword">int</span> block_mask;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="keyword">final</span>[EVP_MAX_BLOCK_LENGTH];<span class="comment">//</span></span><br><span class="line">&#125; EVP_CIPHER_CTX;</span><br></pre></td></tr></table></figure>
<h2 id="相关函数"><a class="markdownIt-Anchor" href="#相关函数"></a> 相关函数</h2>
<h3 id="核心函数"><a class="markdownIt-Anchor" href="#核心函数"></a> 核心函数</h3>
<p>EVP_crypt系列函数只是对EVP_Cipher系列函数的调用，EVP_Encrypt函数相当于对EVP_Cipher函数enc参数置为1，EVP_Decrypt函数相当于对EVP_Cipher函数enc参数置为0。</p>
<h4 id="底层函数"><a class="markdownIt-Anchor" href="#底层函数"></a> 底层函数</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//旧版本</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_CipherInit</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">const</span> EVP_CIPHER *cipher, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *key, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *iv, <span class="keyword">int</span> enc)</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_CipherUpdate</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *out, <span class="keyword">int</span> *outl,<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *in, <span class="keyword">int</span> inl)</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_CipherFinal</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *out, <span class="keyword">int</span> *outl)</span></span></span><br><span class="line"><span class="function"><span class="comment">//新版本</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_CipherInit_ex</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">const</span> EVP_CIPHER *cipher, </span></span></span><br><span class="line"><span class="function"><span class="params">ENGINE *impl, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *key,<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *iv, <span class="keyword">int</span> enc)</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_CipherUpdate</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *out, <span class="keyword">int</span> *outl, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *in, <span class="keyword">int</span> inl)</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_CipherFinal_ex</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *out, <span class="keyword">int</span> *outl)</span></span></span><br></pre></td></tr></table></figure>
<p>这三个函数是更底层的函数。完成了数据的加密和解密功能。他们根据参数enc决定执行加密还是解密操作，如果enc为1，则加密；如果enc为0，则解密；如果enc是－1，则不改变数据。<strong>函数都是操作成功返回1，否则返回0。</strong></p>
<p><strong>注意</strong>：两个版本中：EVP_EncryptInit, EVP_DecryptInit和EVP_CipherInit，这三个函数的功能分别跟函数EVP_EncryptInit_ex, EVP_DecryptInit_ex和EVP_CipherInit_ex功能相同，只是他们的ctx参数不需要进行初始化，并且使用缺省的算法库。EVP_EncryptFinal,  EVP_DecryptFinal和EVP_CipherFinal，这三个函数分别跟函数EVP_EncryptFinal_ex,EVP_DecryptFinal_ex以及EVP_CipherFinal_ex函数功能相同，不过，他们的参数ctx会在调用后自动释放。</p>
<h4 id="加密"><a class="markdownIt-Anchor" href="#加密"></a> 加密</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//旧版本</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_EncryptInit</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">const</span> EVP_CIPHER *cipher, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *key, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *iv)</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_EncryptUpdate</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *out, <span class="keyword">int</span> *outl,<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *in, <span class="keyword">int</span> inl)</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_EncryptFinal</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *out, <span class="keyword">int</span> *outl)</span></span></span><br><span class="line"><span class="function"><span class="comment">//新版本</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_EncryptInit_ex</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">const</span> EVP_CIPHER *cipher, ENGINE *impl, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *key,<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *iv)</span> <span class="comment">//采用ENGINE参数impl的算法来设置并初始化加密结构体。其中ctx参数必须在调用之前被初始化完毕。如果参数impl为NULL，那么就会使用缺省的实现算法。参数key是用来加密的对称密钥，iv参数是初始化向量（如果需要的话）。在算法中真正使用的密钥长度和初始化密钥长度是根据算法来决定的（也就是传入的key或者iv长度可以是任意的，实际使用的数据取决于算法，不足会自动补上，超过会自动舍去）。在调用该函数进行初始化的时候，除了参数cipher之外，所有其它参数可以设置为NULL，留到以后调用其它函数的时候再提供</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_EncryptUpdate</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *out, <span class="keyword">int</span> *outl, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *in, <span class="keyword">int</span> inl)</span> <span class="comment">//该函数执行对数据的加密。该函数加密从参数in输入的长度为inl的数据，并将加密好的数据写入到参数out里面去。可以通过反复调用该函数来处理一个连续的数据块</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_EncryptFinal_ex</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *out, <span class="keyword">int</span> *outl)</span> <span class="comment">//该函数处理最后（Final）的一段数据。在函数在padding功能打开的时候（缺省）才有效，这时候它将剩余的最后的所有数据进行加密处理。该算法使用标志的块padding方式（AKA PKCS padding）， PKCS 填充（padding）标准是这样定义的，在被加密的数据后面加上n个值为n的字节，使得加密后的数据长度为加密块长度的整数倍。</span></span></span><br></pre></td></tr></table></figure>
<h4 id="解密"><a class="markdownIt-Anchor" href="#解密"></a> 解密</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//旧版本</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_DecryptInit</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">const</span> EVP_CIPHER *cipher, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *key, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *iv)</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_DecryptUpdate</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *out, <span class="keyword">int</span> *outl, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *in, <span class="keyword">int</span> inl)</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_DecryptFinal</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *out, <span class="keyword">int</span> *outl)</span></span></span><br><span class="line"><span class="function"><span class="comment">//新版本</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_DecryptInit_ex</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">const</span> EVP_CIPHER *cipher,</span></span></span><br><span class="line"><span class="function"><span class="params">ENGINE *impl, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *key， <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *iv)</span>  </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_DecryptUpdate</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *out, <span class="keyword">int</span> *outl, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *in, <span class="keyword">int</span> inl)</span>                    </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_DecryptFinal_ex</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *out, <span class="keyword">int</span> *outl)</span></span></span><br></pre></td></tr></table></figure>
<p>上面这些函数对应于上一节中的加密函数，函数的参数要求与相应的加密函数相同。</p>
<h3 id="辅助函数"><a class="markdownIt-Anchor" href="#辅助函数"></a> 辅助函数</h3>
<h4 id="操作evp_cipher_ctx的函数"><a class="markdownIt-Anchor" href="#操作evp_cipher_ctx的函数"></a> 操作EVP_CIPHER_CTX的函数</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_CIPHER_CTX_reset</span><span class="params">(EVP_CIPHER_CTX *c)</span>    <span class="comment">//重置EVP_CIPHER_CTX</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">EVP_CIPHER_CTX *<span class="title">EVP_CIPHER_CTX_new</span><span class="params">(<span class="keyword">void</span>)</span>       <span class="comment">//开辟EVP_CIPHER_CTX</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EVP_CIPHER_CTX_free</span><span class="params">(EVP_CIPHER_CTX *ctx)</span>  <span class="comment">//销毁之前开辟的EVP_CIPHER_CTX</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EVP_CIPHER_CTX_init</span><span class="params">(EVP_CIPHER_CTX *a)</span></span>; <span class="comment">//初始化一个EVP_CIPHER_CTX结构体   </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_CIPHER_CTX_cleanup</span><span class="params">(EVP_CIPHER_CTX *a)</span></span>; <span class="comment">//清除一个EVP_CIPHER_CTX结构体中的所有信息，并释放该结构占用的所有内存</span></span><br></pre></td></tr></table></figure>
<h4 id="参数设置与获取"><a class="markdownIt-Anchor" href="#参数设置与获取"></a> 参数设置与获取</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_MAX_IV_LENGTH 16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_MAX_BOLCK_LENGTH 32</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_MAX_KEY_LENGTH 64</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_partially_overlapping</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> *ptr1, <span class="keyword">const</span> <span class="keyword">void</span> *ptr2, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_CIPHER_CTX_set_padding</span><span class="params">(EVP_CIPHER_CTX *x, <span class="keyword">int</span> padding)</span></span>; <span class="comment">//设置是否采用填充功能，默认使用。将padding设置为0代表禁止</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_CIPHER_CTX_set_key_length</span><span class="params">(EVP_CIPHER_CTX *x, <span class="keyword">int</span> keylen)</span></span>; <span class="comment">//设置EVP_CIPHER_CTX密钥长度</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_CIPHER_CTX_ctrl</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">int</span> type, <span class="keyword">int</span> arg, <span class="keyword">void</span> *ptr)</span></span>; <span class="comment">//设置不同算法特定的参数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*这三个函数都根据给定的参数返回一个EVP_CIPHER结构。不同的是给定的参数分别是算法名称、算法的NID和一个ASN1_OBJECT结构。具体的算法名称、NID以及ASN1_OBJECT结构请参看object/object.h文件的定义。成功返回对应的EVP_CIPHER* ，失败返回NULL*/</span></span><br><span class="line"><span class="function"><span class="keyword">const</span> EVP_CIPHER *<span class="title">EVP_get_cipherbyname</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *name)</span></span>; </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_get_cipherbynid(a) EVP_get_cipherbyname(OBJ_nid2sn(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_get_cipherbyobj(a) EVP_get_cipherbynid(OBJ_obj2nid(a))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*下面这组函数的参数为EVP_CIPHER类型变量*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_CIPHER_nid(e)              ((e)-&gt;nid) <span class="comment">//返回加密算法的nid</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_CIPHER_block_size(e)       ((e)-&gt;block_size) <span class="comment">//返回加密块长度</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_CIPHER_key_length(e)       ((e)-&gt;key_len) <span class="comment">//返回密钥长度</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_CIPHER_iv_length(e)        ((e)-&gt;iv_len) <span class="comment">//返回初始化向量长度，如果没有使用IV则返回0</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_CIPHER_flags(e)            ((e)-&gt;flags) </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_CIPHER_mode(e)             ((e)-&gt;flags) &amp; EVP_CIPH_MODE) <span class="comment">//返回相应结构算法的加密模式</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_CIPHER_type</span><span class="params">(<span class="keyword">const</span> EVP_CIPHER *ctx)</span></span>; <span class="comment">//返回算法类型，返回值为算法的NID</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*下面这组函数的返回值与EVP_CIPHER*系列函数的返回值相同，只是函数参数为EVP_CIPHER_CTX类型变量*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_CIPHER_CTX_cipher(e)       ((e)-&gt;cipher) <span class="comment">//返回EVP_CIPHER_CTX结构里面的EVP_CIPHER结构</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_CIPHER_CTX_nid(e)          ((e)-&gt;cipher-&gt;nid) </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_CIPHER_CTX_block_size(e)   ((e)-&gt;cipher-&gt;block_size)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_CIPHER_CTX_key_length(e)   ((e)-&gt;key_len)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_CIPHER_CTX_iv_length(e)    ((e)-&gt;cipher-&gt;iv_len)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_CIPHER_CTX_get_app_data(e) ((e)-&gt;app_data)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_CIPHER_CTX_set_app_data(e,d) ((e)-&gt;app_data=(char *)(d))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_CIPHER_CTX_type(c)         EVP_CIPHER_type(EVP_CIPHER_CTX_cipher(c)) </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_CIPHER_CTX_flags(e)        ((e)-&gt;cipher-&gt;flags)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_CIPHER_CTX_mode(e)         ((e)-&gt;cipher-&gt;flags &amp; EVP_CIPH_MODE)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_CIPHER_param_to_asn1</span><span class="params">(EVP_CIPHER_CTX *c, ASN1_TYPE *type)</span></span>; <span class="comment">//设置算法结构的参数，该函数必须在所设置的算法结构使用之前调用</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_CIPHER_asn1_to_param</span><span class="params">(EVP_CIPHER_CTX *c, ASN1_TYPE *type)</span></span>; <span class="comment">//用算法结构里面的值设置参数type的结构，其设置的内容由具体的算法决定。本函数应该在算法结构的基本算法类型已经设置了但是密钥还没有设置之前调用</span></span><br></pre></td></tr></table></figure>
<h3 id="算法函数"><a class="markdownIt-Anchor" href="#算法函数"></a> 算法函数</h3>
<p>openssl对称加密算法的格式都以函数形式提供，其实该函数返回一个该算法的结构体，其形式一般如下(evp.h 、e_···.c)：<br />
     <code>EVP_CIPHER* EVP_···(···代表加密算法的名称)(void)</code><br />
在openssl中，所有提供的对称加密算法长度都是固定的，有特别说明的除外。</p>
<h4 id="分组加密的迭代模式"><a class="markdownIt-Anchor" href="#分组加密的迭代模式"></a> 分组加密的迭代模式</h4>
<ul>
<li>ecb—电子密码本（Electronic Code Book)加密方式</li>
<li>cbc—加密块链接（Cipher Block Chaining）加密方式</li>
<li>cfb——加密反馈（Cipher Feedback）加密方式</li>
<li>ofb—输出反馈（Output Feedback）加密方式</li>
<li>ede—该加密算法采用了加密、解密、加密的方式，第一个密钥和最后一个密钥是相同的</li>
<li>ede3—该加密算法采用了加密、解密、加密的方式，但是三个密钥都不相同</li>
</ul>
<h4 id="加密算法"><a class="markdownIt-Anchor" href="#加密算法"></a> 加密算法</h4>
<p><strong>注意：下面这些加密算法函数调用时返回的都是对应EVP_CIPHER结构体指针</strong></p>
<ul>
<li>NULL算法：EVP_enc_null()，该算法不作任何事情，也就是没有进行加密处理</li>
<li>DES算法：EVP_des_cbc(void), EVP_des_ecb(void), EVP_des_cfb(void), EVP_des_ofb(void)</li>
<li>使用两个密钥的3DES算法：EVP_des_ede_cbc(void), EVP_des_ede(void), EVP_des_ede_ofb(void),EVP_des_ede_cfb(void)</li>
<li>使用三个密钥的3DES算法：EVP_des_ede3_cbc(void), EVP_des_ede3(void), EVP_des_ede3_ofb(void), EVP_des_ede3_cfb(void)</li>
<li>DESX算法：EVP_desx_cbc(void)</li>
<li>RC2算法：EVP_rc2_cbc(void), EVP_rc2_ecb(void), EVP_rc2_cfb(void), EVP_rc2_ofb(void) ，该算法密钥长度可变，缺省为128位</li>
<li>定长的RC2算法：EVP_rc2_40_cbc(void), EVP_rc2_64_cbc(void)</li>
<li>RC4算法：EVP_rc4(void) ，密钥长度可变，默认为128位</li>
<li>定长的RC4算法：EVP_rc4_40(void) ，密钥长度为40位</li>
<li>RC5算法：EVP_rc5_32_12_16_cbc(void), EVP_rc5_32_12_16_ecb(void), EVP_rc5_32_12_16_cfb(void), EVP_rc5_32_12_16_ofb(void)，密钥长度可以设置，默认128位。由于RC5算法本身实现代码的限制，加密次数只能设置为8、12或16。</li>
<li>IDEA算法：EVP_idea_cbc(void)，EVP_idea_ecb(void), EVP_idea_cfb(void), EVP_idea_ofb(void)</li>
<li>Blowfish算法：EVP_bf_cbc(void), EVP_bf_ecb(void), EVP_bf_cfb(void), EVP_bf_ofb(void)，密钥长度可变</li>
<li>CAST算法：EVP_cast5_cbc(void), EVP_cast5_ecb(void), EVP_cast5_cfb(void), EVP_cast5_ofb(void)，密钥长度可变</li>
<li>AES算法：
<ul>
<li>128位：EVP_aes_128_ecb(void)，EVP_aes_128_cbc(void)，PEVP_aes_128_cfb(void)，EVP_aes_128_ofb(void)</li>
<li>192位：EVP_aes_192_ecb(void)，EVP_aes_192_cbc(void)，PEVP_aes_192_cfb(void)，EVP_aes_192_ofb(void)</li>
<li>256位：EVP_aes_256_ecb(void)，EVP_aes_256_cbc(void)，PEVP_aes_256_cfb(void)，EVP_aes_256_ofb(void)</li>
</ul>
</li>
</ul>
<h2 id="应用流程"><a class="markdownIt-Anchor" href="#应用流程"></a> 应用流程</h2>
<p>一般来说，EVP_Encrypt…系列函数的应用流程如下所描述(不失一般性，以加密算法3DES为例)：</p>
<ol>
<li>
<p>定义一些所需的变量</p>
<p>一般情况下，输出数据缓冲区大小应该大于输入数据缓冲区。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> key[EVP_MAX_KEY_LENGTH];</span><br><span class="line"><span class="keyword">char</span> iv[EVP_MAX_IV_LENGTH];</span><br><span class="line">EVP_CIPHER_CTX ctx;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> out[<span class="number">512</span>+<span class="number">8</span>];</span><br><span class="line"><span class="keyword">int</span> outl;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>给变量key和IV赋值</p>
<p>可以借助函数<code>EVP_BytesToKey</code>来进行，如果有别的方法设定key和IV则该函数调用不是必须的</p>
</li>
<li>
<p>初始化加密算法结构EVP_CIPHER_CTX</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">EVP_EncryptInit_ex(&amp;ctx, EVP_des_ede3_cbc(), <span class="literal">NULL</span>, key, iv);</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>进行数据加密操作</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (....)</span><br><span class="line">&#123;</span><br><span class="line">	EVP_EncryptUpdate(ctx,out,&amp;outl,in,inl);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注意：EVP库的EVP_*Update系列函数调用一次就能处理完指针in中的inl个字节数据。<strong>这里所谓的循环是用于此类情景：每次收到若干字节放入指针in指向的缓冲区中，然后对其处理；或者每次从文件中读取若干字节到指针in所指缓冲区，再对其处理。<strong>如果输入的数据不是整数倍，则会留到EVP_*_CTX 中，等待下一次Update或EVP_Final*来处理</strong>，也就是</strong>循环是用于无法一次传入所有数据的情况</strong>，其他情况不需要使用循环。</p>
</li>
<li>
<p>结束加密，输出最后一段数据</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">EVP_EncryptFinal_ex(&amp;ctx, out, &amp;outl)</span><br></pre></td></tr></table></figure>
<p>该函数会进行加密检测，如果加密过程有误会被检测出来</p>
</li>
</ol>
<p>说明：解密过程与上述过程类似，只是要使用EVP_Decrypt···系列函数</p>
<h2 id="程序示例"><a class="markdownIt-Anchor" href="#程序示例"></a> 程序示例</h2>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/err.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/bio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/conf.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">handleErrors</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        ERR_print_errors_fp(<span class="built_in">stderr</span>);</span><br><span class="line">        <span class="built_in">abort</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">encrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span>* plaintext, <span class="keyword">int</span> plaintext_len, <span class="keyword">unsigned</span> <span class="keyword">char</span>* key, <span class="keyword">unsigned</span> <span class="keyword">char</span>* iv, <span class="keyword">unsigned</span> <span class="keyword">char</span>* ciphertext)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        EVP_CIPHER_CTX* ctx;</span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        <span class="keyword">int</span> ciphertext_len;</span><br><span class="line">        <span class="keyword">if</span>(!(ctx=EVP_CIPHER_CTX_new()))</span><br><span class="line">                handleErrors();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="number">1</span>!=EVP_EncryptInit_ex(ctx,EVP_aes_256_cbc(),<span class="literal">NULL</span>,key,iv))</span><br><span class="line">                handleErrors();</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">1</span>!=EVP_EncryptUpdate(ctx,ciphertext,&amp;len,plaintext,plaintext_len))</span><br><span class="line">                handleErrors();</span><br><span class="line">        ciphertext_len=len;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="number">1</span>!=EVP_EncryptFinal_ex(ctx,ciphertext+len,&amp;len))</span><br><span class="line">                handleErrors();</span><br><span class="line">        ciphertext_len+=len;</span><br><span class="line"></span><br><span class="line">        EVP_CIPHER_CTX_free(ctx);</span><br><span class="line">        <span class="keyword">return</span> ciphertext_len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">decrypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span>* ciphertext, <span class="keyword">int</span> ciphertext_len, <span class="keyword">unsigned</span> <span class="keyword">char</span>* key, <span class="keyword">unsigned</span> <span class="keyword">char</span>* iv, <span class="keyword">unsigned</span> <span class="keyword">char</span>* plainte</span></span></span><br><span class="line"><span class="function"><span class="params">xt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        EVP_CIPHER_CTX* ctx;</span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        <span class="keyword">int</span> plaintext_len;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!(ctx=EVP_CIPHER_CTX_new()))</span><br><span class="line">                handleErrors();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="number">1</span>!=EVP_DecryptInit_ex(ctx,EVP_aes_256_cbc(),<span class="literal">NULL</span>,key,iv))</span><br><span class="line">                handleErrors();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="number">1</span>!=EVP_DecryptUpdate(ctx,plaintext,&amp;len,ciphertext,ciphertext_len))</span><br><span class="line">                handleErrors();</span><br><span class="line">        plaintext_len=len;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="number">1</span>!=EVP_DecryptFinal_ex(ctx,plaintext+len,&amp;len))</span><br><span class="line">                handleErrors();</span><br><span class="line">        plaintext_len+=len;</span><br><span class="line"></span><br><span class="line">        EVP_CIPHER_CTX_free(ctx);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> plaintext_len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span>* key=(<span class="keyword">unsigned</span> <span class="keyword">char</span>*) <span class="string">&quot;01234567890123456789012345678901&quot;</span>;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span>* iv=(<span class="keyword">unsigned</span> <span class="keyword">char</span>*) <span class="string">&quot;0123456789012345&quot;</span>;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span>* plaintext=(<span class="keyword">unsigned</span> <span class="keyword">char</span>*) <span class="string">&quot;Hello OpenSSL! This a demonstration program about how to use EVP&quot;</span>; <span class="comment">//cbc模式下试着修改某一个字符，则会出现雪崩效应，密文出现很大差别；但是ofb和cfb却不会。（与这三种方式的计算顺序有关）</span></span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span> ciphertext[<span class="number">128</span>];</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span> decryptedtext[<span class="number">128</span>];</span><br><span class="line">        <span class="keyword">int</span> decryptedtext_len, ciphertext_len;</span><br><span class="line">        ciphertext_len=encrypt(plaintext,<span class="built_in">strlen</span>((<span class="keyword">char</span>*)plaintext),key,iv,ciphertext);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;The ciphertext is:\n&quot;</span>);</span><br><span class="line">        BIO_dump_fp(<span class="built_in">stdout</span>,(<span class="keyword">const</span> <span class="keyword">char</span>*)ciphertext,ciphertext_len);</span><br><span class="line">        decryptedtext_len=decrypt(ciphertext,ciphertext_len,key,iv,decryptedtext);</span><br><span class="line">        decryptedtext[decryptedtext_len]=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Decrypted text is:\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,decryptedtext);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果要用认证加密（防止CCA攻击），可以参考https://wiki.openssl.org/index.php/EVP_Authenticated_Encryption_and_Decryption</p>
<h1 id="摘要"><a class="markdownIt-Anchor" href="#摘要"></a> 摘要</h1>
<p>该系列函数封装了openssl加密库所有的信息摘要算法，通过这种EVP封装，当使用不同的信息摘要算法时，只需要对初始化参数修改一下就可以了，其它代码可以完全一样。这些算法包括MD2、MD5以及SHA等算法。</p>
<ul>
<li>函数名称：EVP_Digest*…*</li>
<li>功能描述：该系列函数封装实现了多种信息摘要算法。</li>
<li>相关文件：digest.c,m_*.c</li>
</ul>
<h2 id="基本数据结构-2"><a class="markdownIt-Anchor" href="#基本数据结构-2"></a> 基本数据结构</h2>
<h3 id="evp_md结构体"><a class="markdownIt-Anchor" href="#evp_md结构体"></a> EVP_MD结构体</h3>
<p>所有的摘要算法都维护着指向下面定义的结构体的一个指针，在此基础上实现了算法的功能。该结构EVP_MD的源代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;opessl/evp.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">env_md_st</span></span></span><br><span class="line"><span class="class">&#123;</span> </span><br><span class="line">    <span class="keyword">int</span> type;     <span class="comment">//信息摘要算法的NID标识</span></span><br><span class="line">    <span class="keyword">int</span> pkey_type;<span class="comment">//是信息摘要-签名算法体制的相应NID标识，如NID_shaWithRSAEncryption</span></span><br><span class="line">    <span class="keyword">int</span> md_size;  <span class="comment">//是信息摘要算法生成的信息摘要的长度，如SHA算法是SHA_DIGEST_LENGTH，该值是20</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> flags;</span><br><span class="line">    <span class="keyword">int</span> (*init)(EVP_MD_CTX *ctx); <span class="comment">//指向一个特定信息摘要算法的初始化函数，如对于SHA算法，指针指向SHA_Init</span></span><br><span class="line">    <span class="keyword">int</span> (*update)(EVP_MD_CTX *ctx,<span class="keyword">const</span> <span class="keyword">void</span> *data,<span class="keyword">unsigned</span> <span class="keyword">long</span> count); <span class="comment">//指向一个真正计算摘要值的函数，例如SHA算法就是指向SHA_Update</span></span><br><span class="line">    <span class="keyword">int</span> (*<span class="keyword">final</span>)(EVP_MD_CTX *ctx,<span class="keyword">unsigned</span> <span class="keyword">char</span> *md); <span class="comment">//指向一个信息摘要值计算之后要调用的函数，该函数完成最后的一块数据的处理工作。例如SHA算法就是指向SHA_Final.</span></span><br><span class="line">    <span class="keyword">int</span> (*copy)(EVP_MD_CTX *to,<span class="keyword">const</span> EVP_MD_CTX *from); <span class="comment">//指向一个可以在两个EVP_MD_CTX结构之间拷贝参数值的函数</span></span><br><span class="line">    <span class="keyword">int</span> (*cleanup)(EVP_MD_CTX *ctx);</span><br><span class="line">    <span class="keyword">int</span> (*sign)();   <span class="comment">//签名</span></span><br><span class="line">    <span class="keyword">int</span> (*verify)(); <span class="comment">//认证</span></span><br><span class="line">    <span class="keyword">int</span> required_pkey_type[<span class="number">5</span>]; <span class="comment">//指向一个用来签名的算法EVP_PKEY的类型，如SHA算法就指向EVP_PKEY_RSA_method</span></span><br><span class="line">    <span class="keyword">int</span> block_size;  <span class="comment">//一个用来进行信息摘要的输入块的的长度（单位是字节），如SHA算法就是SHA_CBLOCK</span></span><br><span class="line">    <span class="keyword">int</span> ctx_size;    <span class="comment">//是CTX结构的长度，在SHA算法里面应该就是sizeof(EVP_MD*)+sizeof(SHA_CTX)</span></span><br><span class="line">&#125; EVP_MD;</span><br></pre></td></tr></table></figure>
<p>如果要增加新的算法，那么可以定义这个结构，并进行必要的移植，然后就可以使用通用的函数了。</p>
<h3 id="evp_md_ctx结构体"><a class="markdownIt-Anchor" href="#evp_md_ctx结构体"></a> EVP_MD_CTX结构体</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">env_md_ctx_st</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">const</span> EVP_MD *digest;  <span class="comment">//digest——指向上面介绍的EVP_MD结构的指针</span></span><br><span class="line">    ENGINE *engine;        <span class="comment">//如果算法由ENGINE提供，该指针指向该ENGINE</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> flags;   <span class="comment">//</span></span><br><span class="line">    <span class="keyword">void</span> *md_data;         <span class="comment">//信息摘要数据</span></span><br><span class="line">&#125;EVP_MD_CTX ;</span><br></pre></td></tr></table></figure>
<h2 id="相关函数-2"><a class="markdownIt-Anchor" href="#相关函数-2"></a> 相关函数</h2>
<h3 id="核心函数-2"><a class="markdownIt-Anchor" href="#核心函数-2"></a> 核心函数</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//旧版本</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_DigestInit</span><span class="params">(EVP_MD_CTX *ctx, <span class="keyword">const</span> EVP_MD *type)</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_DigestUpdate</span><span class="params">(EVP_MD_CTX *ctx, <span class="keyword">const</span> <span class="keyword">void</span> *data, <span class="keyword">size_t</span> count)</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_DigestFinal</span><span class="params">(EVP_MD_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *md, <span class="keyword">unsigned</span> <span class="keyword">int</span> *size)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">//新版本</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_DigestInit_ex</span><span class="params">(EVP_MD_CTX *ctx, <span class="keyword">const</span> EVP_MD *type, ENGINE *impl)</span> <span class="comment">//使用参数impl所指向的ENGINE设置该信息摘要结构体，参数ctx在调用本函数之前必须经过初始化。参数type一般是使用像EVP_sha1这样的函数的返回值。如果impl为NULL，那么就会使用缺省实现的信息摘要函数，大多数应用程序里面impl是设置为NULL的。操作成功返回1，否则返回0。</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_DigestUpdate</span><span class="params">(EVP_MD_CTX *ctx, <span class="keyword">const</span> <span class="keyword">void</span> *data, <span class="keyword">size_t</span> count)</span> <span class="comment">//将参数d中的cnt字节数据进行信息摘要到ctx结构中去，该函数可以被调用多次，用以对更多的数据进行信息摘要。操作成功返回1，否则返回0。</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_DigestFinal_ex</span><span class="params">(EVP_MD_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *md, <span class="keyword">unsigned</span> <span class="keyword">int</span> *size)</span> <span class="comment">//将ctx结构中的摘要信息数据返回到参数md中，如果参数size不是NULL，那么摘要数据的长度（字节）就会被写入到参数size中，大多数情况下写入的值是EVP_MAX_MD_SIZE。在调用本函数后，不能使用相同的ctx结构调用EVP_DigestUpdate再进行数据的信息摘要操作,但是如果调用EVP_DigestInit_ex函数重新初始化后可以进行新的信息摘要操作。操作成功返回1，否则返回0。</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">//高级版本</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_Digest</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> *data, <span class="keyword">size_t</span> count, <span class="keyword">unsigned</span> <span class="keyword">char</span> *md, <span class="keyword">unsigned</span> <span class="keyword">int</span> *size, <span class="keyword">const</span> EVP_MD *type,ENGINE *impl)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="辅助函数-2"><a class="markdownIt-Anchor" href="#辅助函数-2"></a> 辅助函数</h3>
<h4 id="操作evp_md_ctx的函数"><a class="markdownIt-Anchor" href="#操作evp_md_ctx的函数"></a> 操作EVP_MD_CTX的函数</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_MD_CTX_reset</span><span class="params">(EVP_MD_CTX *ctx)</span></span></span><br><span class="line"><span class="function">EVP_MD_CTX *<span class="title">EVP_MD_CTX_new</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EVP_MD_CTX_free</span><span class="params">(EVP_MD_CTX *ctx)</span></span></span><br><span class="line"><span class="function">EVP_MD_CTX *<span class="title">EVP_MD_CTX_create</span><span class="params">(<span class="keyword">void</span>)</span></span>; <span class="comment">//创建一个EVP_MD_CTX结构，分配内存并进行初始化，返回该结构</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EVP_MD_CTX_destroy</span><span class="params">(EVP_MD_CTX *ctx)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EVP_MD_CTX_init</span><span class="params">(EVP_MD_CTX *ctx)</span></span>; <span class="comment">//初始化一个EVP_MD_CTX结构</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">EVP_MD_CTX_cleanup</span><span class="params">(EVP_MD_CTX *ctx)</span></span>; <span class="comment">//清除一个EVP_MD_CTX结构，应该在不再需要使用之后再清除</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">EVP_MD_CTX_copy</span><span class="params">(EVP_MD_CTX *out, <span class="keyword">const</span> EVP_MD_CTX *in)</span> <span class="comment">//与下面的函数作用相同，但是out不用初始化</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">EVP_MD_CTX_copy_ex</span><span class="params">(EVP_MD_CTX *out, <span class="keyword">const</span> EVP_MD_CTX *in)</span> <span class="comment">//将信息摘要数据从in结构拷贝到out结构中，out必须在调用之前被初始化</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">EVP_MD_CTX_ctrl</span><span class="params">(EVP_MD_CTX *ctx, <span class="keyword">int</span> cmd, <span class="keyword">int</span> p1, <span class="keyword">void</span> *p2)</span></span></span><br></pre></td></tr></table></figure>
<h4 id="参数设置与获取函数"><a class="markdownIt-Anchor" href="#参数设置与获取函数"></a> 参数设置与获取函数</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_MAX_MD_SIZE 64     <span class="comment">/* SHA512 */</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_MD_type</span><span class="params">(<span class="keyword">const</span> EVP_MD *md)</span></span>; <span class="comment">//返回信息摘要结构算法的NID</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_MD_pkey_type</span><span class="params">(<span class="keyword">const</span> EVP_MD *md)</span></span>; <span class="comment">//返回信息摘要结构中公钥签名算法的NID</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_MD_size</span><span class="params">(<span class="keyword">const</span> EVP_MD *md)</span></span>; <span class="comment">//返回结构里面摘要信息的长度</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_MD_block_size</span><span class="params">(<span class="keyword">const</span> EVP_MD *md)</span></span>; <span class="comment">//返回摘要信息分块的长度</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">const</span> EVP_MD *<span class="title">EVP_MD_CTX_md</span><span class="params">(<span class="keyword">const</span> EVP_MD_CTX *ctx)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_MD_CTX_size(e)        EVP_MD_size(EVP_MD_CTX_md(e)) <span class="comment">//返回结构里面摘要信息的长度</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_MD_CTX_block_size(e)  EVP_MD_block_size((e)-&gt;digest) <span class="comment">//返回摘要信息分块的长度</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_MD_CTX_type(e)        EVP_MD_type((e)-&gt;digest) <span class="comment">//返回信息摘要结构算法的NID</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">const</span> EVP_MD *<span class="title">EVP_get_digestbyname</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *name)</span></span>; <span class="comment">//根据给定算法名称返回一个EVP_MD结构</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_get_digestbynid(a) EVP_get_digestbyname(OBJ_nid2sn(a)) <span class="comment">//根据算法的NID返回一个EVP_MD结构</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_get_digestbyobj(a) EVP_get_digestbynid(OBJ_obj2nid(a)) <span class="comment">//根据算法的ASN1_OBJECT结构返回一个EVP_MD结构</span></span></span><br></pre></td></tr></table></figure>
<h4 id="摘要算法函数"><a class="markdownIt-Anchor" href="#摘要算法函数"></a> 摘要算法函数</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">const</span> EVP_MD *<span class="title">EVP_md_null</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">const</span> EVP_MD *<span class="title">EVP_md2</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">const</span> EVP_MD *<span class="title">EVP_md4</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">const</span> EVP_MD *<span class="title">EVP_md5</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">const</span> EVP_MD *<span class="title">EVP_sha</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">const</span> EVP_MD *<span class="title">EVP_sha1</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">const</span> EVP_MD *<span class="title">EVP_sha224</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">const</span> EVP_MD *<span class="title">EVP_sha256</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">const</span> EVP_MD *<span class="title">EVP_sha384</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">const</span> EVP_MD *<span class="title">EVP_sha512</span><span class="params">(<span class="keyword">void</span>)</span></span>;       </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">const</span> EVP_MD *<span class="title">EVP_dss</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">const</span> EVP_MD *<span class="title">EVP_dss1</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">const</span> EVP_MD *<span class="title">EVP_ecdsa</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">const</span> EVP_MD *<span class="title">EVP_mdc2</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">const</span> EVP_MD *<span class="title">EVP_ripemd160</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">const</span> EVP_MD *<span class="title">EVP_whirlpool</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br></pre></td></tr></table></figure>
<h2 id="程序示例-2"><a class="markdownIt-Anchor" href="#程序示例-2"></a> 程序示例</h2>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/err.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/bio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/conf.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">handleErrors</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        ERR_print_errors_fp(<span class="built_in">stderr</span>);</span><br><span class="line">        <span class="built_in">abort</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">digest_message</span><span class="params">(<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span>* message, <span class="keyword">size_t</span> message_len, <span class="keyword">unsigned</span> ch</span></span></span><br><span class="line"><span class="function"><span class="params">ar** digest, <span class="keyword">unsigned</span> <span class="keyword">int</span>* digest_len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        EVP_MD_CTX* mdctx;</span><br><span class="line">        <span class="keyword">if</span>((mdctx=EVP_MD_CTX_new())==<span class="literal">NULL</span>)</span><br><span class="line">                handleErrors();</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">1</span>!=EVP_DigestInit_ex(mdctx,EVP_sha256(),<span class="literal">NULL</span>))</span><br><span class="line">                handleErrors();</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">1</span>!=EVP_DigestUpdate(mdctx,message,message_len))</span><br><span class="line">                handleErrors();</span><br><span class="line">        <span class="keyword">if</span>((*digest=(<span class="keyword">unsigned</span> <span class="keyword">char</span>*)OPENSSL_malloc(EVP_MD_size(EVP_sha256())))==N</span><br><span class="line">ULL)</span><br><span class="line">                handleErrors();</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">1</span>!=EVP_DigestFinal_ex(mdctx,*digest,digest_len))</span><br><span class="line">                handleErrors();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">size_t</span> i=<span class="number">0</span>;i&lt;(*digest_len);i++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%x&quot;</span>,(*digest)[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        EVP_MD_CTX_free(mdctx);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span>* message=(<span class="keyword">unsigned</span> <span class="keyword">char</span>*)<span class="string">&quot;01234567890123456789&quot;</span>;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span>** digest;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">int</span> digest_len;</span><br><span class="line">        digest_message(message,<span class="built_in">strlen</span>((<span class="keyword">const</span> <span class="keyword">char</span>*)message),digest,&amp;digest_len);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="非对称加密"><a class="markdownIt-Anchor" href="#非对称加密"></a> 非对称加密</h1>
<p>主要是以 p_开头的文件。其中:</p>
<ul>
<li>p_enc.c 封装了公钥加密；</li>
<li>p_dec.c 封装了私钥解密；</li>
<li>p_lib.c 实现一些辅助函数；</li>
<li>p_sign.c 封装了签名函数；</li>
<li>p_verify.c 封装了验签函数；</li>
<li>p_seal.c 封装了数字信封相关的函数；</li>
<li>p_open.c 封装了解数字信封相关的函数。</li>
</ul>
<h2 id="基本数据结构-3"><a class="markdownIt-Anchor" href="#基本数据结构-3"></a> 基本数据结构</h2>
<p>该结构用来存放非对称密钥信息，可以是RSA、DSA、DH 或ECC 密钥。其中，ptr 用来存放密钥结构地址，attributes 堆栈用来存放密钥属性。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">evp_pkey_st</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> type;</span><br><span class="line">    <span class="keyword">int</span> save_type;</span><br><span class="line">    <span class="keyword">int</span> references;</span><br><span class="line">    <span class="keyword">const</span> EVP_PKEY_ASN1_METHOD *ameth;</span><br><span class="line">    ENGINE *engine;</span><br><span class="line">    <span class="keyword">union</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> *ptr;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">rsa_st</span> *<span class="title">rsa</span>;</span>     <span class="comment">/* RSA */</span></span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">dsa_st</span> *<span class="title">dsa</span>;</span>     <span class="comment">/* DSA */</span></span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">dh_st</span> *<span class="title">dh</span>;</span>       <span class="comment">/* DH */</span></span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">ec_key_st</span> *<span class="title">ec</span>;</span>   <span class="comment">/* ECC */</span></span><br><span class="line">    &#125; pkey;</span><br><span class="line">    <span class="keyword">int</span> save_parameters;</span><br><span class="line">    STACK_OF(X509_ATTRIBUTE) *attributes; <span class="comment">/* [ 0 ] */</span></span><br><span class="line">&#125;; EVP_PKEY</span><br></pre></td></tr></table></figure>
<h2 id="相关函数-3"><a class="markdownIt-Anchor" href="#相关函数-3"></a> 相关函数</h2>
<h3 id="核心函数-3"><a class="markdownIt-Anchor" href="#核心函数-3"></a> 核心函数</h3>
<h4 id="加密-2"><a class="markdownIt-Anchor" href="#加密-2"></a> 加密</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_encrypt_old</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *enc_key,<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *key, <span class="keyword">int</span> key_len, EVP_PKEY *pubk)</span> <span class="comment">//使用RSA公钥加密</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_encrypt_init</span><span class="params">(EVP_PKEY_CTX *ctx)</span></span>; <span class="comment">//使用密钥pkey对公钥算法的上下文进行初始化，以进行加密操作。返回1成功，0或负值失败，-2代表该公钥算法不支持此操作</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_encrypt</span><span class="params">(EVP_PKEY_CTX *ctx,<span class="keyword">unsigned</span> <span class="keyword">char</span> *out, <span class="keyword">size_t</span> *outlen, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *in, <span class="keyword">size_t</span> inlen)</span></span>; <span class="comment">//函数使用ctx执行公钥加密操作。使用in和inlen参数指定要加密的数据与数据长度。如果out为NULL，则输出缓冲区的最大大小写入outlen参数。如果out不为NULL，那么在调用之前，outlen参数应该包含out缓冲区的长度，如果调用成功，则将加密数据写入out，并将加密后的数据长度写入outlen。返回1成功，0或负值失败，-2表示该公钥算法不支持该操作</span></span><br></pre></td></tr></table></figure>
<h4 id="解密-2"><a class="markdownIt-Anchor" href="#解密-2"></a> 解密</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_decrypt_old</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *dec_key, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *enc_key, <span class="keyword">int</span> enc_key_len,EVP_PKEY *private_key)</span></span>;<span class="comment">//RSA私钥解密</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_decrypt_init</span><span class="params">(EVP_PKEY_CTX *ctx)</span></span>; <span class="comment">//函数使用密钥pkey初始化公钥算法的上下文以进行解密操作。返回1成功，0或负值失败，-2表示该公钥算法不支持该操作。</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_decrypt</span><span class="params">(EVP_PKEY_CTX *ctx,<span class="keyword">unsigned</span> <span class="keyword">char</span> *out, <span class="keyword">size_t</span> *outlen, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *in, <span class="keyword">size_t</span> inlen)</span></span>; <span class="comment">//函数使用ctx执行公钥解操作。使用in和inlen参数指定要解密的数据与数据字长。如果out为NULL，则输出缓冲区的最大大小写入outlen参数。如果out不为NULL，那么在调用之前，outlen参数应该包含out缓冲区的长度，如果调用成功，则将解密数据写入out，并将数据写入outlen。返回1成功，0或负值失败，-2表示该公钥算法不支持该操作。</span></span><br></pre></td></tr></table></figure>
<h3 id="辅助函数-3"><a class="markdownIt-Anchor" href="#辅助函数-3"></a> 辅助函数</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"><span class="function">EVP_PKEY_CTX *<span class="title">EVP_PKEY_CTX_new</span><span class="params">(EVP_PKEY *pkey, ENGINE *e)</span></span>; <span class="comment">//使用pkey和ENGINE e中指定的算法分配公钥算法上下文，返回新分配的EVP_PKEY_CTX结构，如果出现错误返回NULL</span></span><br><span class="line"><span class="function">EVP_PKEY_CTX *<span class="title">EVP_PKEY_CTX_new_id</span><span class="params">(<span class="keyword">int</span> id, ENGINE *e)</span></span>; <span class="comment">//使用由id和e指定的算法分配公钥算法上下文，返回新分配的EVP_PKEY_CTX结构，如果出现错误返回NULL</span></span><br><span class="line"><span class="function">EVP_PKEY_CTX *<span class="title">EVP_PKEY_CTX_dup</span><span class="params">(EVP_PKEY_CTX *ctx)</span></span>; <span class="comment">//复制上下文ctx，返回新分配的EVP_PKEY_CTX结构，如果出现错误返回NULL</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EVP_PKEY_CTX_free</span><span class="params">(EVP_PKEY_CTX *ctx)</span></span>; <span class="comment">//释放上下文ctx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_CTX_ctrl</span><span class="params">(EVP_PKEY_CTX *ctx, <span class="keyword">int</span> keytype, <span class="keyword">int</span> optype,<span class="keyword">int</span> cmd, <span class="keyword">int</span> p1, <span class="keyword">void</span> *p2)</span></span>; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_CTX_ctrl_str</span><span class="params">(EVP_PKEY_CTX *ctx, <span class="keyword">const</span> <span class="keyword">char</span> *type,<span class="keyword">const</span> <span class="keyword">char</span> *value)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/rsa.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_CTX_set_signature_md</span><span class="params">(EVP_PKEY_CTX *ctx, <span class="keyword">const</span> EVP_MD *md)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_CTX_set_rsa_padding</span><span class="params">(EVP_PKEY_CTX *ctx, <span class="keyword">int</span> pad)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_CTX_set_rsa_pss_saltlen</span><span class="params">(EVP_PKEY_CTX *ctx, <span class="keyword">int</span> len)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_CTX_set_rsa_rsa_keygen_bits</span><span class="params">(EVP_PKEY_CTX *ctx, <span class="keyword">int</span> mbits)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_CTX_set_rsa_keygen_pubexp</span><span class="params">(EVP_PKEY_CTX *ctx, BIGNUM *pubexp)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/dsa.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_CTX_set_dsa_paramgen_bits</span><span class="params">(EVP_PKEY_CTX *ctx, <span class="keyword">int</span> nbits)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/dh.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_CTX_set_dh_paramgen_prime_len</span><span class="params">(EVP_PKEY_CTX *ctx, <span class="keyword">int</span> len)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_CTX_set_dh_paramgen_generator</span><span class="params">(EVP_PKEY_CTX *ctx, <span class="keyword">int</span> gen)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/ec.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_CTX_set_ec_paramgen_curve_nid</span><span class="params">(EVP_PKEY_CTX *ctx, <span class="keyword">int</span> nid)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EVP_PKEY_CTX_set_cb</span><span class="params">(EVP_PKEY_CTX *ctx, EVP_PKEY_gen_cb *cb)</span></span>;</span><br><span class="line"><span class="function">EVP_PKEY_gen_cb *<span class="title">EVP_PKEY_CTX_get_cb</span><span class="params">(EVP_PKEY_CTX *ctx)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"><span class="comment">//将pkey所指的EVP_PKEY的密钥设置为key所指的密钥，成功返回1，失败返回0</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_set1_RSA</span><span class="params">(EVP_PKEY *pkey,RSA *key)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_set1_DSA</span><span class="params">(EVP_PKEY *pkey,DSA *key)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_set1_DH</span><span class="params">(EVP_PKEY *pkey,DH *key)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_set1_EC_KEY</span><span class="params">(EVP_PKEY *pkey,EC_KEY *key)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//从pkey所指的EVP_PKEY中获取对应的密钥，失败返回NULL </span></span><br><span class="line"><span class="function">RSA *<span class="title">EVP_PKEY_get1_RSA</span><span class="params">(EVP_PKEY *pkey)</span></span>;</span><br><span class="line"><span class="function">DSA *<span class="title">EVP_PKEY_get1_DSA</span><span class="params">(EVP_PKEY *pkey)</span></span>;</span><br><span class="line"><span class="function">DH *<span class="title">EVP_PKEY_get1_DH</span><span class="params">(EVP_PKEY *pkey)</span></span>;</span><br><span class="line"><span class="function">EC_KEY *<span class="title">EVP_PKEY_get1_EC_KEY</span><span class="params">(EVP_PKEY *pkey)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将pkey所指的EVP_PKEY的密钥设置为key所指的密钥，但pkey释放时，key也会被释放成功返回1，失败返回0</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_assign</span><span class="params">(EVP_PKEY,<span class="keyword">int</span> type ,<span class="keyword">void</span> *key)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_assign_RSA</span><span class="params">(EVP_PKEY *pkey,RSA *key)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_assign_DSA</span><span class="params">(EVP_PKEY *pkey,DSA *key)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_assign_DH</span><span class="params">(EVP_PKEY *pkey,DH *key)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_assign_EC_KEY</span><span class="params">(EVP_PKEY *pkey,EC_KEY *key)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回与type匹配的密钥的类型，EVP_PKEY_RSA, EVP_PKEY_DSA, EVP_PKEY_DH or EVP_PKEY_EC或者NID_undef</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_type</span><span class="params">(<span class="keyword">int</span> type)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_missing_parameters</span><span class="params">(<span class="keyword">const</span> EVP_PKEY *pkey)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_copy_parameters</span><span class="params">(EVP_PKEY *to, <span class="keyword">const</span> EVP_PKEY *from)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_cmp_parameters</span><span class="params">(<span class="keyword">const</span> EVP_PKEY *a, <span class="keyword">const</span> EVP_PKEY *b)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_cmp</span><span class="params">(<span class="keyword">const</span> EVP_PKEY *a, <span class="keyword">const</span> EVP_PKEY *b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_derive_init</span><span class="params">(EVP_PKEY_CTX *ctx)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_derive_set_peer</span><span class="params">(EVP_PKEY_CTX *ctx, EVP_PKEY *peer)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_derive</span><span class="params">(EVP_PKEY_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *key, <span class="keyword">size_t</span> *keylen)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_get_default_digest_nid</span><span class="params">(EVP_PKEY *pkey, <span class="keyword">int</span> *pnid)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_keygen_init</span><span class="params">(EVP_PKEY_CTX *ctx)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_keygen</span><span class="params">(EVP_PKEY_CTX *ctx, EVP_PKEY **ppkey)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_paramgen_init</span><span class="params">(EVP_PKEY_CTX *ctx)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_paramgen</span><span class="params">(EVP_PKEY_CTX *ctx, EVP_PKEY **ppkey)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="keyword">int</span> <span class="title">EVP_PKEY_gen_cb</span><span class="params">(EVP_PKEY_CTX *ctx)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_CTX_get_keygen_info</span><span class="params">(EVP_PKEY_CTX *ctx, <span class="keyword">int</span> idx)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EVP_PKEY_CTX_set_app_data</span><span class="params">(EVP_PKEY_CTX *ctx, <span class="keyword">void</span> *data)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">EVP_PKEY_CTX_get_app_data</span><span class="params">(EVP_PKEY_CTX *ctx)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function">EVP_PKEY *<span class="title">EVP_PKEY_new</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EVP_PKEY_free</span><span class="params">(EVP_PKEY *key)</span></span>;  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_print_public</span><span class="params">(BIO *out, <span class="keyword">const</span> EVP_PKEY *pkey,<span class="keyword">int</span> indent, ASN1_PCTX *pctx)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_print_private</span><span class="params">(BIO *out, <span class="keyword">const</span> EVP_PKEY *pkey,<span class="keyword">int</span> indent, ASN1_PCTX *pctx)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_print_params</span><span class="params">(BIO *out, <span class="keyword">const</span> EVP_PKEY *pkey,<span class="keyword">int</span> indent, ASN1_PCTX *pctx)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_sign_init</span><span class="params">(EVP_PKEY_CTX *ctx)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_sign</span><span class="params">(EVP_PKEY_CTX *ctx,<span class="keyword">unsigned</span> <span class="keyword">char</span> *sig, <span class="keyword">size_t</span> *siglen, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *tbs, <span class="keyword">size_t</span> tbslen)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_verify_init</span><span class="params">(EVP_PKEY_CTX *ctx)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_verify</span><span class="params">(EVP_PKEY_CTX *ctx, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *sig, <span class="keyword">size_t</span> siglen, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *tbs, <span class="keyword">size_t</span> tbslen)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_verify_recover_init</span><span class="params">(EVP_PKEY_CTX *ctx)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_verify_recover</span><span class="params">(EVP_PKEY_CTX *ctx,<span class="keyword">unsigned</span> <span class="keyword">char</span> *rout, <span class="keyword">size_t</span> *routlen, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *sig, <span class="keyword">size_t</span> siglen)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_get_default_digest_nid</span><span class="params">(EVP_PKEY *pkey, <span class="keyword">int</span> *pnid)</span></span>;</span><br></pre></td></tr></table></figure>
<h2 id="程序示例-3"><a class="markdownIt-Anchor" href="#程序示例-3"></a> 程序示例</h2>
<h3 id="参数初始化"><a class="markdownIt-Anchor" href="#参数初始化"></a> 参数初始化</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Create the context for generating the parameters */</span></span><br><span class="line"><span class="keyword">if</span>(!(pctx = EVP_PKEY_CTX_new_id(type, <span class="literal">NULL</span>))) <span class="keyword">goto</span> err;</span><br><span class="line"><span class="keyword">if</span>(!EVP_PKEY_paramgen_init(pctx)) <span class="keyword">goto</span> err;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Set the paramgen parameters according to the type */</span></span><br><span class="line"><span class="keyword">switch</span>(type)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> EVP_PKEY_EC:</span><br><span class="line">  <span class="comment">/* Use the NID_X9_62_prime256v1 named curve - defined in obj_mac.h */</span></span><br><span class="line">  <span class="keyword">if</span>(!EVP_PKEY_CTX_set_ec_paramgen_curve_nid(pctx, NID_X9_62_prime256v1)) <span class="keyword">goto</span> err;		</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> EVP_PKEY_DSA:</span><br><span class="line">  <span class="comment">/* Set a bit length of 2048 */</span></span><br><span class="line">  <span class="keyword">if</span>(!EVP_PKEY_CTX_set_dsa_paramgen_bits(pctx, <span class="number">2048</span>)) <span class="keyword">goto</span> err;		</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> EVP_PKEY_DH:</span><br><span class="line">  <span class="comment">/* Set a prime length of 2048 */</span></span><br><span class="line">  <span class="keyword">if</span>(!EVP_PKEY_CTX_set_dh_paramgen_prime_len(pctx, <span class="number">2048</span>)) <span class="keyword">goto</span> err;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Generate parameters */</span></span><br><span class="line"><span class="keyword">if</span> (!EVP_PKEY_paramgen(pctx, &amp;params)) <span class="keyword">goto</span> err;</span><br></pre></td></tr></table></figure>
<h3 id="密钥生成"><a class="markdownIt-Anchor" href="#密钥生成"></a> 密钥生成</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(*params != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(!(kctx = EVP_PKEY_CTX_new(params, <span class="literal">NULL</span>))) <span class="keyword">goto</span> err; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* Create context for the key generation */</span></span><br><span class="line">  <span class="keyword">if</span>(!(kctx = EVP_PKEY_CTX_new_id(type, <span class="literal">NULL</span>))) <span class="keyword">goto</span> err;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!EVP_PKEY_keygen_init(kctx)) <span class="keyword">goto</span> err; </span><br><span class="line"></span><br><span class="line"><span class="comment">/* RSA keys set the key length during key generation rather than parameter generation! */</span></span><br><span class="line"><span class="keyword">if</span>(type == EVP_PKEY_RSA)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(!EVP_PKEY_CTX_set_rsa_keygen_bits(kctx, <span class="number">2048</span>)) <span class="keyword">goto</span> err;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Generate the key */</span></span><br><span class="line"><span class="keyword">if</span> (!EVP_PKEY_keygen(kctx, &amp;key)) <span class="keyword">goto</span> err;</span><br></pre></td></tr></table></figure>
<h1 id="base64编解码"><a class="markdownIt-Anchor" href="#base64编解码"></a> BASE64编解码</h1>
<h2 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h2>
<p>Base 64编码将二进制数据转换为使用字符 A-Z，a-z，0-9，“+”和“/”表示来数据的可打印形式。每3个字节的二进制数据，编码为上述字符表示的4字节数据。如果输入数据长度不是3的倍数，则输出数据将使用“=”字符在最后填充。</p>
<p>步骤：首先将每三个字节原始二进制数据在一起展开； 然后6bit分为一个小组，每个小组前面补两个0，成为一个字节；把新编码的每个字节转为十进制，根据base64标准转换表，找到对应的字符。 如果多了一个字节，则剩余两个字节用“=”填充，如果多了两个字节，则剩余一个字节用“=”填充。</p>
<h2 id="基本数据结构-4"><a class="markdownIt-Anchor" href="#基本数据结构-4"></a> 基本数据结构</h2>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">evp_Encode_Ctx_st</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">     <span class="comment">/* number saved in a partial encode/decode */</span></span><br><span class="line">     <span class="keyword">int</span> num;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/* The length is either the output line length (in input bytes) or the shortest input line length that is ok.  Once decoding begins, the length is adjusted up each time a longer line is decoded */</span></span><br><span class="line">     <span class="keyword">int</span> length;</span><br><span class="line">     <span class="keyword">unsigned</span> <span class="keyword">char</span> enc_data[<span class="number">80</span>];    <span class="comment">//待编码的数据</span></span><br><span class="line"></span><br><span class="line">     <span class="keyword">int</span> line_num;   <span class="comment">/* number read on current line */</span></span><br><span class="line">     <span class="keyword">int</span> expect_nl;</span><br><span class="line">&#125; EVP_ENCODE_CTX;  </span><br></pre></td></tr></table></figure>
<h2 id="相关函数-4"><a class="markdownIt-Anchor" href="#相关函数-4"></a> 相关函数</h2>
<h3 id="核心函数-4"><a class="markdownIt-Anchor" href="#核心函数-4"></a> 核心函数</h3>
<h4 id="编码"><a class="markdownIt-Anchor" href="#编码"></a> 编码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EVP_EncodeInit</span><span class="params">(EVP_ENCODE_CTX *ctx)</span></span>; <span class="comment">//初始化ctx以启动新的编码操作，无返回值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EVP_EncodeUpdate</span><span class="params">(EVP_ENCODE_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *out, <span class="keyword">int</span> *outl, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *in, <span class="keyword">int</span> inl)</span></span>; <span class="comment">//编码in指向的缓冲区中的inl字节数据。输出存储在缓冲区out中，输出的字节数存储在outl中。调用者必须确保out指向的缓冲区足够大以容纳输出数据。只有完整的数据块（48字节）可以被直接编码完后并通过函数输出。任何剩余的字节都保存在ctx对象中，并通过后续调用EVP_EncodeUpdate（）EVP_EncodeFinal（）来处理。</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EVP_EncodeFinal</span><span class="params">(EVP_ENCODE_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *out, <span class="keyword">int</span> *outl)</span></span>; <span class="comment">//必须在编码操作结束时调用EVP_EncodeFinal（）。它将处理ctx对象中剩余的任何部分数据块。输出数据将被存储在out，输出的数据长度将存储在* outl中，包含了’\n’。无返回值</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">EVP_EncodeBlock</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *t, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *f, <span class="keyword">int</span> n)</span></span>; <span class="comment">//对f中的输入数据进行编码，并将其存储在t中。对于每3字节的输入，将产生4字节的输出数据。如果n不能被3整除，则块被当做最后的数据块来编码，并且被填充，使得它总是可被除以4。另外还将添加‘\0’终结符字符。</span></span><br></pre></td></tr></table></figure>
<h4 id="解码"><a class="markdownIt-Anchor" href="#解码"></a> 解码</h4>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EVP_DecodeInit</span><span class="params">(EVP_ENCODE_CTX *ctx)</span></span>; <span class="comment">//初始化ctx以开始新的解码操作</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">EVP_DecodeUpdate</span><span class="params">(EVP_ENCODE_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *out, <span class="keyword">int</span> *outl, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *in, <span class="keyword">int</span> inl)</span></span>; <span class="comment">//解码in指向的缓冲区中inl字节的数据。输出存储在缓冲区中out，输出的字节数存储在* outl中。调用者有责任确保out指向的缓冲区足够大以容纳输出数据。该功能将尝试在4字节块中尽可能多地解码数据。任何空格，换行符或回车符都将被忽略。任何保留在结尾的未处理数据（1,2或3个字节）的部分块将保留在ctx对象中，并由后续调用EVP_DecodeUpdate（）处理。如果遇到非法的base64字符，或者如果在数据中间遇到base64填充字符“=”，则函数返回-1表示错误。返回值为0或1表示数据成功处理。返回值0表示处理的最后输入数据字符包括base64填充字符“=”，预期不会再处理非填充字符数据</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">EVP_DecodeFinal</span><span class="params">(EVP_ENCODE_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *out, <span class="keyword">int</span> *outl)</span></span>; <span class="comment">//必须在解码操作结束时调用，如果仍然存在任何未处理的数据，那么输入数据不能是4的倍数。成功返回1，失败返回-1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">EVP_DecodeBlock</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *t, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *f, <span class="keyword">int</span> n)</span></span>; <span class="comment">//解码f中包含的基本64个数据的n个字节的块，并将结果存储在t中。任何前导空格，以及任何尾随的空格，换行符，回车符或EOF字符将被修剪。返回解码的数据长度，出错返回-1。</span></span><br></pre></td></tr></table></figure>
<h3 id="辅助函数-4"><a class="markdownIt-Anchor" href="#辅助函数-4"></a> 辅助函数</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">EVP_ENCODE_CTX *<span class="title">EVP_ENCODE_CTX_new</span><span class="params">(<span class="keyword">void</span>)</span></span>; <span class="comment">//分配，初始化并返回要用于encode / decode函数的上下文。成功返回地址，失败返回NULL</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EVP_ENCODE_CTX_free</span><span class="params">(EVP_ENCODE_CTX *ctx)</span></span>; <span class="comment">//清理编码/解码上下文ctx并释放分配给它的空间</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_ENCODE_CTX_copy</span><span class="params">(EVP_ENCODE_CTX *dctx, EVP_ENCODE_CTX *sctx)</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_ENCODE_CTX_num</span><span class="params">(EVP_ENCODE_CTX *ctx)</span></span>; <span class="comment">//返回在ctx对象中待处理的尚未编码或解码的字节数</span></span><br></pre></td></tr></table></figure>
<h2 id="程序示例-4"><a class="markdownIt-Anchor" href="#程序示例-4"></a> 程序示例</h2>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span>	<span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    EVP_ENCODE_CTX ectx,dctx;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> in[<span class="number">500</span>],out[<span class="number">800</span>],d[<span class="number">500</span>];</span><br><span class="line">    <span class="keyword">int</span>	inl,outl,i,total,ret,total2;</span><br><span class="line"></span><br><span class="line">    EVP_EncodeInit(&amp;ectx);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">500</span>;i++)</span><br><span class="line">        <span class="built_in">memset</span>(&amp;in[i],i,<span class="number">1</span>);</span><br><span class="line">    inl=<span class="number">500</span>;</span><br><span class="line">    total=<span class="number">0</span>;</span><br><span class="line">    EVP_EncodeUpdate(&amp;ectx,out,&amp;outl,in,inl);</span><br><span class="line">    total+=outl;</span><br><span class="line">    EVP_EncodeFinal(&amp;ectx,out+total,&amp;outl);</span><br><span class="line">    total+=outl;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,out);</span><br><span class="line"></span><br><span class="line">    EVP_DecodeInit(&amp;dctx);</span><br><span class="line">    outl=<span class="number">500</span>;</span><br><span class="line">    total2=<span class="number">0</span>;</span><br><span class="line">    ret=EVP_DecodeUpdate(&amp;dctx,d,&amp;outl,out,total);</span><br><span class="line">    <span class="keyword">if</span>(ret&lt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;EVP_DecodeUpdate err!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    total2+=outl;</span><br><span class="line">    ret=EVP_DecodeFinal(&amp;dctx,d,&amp;outl);</span><br><span class="line">    total2+=outl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="hmac"><a class="markdownIt-Anchor" href="#hmac"></a> HMAC</h1>
<p>HMAC是基于散列函数的MAC（消息认证码），即用于消息认证的密钥哈希函数。</p>
<h2 id="基本数据结构-5"><a class="markdownIt-Anchor" href="#基本数据结构-5"></a> 基本数据结构</h2>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">hmac_ctx_st</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">const</span> EVP_MD *md;</span><br><span class="line">    EVP_MD_CTX md_ctx;</span><br><span class="line">    EVP_MD_CTX i_ctx;</span><br><span class="line">    EVP_MD_CTX o_ctx;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> key_length;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> key[HMAC_MAX_MD_CBLOCK];</span><br><span class="line">&#125;<span class="comment">/* HMAC_CTX*/</span>;</span><br></pre></td></tr></table></figure>
<h2 id="相关函数-5"><a class="markdownIt-Anchor" href="#相关函数-5"></a> 相关函数</h2>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> *<span class="title">HMAC</span><span class="params">(<span class="keyword">const</span> EVP_MD *evp_md, <span class="keyword">const</span> <span class="keyword">void</span> *key,<span class="keyword">int</span> key_len, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *d, <span class="keyword">int</span> n,<span class="keyword">unsigned</span> <span class="keyword">char</span> *md, <span class="keyword">unsigned</span> <span class="keyword">int</span> *md_len)</span></span>; <span class="comment">//使用哈希函数evp_md和key_len字节长的密钥键计算d字节的消息认证码。它将结果放在md（它必须有空格的哈希函数的输出，不超过EVP_MAX_MD_SIZE字节）。如果md为NULL，则将摘要放置在静态数组中。输出的大小放在md_len中，除非它为空。evp_md可以为EVP_sha1()等</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="meta-keyword">define</span> HMAC_MAX_MD_CBLOCK      128<span class="comment">/* largest known is SHA512 */</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">define</span> HMAC_size(e)    (EVP_MD_size((e)-&gt;md)</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HMAC_CTX_init</span><span class="params">(HMAC_CTX *ctx)</span></span>; <span class="comment">//HMAC_CTX_init()在首次使用前初始化HMAC_CTX。必须调用</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HMAC_CTX_cleanup</span><span class="params">(HMAC_CTX *ctx)</span></span>; <span class="comment">//HMAC_CTX_cleanup()从HMAC_CTX中删除密钥和其他数据，并释放任何关联的资源。当不再需要HMAC_CTX时，必须调用它</span></span><br><span class="line"><span class="function"><span class="keyword">size_t</span> <span class="title">HMAC_size</span><span class="params">(<span class="keyword">const</span> HMAC_CTX *e)</span></span>;</span><br><span class="line"><span class="function">HMAC_CTX *<span class="title">HMAC_CTX_new</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">HMAC_CTX_reset</span><span class="params">(HMAC_CTX *ctx)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HMAC_CTX_free</span><span class="params">(HMAC_CTX *ctx)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果消息没有完全存储在内存中，可能会使用以下功能：</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">HMAC_Init_ex</span><span class="params">(HMAC_CTX *ctx, <span class="keyword">const</span> <span class="keyword">void</span> *key, <span class="keyword">int</span> key_len,<span class="keyword">const</span> EVP_MD *md, ENGINE *impl)</span></span>; <span class="comment">//初始化或重用HMAC_CTX结构以使用函数evp_md和key，key可以是NULL，在这种情况下，现有的一个将被重用。 HMAC_CTX_init()必须在此功能首次使用HMAC_CTX之前被调用</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">HMAC_Update</span><span class="params">(HMAC_CTX *ctx, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *data, <span class="keyword">int</span> len)</span></span>; <span class="comment">//可以重复调用消息的大小块进行身份验证（数据中为len个字节）</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">HMAC_Final</span><span class="params">(HMAC_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *md, <span class="keyword">unsigned</span> <span class="keyword">int</span> *len)</span></span>; <span class="comment">//将消息认证码放在md中，它必须具有用于散列函数输出的空间</span></span><br></pre></td></tr></table></figure>
<h2 id="程序示例-5"><a class="markdownIt-Anchor" href="#程序示例-5"></a> 程序示例</h2>
<h3 id="生成"><a class="markdownIt-Anchor" href="#生成"></a> 生成</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">hmac_it</span><span class="params">(<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *msg, <span class="keyword">size_t</span> mlen, <span class="keyword">unsigned</span> <span class="keyword">char</span> **val, <span class="keyword">size_t</span> *vlen, EVP_PKEY *pkey)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* Returned to caller */</span></span><br><span class="line">    <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">    EVP_MD_CTX* ctx = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">size_t</span> req = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> rc;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(!msg || !mlen || !val || !pkey)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    *val = <span class="literal">NULL</span>;</span><br><span class="line">    *vlen = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    ctx = EVP_MD_CTX_new();</span><br><span class="line">    <span class="keyword">if</span> (ctx == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;EVP_MD_CTX_create failed, error 0x%lx\n&quot;</span>, ERR_get_error());</span><br><span class="line">        <span class="keyword">goto</span> err;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    rc = EVP_DigestSignInit(ctx, <span class="literal">NULL</span>, EVP_sha256(), <span class="literal">NULL</span>, pkey);</span><br><span class="line">    <span class="keyword">if</span> (rc != <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;EVP_DigestSignInit failed, error 0x%lx\n&quot;</span>, ERR_get_error());</span><br><span class="line">        <span class="keyword">goto</span> err;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    rc = EVP_DigestSignUpdate(ctx, msg, mlen);</span><br><span class="line">    <span class="keyword">if</span> (rc != <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;EVP_DigestSignUpdate failed, error 0x%lx\n&quot;</span>, ERR_get_error());</span><br><span class="line">        <span class="keyword">goto</span> err;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    rc = EVP_DigestSignFinal(ctx, <span class="literal">NULL</span>, &amp;req);</span><br><span class="line">    <span class="keyword">if</span> (rc != <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;EVP_DigestSignFinal failed (1), error 0x%lx\n&quot;</span>, ERR_get_error());</span><br><span class="line">        <span class="keyword">goto</span> err;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    *val = OPENSSL_malloc(req);</span><br><span class="line">    <span class="keyword">if</span> (*val == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;OPENSSL_malloc failed, error 0x%lx\n&quot;</span>, ERR_get_error());</span><br><span class="line">        <span class="keyword">goto</span> err;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    *vlen = req;</span><br><span class="line">    rc = EVP_DigestSignFinal(ctx, *val, vlen);</span><br><span class="line">    <span class="keyword">if</span> (rc != <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;EVP_DigestSignFinal failed (3), return code %d, error 0x%lx\n&quot;</span>, rc, ERR_get_error());</span><br><span class="line">        <span class="keyword">goto</span> err;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    result = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line"> err:</span><br><span class="line">    EVP_MD_CTX_free(ctx);</span><br><span class="line">    <span class="keyword">if</span> (!result) &#123;</span><br><span class="line">        OPENSSL_free(*val);</span><br><span class="line">        *val = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">verify_it</span><span class="params">(<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *msg, <span class="keyword">size_t</span> mlen, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *val, <span class="keyword">size_t</span> vlen, EVP_PKEY *pkey)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* Returned to caller */</span></span><br><span class="line">    <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">    EVP_MD_CTX* ctx = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> buff[EVP_MAX_MD_SIZE];</span><br><span class="line">    <span class="keyword">size_t</span> size;</span><br><span class="line">    <span class="keyword">int</span> rc;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!msg || !mlen || !val || !vlen || !pkey)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    ctx = EVP_MD_CTX_new();</span><br><span class="line">    <span class="keyword">if</span> (ctx == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;EVP_MD_CTX_create failed, error 0x%lx\n&quot;</span>, ERR_get_error());</span><br><span class="line">        <span class="keyword">goto</span> err;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    rc = EVP_DigestSignInit(ctx, <span class="literal">NULL</span>, EVP_sha256(), <span class="literal">NULL</span>, pkey);</span><br><span class="line">    <span class="keyword">if</span> (rc != <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;EVP_DigestSignInit failed, error 0x%lx\n&quot;</span>, ERR_get_error());</span><br><span class="line">        <span class="keyword">goto</span> err;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    rc = EVP_DigestSignUpdate(ctx, msg, mlen);</span><br><span class="line">    <span class="keyword">if</span> (rc != <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;EVP_DigestSignUpdate failed, error 0x%lx\n&quot;</span>, ERR_get_error());</span><br><span class="line">        <span class="keyword">goto</span> err;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    size = <span class="keyword">sizeof</span>(buff);</span><br><span class="line">    rc = EVP_DigestSignFinal(ctx, buff, &amp;size);</span><br><span class="line">    <span class="keyword">if</span> (rc != <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;EVP_DigestSignFinal failed, error 0x%lx\n&quot;</span>, ERR_get_error());</span><br><span class="line">        <span class="keyword">goto</span> err;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    result = (vlen == size) &amp;&amp; (CRYPTO_memcmp(val, buff, size) == <span class="number">0</span>);</span><br><span class="line"> err:</span><br><span class="line">    EVP_MD_CTX_free(ctx);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="数字签名"><a class="markdownIt-Anchor" href="#数字签名"></a> 数字签名</h1>
<h2 id="签名"><a class="markdownIt-Anchor" href="#签名"></a> 签名</h2>
<p><strong>EVP_Sign系列函数</strong>使用的基础结构跟信息摘要算法使用的基础结构是一样的，而且，其前面的两个操作步骤初始化和数据操作（信息摘要）也跟信息摘要算法是一样的，唯一不一样的是最后一步操作，本系列函数做了签名的工作。本系列函数定义的如下(openssl/evp.h)：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_SignInit_ex(a,b,c) EVP_DigestInit_ex(a,b,c)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_SignInit_ex</span><span class="params">(EVP_MD_CTX *ctx, <span class="keyword">const</span> EVP_MD *type, ENGINE *impl)</span></span>; <span class="comment">//使用ENGINE参数impl所代表的实现函数功能来设置结构ctx。在调用本函数前，参数ctx一定要经过EVP_MD_CTX_init函数初始化。成功返回1，失败返回0。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_SignUpdate(a,b,c) EVP_DigestUpdate(a,b,c)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_SignUpdate</span><span class="params">(EVP_MD_CTX *ctx, <span class="keyword">const</span> <span class="keyword">void</span> *d, <span class="keyword">unsigned</span> <span class="keyword">int</span> cnt)</span></span>; <span class="comment">//将一个cnt字节的数据经过信息摘要运算存储到结构ctx中，该函数可以在一个相同的ctx中调用多次来实现对更多数据的信息摘要工作。成功返回1，失败返回0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_SignFinal</span><span class="params">(EVP_MD_CTX *ctx,<span class="keyword">unsigned</span> <span class="keyword">char</span> *sig,<span class="keyword">unsigned</span> <span class="keyword">int</span> *s, EVP_PKEY *pkey)</span></span>; <span class="comment">//该函数是将签名操作的信息摘要结构先调用EVP_MD_CTX_copy_ex函数拷贝一份，然后调用EVP_DigestFinal_ex完成信息摘要工作，然后开始对摘要信息用私钥pkey调用EVP_PKEY_sign_init 和EVP_PKEY_sign进行签名,并将签名信息保存在参数sig里面。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_SignInit(a,b) EVP_DigestInit(a,b)</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EVP_SignInit</span><span class="params">(EVP_MD_CTX *ctx, <span class="keyword">const</span> EVP_MD *type)</span></span>; <span class="comment">//使用缺省实现的算法初始化算法结构ctx</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_PKEY_size</span><span class="params">(EVP_PKEY *pkey)</span></span>; <span class="comment">//返回一个签名信息的最大长度（单位字节）。实际签名信息的长度则由上述的函数EVP_SignFinal返回，有可能比它小</span></span><br></pre></td></tr></table></figure>
<h2 id="认证"><a class="markdownIt-Anchor" href="#认证"></a> 认证</h2>
<p>与EVP_Sign系列函数一样，EVP_Verify系列函数的前两步（初始化和信息摘要处理）和信息摘要算法是一样的</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_VerifyInit_ex(a,b,c) EVP_DigestInit_ex(a,b,c)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_VerifyInit_ex</span><span class="params">(EVP_MD_CTX *ctx, <span class="keyword">const</span> EVP_MD *type, ENGINE *impl)</span></span>; <span class="comment">//该函数使用参数impl所提供的算法库对验证结构ctx进行设置。在调用本函数之前，参数ctx必须经过调用EVP_MD_CTX_init进行初始化。成功返回1，失败返回0。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_VerifyUpdate(a,b,c) EVP_DigestUpdate(a,b,c)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_VerifyUpdate</span><span class="params">(EVP_MD_CTX *ctx, <span class="keyword">const</span> <span class="keyword">void</span> *d, <span class="keyword">unsigned</span> <span class="keyword">int</span> cnt)</span></span>; <span class="comment">//该函数将参数d中的cnt字节数据经过信息摘要计算后保存到ctx中，该函数可以进行多次调用，以处理更多的数据。成功调用返回1，失败返回0。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_VerifyFinal</span><span class="params">(EVP_MD_CTX *ctx,<span class="keyword">unsigned</span> <span class="keyword">char</span> *sigbuf, <span class="keyword">unsigned</span> <span class="keyword">int</span> siglen,EVP_PKEY *pkey)</span></span>; <span class="comment">//该函数先调用EVP_MD_CTX_copy_ex函数将原来的ctx拷贝一份，然后调用EVP_DigestFinal_ex函数完成拷贝的ctx的信息摘要计算，最后才使用公钥pkey调用EVP_PKEY_verify_init 和EVP_PKEY_verify_进行签名的验证工作</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_VerifyInit(a,b) EVP_DigestInit(a,b)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_VerifyInit</span><span class="params">(EVP_MD_CTX *ctx, <span class="keyword">const</span> EVP_MD *type)</span></span>; <span class="comment">//使用默认实现对ctx结构进行初始化</span></span><br></pre></td></tr></table></figure>
<h2 id="备注"><a class="markdownIt-Anchor" href="#备注"></a> 备注</h2>
<p>在新版的OpenSSL中定义了<code>EVP_DigestSign*</code> 和 <code>EVP_DigestVerify*</code> 这两个系列的函数，将计算摘要和数字签名操作合在一起。这一系列函数的用法与不带Digest的系列函数类似，但是函数的参数稍有不同。</p>
<h2 id="程序示例-6"><a class="markdownIt-Anchor" href="#程序示例-6"></a> 程序示例</h2>
<h3 id="签名-2"><a class="markdownIt-Anchor" href="#签名-2"></a> 签名</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">EVP_MD_CTX *mdctx = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">*sig = <span class="literal">NULL</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* Create the Message Digest Context */</span></span><br><span class="line"><span class="keyword">if</span>(!(mdctx = EVP_MD_CTX_create())) <span class="keyword">goto</span> err;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* Initialise the DigestSign operation - SHA-256 has been selected as the message digest function in this example */</span></span><br><span class="line"><span class="keyword">if</span>(<span class="number">1</span> != EVP_DigestSignInit(mdctx, <span class="literal">NULL</span>, EVP_sha256(), <span class="literal">NULL</span>, key)) <span class="keyword">goto</span> err;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Call update with the message */</span></span><br><span class="line"><span class="keyword">if</span>(<span class="number">1</span> != EVP_DigestSignUpdate(mdctx, msg, <span class="built_in">strlen</span>(msg))) <span class="keyword">goto</span> err;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Finalise the DigestSign operation */</span></span><br><span class="line"><span class="comment">/* First call EVP_DigestSignFinal with a NULL sig parameter to obtain the length of the</span></span><br><span class="line"><span class="comment">* signature. Length is returned in slen */</span></span><br><span class="line"><span class="keyword">if</span>(<span class="number">1</span> != EVP_DigestSignFinal(mdctx, <span class="literal">NULL</span>, slen)) <span class="keyword">goto</span> err;</span><br><span class="line"><span class="comment">/* Allocate memory for the signature based on size in slen */</span></span><br><span class="line"><span class="keyword">if</span>(!(*sig = OPENSSL_malloc(<span class="keyword">sizeof</span>(<span class="keyword">unsigned</span> <span class="keyword">char</span>) * (*slen)))) <span class="keyword">goto</span> err;</span><br><span class="line"><span class="comment">/* Obtain the signature */</span></span><br><span class="line"><span class="keyword">if</span>(<span class="number">1</span> != EVP_DigestSignFinal(mdctx, *sig, slen)) <span class="keyword">goto</span> err;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Success */</span></span><br><span class="line">ret = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">err:</span><br><span class="line"><span class="keyword">if</span>(ret != <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/* Do some error handling */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Clean up */</span></span><br><span class="line"><span class="keyword">if</span>(*sig &amp;&amp; !ret) OPENSSL_free(*sig);</span><br><span class="line"><span class="keyword">if</span>(mdctx) EVP_MD_CTX_destroy(mdctx);</span><br></pre></td></tr></table></figure>
<h3 id="验证-2"><a class="markdownIt-Anchor" href="#验证-2"></a> 验证</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Initialize `key` with a public key */</span></span><br><span class="line"><span class="keyword">if</span>(<span class="number">1</span> != EVP_DigestVerifyInit(mdctx, <span class="literal">NULL</span>, EVP_sha256(), <span class="literal">NULL</span>, key)) <span class="keyword">goto</span> err;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Initialize `key` with a public key */</span></span><br><span class="line"><span class="keyword">if</span>(<span class="number">1</span> != EVP_DigestVerifyUpdate(mdctx, msg, <span class="built_in">strlen</span>(msg))) <span class="keyword">goto</span> err;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="number">1</span> == EVP_DigestVerifyFinal(mdctx, sig, slen))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* Success */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* Failure */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="数字信封"><a class="markdownIt-Anchor" href="#数字信封"></a> 数字信封</h1>
<h2 id="写信"><a class="markdownIt-Anchor" href="#写信"></a> 写信</h2>
<p>seal系列函数是相当于完成一个电子信封的功能，它产生一个随机密钥，然后使用一个公钥对该密钥进行封装，数据可以使用该随机密钥进行对称加密。</p>
<p>信封加密在进行大量数据传输的时候是必须经常要用到的，因为公开密钥算法的加解密速度很慢，但对称算法就快多了。所以一般用公开密钥算法对产生的随机密钥加密，而真正进行数据加密则使用该随机密钥进行对称加密，然后将加密后的密钥与数据一起发送。</p>
<p>其定义的函数如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_SealInit</span><span class="params">(EVP_CIPHER_CTX *ctx, EVP_CIPHER *type, <span class="keyword">unsigned</span> <span class="keyword">char</span> **ek, <span class="keyword">int</span> *ekl, <span class="keyword">unsigned</span> <span class="keyword">char</span> *iv,EVP_PKEY **pubk, <span class="keyword">int</span> npubk)</span></span>;<span class="comment">//该函数初始化一个加密算法结构EVP_CIPHER_CTX，采用了指定的加密算法，使用一个随机密钥和初始化向量IV。事实上，该函数调用EVP_EncryptInit_ex函数两次完成了ctx结构的初始化工作；参数type是算法类型，参数ek是一个缓存序列，可以存放多个被公钥加密后的密钥的信息，所以每个缓存空间都应该足够大；参数pubk是一个公钥陈列，可以包含多个公钥。函数成功执行返回npubk，失败返回0。 </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_SealUpdate(a,b,c,d,e) EVP_EncryptUpdate(a,b,c,d,e)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_SealUpdate</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *out, <span class="keyword">int</span> *outl, <span class="keyword">unsigned</span> <span class="keyword">char</span> *in, <span class="keyword">int</span> inl)</span></span>; <span class="comment">//其完成的功能和使用方法跟EVP_EncryptUpdate函数是一样的。成功执行返回1，否则返回0。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_SealFinal</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *out,<span class="keyword">int</span> *outl)</span></span>; <span class="comment">//简单调用EVP_EncryptFinal_ex完成其功能。该函数还调用EVP_EncryptInit_ex(ctx,NULL,NULL,NULL,NULL)函数对ctx结构再次进行了初始化。成功返回1，否则返回0。</span></span><br></pre></td></tr></table></figure>
<h2 id="读信"><a class="markdownIt-Anchor" href="#读信"></a> 读信</h2>
<p>本系列函数将公钥加密了的密钥加密出来，然后进行数据的解密。其定义的函数如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_OpenInit</span><span class="params">(EVP_CIPHER_CTX *ctx,EVP_CIPHER *type,<span class="keyword">unsigned</span> <span class="keyword">char</span> *ek, <span class="keyword">int</span> ekl,<span class="keyword">unsigned</span> <span class="keyword">char</span> *iv,EVP_PKEY *priv)</span></span>; <span class="comment">//该函数初始化一个用来加密数据的ctx结构。它首先使用参数priv指定的私钥解密参数ek里面长度为ekl字节的加密密钥。然后用此密钥与参数iv指定的初始化向量初始化EVP_CIPHER_CTX。如果参数type设定的加密算法长度是可变的，那么密钥长度就会被设置为解密得到的密钥的长度；如果加密算法长度是固定的，那么得到的解密密钥的长度就必须跟固定算法长度相同才行。成功执行返回密钥的长度，否则返回0。 </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EVP_OpenUpdate(a,b,c,d,e) EVP_DecryptUpdate(a,b,c,d,e)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_OpenUpdate</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *out, <span class="keyword">int</span> *outl, <span class="keyword">unsigned</span> <span class="keyword">char</span> *in, <span class="keyword">int</span> inl)</span></span>; <span class="comment">//功能和使用方法与EVP_DecryptUpdate相同</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EVP_OpenFinal</span><span class="params">(EVP_CIPHER_CTX *ctx, <span class="keyword">unsigned</span> <span class="keyword">char</span> *out,<span class="keyword">int</span> *outl)</span></span>; <span class="comment">//调用EVP_DecryptFinal_ex完成了其功能，本函数还调用EVP_DecryptInit_ex(ctx,NULL,NULL,NULL,NULL)再次进行了初始化工作。成功执行返回1，否则返回0。</span></span><br></pre></td></tr></table></figure>
<h2 id="代码示例"><a class="markdownIt-Anchor" href="#代码示例"></a> 代码示例</h2>
<h3 id="写信-2"><a class="markdownIt-Anchor" href="#写信-2"></a> 写信</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">envelope_seal</span><span class="params">(EVP_PKEY **pub_key, <span class="keyword">unsigned</span> <span class="keyword">char</span> *plaintext, <span class="keyword">int</span> plaintext_len,</span></span></span><br><span class="line"><span class="function"><span class="params">	<span class="keyword">unsigned</span> <span class="keyword">char</span> **encrypted_key, <span class="keyword">int</span> *encrypted_key_len, <span class="keyword">unsigned</span> <span class="keyword">char</span> *iv,</span></span></span><br><span class="line"><span class="function"><span class="params">	<span class="keyword">unsigned</span> <span class="keyword">char</span> *ciphertext)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	EVP_CIPHER_CTX *ctx;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> ciphertext_len;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> len;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* Create and initialise the context */</span></span><br><span class="line">	<span class="keyword">if</span>(!(ctx = EVP_CIPHER_CTX_new())) handleErrors();</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* Initialise the envelope seal operation. This operation generates</span></span><br><span class="line"><span class="comment">	 * a key for the provided cipher, and then encrypts that key a number</span></span><br><span class="line"><span class="comment">	 * of times (one for each public key provided in the pub_key array). In</span></span><br><span class="line"><span class="comment">	 * this example the array size is just one. This operation also</span></span><br><span class="line"><span class="comment">	 * generates an IV and places it in iv. */</span></span><br><span class="line">	<span class="keyword">if</span>(<span class="number">1</span> != EVP_SealInit(ctx, EVP_aes_256_cbc(), encrypted_key,</span><br><span class="line">		encrypted_key_len, iv, pub_key, <span class="number">1</span>))</span><br><span class="line">		handleErrors();</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* Provide the message to be encrypted, and obtain the encrypted output.</span></span><br><span class="line"><span class="comment">	 * EVP_SealUpdate can be called multiple times if necessary</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">if</span>(<span class="number">1</span> != EVP_SealUpdate(ctx, ciphertext, &amp;len, plaintext, plaintext_len))</span><br><span class="line">		handleErrors();</span><br><span class="line">	ciphertext_len = len;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* Finalise the encryption. Further ciphertext bytes may be written at</span></span><br><span class="line"><span class="comment">	 * this stage.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">if</span>(<span class="number">1</span> != EVP_SealFinal(ctx, ciphertext + len, &amp;len)) handleErrors();</span><br><span class="line">	ciphertext_len += len;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* Clean up */</span></span><br><span class="line">	EVP_CIPHER_CTX_free(ctx);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> ciphertext_len;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="读信-2"><a class="markdownIt-Anchor" href="#读信-2"></a> 读信</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">envelope_open</span><span class="params">(EVP_PKEY *priv_key, <span class="keyword">unsigned</span> <span class="keyword">char</span> *ciphertext, <span class="keyword">int</span> ciphertext_len,</span></span></span><br><span class="line"><span class="function"><span class="params">	<span class="keyword">unsigned</span> <span class="keyword">char</span> *encrypted_key, <span class="keyword">int</span> encrypted_key_len, <span class="keyword">unsigned</span> <span class="keyword">char</span> *iv,</span></span></span><br><span class="line"><span class="function"><span class="params">	<span class="keyword">unsigned</span> <span class="keyword">char</span> *plaintext)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	EVP_CIPHER_CTX *ctx;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> len;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> plaintext_len;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* Create and initialise the context */</span></span><br><span class="line">	<span class="keyword">if</span>(!(ctx = EVP_CIPHER_CTX_new())) handleErrors();</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* Initialise the decryption operation. The asymmetric private key is</span></span><br><span class="line"><span class="comment">	 * provided and priv_key, whilst the encrypted session key is held in</span></span><br><span class="line"><span class="comment">	 * encrypted_key */</span></span><br><span class="line">	<span class="keyword">if</span>(<span class="number">1</span> != EVP_OpenInit(ctx, EVP_aes_256_cbc(), encrypted_key,</span><br><span class="line">		encrypted_key_len, iv, priv_key))</span><br><span class="line">		handleErrors();</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* Provide the message to be decrypted, and obtain the plaintext output.</span></span><br><span class="line"><span class="comment">	 * EVP_OpenUpdate can be called multiple times if necessary</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">if</span>(<span class="number">1</span> != EVP_OpenUpdate(ctx, plaintext, &amp;len, ciphertext, ciphertext_len))</span><br><span class="line">		handleErrors();</span><br><span class="line">	plaintext_len = len;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* Finalise the decryption. Further plaintext bytes may be written at</span></span><br><span class="line"><span class="comment">	 * this stage.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">if</span>(<span class="number">1</span> != EVP_OpenFinal(ctx, plaintext + len, &amp;len)) handleErrors();</span><br><span class="line">	plaintext_len += len;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* Clean up */</span></span><br><span class="line">	EVP_CIPHER_CTX_free(ctx);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> plaintext_len;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<ol>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpYW8yMDA4MTIyOC9hcnRpY2xlL2RldGFpbHMvNzYyODU4OTY=">https://blog.csdn.net/liao20081228/article/details/76285896<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93aWtpLm9wZW5zc2wub3JnL2luZGV4LnBocC9FVlA=">https://wiki.openssl.org/index.php/EVP<i class="fa fa-external-link-alt"></i></span></li>
<li>OpenSSL编程 赵春平</li>
</ol>
]]></content>
      <categories>
        <category>信息安全</category>
        <category>OpenSSL</category>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>信息安全</tag>
        <tag>OpenSSL</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机网络-网络层</title>
    <url>/2021/01/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%BD%91%E7%BB%9C%E5%B1%82/</url>
    <content><![CDATA[<h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1>
<h2 id="网络层服务"><a class="markdownIt-Anchor" href="#网络层服务"></a> 网络层服务</h2>
<h3 id="分组"><a class="markdownIt-Anchor" href="#分组"></a> 分组</h3>
<p>网络层的首要责任就是分组。源主机从上层协议接收分组，加入一个头部，头部包含了源和目的地址以及其他网络层协议所需要的信息，并将其传给数据链路层。源端不可改变负载内容，除非负载过大不能传递才需要分段。</p>
<p>目的主机从数据链路层接收网络层分组，解封分组并将负载传递到相应的上层协议。如果分组在源端或在沿途的路由器被分段，那么网络层负责等待，直到所有的分组都到达，它同时负责重组分组并将其传到上层协议。</p>
<p>在传递路径上的路由器不可以解封它们接收到的分组，除非它们接收到的分组需要分段。同时，路由器仅仅可以检查地址，不允许改变源端和目的端地址。</p>
<a id="more"></a>
<h3 id="路由"><a class="markdownIt-Anchor" href="#路由"></a> 路由</h3>
<p>网络层另一个同等重要的责任是路由。一个物理网络是网络和连接它们的路由器的组合。网络层负责将分组从源端路由传递到目的端，这一过程需要经过多个路由器。网络层负责寻找最佳路由，它是通过运行某些路由协议来帮助路由器协调它们关于邻居的信息，并提出当分组到达时使用的一致性表格。</p>
<h3 id="转发"><a class="markdownIt-Anchor" href="#转发"></a> 转发</h3>
<p>如果路由使用一些策略并运行某些路由协议来为每个路由器创建决策表，那么转发可以定义为当分组到达路由器的一个端口时，路由器所采取的行为。决策表又被称为<em>转发表</em>，路由器通常用它来实施行为。当路由器从它连接的网络接收到另一个分组时，它需要将分组转发到一个或者多个自己所连接的网络上。为了做出决策，路由器使用分组头部的一个信息片段来找到转发表中相应的输出接口号。</p>
<h3 id="拥塞控制"><a class="markdownIt-Anchor" href="#拥塞控制"></a> 拥塞控制</h3>
<p>网络层协议也提供了拥塞控制的功能。</p>
<h2 id="分组交换"><a class="markdownIt-Anchor" href="#分组交换"></a> 分组交换</h2>
<h3 id="数据报方法"><a class="markdownIt-Anchor" href="#数据报方法"></a> 数据报方法</h3>
<p>数据报方法被用于无连接服务的路由分组。当网络层提供无连接服务时，因特网中每一个正在传输的分组都是一个独立的实体，属于同一个报文的多个分组之间没有联系，网络层只负责将分组从源端传递到目的端。</p>
<p>此时，每个分组都是基于其头部的源地址和目的地址信息进行路由的。报文中的分组可能会也可能不会经过同一条通向目的端的路径。</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201227132016.png" alt="无连接路由转发" /></p>
<h3 id="虚电路方法"><a class="markdownIt-Anchor" href="#虚电路方法"></a> 虚电路方法</h3>
<p>虚电路方法被用于面向连接服务的路由分组。此时，属于同一报文的所有分组之间存在联系。在报文中的所有数据被发送之前，应该建立虚连接从而定义数据报的路径。在连接建立之后，数据报可以沿着相同的路径发送。</p>
<p>在这种类型服务中，分组不仅必须包含源和目的地址，也必须包含流标号，这是一个虚电路标识符，它定义了分组应该经过的路径。每个分组基于分组中的标签被转发。</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201227132021.png" alt="虚电路分组交换" /></p>
<p>为了创建面向连接服务，需要经过如下三个阶段：</p>
<ul>
<li>建立阶段：在这一阶段，路由器为虚电路创建了一个表格项。通过一个路由输出端口的标签与另一个路由输入端口的标签相对应，便在网络中建立了一条虚电路。这是通过请求分组和确认分组这两个辅助分组在发送方和接收方之间交换来完成的。</li>
<li>数据传输阶段：在所有路由器为特定虚电路创建好它们的转发表之后，属于同一个报文的网络层分组可以被一个接着一个地发送。报文中所有的分组都按照相同的标签序列，并且分组有序到达目的端。</li>
<li>拆除阶段：当所有分组全部发送完成之后，发送方发送一个被称为拆除分组的特殊分组，接收方确认分组回复，所有路由器从表格中删除相应的项。</li>
</ul>
<h2 id="网络层性能"><a class="markdownIt-Anchor" href="#网络层性能"></a> 网络层性能</h2>
<h3 id="延迟"><a class="markdownIt-Anchor" href="#延迟"></a> 延迟</h3>
<p>网络中的延迟可以分为如下四种类型：</p>
<ul>
<li>发送延迟：一台源主机或路由器不能立即发送分组，需要将分组中的位一个接一个地发送到线上。从发送第一个位到发送最后一个位所经过的时间即为分组的发送延迟。</li>
<li>传播延迟：指的是传输介质中一个位从A到B点所花费的时间。分组交换网络的传播延迟取决于每个网络的传播延迟，而传播延迟取决于介质的传输速度与链路的距离。</li>
<li>处理延迟：指的是路由器或目的主机从它的输入端接收分组、去除头部、执行差错检测程序并将分组传递到输出端口或将分组传递到上层协议所需要的时间。</li>
<li>排队延迟：指分组在输入和输出队列中的等待时间。</li>
</ul>
<p>因此，总延迟等于发送方到接收方的过程中，这四种延迟时间的总和。</p>
<h3 id="吞吐量"><a class="markdownIt-Anchor" href="#吞吐量"></a> 吞吐量</h3>
<p>网络中任意一点的吞吐量指的是一秒内通过这个点的位的数量，即这一点的数据发送速率。从源到目的端的路径中，一个分组会穿过多条链路，吞吐量取决于这些链路传输速率的最小值。在实际情况中，可能会遇到链路共享的情况，这会导致实际的传输速率要被多个设备平均。</p>
<h3 id="分组丢失"><a class="markdownIt-Anchor" href="#分组丢失"></a> 分组丢失</h3>
<p>当路由器处理一个分组的同时接收到另一个分组，那么接收到的分组就要被存储在缓冲区等待轮次。但是由于缓冲区大小有限，如果缓冲区满则会导致新到来的分组需要被丢弃。这会导致因特网网络层的分组被重发，反过来可能造成溢出并导致更多的分组丢失。</p>
<h2 id="网络层拥塞"><a class="markdownIt-Anchor" href="#网络层拥塞"></a> 网络层拥塞</h2>
<h3 id="原因"><a class="markdownIt-Anchor" href="#原因"></a> 原因</h3>
<p>网络层的拥塞与吞吐量和延迟有关。当网络中的负载大小达到网络容量时，延迟便会急剧增加，因为此时需要考虑到排队延迟。同时，此时也会因为路由器丢弃分组而导致吞吐量急剧下降，而且丢弃分组也不会减少网络中的分组数量（因为源端会重发）。</p>
<h3 id="拥塞控制-2"><a class="markdownIt-Anchor" href="#拥塞控制-2"></a> 拥塞控制</h3>
<h4 id="开环拥塞控制"><a class="markdownIt-Anchor" href="#开环拥塞控制"></a> 开环拥塞控制</h4>
<p>开环拥塞控制指的是在发生拥塞之前，使用某种策略来预防拥塞现象的发生。在这些机制中，源端和目的端都可以处理拥塞控制。常用的策略有：</p>
<ul>
<li>重传策略：一个好的重传策略可以预防拥塞，因此必须优化设计重传策略和重传定时器，使之具有高效率，并用来预防拥塞。</li>
<li>窗口策略：选择性重复窗口要优于回退N帧窗口。在回退N帧窗口时，会重发多个分组，虽然一些分组会安全完整到达接收方，但是这种重复使得拥塞更加严重。而选择性重复窗口只发送那些丢弃或者损坏的特定分组。</li>
<li>确认策略：如果接收方并不对它所接收的每一个分组都进行确认，这会使得发送方放慢发送速度，从而有助于预防拥塞。由于确认也是网络负载的一部分，因此这样也可以减少网络负载。</li>
<li>丢弃策略：一个好的丢弃策略可以预防拥塞，同时不破坏传输完整性。例如音频传输中丢弃不敏感的分组，仍然可以保证声音质量，并且还可以减轻或预防拥塞发生。</li>
<li>许可策略：在允许数据流进入网络之前，与数据流通路相连的交换机首先检查其资源需求，如果网络有拥塞或是可能出现拥塞就拒绝建立虚电路。</li>
</ul>
<h4 id="闭环拥塞控制"><a class="markdownIt-Anchor" href="#闭环拥塞控制"></a> 闭环拥塞控制</h4>
<p>在拥塞发生之后，使用闭环拥塞控制可以缓解拥塞状况。常用的机制有：</p>
<ul>
<li>背压：一个拥塞点停止接收来自直接上行节点或是一些近邻结点的数据，这样就引起上行结点或是近邻结点的拥塞，然后依次拒绝它们的上行或近邻结点的数据，以此类推。背压技术仅适用于虚电路中。</li>
<li>抑制分组：在这种方法中，警告从已经发生拥塞的路由器直接传到源端，但是该分组经过的那些中间结点没有被警告。在这种方法中，一个单独的分组用于实现这一目的。</li>
<li>隐含信令：虽然拥塞结点与源端之间没有通信，但是源端从其它的有关征兆中察觉到网络在某处发生拥塞。例如源端发送多个分组但是暂时没有收到确认，或者接收确认时的延迟现象。</li>
<li>显式指令：发生拥塞的结点直接发送显式指令来通知源端或者目的端发生了拥塞。在这种方法中，信号包含在携带数据的分组中。</li>
</ul>
<h2 id="路由器的结构"><a class="markdownIt-Anchor" href="#路由器的结构"></a> 路由器的结构</h2>
<h3 id="元件"><a class="markdownIt-Anchor" href="#元件"></a> 元件</h3>
<p>路由器大致可以分为四个元件：</p>
<ul>
<li>输入端口：它发挥路由器的物理层和链路层功能。比特位从接收信号中获取，分组从帧中解封、检查差错。如果分组被破坏那么它就会被丢弃。之后，分组准备好被网络层处理。同时，输入端口也有缓冲区队列，用来在分组被发送到交换网络之前存储它们。</li>
<li>发送端口：发送端口与输入端口的功能相同，但是顺序相反。首先输出分组要排队，每个分组被封装进一个帧，并且最终对帧使用物理层功能来创建一个信号发送到线上。</li>
<li>路由处理器：发挥网络层功能。目的地址被用来找到下一条的地址以及输出端口号，同时分组从这个输出端口号发送出去。这个行为有时被称为表格查询。</li>
<li>交换结构：路由器中最复杂的任务就是将分组从输入队列移动到输出队列。这个任务影响输入/输出队列的大小以及分组传递的总延迟。路由器中使用多种不同的交换结构。</li>
</ul>
<h1 id="第四版网络层协议"><a class="markdownIt-Anchor" href="#第四版网络层协议"></a> 第四版网络层协议</h1>
<h2 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h2>
<p>第四版网络层可以被看作是一个主要协议以及三个辅助协议。主要协议指的是因特网协议第四版（IPv4），它负责网络层的分组、转发以及传递；因特网控制报文协议第四版（ICMPv4）帮助IPv4处理一些网络层传递中可能发生的错误；因特网组管理协议（IGMP）用于帮助IPv4多播；在网络层地址映射到链路层地址当中，地址解析协议（ARP）用来将网络和数据链路层联合起来。</p>
<h2 id="ipv4"><a class="markdownIt-Anchor" href="#ipv4"></a> IPv4</h2>
<h3 id="简介-2"><a class="markdownIt-Anchor" href="#简介-2"></a> 简介</h3>
<p>IPv4是一个不可靠且无连接的数据报协议，也就是说它是一个尽力而为的传递服务，因此IPv4分组可能被破坏、丢失、失序到达或延迟，也可能造成网络的拥塞。</p>
<p>IPv4使用数据报的分组交换网的无连接协议。这意味着每个数据报被独立处理，并且每个数据报可以沿着不同路由到达目的端。因此同一个源端发送到同一个目的端的数据报可能会失序到达，某些分组也可能在传输阶段丢失或者被破坏，IPv4依赖于高层协议来处理这些问题。</p>
<h3 id="数据报格式"><a class="markdownIt-Anchor" href="#数据报格式"></a> 数据报格式</h3>
<p>IP使用的分组被称为数据报，它是可变长分组，由头部和数据组成。头部长度在20~60字节，包含有与路由选择和传输相关的重要信息。IP数据报的格式如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201227132034.png" alt="IP数据报" /></p>
<p>其中一些字段的含义如下：</p>
<ul>
<li>版本号（VER）：定义IPv4协议的版本，它的值为4</li>
<li>头部长度（HLEN）：以4字节定义数据报头部的总长度</li>
<li>服务类型：目前这一字段被重定义为提供差分服务</li>
<li>总长：定义了一个以字节计算的IP数据报总长度（头部加上数据）</li>
<li>标识（identification）、标记（flag）和分段偏移：当数据报大于底层网络可以携带的大小时，这三个字段和IP数据报的分段有关</li>
<li>生存时间：用于控制数据报访问的最大跳数（即路由器）。当源主机发送数据报，它在这个字段存储一个数字，每个处理数据报的路由器将此数值减1。如果减1之后字段的值变为0，则路由器丢弃该数据报</li>
<li>协议：分组的数据段称为负载，它从另一个协议中携带整个分组。因特网机构给任何一个使用IP服务的协议一个唯一的8位数字，它被插入到协议字段。在源端IP将负载被封装到数据报时，插入相应的协议号；而数据报到达目的端时，这个字段的值帮助定义负载应该被传到哪个协议。</li>
<li>头部校验和：使用这一字段来检查头部是否被破坏。它需要在每个路由器重新计算。</li>
<li>源和目的地址：定义源端和目的端的IP地址</li>
<li>选项：用于进行网络测试和调试</li>
<li>负载：使用IP服务的其他协议的分组</li>
</ul>
<h3 id="分段"><a class="markdownIt-Anchor" href="#分段"></a> 分段</h3>
<h4 id="概述-2"><a class="markdownIt-Anchor" href="#概述-2"></a> 概述</h4>
<p>一个数据报可以通过几个不同的网络进行传输，每一个路由器将它所接收的帧拆封成IP数据报，对它进行处理，然后再封装成另一个帧。接收到的帧的格式和长度取决于此帧刚刚经过的物理网络所使用的协议。被发送帧的格式和长度取决于此帧将要经过的物理网络所使用的协议。</p>
<p>每一个数据链路层协议都有自己的帧格式，每种格式的特征之一就是可以封装的负载的最大长度。最大传输单元（Maximum Transfer Unit, MTU）的值随着物理网络协议的不同而不同。</p>
<p>为了使得IP协议独立于物理网络，IP数据报的最大长度被限制为65536字节。对于一些MTU小于这个值的物理网络，就需要将数据报进行分割，使其能够通过这些网络，这一过程就称为分段。如果一个分段的数据报遇到MTU更小的网络，它有可能再次被分段。</p>
<p>一个数据报可能被源主机或路径上的任意路由器分段，但是数据报的重组只能在目的主机上进行，因为每个分段都是一个独立的数据报。被分段的数据报可能沿着不同的路径被传输，而且在传输期间重组分组也会导致效率的降低。</p>
<h4 id="与分段相关的字段"><a class="markdownIt-Anchor" href="#与分段相关的字段"></a> 与分段相关的字段</h4>
<p>当数据报被分段时，主要是讲IP数据报的负载进行分段。每个段都有自己的头部，其中标记、分段偏移和总长度会被改变，校验和被重新计算，而剩余字段则直接被拷贝。</p>
<p>与分段相关的三个字段分别为标识、标记和分段偏移，它们的含义如下：</p>
<ul>
<li>标识：用于识别一个从源主机发出的数据报。当数据报离开源主机时，这个标识和源IP地址的组合必须唯一地定义这个数据报。为了保证唯一性，IP协议使用一个计数器来标识数据报。当IP协议发送数据报时，就将该计数器的当前值复制到标识字段中，并将此计数器的值加1。当数据报分段时，标识字段的值就被复制到所有的分组中。因此，目的端可以将所有具有相同标识的分段重组成一个数据报。</li>
<li>标记：共有3位，定义了3个标记。最左侧为保留位（不使用）；第二位（D位）称为不分段位，如果该位为1，则机器不能将该数据进行分段，如果无法将此数据报通过任何可用物理网络传递，则丢弃这个分组并向源主机发送一个ICMP差错报文，该位为0则可以根据需要进行分段；第三位（M位）称为多分段位，如果其值为1则表示此数据报不是最后的分段，如果其值为0则表示它是最后一个或者唯一的分段。</li>
<li>分段偏移：表示这个分段在整个数据报中的相对位置。它的值为原始数据报中的数据偏移量除以8。因此，每个分段的第一个字节标号一定可以被8整除。</li>
</ul>
<h3 id="数据报安全"><a class="markdownIt-Anchor" href="#数据报安全"></a> 数据报安全</h3>
<p>IP协议容易受下面三个问题的影响：</p>
<ul>
<li>分组嗅探：入侵者可能劫持一个IP分组并制作一份拷贝。这是一种被动攻击，分组的内容没有被改变。如果使用分组加密则可以使得攻击者的企图无效。</li>
<li>分组修改：攻击者拦截分组，改变其内容并将新的分组发送到接收方。可以使用数据完整性机制来发现这种类型的攻击。</li>
<li>IP欺骗：一个攻击者可以伪装成其他人并创建一个IP分组，它携带另一个电脑的源地址。这种类型的攻击可以使用源鉴别机制来预防。</li>
</ul>
<p>如今的IP分组可以使用一个称为IPSec（IP Security）的协议以免遭到之前提到的攻击。这个协议与IP协议一起使用，在两个实体之间创建一个面向连接的服务。IPSec提供了下面的四种服务：</p>
<ul>
<li>定义算法和密钥：创建安全信道的两个实体统一使用一些算法和密钥</li>
<li>分组加密：在双方之间交换的分组可以使用约定好的加密算法和密钥来进行加密</li>
<li>数据完整性：保证分组在传输阶段没有被修改</li>
<li>源鉴别：通过鉴别分组的源，从而确认分组不是冒名顶替者伪造的</li>
</ul>
<h3 id="ipv4地址"><a class="markdownIt-Anchor" href="#ipv4地址"></a> IPv4地址</h3>
<h4 id="简介-3"><a class="markdownIt-Anchor" href="#简介-3"></a> 简介</h4>
<p>一个IPv4地址是32位地址，它唯一地并通用地定义了一个连接在因特网上的主机或者路由器。注意IP地址是连接的地址，而不是主机或者路由器的地址。IPv4地址是唯一的，这表示每一个地址对应于唯一一个连接到因特网上的设备。</p>
<h4 id="地址空间"><a class="markdownIt-Anchor" href="#地址空间"></a> 地址空间</h4>
<p>地址空间是该系统能够使用地址的总个数。IPv4使用32位地址，因此地址空间为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>32</mn></msup></mrow><annotation encoding="application/x-tex">2^{32}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span>，这意味着超过40亿个设备可以被连接到因特网上。</p>
<h5 id="标记法"><a class="markdownIt-Anchor" href="#标记法"></a> 标记法</h5>
<p>IPv4地址有下面三种常用的标记法：</p>
<ul>
<li>二进制标记法：IPv4地址用32位表示，为了使得可读性更强，通常在每8位之间插入空格来隔开。</li>
<li>点分十进制标记法：将IPv4地址每8位为一段分成4段，并将每一段用点隔开。每一段的数据写成十进制格式，对应于0到255之间的数字。</li>
<li>十六进制表示：使用8个十六进制数字来表示IP地址，这种方法通常用于网络编程。</li>
</ul>
<h5 id="地址层次结构"><a class="markdownIt-Anchor" href="#地址层次结构"></a> 地址层次结构</h5>
<p>一个32位的IPv4地址被分为两部分，左边n位被称为前缀，它定义了网络；后面32-n位被称为后缀，它定义了设备到因特网的连接。前缀可以是固定长度的也可以是变长的。</p>
<h4 id="分类寻址"><a class="markdownIt-Anchor" href="#分类寻址"></a> 分类寻址</h4>
<h5 id="地址类型"><a class="markdownIt-Anchor" href="#地址类型"></a> 地址类型</h5>
<p>当因特网刚开始发展时，IPv4地址被设计为定长前缀。为了满足较小或较大的网络，设计了三种长度的前缀，并将整个地址空间分为五类。</p>
<table>
<thead>
<tr>
<th style="text-align:center">类</th>
<th style="text-align:center">前缀</th>
<th style="text-align:center">首字节</th>
<th style="text-align:center">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">A</td>
<td style="text-align:center">8位</td>
<td style="text-align:center">0~127</td>
<td style="text-align:center">128个网络可以拥有</td>
</tr>
<tr>
<td style="text-align:center">B</td>
<td style="text-align:center">16位</td>
<td style="text-align:center">128~191</td>
<td style="text-align:center">2<sup>14</sup>个网络可以拥有</td>
</tr>
<tr>
<td style="text-align:center">C</td>
<td style="text-align:center">24位</td>
<td style="text-align:center">192~223</td>
<td style="text-align:center">2<sup>21</sup>个网络可以拥有</td>
</tr>
<tr>
<td style="text-align:center">D</td>
<td style="text-align:center">不可用</td>
<td style="text-align:center">224~239</td>
<td style="text-align:center">多播地址</td>
</tr>
<tr>
<td style="text-align:center">E</td>
<td style="text-align:center">不可用</td>
<td style="text-align:center">240~255</td>
<td style="text-align:center">保留未来使用</td>
</tr>
</tbody>
</table>
<h5 id="地址耗尽"><a class="markdownIt-Anchor" href="#地址耗尽"></a> 地址耗尽</h5>
<p>由于分类寻址中的地址没有被恰当分配，因此因特网迅速面临地址被用光的问题。这主要是因为使用A类或B类地址的网络中，绝大多数的地址都被浪费；而使用C类地址的网络中，每个网络可以使用的地址数量过小。</p>
<h5 id="子网化和超网化"><a class="markdownIt-Anchor" href="#子网化和超网化"></a> 子网化和超网化</h5>
<p>子网化中，A类或B类中的一大块地址被分成几个子网，每个子网有一个比原网络更大的前缀长度。</p>
<p>超网化与子网化的想法相反，是将几个C类地址块组合为一个较大的块。但是这种方法使得分组路由更加困难。</p>
<h4 id="无类寻址"><a class="markdownIt-Anchor" href="#无类寻址"></a> 无类寻址</h4>
<h5 id="方法"><a class="markdownIt-Anchor" href="#方法"></a> 方法</h5>
<p>一个解决地址空间被耗尽的短期解决办法是使用无类寻址（长期为IPv6）。在无类寻址中，整个地址空间被分为变长块，地址的前缀定义了块（网络），后缀定义了结点（设备）。但是其中的一个限制是块内的地址数量需要为2的乘方。</p>
<h5 id="前缀长度"><a class="markdownIt-Anchor" href="#前缀长度"></a> 前缀长度</h5>
<p>由于无类寻址中地址的前缀长度不固定，因此需要将前缀的长度加入到地址中，用斜杠来分隔。这种标记法的被称为无类域间路由，又叫斜杠标记法。</p>
<h5 id="从地址中抽取信息"><a class="markdownIt-Anchor" href="#从地址中抽取信息"></a> 从地址中抽取信息</h5>
<p>给出块中的任意一个地址，并假设其前缀长度为n，我们可以很容易地得到这一地址所属块的如下信息：</p>
<ul>
<li>地址数目：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mo>=</mo><msup><mn>2</mn><mrow><mn>32</mn><mo>−</mo><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">N=2^{32-n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span></li>
<li>块中的首地址：保持地址的最左n位不变，将右侧32-n位全部设为0</li>
<li>块中末地址：保持地址最左n位不变，将右侧32-n位全部设为1</li>
</ul>
<p>首末地址也可以用地址掩码来计算。地址掩码为32位数字，最左n位全部为1，最右边32-n位全部为0。</p>
<p>首地址也被称为网络地址，它相当于是网络的标识符，路由器用它将分组路由到目的端。</p>
<h5 id="块分配与子网"><a class="markdownIt-Anchor" href="#块分配与子网"></a> 块分配与子网</h5>
<p>块分配的最终责任被交给一个全球机构ICANN，但是它不向因特网个人用户分配地址。通常它给一个ISP或一个较大组织分配一大块地址，再由它们将获得的大块地址分成子网。一个子网又可以按照需求继续划分为更多的等级。</p>
<p>在分配块的时候，有两个限制条件：</p>
<ol>
<li>请求的地址数量必须是2的N次幂；</li>
<li>请求块在被分配时，地址空间中要有连续的可用地址，同时块中的首地址必须可以被块中的地址数量整除，以保证首地址前缀后面全部为0。</li>
</ol>
<p>在分配子网时，为了使其能够路由分组，需要满足如下的条件：</p>
<ul>
<li>每个子网的地址数量为2的整数次幂；</li>
<li>每个子网的起始地址可以被子网中的地址数目N<sub>sub</sub>整除，这样使得每个子网的最右侧32-n<sub>sub</sub>位为0，同时子网前缀长度也可以用32-log<sub>2</sub>N<sub>sub</sub>直接计算出来。因此在设计子网时，一般按照子网规模从大到小来分配。</li>
</ul>
<h4 id="特殊地址"><a class="markdownIt-Anchor" href="#特殊地址"></a> 特殊地址</h4>
<p>在IPv4中，有5种用于特殊目的的地址：</p>
<ul>
<li>本地主机地址：0.0.0.0/32。当主机需要发送一个IP数据报时，需要自己的地址作为源地址。但是开始时主机不知道自己的地址，便会使用本地主机地址。</li>
<li>有限广播地址：255.255.255.255/32。当路由器或主机需要向网络中的所有设备发送一个数据报时会使用到这个地址。但是网络中的路由器会阻挡目的地址为有限广播地址的分组，使其不能传递出网络。</li>
<li>回送地址：127.0.0.0/8。如果某个分组的目的地址是这个块中的某个地址，那么它不会离开主机，这个块中的地址用于测试机器中的一个软件。</li>
<li>私有地址：10.0.0.0/8、172.16.0.0/12、192.168.0.0/16和169.254.0.0/16。</li>
<li>多播地址：224.0.0.0/4。</li>
</ul>
<h2 id="动态主机配置协议dhcp"><a class="markdownIt-Anchor" href="#动态主机配置协议dhcp"></a> 动态主机配置协议（DHCP）</h2>
<h3 id="简介-4"><a class="markdownIt-Anchor" href="#简介-4"></a> 简介</h3>
<p>一个组织中的地址分配可以使用动态主机配置协议（Dynamic Host Configuration Protocol, DHCP）来完成。它是一个应用层的程序，使用客户-服务器模式，实际上帮助网络层的TCP/IP。</p>
<h3 id="报文格式"><a class="markdownIt-Anchor" href="#报文格式"></a> 报文格式</h3>
<p>下图所示为DHCP的报文格式：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201227132044.png" alt="DHCP报文格式" /></p>
<p>报文中的64字节选项字段有两个目的，它可以携带附加信息或是一些特定的厂商信息。</p>
<h3 id="dhcp运行"><a class="markdownIt-Anchor" href="#dhcp运行"></a> DHCP运行</h3>
<p>DHCP的运行步骤大致如下：</p>
<ol>
<li>连接主机创建一个DHCPDISCOVER报文，其中只有事务ID字段，它被设为随机数字，其他字段因为主机没有相应信息而无法被设置。这个报文被封装在UDP用户数据报中，其中源端口为68，目的端口为67。用户部分被封装在IP数据报中，源地址为0.0.0.0（本机），目的地址为255.255.255.255（广播地址），因为主机既不知道自己的地址也不知道服务器的地址。</li>
<li>DHCP服务器以DHCPOFFER报文响应，其中你的IP地址字段定义了连接主机的IP地址，服务器IP地址字段包含服务器的IP地址。这个报文也包含了主机可以拥有这个IP地址的租赁时间。报文被封装到一个用户数据报中，它带有相同的端口号，但是顺序相反。用户数据报依次被封装到服务器地址是源IP地址的数据报中，但是目的地址是广播地址，这样服务器允许其他DHCP服务器接收这个报文，并提供一个更好的IP地址。</li>
<li>连接主机收到一个或者多个DHCPOFFER报文并从中选出最好的一个。之后连接主机向这个提供最好报文的服务器发送一个DHCPREQUEST报文。其中带有已知数值的字段被设置，报文被封装在用户数据报中，其中端口号是第一个报文的端口号。用户数据被封装在IP数据报中，源地址设为新的客户地址，但是目的地址仍然为广播地址，这样使得服务器知道它们的DHCPOFFER报文没有被接受。</li>
<li>最终如果提供的IP地址有效，被选定的服务器以DHCPACK报文响应客户端。如果服务器并没有保存这个DHCPOFFER报文，就发送一个DHCPNACK报文，并且客户需要重复上述过程。同时这个报文也被广播，使得其他服务器知道请求被接收或者被拒绝。</li>
</ol>
<p>在这一过程中，有一些需要注意的细节：</p>
<ul>
<li>DHCP使用两个熟知端口号，这是因为服务器到客户的响应是广播。在多个DHCP客户同时运行时，报文可以通过事务ID进行区分，从而将响应区分开。</li>
<li>服务器并不发送连接网络的客户所需的所有信息。在DHCPACK报文中，服务器定义了文件的路径名，其中客户可以找到完整的信息如DNS服务器地址。客户之后可以使用FTP协议来获取其余所需的信息。</li>
<li>为了提供差错控制，DHCP使用两个策略：首先DHCP要求UDP使用校验和；第二，如果DHCP客户段没有接收到DHCP对请求的回应，那么它使用计时器以及重传策略。为了防止重传请求的拥塞，DHCP要求客户端使用随机数设置计时器。</li>
</ul>
<h2 id="网络地址转换nat"><a class="markdownIt-Anchor" href="#网络地址转换nat"></a> 网络地址转换（NAT）</h2>
<h3 id="作用"><a class="markdownIt-Anchor" href="#作用"></a> 作用</h3>
<p>如果一个ISP给一个小公司或是家庭用户分配了一个小范围地址，但是在需要更大地址范围时，ISP可能无法满足需要。网络地址转换（Network Address Translation, NAT）提供了私有地址和通用地址的映射，同时支持虚拟私有网络。这个技术允许一个站点使用一组私有地址以及一组全局因特网地址（至少一个）来与世界上其余的计算机进行通信。</p>
<h3 id="地址转换"><a class="markdownIt-Anchor" href="#地址转换"></a> 地址转换</h3>
<p>所有通过NAT路由器发出去的分组都将分组中的源地址替换为全局NAT地址；同时所有通过NAT路由器进入的分组也都将目的地址（NAT的路由器的全局地址）替换成适当的私有地址。</p>
<p>将私有地址转为全局地址是容易的，但是对于相反操作，则需要使用NAT路由器的转换表进行地址转换。一个转换表中共有5列，分别为私有地址、私有端口、外部地址、外部端口和传输协议。使用5列地址能够消除连接的二义性，让私有网络主机和外部服务器程序之间建立多对多的关系。</p>
<h2 id="ip分组的转发"><a class="markdownIt-Anchor" href="#ip分组的转发"></a> IP分组的转发</h2>
<h3 id="基于目的地址的转发"><a class="markdownIt-Anchor" href="#基于目的地址的转发"></a> 基于目的地址的转发</h3>
<h4 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h4>
<p>基于目的地址的转发要求主机或者路由器有转发表，它查看转发表来找到分组的下一跳。在转发表中，需要包含四项信息：掩码、网络地址、接口号码以及下一个路由器的IP地址。</p>
<p>转发模块的工作是一行一行地查找表。在每一行中，目的地址的最左边n位（前缀）被保留下来，然后与表中的网络地址的最左边n位进行匹配。如果匹配成功，则找到下一跳的IP地址以及接口；否则继续查找表格。通常最后一行的第一列为默认值，表示所有目的地址都无法匹配。</p>
<p>为了加快搜索速度，也可以使用其它的数据结构来取代列表，但是匹配原则保持不变。</p>
<h4 id="地址聚合"><a class="markdownIt-Anchor" href="#地址聚合"></a> 地址聚合</h4>
<p>当使用无类寻址时，由于地址空间的分割没有固定规律，因此转发表项的数量有可能会增加，这也会导致搜索表格所消耗时间的增加。因此，路由器中一些前缀相同的地址可能会被聚合成一个地址，这被称为地址聚合。</p>
<h4 id="最长掩码匹配"><a class="markdownIt-Anchor" href="#最长掩码匹配"></a> 最长掩码匹配</h4>
<p>无类寻址的路由使用最长掩码匹配原则，这个原则表明转发表需要按照最长掩码到最短掩码的顺序来存储。</p>
<h4 id="分层路由与地理路由"><a class="markdownIt-Anchor" href="#分层路由与地理路由"></a> 分层路由与地理路由</h4>
<p>为了解决转发表过大的问题，可以在路由表中创建层次结构。在无类路由选择中，只要遵循无类寻址原则，层次的级是没有限制的。</p>
<p>将地址空间分成几大块，然后分别将其分给不同的大洲，通过这样构建的分层路由也被称为地理路由。</p>
<h3 id="基于标签的转发"><a class="markdownIt-Anchor" href="#基于标签的转发"></a> 基于标签的转发</h3>
<h4 id="原理-2"><a class="markdownIt-Anchor" href="#原理-2"></a> 原理</h4>
<p>在面向连接网络中，交换机基于附加在分组上的标签来路由分组。路由通常基于对表格内容的搜索，而基于标签的转发方式中，通过使用索引访问表格即可完成交换。</p>
<h4 id="多协议标记交换"><a class="markdownIt-Anchor" href="#多协议标记交换"></a> 多协议标记交换</h4>
<p>多协议标记交换（Multi-Protocol Label Switching, MPLS）标准使得因特网中的一些传统路由器可以被MPLS路由器替代，它可以作为一台路由器和交换机的结合体来工作。也就是说，它可以基于目的地址来转发分组，也可以基于标签来转发分组。</p>
<p>MPLS位于数据链路层和网络层之间，整个IP分组作为负载被封装到一个MPLS分组中，并且加入一个MPLS头部。一个MPLS头部可能包含许多子头部，它被用来进行多级分层交换。</p>
<p>一个MPLS子头部一共32位长，包含下面4个字段：</p>
<ul>
<li>标签：长20位，定义了路由器中索引转发表的标签</li>
<li>Exp：长3位，被保留用于实验目的</li>
<li>S：长1位，定义了堆中子头部的情况，如果这个位为1则意味着这个头部是堆中的最后一个。</li>
<li>TTL：长8位，于IP数据报中的TTL字段作用类似，每个被访问的路由器都减少这个字段的值，当其变为0时，则分组被丢弃以防止形成循环。</li>
</ul>
<h2 id="icmpv4"><a class="markdownIt-Anchor" href="#icmpv4"></a> ICMPv4</h2>
<h3 id="作用-2"><a class="markdownIt-Anchor" href="#作用-2"></a> 作用</h3>
<p>IPv4没有差错报告或者差错更正机制，同时IP协议还缺少主机和管理方面的查询机制。因特网控制报文协议（Internet Control Message Protocol version 4, ICMPv4）可以用于弥补上述缺点，它是配合IP协议使用的。</p>
<p>ICMP自身是网络层协议，但是它的报文不是直接传给数据链路层，而是首先被封装到IP数据报中，并将其协议字段值设置为1，表示IP负载是一个ICMP报文。</p>
<h3 id="报文"><a class="markdownIt-Anchor" href="#报文"></a> 报文</h3>
<h4 id="报文格式-2"><a class="markdownIt-Anchor" href="#报文格式-2"></a> 报文格式</h4>
<p>ICMPv4报文分为差错报告报文和查询报文。这两种报文类型的头部格式不同，它们的报文格式如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201227132113.png" alt="ICMP报文" /></p>
<h4 id="差错报告报文"><a class="markdownIt-Anchor" href="#差错报告报文"></a> 差错报告报文</h4>
<p>差错报告报文用于报告在处理一个IP数据报时可能碰到的一些问题。但是ICMP仅仅报告差错，差错的纠正留给高层协议。差错报文总是被发给源端，ICMP使用源IP地址将差错报文发送给数据报的发送方。</p>
<p>为了简化差错报告，ICMP的报告报文遵循下面的规则：</p>
<ul>
<li>对于带有多播或者特殊地址（如本机或回送地址）的数据报不会产生差错报文。</li>
<li>对于携带ICMP差错报文的数据报不再产生差错报文。</li>
<li>对于分段的数据报文，如果不是第一个分段不产生差错报文。</li>
</ul>
<p>所有的差错报文都包含一个数据部分，包含原始数据报的IP头部加上数据报中前8个字节的数据。加入原始数据报头部的目的是为了向原始的源端给出数据报本身的信息。</p>
<p>常用的差错报告报文有：</p>
<ul>
<li>目的端不可达报文（类型3）： 使用不同的代码（0~15）来定义差错报文的类型和数据报不能到达目的端的原因。</li>
<li>源端抑制报文（类型4）：通知发送端，网络出现拥塞并且数据报被丢弃。源端需要减慢发送速率。</li>
<li>重定向报文（类型5）：将报文重定向到适当的路由器，但是通知源端让其以后改变默认路由器。默认路由器的IP地址在这个报文中被发送。</li>
<li>超时报文（类型11）：当IP数据报中生存时间TTL变为0时，数据被它所访问的路由器丢弃并且发送一个代码为0的超时报文给源端。如果组成一个报文的所有分段没有在某个时限内到达主机则发生代码为1的超时报文。</li>
<li>参数问题报文（类型12）：当数据报头部出现问题（代码0）或是一些选项丢失不能被解释（代码1）时，发送这一报文。</li>
</ul>
<h4 id="查询报文"><a class="markdownIt-Anchor" href="#查询报文"></a> 查询报文</h4>
<p>查询报文可以独立使用，而与IP数据报无关，但是它需要作为负载被封装到数据报中。查询报文用来探测或检测互联网中的主机或者路由器是否处于活跃状态，也用来获取两台设备之间IP数据报的单向或往返时间，甚至用于检查两台设备之间的时钟是否同步。查询报文包括查询和回答，它们成对出现。</p>
<p>常用的查询报文有：</p>
<ul>
<li>回送请求（类型8）以及回送应答（类型0）报文：主机或路由器发送回送请求报文，来检测另一台主机或者路由器是否处于活跃状态。如果活跃，则回应一个回送应答报文。</li>
<li>时间戳请求（类型13）以及时间戳回答（类型14）报文：确定两个设备之间的往返时间或者检查两个设备之间的时钟是否同步。时间戳请求报文发送一个32位数字，表示报文被发送的时间；时间戳回答重发此数字，但是也包括一个新的32位数字以及响应被发送的时间，这个新数字即为请求被接收的时间。</li>
</ul>
<h1 id="单播路由选择"><a class="markdownIt-Anchor" href="#单播路由选择"></a> 单播路由选择</h1>
<h2 id="思想以图的形式表示因特网"><a class="markdownIt-Anchor" href="#思想以图的形式表示因特网"></a> 思想：以图的形式表示因特网</h2>
<p>为了找到最好的路由传播路径，互联网可以用图来表示。将每个路由器看作一个结点，一对路由器之间的网络看成一条边，由于每一条网络的传输具有一定的代价，因此互联网以带权图表示。</p>
<p>根据上面的描述，可以得出如下的概念：</p>
<ul>
<li>
<p>最小代价路由：由于源路由器到目的路由器之间可能有多条路由，因此从源路由器到目的路由器的最佳路由就是找到两者之间的最小代价。也就是说，源路由器在所有可能的路由中找到代价最小的那条作为到目的路由器的路由。</p>
</li>
<li>
<p>最小代价树：最小代价树以源路由器为根，访问了所有其余的结点，并且其中根和其它结点的路径是最短的。</p>
</li>
</ul>
<h2 id="路由选择算法"><a class="markdownIt-Anchor" href="#路由选择算法"></a> 路由选择算法</h2>
<h3 id="距离向量路由选择"><a class="markdownIt-Anchor" href="#距离向量路由选择"></a> 距离向量路由选择</h3>
<h4 id="信息交换"><a class="markdownIt-Anchor" href="#信息交换"></a> 信息交换</h4>
<p>在距离向量路由选择中，每个结点（路由器）要利用自身所拥有的关于相邻结点的初步信息创建最小代价树。这些不完全的树在相邻结点之间不断交换，使得树越来越完整。</p>
<h4 id="bellman-ford方程"><a class="markdownIt-Anchor" href="#bellman-ford方程"></a> Bellman-Ford方程</h4>
<p>Bellman-Ford方程用于计算源结点x到目的结点y的最小代价，而这条路径穿过了中间结点（a, b, c,……）。我们将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>记作最短距离，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">c_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>记作结点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i,j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>之间的代价，则有：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub><mo>=</mo><munder><mo><mi>m</mi><mi>i</mi><mi>n</mi></mo><mrow><mi>i</mi><mo>=</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo separator="true">,</mo><mo>⋯</mo></mrow></munder><mo stretchy="false">(</mo><msub><mi>c</mi><mrow><mi>x</mi><mi>i</mi></mrow></msub><mo>+</mo><msub><mi>D</mi><mrow><mi>i</mi><mi>y</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D_{xy}=\mathop{min} \limits_{i=a,b,c,\cdots}(c_{xi}+D_{iy})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.638216em;vertical-align:-0.8882159999999999em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.65952em;"><span style="top:-2.3478920000000003em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight">a</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">c</span><span class="mpunct mtight">,</span><span class="minner mtight">⋯</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord mathdefault">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8882159999999999em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p>
<h4 id="距离向量"><a class="markdownIt-Anchor" href="#距离向量"></a> 距离向量</h4>
<p>距离向量路由将最小代价路由树改写为一维数组。一个距离向量的名称定义了根结点，索引定义了目的结点，而每个索引的值则对应了根结点到目的结点的最小代价。因此，一个距离向量不包含目的结点的路径。</p>
<p>当互联网中的结点启动时，它创建一个基本的距离向量，包含了可从相邻结点获得的最少信息，而未知距离的结点则被标记为无穷大。在此之后，这一结点从相邻结点接收到它们的距离向量副本，然后使用Bellman-Ford方程来更新距离向量。</p>
<p>上述的过程可以用下图来表示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201227132122.png" alt="距离向量" /></p>
<p>距离向量路由的一个问题是，任何代价的减少传播的快，而代价的增加传播的慢。为了使路由协议可以正常工作，如果链路损坏，其余每个路由器应该立即意识到这件事情。但是在距离向量路由选择中这需要花费一些时间。这个问题称为计数到无穷问题，通常需要好几个更新才能使得损坏链路被所有服务器记录为无穷。</p>
<h3 id="链路状态路由选择"><a class="markdownIt-Anchor" href="#链路状态路由选择"></a> 链路状态路由选择</h3>
<h4 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h4>
<p>在链路状态路由选择中，使用术语链路状态来定义链路（即图中的一条边）的特征，链路代表了互联网中的网络。在这种算法中，与边相关的代价定义了链路的状态，代价低的链路比代价高的链路更好；如果链路代价无限大则对应于链路不存在或者已经被损坏。</p>
<h4 id="链路状态数据库"><a class="markdownIt-Anchor" href="#链路状态数据库"></a> 链路状态数据库</h4>
<p>所有链路状态的集合称为链路状态数据库（Link-State Database, LSDB），整个互联网只有一个LSDB，它可以用一个二维数组来表示，其中每个单元格的值对应于相应链路的代价。每个结点通过使用它可以创建最小代价树。</p>
<p>创建LSDB的过程可以通过泛洪的过程来完成。每个结点可以给其相邻结点发送问候报文，来收集每个相邻结点的结点标识以及链路代价。这两个信息的组合成为LS分组。</p>
<p>当结点从一个接口接收到LSP时，它将其与已经拥有的副本进行比较。如果新到达的LSP比拥有的副本旧，则直接丢掉；如果接收到的版本更新，则丢弃旧LSP并保存接收到的新版本。在此之后，结点向每个端口发送一份副本（不包含分组到达的端口，这样保证泛洪可以停止）。</p>
<p>这一过程可以用下图表示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201227132130.png" alt="LSDB的创建" /></p>
<h4 id="最小代价树的形成"><a class="markdownIt-Anchor" href="#最小代价树的形成"></a> 最小代价树的形成</h4>
<p>为了创建最小代价树，使用共享LSDB的每个结点可以运行Dijkstra算法来生成（算法的详细过程参考CLRS）。</p>
<h3 id="路径向量路由选择"><a class="markdownIt-Anchor" href="#路径向量路由选择"></a> 路径向量路由选择</h3>
<h4 id="目标"><a class="markdownIt-Anchor" href="#目标"></a> 目标</h4>
<p>在路径向量路由选择算法中，源端可以控制路径。这种算法主要是为ISP之间的路由分组而设计。</p>
<h4 id="生成树"><a class="markdownIt-Anchor" href="#生成树"></a> 生成树</h4>
<p>在路径向量路由选择中，从源端到目的端的路径是由最佳生成树决定的。然而最佳生成树不是最小代价树，它是根据源端使用的策略生成出来的。</p>
<p>路径向量路由选择与距离向量路由选择类似，是一种异步、分布式路由选择算法。因此，生成树（路径向量）的生成方法也类似，是每个结点异步地逐步更新创建起来的。</p>
<h4 id="路径向量算法"><a class="markdownIt-Anchor" href="#路径向量算法"></a> 路径向量算法</h4>
<p>在创建初始路径向量之后，每个结点也将其发送给相邻结点。此时，每个结点都使用与Bellman-Ford类似的方程式来更新路径向量，但是结点使用自己的策略而不是寻找最小代价。</p>
<h2 id="单播路由选择协议"><a class="markdownIt-Anchor" href="#单播路由选择协议"></a> 单播路由选择协议</h2>
<h3 id="路由选择信息协议"><a class="markdownIt-Anchor" href="#路由选择信息协议"></a> 路由选择信息协议</h3>
<h4 id="概述-3"><a class="markdownIt-Anchor" href="#概述-3"></a> 概述</h4>
<p>路由选择信息协议（Routing Information Protocol, RIP）是一个在自治系统内部使用的域内路由选择协议，它基于距离向量路由选择算法实现。</p>
<h4 id="跳数"><a class="markdownIt-Anchor" href="#跳数"></a> 跳数</h4>
<p>在RIP协议中，代价的实现被简化为跳数，它表示分组从源路由器到最终目的主机所需要穿过的网络（子网）的数量。路径的最大代价是15，16则意味着无连接，因此RIP只能用于自治系统（Autonomous System, AS）。</p>
<h4 id="转发表"><a class="markdownIt-Anchor" href="#转发表"></a> 转发表</h4>
<p>RIP中的转发表是一个三列表格，第一列是目的网络的地址，第二列是分组应该被转发到的下一跳路由器的地址，第三列是到达目的网络的跳数。</p>
<p>通过在转发表中加入下一跳路由器的地址，可以利用这一信息来还原出最小代价树。</p>
<h4 id="rip实现"><a class="markdownIt-Anchor" href="#rip实现"></a> RIP实现</h4>
<h5 id="应用层程序"><a class="markdownIt-Anchor" href="#应用层程序"></a> 应用层程序</h5>
<p>RIP是使用UDP服务和熟知端口号520实现的一种进程。在BSD中，RIP是一个称为routed的守护进程。也就是说，RIP运行在应用层上，但是为网络中的IP创建转发表。</p>
<h5 id="rip报文"><a class="markdownIt-Anchor" href="#rip报文"></a> RIP报文</h5>
<p>在一个RIP报文中，表项部分可以按需重复，每个表项携带着与转发表里面某一行相关的信息，这个转发表位于发送报文的路由器中。报文格式如下：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201227132137.png" alt="RIP报文格式" /></p>
<p>RIP的报文分为请求和响应两种。请求报文被创建它的路由器发送，用于询问特定表项或者全部表项；而响应报文可以是请求型的或者非请求型的。请求型报文用于回答请求报文，它包含相应请求报文中指定目的端的信息，而非请求型的响应报文被周期性地发送，或是当转发表有变化时发送。</p>
<h5 id="rip算法"><a class="markdownIt-Anchor" href="#rip算法"></a> RIP算法</h5>
<p>RIP实现的算法与距离向量路由选择算法相同。为了使路由器可以更新其转发表，需要做一些修改：</p>
<ul>
<li>路由器需要在响应报文中发送转发表的全部内容，而不仅仅是距离向量。</li>
<li>接收端在每个代价上加入一跳，并且将下一跳路由器字段改为发送路由器的地址。</li>
<li>根据目的路由存储新的转发表。</li>
</ul>
<h5 id="rip计时器"><a class="markdownIt-Anchor" href="#rip计时器"></a> RIP计时器</h5>
<p>RIP中一共用到了三个计时器来支持其运行：</p>
<ul>
<li>周期计时器：控制常规更新报文的通告行为，每个路由器都有一个。</li>
<li>超时计时器：控制路由的有效性。当路由器接收到路由更新信息时，设置这条路由的超时计时器。每当这条路由新的更新到达时，计时器被重置；如果在超时计数器倒计时为0时没有收到更新，则认为路由超时，将路由的跳数设置为16。每个路由都有自己的超时计数器。</li>
<li>垃圾收集计时器：用于从转发表中清除路由。当关于路由的信息无效时，路由器不会立即将路由从表中清除。它继续将路由代价通告为16。同时，那条路由的垃圾收集计时器被设置，当计时到0时便将路由从表中清除。这个计时器允许邻居在清除路由之前，注意到路由的无效性。</li>
</ul>
<h4 id="rip性能"><a class="markdownIt-Anchor" href="#rip性能"></a> RIP性能</h4>
<ul>
<li>更新报文：更新报文仅仅发送给邻居，通常不会造成过大的网络通信量。</li>
<li>转发表的收敛：由于RIP只允许域中最多15跳，通常收敛中不会存在问题。</li>
<li>健壮性：由于每个路由器将它对整个域的了解发送给它的邻居，因此当路由失效或出错时，这个问题可以被传播给所有的路由器。</li>
</ul>
<h3 id="开放最短路径优先"><a class="markdownIt-Anchor" href="#开放最短路径优先"></a> 开放最短路径优先</h3>
<h4 id="概述-4"><a class="markdownIt-Anchor" href="#概述-4"></a> 概述</h4>
<p>开放最短路径优先（Open Shortest Path First, OSPF）是一个和RIP类似的域内路由选择协议，但是它是基于链路状态的路由选择。OSPF是一个开放协议。</p>
<h4 id="度量"><a class="markdownIt-Anchor" href="#度量"></a> 度量</h4>
<p>在OSPF协议中，每个链路（网络）可以被分配一个基于流量、往返时间和可靠性等方面的权值；同样也可以使用跳数作为代价。对于OSPF中的代价，不同服务类型可以拥有不同的权值。</p>
<h4 id="转发表-2"><a class="markdownIt-Anchor" href="#转发表-2"></a> 转发表</h4>
<p>OSPF与RIP协议中，转发表唯一的不同就在于代价值。如果OSPF中使用跳数，那么它们的转发表将会完全相同。</p>
<h4 id="区域"><a class="markdownIt-Anchor" href="#区域"></a> 区域</h4>
<p>与RIP相比，OSPF用来处理小型或大型自治系统中的路由选择，而RIP通常在小型的自治系统中使用。</p>
<p>由于在大型系统中创建全局链路状态数据库将会产生巨大的通信量，因此OSPF会将一个大型自治系统划分为多个不同的区域，每个区域在泛洪LSP中相当于小型独立域。为了使得区域中的每个路由器知道本区域和其他区域的链路状态信息，某一个区域会被指派为主干区域，它负责将其他区域连接到一起。主干区域的路由器负责将每个区域收集到的信息传递到其他区域。</p>
<h4 id="链路状态通告"><a class="markdownIt-Anchor" href="#链路状态通告"></a> 链路状态通告</h4>
<p>OSPF协议中，要求路由器向所有邻居通告其链路状态，以此形成LSDB。一共有5种不同的链路状态通告类型：</p>
<ul>
<li>路由器链路：将路由器以结点的形式进行通告。除了给出所声明路由器的地址外，这种类型的通告还可以定义如下的多种链路类型：
<ul>
<li>过渡链路：声明通向过渡网络的链路，这个网络通过一个或者多个路由器连接到网络的剩余部分。这种通告类型应该定义过渡网络地址和链路代价。</li>
<li>残桩链路：通告残桩网络的链路，这种网络不完全算是贯穿型网络。这种通告类型定义网络地址和代价。</li>
<li>点对点链路：定义点对点连线末端路由器的地址以及到达它所需要花费的代价。</li>
</ul>
</li>
<li>网络链路：将网络作为一个结点进行通告。由于网络无法通告自身，因此其中一个路由器被指派为指定路由器，并且由它进行通告。这一类LSP声明了所有路由器的IP地址。由于路由器发送路由器链路已经包含代价，因此这种通告不包含代价。</li>
<li>通向网络的汇总链路：通过区域边界路由器完成，它通告了由主干收集的通往一个区域的汇总链路，或者通告区域收集的通往主干的链路汇总。将区域连接到一起时就需要这种信息交换。</li>
<li>通向自治系统的汇总链路：通过一个AS路由器完成，它通告从其他的AS到当前AS主干区域的汇总链路，这些信息可以散播到区域中。</li>
<li>外部链路：通过AS路由器完成。它向主干区域声明AS之外存在一个单独网络，这个信息被散播到多个区域中。</li>
</ul>
<h4 id="ospf实现"><a class="markdownIt-Anchor" href="#ospf实现"></a> OSPF实现</h4>
<h5 id="概述-5"><a class="markdownIt-Anchor" href="#概述-5"></a> 概述</h5>
<p>OSPF是以网络层程序的形式实现，它使用IP服务来进行传播。IP数据报携带来自OSPF的报文，并且将协议字段的值设置为89。</p>
<h5 id="ospf报文"><a class="markdownIt-Anchor" href="#ospf报文"></a> OSPF报文</h5>
<p>OSPF共包含了5种不同类型的报文，包括：</p>
<ul>
<li>问候报文：被路由器用来向邻居介绍自己，并声明它知道的所有邻居。</li>
<li>数据库描述报文：响应问候报文，允许一个新加入的路由器获取全部的LSDB。</li>
<li>链路状态请求报文：被需要特定LS的路由器发送。</li>
<li>链路状态更新报文：是用于创建LSDB的主要OSPF报文。</li>
<li>链路状态确认报文：用来保证OSPF中的可靠性，每个接收链路状态更新报文的路由器都需要确认它。</li>
</ul>
<p>这些报文的格式如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201227132244.png" alt="OSFP协议报文" /></p>
<h5 id="鉴定"><a class="markdownIt-Anchor" href="#鉴定"></a> 鉴定</h5>
<p>OSPF公共头部为报文发送端提供鉴定。这可以防止恶意实体向路由器发送OSPF报文并导致路由器成为某个路由选择系统的一部分，而实际上这个路由器根本不属于这个路由选择系统。</p>
<h5 id="ospf算法"><a class="markdownIt-Anchor" href="#ospf算法"></a> OSPF算法</h5>
<p>OSPF使用链路状态路由选择算法，但是需要在算法中加入一些改变和鉴定工作：在每个路由器创建最短路径树之后，算法需要用它来创建响应的路由选择算法；同时这个算法需要增强，使之能够发送和接收5种类型的报文。</p>
<h5 id="性能"><a class="markdownIt-Anchor" href="#性能"></a> 性能</h5>
<ul>
<li>更新报文：OSPF中的链路状态报文较复杂，它们也被泛洪到整个区域。如果区域很大，这些报文可能造成很大通信量并占用很大带宽。</li>
<li>转发表的收敛：当LSP泛洪完成，每个路由器都可以创建它自己的最短路径树和转发表，收敛较快。但是由于每个路由器都要运行Dijkstra算法，这需要花费一些时间。</li>
<li>健壮性：OSPF协议比RIP协议更加健壮。因为接收到完整的LSDB之后，每个路由器是独立的，不依赖与区域中的其他路由器。因此一个路由器的差错或失效不会严重影响其它路由器。</li>
</ul>
<h3 id="边界网关协议第四版"><a class="markdownIt-Anchor" href="#边界网关协议第四版"></a> 边界网关协议第四版</h3>
<h4 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h4>
<p>边界网关协议（Border Gateway Protocol, BGP）是当今因特网中唯一的一个域间路由选择协议。它居于之前描述的路径向量算法。</p>
<p>为了使得每个路由器都能将分组路由到互联网的任意网络上，每个边界路由器（位于每个AS的一条边上，这条边连接到另一个AS的服务器上）上需要安装外部BGP（external BGP, eBGP）。同时所有路由器上需要安装内部BGP（internal BGP, iBGP）。</p>
<p>BGP协议是一种点对点协议，当软件运行在两个路由器上时，它们使用熟知端口号179来创建一个TCP连接。运行BGP进程的两个路由器被称为BGP对等结点或BGP代言结点。</p>
<h5 id="外部bgp"><a class="markdownIt-Anchor" href="#外部bgp"></a> 外部BGP</h5>
<p>外部BGP变体允许两个建立物理连接的边界路由器形成一对eBGP代言结点并交换报文，这两个路由器位于不同的AS中。但是要实现信息交换，则需要在物理连接的基础上创建逻辑TCP连接以实现信息交换，在BGP中逻辑连接被称为会话。</p>
<h5 id="内部bgp"><a class="markdownIt-Anchor" href="#内部bgp"></a> 内部BGP</h5>
<p>iBGP协议也是在熟知端口179上使用TCP连接，但是它在自治系统中可能成对的路由器之间创建一个会话。</p>
<h5 id="域内路由选择信息插入"><a class="markdownIt-Anchor" href="#域内路由选择信息插入"></a> 域内路由选择信息插入</h5>
<p>BGP的职责是帮助AS内部的路由器增加路由选择信息。在路径表被收集并组织完成之后，它会被插入到用于路由分组的域内转发表（RIP或者OSPF）中。</p>
<h5 id="地址聚合-2"><a class="markdownIt-Anchor" href="#地址聚合-2"></a> 地址聚合</h5>
<p>由于BGP协议所获得的域间转发表在全局因特网的情况下会变得很大，因此BGP协议使用前缀作为目的标识符并且允许聚合这些前缀。</p>
<h4 id="路径属性"><a class="markdownIt-Anchor" href="#路径属性"></a> 路径属性</h4>
<p>BGP允许目的端与多达7个路径属性相关。这些路径属性分为熟知和可选，熟知属性必须被所有路由器识别，而可选属性不要求这样。</p>
<p>一个路径属性的格式如下：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201227132236.png" alt="BGP路径属性格式" /></p>
<p>每个属性的第一字节定义了四个属性标记，下一个字节定义了ICANN分配的属性类型，属性值长度定义了属性值字段的长度。</p>
<p>下面是每个属性的简要描述：</p>
<ul>
<li>ORIGIN（类型1）：熟知的强制属性，它定义了路由选择信息的源端。它可以定义为以下三种值：1代表路径信息从域内协议获得，2代表信息从BGP获得，3代表来自未知源端</li>
<li>AS-PATH（类型2）：熟知的强制属性，它定义了自治系统清单，穿过这些自治系统可以到达目的端。这一属性可以帮助防止循环，也可以在路由选择中使用。</li>
<li>NEXT-HOP（类型3）：熟知的强制属性，它定义了数据分组应该被转发到的下一跳路由器。</li>
<li>MULT-EXIT-DISC（类型4）：多出口鉴别器是一个可选的不可迁移属性，它鉴别通向一个目的端的多个出口路径。这个属性的数值通常被相应域内协议的度量标准定义（一个四字节无符号整型的属性数值）。</li>
<li>LOCAL-PREF（类型5）：本地偏好是熟知的可选属性，它从此由管理员设定，基于组织机构的策略。</li>
<li>ATOMIC-AGGREGATE（类型6）：熟知的可选属性，它不以聚合方式定义目的端前缀，只定义一个目的端网络。这个属性没有数值字段。</li>
<li>AGGREGATOR（类型7）：可选的可迁移属性，它强调目的端的前缀是可以聚合的。</li>
</ul>
<h4 id="路由选择"><a class="markdownIt-Anchor" href="#路由选择"></a> 路由选择</h4>
<p>BGP的路由选择过程需要考虑到一些附加其上的属性，因此过程将会更加复杂一些。通常实现所使用的流程图如下：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201227132205.png" alt="BGP路由选择过程" /></p>
<h4 id="报文-2"><a class="markdownIt-Anchor" href="#报文-2"></a> 报文</h4>
<p>BGP有4类报文，用于AS间和AS内部BGP代言结点的通信。所有BGP分组分享相同的公共头部。报文格式如下图所示：</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201227132205.png" alt="BGP报文格式" /></p>
<p>四种报文的作用如下：</p>
<ul>
<li>打开报文：为了创建邻居关系，运行BGP的路由器打开一个与邻居的TCP连接并发送一个打开报文。</li>
<li>更新报文：它是BGP协议的核心。它被路由器用来取出之前通知的目的端，以便声明通向新的目的端的路由。BGP可以取出几个之前声明的目的端，但是一个更新报文中只能声明一个新的目的端。</li>
<li>保活报文：处于运行状态的BGP对等结点周期性地交换保活报文，从而彼此告知它们处于活跃状态。</li>
<li>通知：当检查到错误情况或者路由器要关闭会话时，路由器发送通知报文。</li>
</ul>
<h4 id="性能-2"><a class="markdownIt-Anchor" href="#性能-2"></a> 性能</h4>
<p>BGP的代言结点交换很多报文来创建转发表，但是BGP没有循环和计数到无穷。RIP中关于传播失效和出错的缺点在BGP中仍然存在。</p>
<h1 id="多播路由选择"><a class="markdownIt-Anchor" href="#多播路由选择"></a> 多播路由选择</h1>
<h2 id="介绍-2"><a class="markdownIt-Anchor" href="#介绍-2"></a> 介绍</h2>
<h3 id="单播"><a class="markdownIt-Anchor" href="#单播"></a> 单播</h3>
<p>在单播中，只有一个源端和一个目的端网络。源端和目的端网络的关系是一对一的。数据报路径中的每个路由器试图将分组转发到唯一的端口上。</p>
<h3 id="多播"><a class="markdownIt-Anchor" href="#多播"></a> 多播</h3>
<p>在多播中，存在一个源端和一组目的端，其关系是一对多的。在这类通信中，源地址是一个单播地址，而目的地址是一组地址，其中存在至少一个有兴趣接收多播数据报的组成员。在多播中，多播路由器可能需要通过它的多个端口将相同数据报的副本发送出去。</p>
<p>注意，需要区分多播和多个单播这两个概念。多播从源地址开始时时单个分组，这个分组被路由器复制，每个分组中的目的地址对于所有的副本都是相同的；而在多个单播中，从源端发出多个分组。多播比多个单播效率更高，要求的带宽更小，同时由于源端只生成一个分组因此没有延迟。</p>
<p>多播有如下这些应用示例：</p>
<ul>
<li>访问分布式数据库</li>
<li>信息发布</li>
<li>电话会议</li>
<li>远程学习</li>
</ul>
<h3 id="广播"><a class="markdownIt-Anchor" href="#广播"></a> 广播</h3>
<p>广播意味着一对多的通信，一个主机向互联网中的所有主机发送分组。由于这种方式可能造成很大的通信量并占用大量带宽，因特网层次上没有提供广播功能。但是因特网中完成了部分广播，例如一些P2P应用或者受控广播。</p>
<h2 id="多播地址"><a class="markdownIt-Anchor" href="#多播地址"></a> 多播地址</h2>
<p>一个多播地址定义了一组接收者，它相当于是多播组的一个标识符。因此，如果一台主机是n个多播组的成员，那么它实际上有n+1个地址，包括一个单播地址以及n个多播地址。</p>
<p>在IPv4中，多播地址属于一大块地址，它们按此目的而特别设计。在分类寻址中，所有D类地址为多播地址；在无类寻址中，块224.0.0.0/4（即224.0.0.0到239.255.255.255）为多播地址块。</p>
<p>多播地址块中的地址数目很多，因此一个块被划分为多个子块，每个子块用于特定的多播应用。下面是一些公共子块：</p>
<ul>
<li>本地网络控制块：即子块224.0.0.0/24，它被分配给用于网络内部的多播路由选择协议，因此这个范围内目的地址的分组不能被路由器转发。其中地址224.0.0.0被保留，224.0.0.1用于将数据报发送到网络内的所有主机和路由器，224.0.0.2用于将数据报发送到网络内的所有路由器，剩余地址被分配给某些多播协议用于通信。</li>
<li>因特网控制块：即子块224.0.1.0/24，它被分配给用于整个互联网的多播路由选择协议。带有这个范围内目的地址的分组可以被路由器转发。</li>
<li>特定源多播块：即子块232.0.0.0/8，它被用于特定源多播协议。</li>
<li>团块：即子块233.0.0.0/8，它定义了可以用于自治系统内部的地址范围。</li>
<li>管理范围块：即子块239.0.0.0/8，这个块的地址用于因特网的特定区域。如果分组的目的地址属于这个范围，那么它不应该离开这个区域。</li>
</ul>
<h2 id="因特网组管理协议"><a class="markdownIt-Anchor" href="#因特网组管理协议"></a> 因特网组管理协议</h2>
<p>因特网组管理协议（Internet Group Management Protocol, IGMP）被用于收集组成员信息，从而创建多播路由的转发表。IGMP是定义在网络层的协议，它是一个辅助协议，属于IP的一部分。IGMP的报文需要封装在IP数据报中进行传播，分为查询和报告报文。</p>
<p>查询报文周期性地由路由器发送给所有连接其上的主机，让哥主机报告它们对于组内成员身份的兴趣。查询报文有三种形式：</p>
<ul>
<li>普通查询报文：查询任意组中成员身份。它被封装在数据报中，目的端地址为244.0.0.1（所有主机和路由器）。所有连接到同一个网络的路由器都接收到这个报文，并且应该抑制重发。</li>
<li>特定组查询报文：从路由器发送，查询与特定组相关的成员。当路由器没有接收到特定组的响应，并且向确定网络中哪个组没有活跃成员时，就发送这个报文。报文被封装在数据报中，目的地址为相应的多播地址。所有主机都接收这个报文，但是不感兴趣的可以丢弃它。</li>
<li>特定源和目的查询报文：当报文来自一个或多个特定源端时，这个报文可以寻找与特定组相关的成员。当路由器没有收到与一个或多个特定主机相关的特定组时，这个报文被再次发送。报文被封装在数据报中，目的地址为相应的多播地址。所有主机都接收这个报文，但是不感兴趣的可以丢弃它。</li>
</ul>
<p>报告报文是查询报文的响应。报文包含记录列表，其中每条记录给出相应组的标识符（多播地址）以及所有主机感兴趣的源地址。报文被封装在数据报中，多播地址为224.0.0.22。</p>
<h2 id="多播转发"><a class="markdownIt-Anchor" href="#多播转发"></a> 多播转发</h2>
<h3 id="与单播转发的不同"><a class="markdownIt-Anchor" href="#与单播转发的不同"></a> 与单播转发的不同</h3>
<p>在多播通信中，分组的目的端定义了一个组，因此为了到达所有的目的端，路由器可能必须从一个以上的端口发出分组。同时，多播通信的转发决定取决于分组的目的地址和源地址，这样是为了避免分组重复发送。</p>
<h3 id="基于源树方法"><a class="markdownIt-Anchor" href="#基于源树方法"></a> 基于源树方法</h3>
<p>在基于源树方法中，每个路由器需要为每个源端与组的组合创建一个单独的树。也就是说，如果互联网中有m个组和n个源端，那么路由器需要创建m*n个路由选择树。在每颗树中，相应的源端是根结点，组的成员是叶结点。</p>
<h3 id="组共享树方法"><a class="markdownIt-Anchor" href="#组共享树方法"></a> 组共享树方法</h3>
<p>在组共享树方法中，我们将一个路由器指派为每个组的伪源端。被指派的这个路由器称为核心路由器或者会合点路由器，它代表了这个组。任何源端如果要将分组发送到那个组，那么它直接将分组发送给这个核心路由器，核心路由器负责多播。</p>
<p>通过这种方法，从源端到所有组成员的多播传递分成了两部分，第一部分是从源端到核心路由器的单播传递，第二部分是从核心路由器到所有组成员的传递。这一使得路由选择树的数目大大减少，但是需要使用算法从所有路由器中选择组的核心路由器。</p>
<h2 id="域内路由选择协议"><a class="markdownIt-Anchor" href="#域内路由选择协议"></a> 域内路由选择协议</h2>
<h3 id="多播距离向量"><a class="markdownIt-Anchor" href="#多播距离向量"></a> 多播距离向量</h3>
<p>距离向量多播选择协议（Distance Vector Multicast Routing Protocol, DVMRP）是用于单播路由选择的路由选择信息协议（RIP）的拓展，它使用基于源树的方法来多播。它按照以下三步创建一个基于源端的多播树：</p>
<ol>
<li>使用逆路径转发算法来创建源端和自身之间的一部分最优基于源端的树。这种算法迫使路由器从一个特定接口转发多播分组，这个接口穿过最短路径从源端到达路由器。</li>
<li>使用逆路径广播算法创建广播（生成）树，根结点是路由器自身，叶结点是互联网中的所有网络。这一算法通过对树进行剪枝，从而防止每个网络接收一个以上的分组副本。</li>
<li>使用逆路径多播算法，对树进行剪枝，从而得到多播树。这种方法是对路由器中无法到达组中活跃成员的路径进行修剪，可以通过自底向上的方式来完成。</li>
</ol>
<h3 id="多播链路状态"><a class="markdownIt-Anchor" href="#多播链路状态"></a> 多播链路状态</h3>
<p>多播开放最短路径优先（Multicast Open Shortest Path First, MOSPF）是开放最短路径优先（OSPF）协议的扩展。它也使用基于源树的方法进行多播操作。路由器对于多播分组的转发过程如下：</p>
<ol>
<li>路由器使用Dijkstra算法创建一个最短路径树，源端为根节点，且互联网的目的端是叶结点。对于每个源端，需要创建一个不同的树。</li>
<li>路由器使用与DVMRP中描述的类似策略来修剪广播树，使其成为一棵多播树。</li>
<li>路由器只从那些相当于多播树分支的端口中转发接收到的分组。</li>
</ol>
<h3 id="协议独立多播"><a class="markdownIt-Anchor" href="#协议独立多播"></a> 协议独立多播</h3>
<p>协议独立多播（Protocol Independent Multicast, PIM）需要使用单播路由选择协议的转发表来找到去往目的端的下一跳路由器。它可以按两种模式工作：密集模式和稀疏模式，密集指的是互联网中组内活跃成员的数量较大，稀疏指的是路由器拥有组内成员的可能性低。当其在密集模式下工作时，称为PIM-DM，而在稀疏模式下工作时称为PIM-SM。</p>
<h2 id="域间路由选择协议"><a class="markdownIt-Anchor" href="#域间路由选择协议"></a> 域间路由选择协议</h2>
<p>当组的成员分布在不同域时，需要使用域间多播路由选择协议。</p>
<p>一个常见的协议为多播边界网关协议（Multicast Border Gateway Protocol, MBGP），它是BGP协议的扩展。MBGP提供了AS间的两条路径，一条用来单播，一条用来多播。它属于组共享多播路由选择协议，需要在每个AS中选定一个路由器作为会合点。MBGP协议的问题是它很难向会合点通知另一个AS中组的源端，因此引入多播源发现协议（Multicast Source Discovery Protocol, MSDP）来解决这个问题。</p>
<p>另一个替代的协议是边界网关多播协议（Border Gateway Multicast Protocol, BGMP），它允许在一个AS中建立带有一个根的组共享树。也就是说，对于每个组，只有一个组共享树，叶结点在其他的AS中，但是根节点位于其中一个AS中。</p>
<h1 id="下一代ip"><a class="markdownIt-Anchor" href="#下一代ip"></a> 下一代IP</h1>
<h2 id="简介-5"><a class="markdownIt-Anchor" href="#简介-5"></a> 简介</h2>
<p>因特网协议第六版（Internet Protocol version 6, IPv6）在增加了IPv4地址空间的同时，重新设计了IP分组的格式并修改了一些辅助协议。下面是IPv6协议的主要变化：</p>
<ul>
<li>更大的地址空间：IPv6地址为128位长</li>
<li>更好的头部格式：IPv6使用了新的头部格式，其选项与基本头部分开，如果需要可将选项插入到基本头部和上层数据之间。这样简化和加速了路由选择过程。</li>
<li>新的选项：IPv6提供了新的选项来实现附加的功能。</li>
<li>允许扩展：如果新的技术或应用需要的话，IPv6允许协议进行扩展。</li>
<li>支持资源分配：IPv6取消了服务类型字段，但是增加了流标号使得源端可以请求对分组进行特殊的处理。</li>
<li>支持更多安全性：提供了加密和鉴别选项。</li>
</ul>
<h2 id="分组格式"><a class="markdownIt-Anchor" href="#分组格式"></a> 分组格式</h2>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201227132213.png" alt="IPv6报文" /></p>
<p>IPv6的一个分组由基本头部和紧跟其后的有效载荷组成。头部字段的包括：</p>
<ul>
<li>版本：定义了IP版本号，对于IPv6的值为6。</li>
<li>流量类：用来区分不同传递要求的不同有效载荷，代替了IPv4中的服务类型字段。</li>
<li>流标号：一个20位的字段，用来对特殊的数据流提供专门处理。</li>
<li>有效载荷长度：一个16位字段，定义了不包括基本头部的IP数据报的总长度。</li>
<li>下一个头部：一个8位字段，定义了第一个扩展头部的类型或是数据报中跟随在基本头部之后的头部。</li>
<li>跳数限制：与IPv4中的TTL字段作用相同。</li>
<li>源地址和目的地址：用于识别数据报的源端和目的端。</li>
<li>有效载荷：开头是0个或者多个扩展头部的组合，接着是来自于其他协议的数据。每个扩展头部有两个强制字段：下一个头部和长度。</li>
</ul>
<h2 id="ipv6寻址"><a class="markdownIt-Anchor" href="#ipv6寻址"></a> IPv6寻址</h2>
<h3 id="地址格式"><a class="markdownIt-Anchor" href="#地址格式"></a> 地址格式</h3>
<p>IPv6地址一般用冒号16进制来表示，整个地址被分为8个部分，每个部分由4个十六进制数字组成，每4个数字用一个冒号隔开。由于IPv6地址很长，为了简化表示，在IPv6地址中，一个部分开头的0可以省略不写；如果有连续的部分仅仅包含0，则可以使用0压缩（一个地址只能使用一次），将所有的0移除，用两个冒号代替。</p>
<h3 id="地址类型-2"><a class="markdownIt-Anchor" href="#地址类型-2"></a> 地址类型</h3>
<p>IPv6的目的地址分为三类：单播、任播和多播。它没有定义广播，IPv6将其看作是多播的特殊情况。单播和多播与IPv4相同，任播指的是一组计算机共享一个地址，带有任播地址的分组只被传递到组中最容易到达的那个成员。</p>
<h3 id="地址空间分配"><a class="markdownIt-Anchor" href="#地址空间分配"></a> 地址空间分配</h3>
<p>IPv6的地址空间也被分成大小不同的块，其中绝大多数块是未指派的。已分配的块如下表所示：</p>
<table>
<thead>
<tr>
<th style="text-align:center">块前缀</th>
<th style="text-align:center">块任务</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0000 0000</td>
<td style="text-align:center">特殊地址</td>
</tr>
<tr>
<td style="text-align:center">001</td>
<td style="text-align:center">全局单播</td>
</tr>
<tr>
<td style="text-align:center">1111 110</td>
<td style="text-align:center">唯一本地单播</td>
</tr>
<tr>
<td style="text-align:center">1111 1110 10</td>
<td style="text-align:center">链路本地地址</td>
</tr>
<tr>
<td style="text-align:center">1111 1111</td>
<td style="text-align:center">多播地址</td>
</tr>
</tbody>
</table>
<h3 id="特殊地址-2"><a class="markdownIt-Anchor" href="#特殊地址-2"></a> 特殊地址</h3>
<ul>
<li>未指明地址：0000::/128，在启动时使用，此时主机不知道自己的地址并想发送查询找出其地址。</li>
<li>环回地址：0000::1/128，IPv6中仅仅有这一个环回地址。</li>
<li>兼容地址：0000::/96，96个0后面紧跟32位IP地址，用于IPv4向IPv6的过渡。</li>
<li>映射地址：0000::FFFF/96，已经过渡到IPv6的计算机发送报文给使用IPv4的计算机时使用。</li>
</ul>
<h2 id="ipv4到ipv6的过渡"><a class="markdownIt-Anchor" href="#ipv4到ipv6的过渡"></a> IPv4到IPv6的过渡</h2>
<ul>
<li>双协议栈：网络层同时运行IPv4和IPv6，直到整个因特网使用IPv6。当把分组发送到目的端时，主机需要向DNS查询使用的是哪个版本。</li>
<li>隧道技术：当两台使用IPv6的计算机要进行通信，但其分组要经过使用IPv4的区域时，需要使用这种技术。进入这种区域时，IPv6分组要封装成IPv4分组，离开这个区域时再去掉封装。</li>
<li>头部转换：如果发送方使用IPv6，接收方使用IPv4时，需要使用这种技术。此时头部格式需要转换成IPv4的头部。</li>
</ul>
<h2 id="icmpv6"><a class="markdownIt-Anchor" href="#icmpv6"></a> ICMPv6</h2>
<p>ICMPv6与ICMPv4具有相同的策略和目的，但是ICMPv6中，ICMP、ARP和IGMP三个协议被整合到一起，并且加入了一些新的报文使其更加实用。</p>
<p>ICMPv6的报文分为下图所示的四种。相比于ICMPv4，差错报告报文和信息报文中的一些报文被取消，邻居发现报文完成了ARP的工作，而组成员关系报文完成了IGMP的工作。</p>
<p><img data-src="https://raw.githubusercontent.com/lyf35/blog_figures/main/img/20201227132220.png" alt="ICMPv6报文" /></p>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<ol>
<li>计算机网络：自顶向下方法</li>
</ol>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>数据分析-Pandas</title>
    <url>/2021/01/09/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-Pandas/</url>
    <content><![CDATA[<h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1>
<p>Pandas是一个用来处理表格类型数据的函数库。Pandas的官方文档：<span class="exturl" data-url="aHR0cDovL3BhbmRhcy5weWRhdGEub3JnL3BhbmRhcy1kb2NzL3N0YWJsZS8=">http://pandas.pydata.org/pandas-docs/stable/<i class="fa fa-external-link-alt"></i></span></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></table></figure>
<h1 id="数据结构"><a class="markdownIt-Anchor" href="#数据结构"></a> 数据结构</h1>
<h2 id="主要数据结构"><a class="markdownIt-Anchor" href="#主要数据结构"></a> 主要数据结构</h2>
<h3 id="series"><a class="markdownIt-Anchor" href="#series"></a> Series</h3>
<p>一个Series由一个index和与之对应的一系列value组成，相当于是一个单列的表格。它的构造方式有：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series1=pd.Series(np.array((<span class="number">4</span>,<span class="number">7</span>,<span class="number">-5</span>,<span class="number">3</span>))) <span class="comment">#传入一个list、tuple、或是numpy的一维数组，此时会默认为这些元素添加一个从0到n-1的RangeIndex</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series1</span><br></pre></td></tr></table></figure>
<pre><code>0    4
1    7
2   -5
3    3
dtype: int32
</code></pre>
<a id="more"></a>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.Series([<span class="number">2</span>,<span class="number">3</span>,<span class="number">-3</span>,<span class="number">1</span>],index=[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;d&#x27;</span>]) <span class="comment">#Series的构造函数支持传入一个自定义的index</span></span><br></pre></td></tr></table></figure>
<pre><code>a    2
c    3
b   -3
d    1
dtype: int64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dict1=&#123;<span class="string">&#x27;Ohio&#x27;</span>: <span class="number">35000</span>, <span class="string">&#x27;Texas&#x27;</span>: <span class="number">71000</span>, <span class="string">&#x27;Oregon&#x27;</span>: <span class="number">16000</span>, <span class="string">&#x27;Utah&#x27;</span>: <span class="number">5000</span>&#125;</span><br><span class="line">states = [<span class="string">&#x27;California&#x27;</span>, <span class="string">&#x27;Ohio&#x27;</span>, <span class="string">&#x27;Oregon&#x27;</span>, <span class="string">&#x27;Texas&#x27;</span>]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.Series(dict1) <span class="comment">#可以传入一个dict来构造Series，map中每个元素的key作为index，并与每个元素的value相对应</span></span><br></pre></td></tr></table></figure>
<pre><code>Ohio      35000
Texas     71000
Oregon    16000
Utah       5000
dtype: int64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.Series(dict1,index=states) <span class="comment">#使用dict构造Series时，同样可以传入index参数，Series中的index便使用传入的index参数。此时，每个index对应的value会从dict中获取，如果某个index在dict没有对应的key-value，那么Series中这个index对应的值为NaN</span></span><br></pre></td></tr></table></figure>
<pre><code>California        NaN
Ohio          35000.0
Oregon        16000.0
Texas         71000.0
dtype: float64
</code></pre>
<p>一个Series具有以下的属性：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series1.values <span class="comment">#Series的values属性保存了Series中的数据，value属性为一个numpy的一维数组</span></span><br></pre></td></tr></table></figure>
<pre><code>array([ 4,  7, -5,  3])
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series1.index <span class="comment">#Series的index属性保存了这些value对应的index</span></span><br></pre></td></tr></table></figure>
<pre><code>RangeIndex(start=0, stop=4, step=1)
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series1.index.name=<span class="string">&#x27;test_series&#x27;</span> <span class="comment">#一个Series的index可以有自己的名字，默认为空。如果加上名字之后，在print这个Series时便可以看到为这个index加上的名字</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series1</span><br></pre></td></tr></table></figure>
<pre><code>test_series
0    4
1    7
2   -5
3    3
dtype: int32
</code></pre>
<h3 id="dataframe"><a class="markdownIt-Anchor" href="#dataframe"></a> DataFrame</h3>
<p>DataFrame数据结构相当于一个表格。也可以理解为一个DataFrame由多个Series拼在一起，其中这些Series具有共同的index。</p>
<p>许多种数据类型都可以被用来构造DataFrame，包括但不限于：</p>
<ul>
<li>二维的array</li>
<li>一个value为array、list或者tuple的dict</li>
<li>一个value为Series的dict</li>
<li>一个value为dict的dict</li>
<li>一个元素为dict或者Series的list</li>
<li>一个元素为list或者tuple的list</li>
<li>另一个DataFrame</li>
</ul>
<p>下面为创建DataFrame的示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data = &#123;<span class="string">&#x27;state&#x27;</span>: [<span class="string">&#x27;Ohio&#x27;</span>, <span class="string">&#x27;Ohio&#x27;</span>, <span class="string">&#x27;Ohio&#x27;</span>, <span class="string">&#x27;Nevada&#x27;</span>, <span class="string">&#x27;Nevada&#x27;</span>],</span><br><span class="line"><span class="string">&#x27;year&#x27;</span>: [<span class="number">2000</span>, <span class="number">2001</span>, <span class="number">2002</span>, <span class="number">2001</span>, <span class="number">2002</span>],</span><br><span class="line"><span class="string">&#x27;pop&#x27;</span>: [<span class="number">1.5</span>, <span class="number">1.7</span>, <span class="number">3.6</span>, <span class="number">2.4</span>, <span class="number">2.9</span>]&#125;</span><br><span class="line">dataframe1=pd.DataFrame(data) <span class="comment">#可以传入一个dict，其中每个dict的value为等长的list或tuple，或是numpy的一维数组。在DataFrame中，dict中的key会被作为是column的名称，value则为每列的值，同时自动为这些数据添加一个index。</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe1</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>state</th>
      <th>year</th>
      <th>pop</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Ohio</td>
      <td>2000</td>
      <td>1.5</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Ohio</td>
      <td>2001</td>
      <td>1.7</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Ohio</td>
      <td>2002</td>
      <td>3.6</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Nevada</td>
      <td>2001</td>
      <td>2.4</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Nevada</td>
      <td>2002</td>
      <td>2.9</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.DataFrame(data, columns=[<span class="string">&#x27;year&#x27;</span>, <span class="string">&#x27;state&#x27;</span>, <span class="string">&#x27;debt&#x27;</span>],index=[<span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;two&#x27;</span>, <span class="string">&#x27;three&#x27;</span>, <span class="string">&#x27;four&#x27;</span>, <span class="string">&#x27;five&#x27;</span>]) <span class="comment">#在使用dict构造DataFrame时，支持传入columns和index两个可选属性。此时，DataFrame的columns则会设置为传入的columns参数，每个column对应的值会从dict中获得，如果dict中不存在对应的key，则该列的所有值都为空</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>year</th>
      <th>state</th>
      <th>debt</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>one</th>
      <td>2000</td>
      <td>Ohio</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>two</th>
      <td>2001</td>
      <td>Ohio</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>three</th>
      <td>2002</td>
      <td>Ohio</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>four</th>
      <td>2001</td>
      <td>Nevada</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>five</th>
      <td>2002</td>
      <td>Nevada</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data2=&#123;<span class="string">&#x27;Nevada&#x27;</span>: &#123;<span class="number">2001</span>: <span class="number">2.4</span>, <span class="number">2002</span>: <span class="number">2.9</span>&#125;, <span class="string">&#x27;Ohio&#x27;</span>: &#123;<span class="number">2000</span>: <span class="number">1.5</span>, <span class="number">2001</span>: <span class="number">1.7</span>, <span class="number">2003</span>: <span class="number">3.6</span>&#125;&#125;</span><br><span class="line">pd.DataFrame(data2) <span class="comment">#另一种构造DataFrame的方法，同样是传入一个dict，但是这个dict中的value也是一个dict，相当于一个两层嵌套的dict。外层dict中的key会被作为columns的名称，而内层dict的key则被作为index的名称。在最终得到的DataFrame中，index为所有内层dict中的key取并集。如果某个内层dict中，某些index对应的key-value不存在，那么在构造DataFrame时，对应的位置会被设为NaN。</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Nevada</th>
      <th>Ohio</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2001</th>
      <td>2.4</td>
      <td>1.7</td>
    </tr>
    <tr>
      <th>2002</th>
      <td>2.9</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>2000</th>
      <td>NaN</td>
      <td>1.5</td>
    </tr>
    <tr>
      <th>2003</th>
      <td>NaN</td>
      <td>3.6</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.DataFrame(data2,index=[<span class="number">2000</span>,<span class="number">2001</span>,<span class="number">2002</span>,<span class="number">2004</span>]) <span class="comment">#使用两层嵌套dict构造DataFrame时，支持传入一个index属性，此时DataFrame中使用传入的index。每个index对应的值会在相应的内层dict中索引，如果不存在则为NaN。</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Nevada</th>
      <th>Ohio</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2000</th>
      <td>NaN</td>
      <td>1.5</td>
    </tr>
    <tr>
      <th>2001</th>
      <td>2.4</td>
      <td>1.7</td>
    </tr>
    <tr>
      <th>2002</th>
      <td>2.9</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>2004</th>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.DataFrame(np.random.rand(<span class="number">5</span>,<span class="number">3</span>)) <span class="comment">#可以传入一个numpy的二维array进行构造</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>0</th>
      <th>1</th>
      <th>2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0.860528</td>
      <td>0.190016</td>
      <td>0.355405</td>
    </tr>
    <tr>
      <th>1</th>
      <td>0.707203</td>
      <td>0.021066</td>
      <td>0.883826</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.672148</td>
      <td>0.091125</td>
      <td>0.984936</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0.816604</td>
      <td>0.672571</td>
      <td>0.421406</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0.327092</td>
      <td>0.616550</td>
      <td>0.054370</td>
    </tr>
  </tbody>
</table>
</div>
<p>一个DataFrame具有下面的属性：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe1.values <span class="comment">#DataFrame也有values属性，它是一个二维的array</span></span><br></pre></td></tr></table></figure>
<pre><code>array([['Ohio', 2000, 1.5],
       ['Ohio', 2001, 1.7],
       ['Ohio', 2002, 3.6],
       ['Nevada', 2001, 2.4],
       ['Nevada', 2002, 2.9]], dtype=object)
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe1.index <span class="comment">#与Series一样，具有index属性</span></span><br></pre></td></tr></table></figure>
<pre><code>RangeIndex(start=0, stop=5, step=1)
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe1.columns <span class="comment">#相比于Series，多了一个columns属性</span></span><br></pre></td></tr></table></figure>
<pre><code>Index(['state', 'year', 'pop'], dtype='object')
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe1.index.name=<span class="string">&#x27;test_index&#x27;</span></span><br><span class="line">dataframe1.columns.name=<span class="string">&#x27;test_columns&#x27;</span> <span class="comment">#与Series类似，DataFrame的index和columns也可以有自己的名字</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe1</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th>test_columns</th>
      <th>state</th>
      <th>year</th>
      <th>pop</th>
    </tr>
    <tr>
      <th>test_index</th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Ohio</td>
      <td>2000</td>
      <td>1.5</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Ohio</td>
      <td>2001</td>
      <td>1.7</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Ohio</td>
      <td>2002</td>
      <td>3.6</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Nevada</td>
      <td>2001</td>
      <td>2.4</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Nevada</td>
      <td>2002</td>
      <td>2.9</td>
    </tr>
  </tbody>
</table>
</div>
<h3 id="panel"><a class="markdownIt-Anchor" href="#panel"></a> Panel</h3>
<p>Panel是多个DataFrame的组合，相当于Excel中的一个.xlsx文件（其中包括多张表）。但是在目前的Pandas中已经被废弃，可能在一些旧的Pandas版本中才会有，此处不再赘述。</p>
<h2 id="index属性"><a class="markdownIt-Anchor" href="#index属性"></a> index属性</h2>
<p>在上面的代码中，我们使用了index属性提取出一个series或dataframe的index，或使用columns属性提取出一个dataframe的column。这些操作得到的都是一个index类型的<strong>常量</strong>，也就是说index的数据无法修改！</p>
<p>index常量可以直接用于修改其它series或dataframe的index。同时，这个index可以像python自带的set一样使用。</p>
<p>Pandas中，index的类型包括但不限于：</p>
<ul>
<li>Index：最基本的也是最通用的index类型</li>
<li>Int64Index：整数类型的index</li>
<li>MultiIndex：多重index</li>
<li>DatetimeIndex：使用NumPy的<code>datetime64</code>类型，保存的是毫秒形式的时间戳</li>
<li>PeriodIndex：周期性数据构成的index</li>
<li>RangeIndex：index为一组等差数列组成的range，具有开始值、结束值和步长。</li>
</ul>
<p>同时index支持下面这些方法，来构造新的index。其中，一些方法对于某些特定的index类型不适用：</p>
<ul>
<li>append：将一个新的index附加到已有的index后面</li>
<li>diff：取两个index中不重复的元素</li>
<li>intersection：取两个index的交集</li>
<li>union：取两个index的并集</li>
<li>delete：传入一个整数，删除对应位置的元素</li>
<li>drop：传入一个元素的值，删除掉这个元素</li>
<li>insert：传入一个整数与一个值，将这个值插入到整数对应的位置</li>
<li>unique：输出index中不重复的元素</li>
</ul>
<p>index也支持下面的这些运算操作：</p>
<ul>
<li>isin：传入一个list，输出一个布尔类型的数组，表示list中的元素是否在index中</li>
<li>is_monotonic：如果每个元素都大于等于它的前一个，则返回True</li>
<li>is_unique：如果index中没有重复元素则返回True</li>
</ul>
<p>下面为一些用法示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe1.index.union(dataframe1.columns)</span><br></pre></td></tr></table></figure>
<pre><code>Index([0, 1, 2, 3, 4, 'pop', 'state', 'year'], dtype='object')
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe1.columns.is_unique</span><br></pre></td></tr></table></figure>
<pre><code>True
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe1.columns.drop(<span class="string">&#x27;pop&#x27;</span>)</span><br></pre></td></tr></table></figure>
<pre><code>Index(['state', 'year'], dtype='object', name='test_columns')
</code></pre>
<h2 id="具有重复数据的index"><a class="markdownIt-Anchor" href="#具有重复数据的index"></a> 具有重复数据的index</h2>
<p>在Series和DataFrame的index中，可以出现重复的元素，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe2=pd.DataFrame(np.random.randn(<span class="number">5</span>,<span class="number">3</span>),index=[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>])</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe2.index.is_unique <span class="comment">#此时调用index的is_unique属性，返回值为False</span></span><br></pre></td></tr></table></figure>
<pre><code>False
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe2.loc[<span class="string">&#x27;b&#x27;</span>] <span class="comment">#此时对重复的index做索引时得到的是一个DataFrame而不是一个Series</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>0</th>
      <th>1</th>
      <th>2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>b</th>
      <td>1.589025</td>
      <td>-0.504598</td>
      <td>0.021645</td>
    </tr>
    <tr>
      <th>b</th>
      <td>0.629079</td>
      <td>-0.703262</td>
      <td>-0.759489</td>
    </tr>
  </tbody>
</table>
</div>
<h1 id="io操作"><a class="markdownIt-Anchor" href="#io操作"></a> IO操作</h1>
<h2 id="读取文件"><a class="markdownIt-Anchor" href="#读取文件"></a> 读取文件</h2>
<p>Pandas常用的从文件中读取表格数据的函数有：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.read_csv(<span class="string">&#x27;filename&#x27;</span>) <span class="comment">#读取.csv格式的文件，可以是本地文件路径，也可以是一个URL。默认的分隔符为逗号</span></span><br><span class="line">pd.read_table(<span class="string">&#x27;filename&#x27;</span>) <span class="comment">#从文件中读取表格数据，可以是本地文件路径，也可以是URL。默认分割符为&#x27;\t&#x27;</span></span><br></pre></td></tr></table></figure>
<p>在这两个函数中，常用的参数包括：</p>
<ul>
<li>path：文件路径，可以为本地文件路径或者URL</li>
<li>sep/delimiter：表格数据的分割符，可以使用正则表达式</li>
<li>header：文件中哪一行作为结果中的columns（列名称），默认为0。如果不使用任意一行作为columns，则这一参数应该设置为None</li>
<li>index_col：在最终结果中，哪些列被作为index，可以传入数字序号或者列名称</li>
<li>names：传入一个list，作为columns（列名称），此时header参数应该为None</li>
<li>skiprows：传入一个数字，代表跳过前若干行不读取，然后从接下来的行作为文件的开头进行读取；或是传入一个列表，代表跳过列表中的行</li>
<li>na_values：传入一个list，其中包含的元素作为NaN处理；或是传入一个dict，其中每个元素的key对应于列名，value为一个list，代表作为NaN处理的元素。默认情况下，文件中的空格或者一些特殊值都会被看作是NaN</li>
<li>comment：传入一个或一些字符，用于在一行的结尾将注释部分与表格内容分隔开</li>
<li>converters：传入一个dict，其中的元素为列名称和函数的映射，代表对某一列使用某个函数进行数据转换</li>
<li>nrows：代表从文件开始位置读取多少行</li>
<li>chunksize：传入一个整数，表示一个DataFrame中的行上限，如果原始数据中的行数大于这一上限，则最终得到的是多个DataFrame</li>
<li>skip_footer：代表忽略文件最后的若干行</li>
<li>parse_dates：是否试图将原始数据中的时间数据转换为datetime类型，默认为False。如果为True，则读取数据时会对所有的列尝试进行类型转换操作</li>
<li>encoding：原始数据的编码方式</li>
</ul>
<p>此外，还有一些从其他数据来源中读取数据的函数，包括（此处不再详细赘述每个函数的具体用法）：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.read_excel(<span class="string">&#x27;filename&#x27;</span>,<span class="string">&#x27;sheetname&#x27;</span>) <span class="comment">#从.xls或.xlsx文件中读取表格数据</span></span><br><span class="line">pd.read_html(<span class="string">&#x27;filename&#x27;</span>) <span class="comment">#从html文件中读取其中所有的表格</span></span><br><span class="line">pd.read_json(<span class="string">&#x27;filename&#x27;</span>) <span class="comment">#从JSON格式文件中读取表格</span></span><br><span class="line">pd.read_pickle(<span class="string">&#x27;filename&#x27;</span>) <span class="comment">#从Python pickle格式的二进制文件中读取表格数据。相应地，保存数据的时候用to_pickle()函数。</span></span><br><span class="line">pd.read_sql(<span class="string">&#x27;SQL command&#x27;</span>, database) <span class="comment">#从SQL数据库中读取数据</span></span><br></pre></td></tr></table></figure>
<h2 id="写入文件"><a class="markdownIt-Anchor" href="#写入文件"></a> 写入文件</h2>
<p>Pandas提供了将Series或者DataFrame转换为csv文件的函数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.to_csv(<span class="string">&#x27;filename&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>这一函数可以传入的参数包括：</p>
<ul>
<li>sep：指定分隔符，默认为逗号</li>
<li>na_rep：指定缺失数据的输出值，默认输出为空字符串</li>
<li>index：代表是否将index写入到文件中，默认为True</li>
<li>header：代表是否将columns（列名称）写入到文件中，默认为True</li>
<li>cols：指定写入到文件中去的列名称</li>
</ul>
<p>如果要将文件写入Excel格式，可以使用函数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">frame.to_excel(<span class="string">&#x27;filename&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h1 id="基本操作与运算"><a class="markdownIt-Anchor" href="#基本操作与运算"></a> 基本操作与运算</h1>
<h2 id="reindex"><a class="markdownIt-Anchor" href="#reindex"></a> reindex</h2>
<p>reindex函数传入一个list、tuple或者index，将其作为新的index，并将原来的数据按照新index对应起来。如果新的index中有新的元素，则它对应的值默认为NaN，也可以传入参数对其进行赋值。如果旧的index中某些元素不包含在新的index中，则新数据不包含相应的元素。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">obj = pd.Series([<span class="number">4.5</span>, <span class="number">7.2</span>, <span class="number">-5.3</span>, <span class="number">3.6</span>], index=[<span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;c&#x27;</span>])</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">obj</span><br></pre></td></tr></table></figure>
<pre><code>d    4.5
b    7.2
a   -5.3
c    3.6
dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">obj.reindex([<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>]) <span class="comment">#原来的Series中没有&#x27;e&#x27;这个index，因此相应位置默认为NaN</span></span><br></pre></td></tr></table></figure>
<pre><code>a   -5.3
b    7.2
c    3.6
d    4.5
e    NaN
dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">obj.reindex([<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;e&#x27;</span>],fill_value=<span class="number">0</span>) <span class="comment">#原Series中有的index，如果传入的index中没有则不包含相应的值，传入fill_value可以对新index对应的值进行填充</span></span><br></pre></td></tr></table></figure>
<pre><code>a   -5.3
b    7.2
e    0.0
dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">obj2 = pd.Series([<span class="number">4.5</span>, <span class="number">7.2</span>, <span class="number">-5.3</span>, <span class="number">3.6</span>], index=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">obj2.reindex([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>],method=<span class="string">&#x27;ffill&#x27;</span>) <span class="comment">#如果原始的index为单调递增或者单调递减的情况下，可以传入method参数设置填充方法。其中ffill或者pad代表空位置使用从它向上追溯与它最近的非空元素。</span></span><br></pre></td></tr></table></figure>
<pre><code>2    7.2
3   -5.3
4    3.6
5    3.6
dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">obj2.reindex([<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>],method=<span class="string">&#x27;bfill&#x27;</span>) <span class="comment">#bfill或者backfill代表空位置使用从它向下追溯与它最近的非空元素。注意，ffill和bfill在填充的时候，是在原Series的index中进行查找（如本例的0）。如果要做ffill操作的index最小，或者做bfill操作的index最大，则仍然会被填充为NaN。</span></span><br></pre></td></tr></table></figure>
<pre><code>0    4.5
2    7.2
3   -5.3
4    3.6
5    NaN
dtype: float64
</code></pre>
<p>对于DataFrame来说，则可以同时改变它的index或者columns：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">obj3=pd.DataFrame(np.arange(<span class="number">9</span>).reshape((<span class="number">3</span>, <span class="number">3</span>)), index=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>],columns=[<span class="string">&#x27;Ohio&#x27;</span>, <span class="string">&#x27;Texas&#x27;</span>, <span class="string">&#x27;California&#x27;</span>])</span><br><span class="line">obj3.reindex([<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>]) <span class="comment">#默认情况下，使用传入的list、tuple或者index去修改DataFrame的index。如果只修改columns则需要将传入参数设置为columns=……。</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    } 
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Ohio</th>
      <th>Texas</th>
      <th>California</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>a</th>
      <td>0.0</td>
      <td>1.0</td>
      <td>2.0</td>
    </tr>
    <tr>
      <th>b</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>c</th>
      <td>3.0</td>
      <td>4.0</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>d</th>
      <td>6.0</td>
      <td>7.0</td>
      <td>8.0</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">obj3.reindex(index=[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>],columns=[<span class="string">&#x27;Texas&#x27;</span>,<span class="string">&#x27;Utah&#x27;</span>,<span class="string">&#x27;California&#x27;</span>])</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Texas</th>
      <th>Utah</th>
      <th>California</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>a</th>
      <td>1.0</td>
      <td>NaN</td>
      <td>2.0</td>
    </tr>
    <tr>
      <th>b</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>c</th>
      <td>4.0</td>
      <td>NaN</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>d</th>
      <td>7.0</td>
      <td>NaN</td>
      <td>8.0</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">obj3.index=obj3.index.map(str.upper) <span class="comment">#可以传入一个dict或者一个函数对index进行修改</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">obj3</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Ohio</th>
      <th>Texas</th>
      <th>California</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>A</th>
      <td>0</td>
      <td>1</td>
      <td>2</td>
    </tr>
    <tr>
      <th>C</th>
      <td>3</td>
      <td>4</td>
      <td>5</td>
    </tr>
    <tr>
      <th>D</th>
      <td>6</td>
      <td>7</td>
      <td>8</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">obj3.rename(index=str.title,columns=str.upper) <span class="comment">#使用rename函数也可以实现同样的功能。默认情况下这一函数会生成一个副本，如果要直接修改原变量则需要加上inplace=True参数。</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>OHIO</th>
      <th>TEXAS</th>
      <th>CALIFORNIA</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>A</th>
      <td>0</td>
      <td>1</td>
      <td>2</td>
    </tr>
    <tr>
      <th>C</th>
      <td>3</td>
      <td>4</td>
      <td>5</td>
    </tr>
    <tr>
      <th>D</th>
      <td>6</td>
      <td>7</td>
      <td>8</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">obj3.rename(columns=&#123;<span class="string">&#x27;Ohio&#x27;</span>: <span class="string">&#x27;INDIANA&#x27;</span>&#125;,index=&#123;<span class="string">&#x27;C&#x27;</span>: <span class="string">&#x27;peekaboo&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>INDIANA</th>
      <th>Texas</th>
      <th>California</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>A</th>
      <td>0</td>
      <td>1</td>
      <td>2</td>
    </tr>
    <tr>
      <th>peekaboo</th>
      <td>3</td>
      <td>4</td>
      <td>5</td>
    </tr>
    <tr>
      <th>D</th>
      <td>6</td>
      <td>7</td>
      <td>8</td>
    </tr>
  </tbody>
</table>
</div>
<h2 id="删除操作"><a class="markdownIt-Anchor" href="#删除操作"></a> 删除操作</h2>
<p>drop函数可以从Series或者DataFrame中删除某个index对应的行，或者DataFrame中某个column对应的列：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">obj3.drop([<span class="string">&#x27;A&#x27;</span>]) <span class="comment">#默认查找index并删除行</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Ohio</th>
      <th>Texas</th>
      <th>California</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>C</th>
      <td>3</td>
      <td>4</td>
      <td>5</td>
    </tr>
    <tr>
      <th>D</th>
      <td>6</td>
      <td>7</td>
      <td>8</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">obj3.drop(<span class="string">&#x27;Texas&#x27;</span>,axis=<span class="number">1</span>) <span class="comment">#要删除column则需要指定axis参数等于1</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Ohio</th>
      <th>California</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>A</th>
      <td>0</td>
      <td>2</td>
    </tr>
    <tr>
      <th>C</th>
      <td>3</td>
      <td>5</td>
    </tr>
    <tr>
      <th>D</th>
      <td>6</td>
      <td>8</td>
    </tr>
  </tbody>
</table>
</div>
<h2 id="切片与索引操作"><a class="markdownIt-Anchor" href="#切片与索引操作"></a> 切片与索引操作</h2>
<p>Series和DataFrame都支持索引和切片操作，同时支持使用布尔运算进行索引。</p>
<p>下面为Series的一些使用示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_index=pd.Series(np.arange(<span class="number">4.</span>),index=[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>])</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_index[<span class="number">1</span>] <span class="comment">#可以像索引list或者ndarray一样使用序号进行索引，但是这种索引方式要求index中的元素不是int类型，否则会使用int索引index中的元素</span></span><br></pre></td></tr></table></figure>
<pre><code>1.0
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_index[<span class="string">&#x27;b&#x27;</span>] <span class="comment">#可以按照index的值来索引</span></span><br></pre></td></tr></table></figure>
<pre><code>1.0
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_index[<span class="number">2</span>:<span class="number">4</span>] <span class="comment">#使用序号进行切片操作，按照左闭右开区间取数据</span></span><br></pre></td></tr></table></figure>
<pre><code>c    2.0
d    3.0
dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_index[<span class="string">&#x27;a&#x27;</span>:<span class="string">&#x27;c&#x27;</span>] <span class="comment">#使用index的值进行切片操作，此时取数据按照闭区间来操作</span></span><br></pre></td></tr></table></figure>
<pre><code>a    0.0
b    1.0
c    2.0
dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_index[[<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;a&#x27;</span>]] <span class="comment">#按照传入的list进行索引</span></span><br></pre></td></tr></table></figure>
<pre><code>b    1.0
a    0.0
dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_index[[<span class="number">2</span>,<span class="number">1</span>]]</span><br></pre></td></tr></table></figure>
<pre><code>c    2.0
b    1.0
dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_index[series_index&lt;<span class="number">2</span>] <span class="comment">#使用布尔表达式进行索引，相当于传入布尔数组来索引</span></span><br></pre></td></tr></table></figure>
<pre><code>a    0.0
b    1.0
dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_index[<span class="string">&#x27;b&#x27;</span>:<span class="string">&#x27;c&#x27;</span>]=<span class="number">4</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_index <span class="comment">#索引操作获得的是原始数据的副本，如果对索引得到的数据进行修改操作，相当于修改原始数据</span></span><br></pre></td></tr></table></figure>
<pre><code>a    0.0
b    4.0
c    4.0
d    3.0
dtype: float64
</code></pre>
<p>对于DataFrame来说，它的索引与切片操作比Series要复杂一些。一些使用示例如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_index=pd.DataFrame(np.arange(<span class="number">16</span>).reshape((<span class="number">4</span>, <span class="number">4</span>)),index=[<span class="string">&#x27;Ohio&#x27;</span>, <span class="string">&#x27;Colorado&#x27;</span>, <span class="string">&#x27;Utah&#x27;</span>, <span class="string">&#x27;New York&#x27;</span>], columns=[<span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;two&#x27;</span>, <span class="string">&#x27;three&#x27;</span>, <span class="string">&#x27;four&#x27;</span>])</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_index[<span class="string">&#x27;two&#x27;</span>] <span class="comment">#传入columns中的元素，按列做索引，得到一个Series。</span></span><br><span class="line"><span class="comment">#注意DataFrame不支持使用index的元素进行索引！例如dataframe_index[&#x27;Ohio&#x27;]操作是错误的。</span></span><br></pre></td></tr></table></figure>
<pre><code>Ohio         1
Colorado     5
Utah         9
New York    13
Name: two, dtype: int32
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_index[[<span class="string">&#x27;three&#x27;</span>,<span class="string">&#x27;one&#x27;</span>]] <span class="comment">#传入一个list进行索引，索引结果按照list中的元素顺序排列。</span></span><br><span class="line"><span class="comment">#需要注意的是，不能使用columns中的元素来做切片操作！例如dataframe_index[&#x27;one&#x27;:&#x27;three&#x27;]为非法操作。</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>three</th>
      <th>one</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Ohio</th>
      <td>2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>Colorado</th>
      <td>6</td>
      <td>4</td>
    </tr>
    <tr>
      <th>Utah</th>
      <td>10</td>
      <td>8</td>
    </tr>
    <tr>
      <th>New York</th>
      <td>14</td>
      <td>12</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_index[:<span class="number">2</span>] <span class="comment">#DataFrame也可以使用数字来做切片操作，这一方法是对行进行切片操作</span></span><br><span class="line"><span class="comment">#注意：DataFrame不支持像Series一样直接传入数字进行索引！例如dataframe_index[2]，dataframe_index[[0,1]],dataframe_index[[0,1],[1,2]]都为错误操作。要使用数字索引，需要使用iloc运算。</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>one</th>
      <th>two</th>
      <th>three</th>
      <th>four</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Ohio</th>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>3</td>
    </tr>
    <tr>
      <th>Colorado</th>
      <td>4</td>
      <td>5</td>
      <td>6</td>
      <td>7</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_index.take([<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>]) <span class="comment">#如果要按行取数据，可以使用take函数。函数接收一个元素为整数的list，然后按照这些整数选出对应的行。list中的元素可以有重复。如果要对数据进行随机打乱，则可以借助NumPy的random.permutation函数</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>one</th>
      <th>two</th>
      <th>three</th>
      <th>four</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Utah</th>
      <td>8</td>
      <td>9</td>
      <td>10</td>
      <td>11</td>
    </tr>
    <tr>
      <th>New York</th>
      <td>12</td>
      <td>13</td>
      <td>14</td>
      <td>15</td>
    </tr>
    <tr>
      <th>Colorado</th>
      <td>4</td>
      <td>5</td>
      <td>6</td>
      <td>7</td>
    </tr>
    <tr>
      <th>Colorado</th>
      <td>4</td>
      <td>5</td>
      <td>6</td>
      <td>7</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_index[dataframe_index&lt;<span class="number">5</span>] <span class="comment">#可以在索引时使用布尔表达式，相当于传入布尔数组</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>one</th>
      <th>two</th>
      <th>three</th>
      <th>four</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Ohio</th>
      <td>0.0</td>
      <td>1.0</td>
      <td>2.0</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>Colorado</th>
      <td>4.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>Utah</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>New York</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_index[dataframe_index[<span class="string">&#x27;three&#x27;</span>]&gt;<span class="number">5</span>]</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>one</th>
      <th>two</th>
      <th>three</th>
      <th>four</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Colorado</th>
      <td>4</td>
      <td>5</td>
      <td>6</td>
      <td>7</td>
    </tr>
    <tr>
      <th>Utah</th>
      <td>8</td>
      <td>9</td>
      <td>10</td>
      <td>11</td>
    </tr>
    <tr>
      <th>New York</th>
      <td>12</td>
      <td>13</td>
      <td>14</td>
      <td>15</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_index[<span class="string">&#x27;five&#x27;</span>]=[<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>] <span class="comment">#可以使用这种方式向DataFrame中插入一个新列（当然Series也支持这种操作），要求索引使用的关键词在columns中不存在，并且赋值使用的list的大小要求与DataFrame的行数一致。注意这样的操作会直接在原始数据上做就地的修改</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_index </span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>one</th>
      <th>two</th>
      <th>three</th>
      <th>four</th>
      <th>five</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Ohio</th>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>3</td>
      <td>3</td>
    </tr>
    <tr>
      <th>Colorado</th>
      <td>4</td>
      <td>5</td>
      <td>6</td>
      <td>7</td>
      <td>4</td>
    </tr>
    <tr>
      <th>Utah</th>
      <td>8</td>
      <td>9</td>
      <td>10</td>
      <td>11</td>
      <td>5</td>
    </tr>
    <tr>
      <th>New York</th>
      <td>12</td>
      <td>13</td>
      <td>14</td>
      <td>15</td>
      <td>6</td>
    </tr>
  </tbody>
</table>
</div>
<p>除了上述这些操作，pandas还提供了<code>loc</code>和<code>iloc</code>两种运算符进行索引操作，<code>loc</code>是使用index和columns中的内容进行索引，而<code>iloc</code>则是使用整数。同样，也可以使用<code>at</code>和<code>iat</code>两个运算符，索引某行和某列对应的那个元素。这种索引方式的含义清晰，不会让人混淆，因此在索引操作时最好使用这种办法。</p>
<p>下面是一些使用示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_index.loc[<span class="string">&#x27;Ohio&#x27;</span>:<span class="string">&#x27;Utah&#x27;</span>,[<span class="string">&#x27;one&#x27;</span>,<span class="string">&#x27;two&#x27;</span>]] <span class="comment">#先索引index，再索引columns，支持切片操作以及传入list的索引方式</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>one</th>
      <th>two</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Ohio</th>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>Colorado</th>
      <td>4</td>
      <td>5</td>
    </tr>
    <tr>
      <th>Utah</th>
      <td>8</td>
      <td>9</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_index.loc[:,[<span class="string">&#x27;one&#x27;</span>,<span class="string">&#x27;two&#x27;</span>]] <span class="comment">#如果只索引columns，则index部分必须加上:代表索引所有的index。</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>one</th>
      <th>two</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Ohio</th>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>Colorado</th>
      <td>4</td>
      <td>5</td>
    </tr>
    <tr>
      <th>Utah</th>
      <td>8</td>
      <td>9</td>
    </tr>
    <tr>
      <th>New York</th>
      <td>12</td>
      <td>13</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_index.loc[[<span class="string">&#x27;New York&#x27;</span>,<span class="string">&#x27;Utah&#x27;</span>]] <span class="comment">#如果只索引index，则columns部分的索引可以省略。</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>one</th>
      <th>two</th>
      <th>three</th>
      <th>four</th>
      <th>five</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>New York</th>
      <td>12</td>
      <td>13</td>
      <td>14</td>
      <td>15</td>
      <td>6</td>
    </tr>
    <tr>
      <th>Utah</th>
      <td>8</td>
      <td>9</td>
      <td>10</td>
      <td>11</td>
      <td>5</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_index.iloc[<span class="number">2</span>:<span class="number">4</span>,<span class="number">1</span>:<span class="number">3</span>] <span class="comment">#与NumPy切片的方式类似</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>two</th>
      <th>three</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Utah</th>
      <td>9</td>
      <td>10</td>
    </tr>
    <tr>
      <th>New York</th>
      <td>13</td>
      <td>14</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_index.iloc[[<span class="number">2</span>,<span class="number">3</span>],[<span class="number">0</span>,<span class="number">1</span>]] <span class="comment">#如果传入两个list进行索引，则分别对应于索引的行与列，类似于NumPy.ix_()函数。</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>one</th>
      <th>two</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Utah</th>
      <td>8</td>
      <td>9</td>
    </tr>
    <tr>
      <th>New York</th>
      <td>12</td>
      <td>13</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_index.at[<span class="string">&#x27;Utah&#x27;</span>,<span class="string">&#x27;one&#x27;</span>] <span class="comment">#只能索引某个元素，不支持切片以及传入list</span></span><br></pre></td></tr></table></figure>
<pre><code>8
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_index.iat[<span class="number">1</span>,<span class="number">1</span>] <span class="comment">#使用整数坐标来索引某个元素</span></span><br></pre></td></tr></table></figure>
<pre><code>5
</code></pre>
<h2 id="数学运算"><a class="markdownIt-Anchor" href="#数学运算"></a> 数学运算</h2>
<p>Series和DataFrame支持一些数学运算，包括:</p>
<ul>
<li><code>add()</code>，或使用运算符+</li>
<li><code>sub()</code>，或使用运算符-</li>
<li><code>mul()</code>，或使用运算符*</li>
<li><code>div()</code>，或使用运算符/</li>
</ul>
<p>以加法为例，对两个index不相同的Series相加时，最后得到的index是两个index的并集。默认情况下，运算结果满足以下规律：如果是两个index里面都有的key，则它对应的结果是这个key在两个Series里对应的value之和；如果某些key只出现在其中一个index里面，则相加后对应的value值为空。</p>
<p>DataFrame也满足上述的规则，并且在考虑index的基础上，也要考虑columns。</p>
<p>下面是一些使用示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_math1=pd.DataFrame(np.arange(<span class="number">12.</span>).reshape((<span class="number">3</span>, <span class="number">4</span>)), columns=list(<span class="string">&#x27;abcd&#x27;</span>))</span><br><span class="line">dataframe_math2=pd.DataFrame(np.arange(<span class="number">20.</span>).reshape((<span class="number">4</span>, <span class="number">5</span>)), columns=list(<span class="string">&#x27;abcde&#x27;</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_math1+dataframe_math2</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
      <th>d</th>
      <th>e</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0.0</td>
      <td>2.0</td>
      <td>4.0</td>
      <td>6.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>1</th>
      <td>9.0</td>
      <td>11.0</td>
      <td>13.0</td>
      <td>15.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>2</th>
      <td>18.0</td>
      <td>20.0</td>
      <td>22.0</td>
      <td>24.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>3</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_math1.add(dataframe_math2,fill_value=<span class="number">0</span>) <span class="comment">#与上面一条语句的作用相同。但是add函数支持传入fill_value参数，此时如果某些key只在一个DataFrame中出现，那么另一个DataFrame中相应的位置会被补上传入的值来参与运算。</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
      <th>d</th>
      <th>e</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0.0</td>
      <td>2.0</td>
      <td>4.0</td>
      <td>6.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>9.0</td>
      <td>11.0</td>
      <td>13.0</td>
      <td>15.0</td>
      <td>9.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>18.0</td>
      <td>20.0</td>
      <td>22.0</td>
      <td>24.0</td>
      <td>14.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>15.0</td>
      <td>16.0</td>
      <td>17.0</td>
      <td>18.0</td>
      <td>19.0</td>
    </tr>
  </tbody>
</table>
</div>
<p>如果是一个DataFrame和Series进行运算，那么默认会把Series的元素按行复制进行扩展，然后参与运算。如果Series的index和DataFrame的columns不是完全相同，也可以进行运算，运算规则与两个DataFrame的运算规则类似。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_math1=dataframe_math1.iloc[<span class="number">0</span>]</span><br><span class="line">dataframe_math1-series_math1</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
      <th>d</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4.0</td>
      <td>4.0</td>
      <td>4.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>8.0</td>
      <td>8.0</td>
      <td>8.0</td>
      <td>8.0</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_math2=series_math1.reindex([<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;e&#x27;</span>])</span><br><span class="line">dataframe_math1-series_math2</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
      <th>d</th>
      <th>e</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4.0</td>
      <td>4.0</td>
      <td>4.0</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>2</th>
      <td>8.0</td>
      <td>8.0</td>
      <td>8.0</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_math3=dataframe_math1[<span class="string">&#x27;d&#x27;</span>]</span><br><span class="line">dataframe_math1.subtract(series_math3,axis=<span class="number">0</span>) <span class="comment">#要想按列进行扩展，需要调用函数，并且传入axis=0这一可选参数。</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
      <th>d</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>-3.0</td>
      <td>-2.0</td>
      <td>-1.0</td>
      <td>0.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>-3.0</td>
      <td>-2.0</td>
      <td>-1.0</td>
      <td>0.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>-3.0</td>
      <td>-2.0</td>
      <td>-1.0</td>
      <td>0.0</td>
    </tr>
  </tbody>
</table>
</div>
<h2 id="函数与映射"><a class="markdownIt-Anchor" href="#函数与映射"></a> 函数与映射</h2>
<p>Numpy中的ufunc（即一元函数）也可以使用pandas中的series和dataframe类型的变量作为输入参数。下面为一些使用示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_func = pd.DataFrame(np.random.randn(<span class="number">4</span>, <span class="number">3</span>), columns=list(<span class="string">&#x27;bde&#x27;</span>),index=[<span class="string">&#x27;Utah&#x27;</span>, <span class="string">&#x27;Ohio&#x27;</span>, <span class="string">&#x27;Texas&#x27;</span>, <span class="string">&#x27;Oregon&#x27;</span>])</span><br><span class="line">dataframe_func</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>b</th>
      <th>d</th>
      <th>e</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Utah</th>
      <td>0.452034</td>
      <td>-1.067267</td>
      <td>2.235212</td>
    </tr>
    <tr>
      <th>Ohio</th>
      <td>-1.205085</td>
      <td>0.899914</td>
      <td>-1.097603</td>
    </tr>
    <tr>
      <th>Texas</th>
      <td>-1.553192</td>
      <td>-0.820639</td>
      <td>0.025214</td>
    </tr>
    <tr>
      <th>Oregon</th>
      <td>-0.047253</td>
      <td>1.092414</td>
      <td>-0.302945</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.exp(dataframe_func)</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>b</th>
      <th>d</th>
      <th>e</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Utah</th>
      <td>1.571506</td>
      <td>0.343947</td>
      <td>9.348460</td>
    </tr>
    <tr>
      <th>Ohio</th>
      <td>0.299666</td>
      <td>2.459391</td>
      <td>0.333670</td>
    </tr>
    <tr>
      <th>Texas</th>
      <td>0.211572</td>
      <td>0.440151</td>
      <td>1.025534</td>
    </tr>
    <tr>
      <th>Oregon</th>
      <td>0.953846</td>
      <td>2.981464</td>
      <td>0.738640</td>
    </tr>
  </tbody>
</table>
</div>
<p>同时也可以自己定义函数，然后使用<code>apply</code>函数作用于每一行或者每一列。如果函数返回一个数值，那么最后生成一个Series；如果函数返回一个矢量值，最后生成一个DataFrame。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f1=<span class="keyword">lambda</span> x:x.max()-x.min()</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_func.apply(f1) <span class="comment">#默认作用于行</span></span><br></pre></td></tr></table></figure>
<pre><code>b    2.005226
d    2.159681
e    3.332815
dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_func.apply(f1,axis=<span class="number">1</span>) <span class="comment">#如果要让函数作用于列，则可以传入axis参数指定方向</span></span><br></pre></td></tr></table></figure>
<pre><code>Utah      3.302478
Ohio      2.104999
Texas     1.578405
Oregon    1.395360
dtype: float64
</code></pre>
<blockquote>
<p>备注：在Pandas的一些函数中，如果传入<code>axis=……</code>参数，则代表这一函数操作在这个传入的维度上面进行。假设有一个DataFrame，它的元素可以用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">a_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>来表示，当我们在使用<code>sum()</code>函数时传入<code>axis=1</code>，那么最终得到的结果便可以用数学公式表示为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\sum_{j=1}^{n}a_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.24011em;vertical-align:-0.43581800000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，也就是说这个操作是在维度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>上进行的，也就是水平方向。</p>
</blockquote>
<p><code>applymap</code>方法可以让函数作用于每一个元素：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f2=<span class="keyword">lambda</span> x: <span class="string">&#x27;%.2f&#x27;</span>%x</span><br><span class="line">dataframe_func.applymap(f2)</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>b</th>
      <th>d</th>
      <th>e</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Utah</th>
      <td>0.45</td>
      <td>-1.07</td>
      <td>2.24</td>
    </tr>
    <tr>
      <th>Ohio</th>
      <td>-1.21</td>
      <td>0.90</td>
      <td>-1.10</td>
    </tr>
    <tr>
      <th>Texas</th>
      <td>-1.55</td>
      <td>-0.82</td>
      <td>0.03</td>
    </tr>
    <tr>
      <th>Oregon</th>
      <td>-0.05</td>
      <td>1.09</td>
      <td>-0.30</td>
    </tr>
  </tbody>
</table>
</div>
<h2 id="排序"><a class="markdownIt-Anchor" href="#排序"></a> 排序</h2>
<p>Series或DataFrame的index和columns可以使用<code>sort_index()</code>函数对其进行排序，使得行或列按照index排序后的顺序进行排列。<code>sort_index()</code>函数生成的是原始数据的一个副本。</p>
<p>示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_sort=pd.Series(range(<span class="number">4</span>), index=[<span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>])</span><br><span class="line">series_sort.sort_index()</span><br></pre></td></tr></table></figure>
<pre><code>a    1
b    2
c    3
d    0
dtype: int64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_sort=pd.DataFrame(np.arange(<span class="number">8</span>).reshape((<span class="number">2</span>, <span class="number">4</span>)), index=[<span class="string">&#x27;three&#x27;</span>, <span class="string">&#x27;one&#x27;</span>], columns=[<span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>])</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_sort.sort_index() <span class="comment">#DataFrame默认对index进行排序</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>d</th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>one</th>
      <td>4</td>
      <td>5</td>
      <td>6</td>
      <td>7</td>
    </tr>
    <tr>
      <th>three</th>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_sort.sort_index(axis=<span class="number">1</span>) <span class="comment">#可以传入axis参数来对columns进行排序</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
      <th>d</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>three</th>
      <td>1</td>
      <td>2</td>
      <td>3</td>
      <td>0</td>
    </tr>
    <tr>
      <th>one</th>
      <td>5</td>
      <td>6</td>
      <td>7</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_sort.sort_index(axis=<span class="number">1</span>,ascending=<span class="literal">False</span>) <span class="comment">#默认按照升序排列，如果要降序排列则需要设置ascending=False</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>d</th>
      <th>c</th>
      <th>b</th>
      <th>a</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>three</th>
      <td>0</td>
      <td>3</td>
      <td>2</td>
      <td>1</td>
    </tr>
    <tr>
      <th>one</th>
      <td>4</td>
      <td>7</td>
      <td>6</td>
      <td>5</td>
    </tr>
  </tbody>
</table>
</div>
<p>如果想对Series或者DataFrame按照元素的大小顺序进行排序，可以用<code>sort_values()</code>方法，其中NaN值会自动排在最后：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_sort2=pd.DataFrame(&#123;<span class="string">&#x27;b&#x27;</span>: [<span class="number">4</span>, <span class="number">7</span>, <span class="number">-3</span>, <span class="number">2</span>], <span class="string">&#x27;a&#x27;</span>: [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>]&#125;)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_sort2.sort_values(by=<span class="string">&#x27;b&#x27;</span>) <span class="comment">#DataFrame需要传入一个by参数，指定按照某一列的元素大小排序。注意：不能按某一行进行排序！</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>b</th>
      <th>a</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2</th>
      <td>-3</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>2</td>
      <td>1</td>
    </tr>
    <tr>
      <th>0</th>
      <td>4</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>7</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_sort2.sort_values(by=[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>]) <span class="comment">#by参数可以传入一个list选择多列，代表先按照list中第一个元素对应的列进行排序，如果出现相同值则使用第二个元素对应的列来排序这些相同值，以此类推</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>b</th>
      <th>a</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2</th>
      <td>-3</td>
      <td>0</td>
    </tr>
    <tr>
      <th>0</th>
      <td>4</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>2</td>
      <td>1</td>
    </tr>
    <tr>
      <th>1</th>
      <td>7</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
</div>
<p>使用<code>rank()</code>方法，可以生成Series或DataFrame中的元素的排列次序，类似于NumPy的argsort()函数。</p>
<p><code>rank()</code>在处理重复值的时候，有如下几种方法：</p>
<ul>
<li>average：生成重复值对应顺序的平均值。例如两个重复值分别排1和2，则它们的rank都为1.5</li>
<li>min：重复值使用最小的那个rank</li>
<li>max：重复值使用最大的那个rank</li>
<li>first：使用重复值中第一个出现的那个对应的rank</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_sort2.rank() <span class="comment">#默认按列做rank操作，使用average方法处理重复值</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>b</th>
      <th>a</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>3.0</td>
      <td>1.5</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4.0</td>
      <td>3.5</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1.0</td>
      <td>1.5</td>
    </tr>
    <tr>
      <th>3</th>
      <td>2.0</td>
      <td>3.5</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_sort2.rank(axis=<span class="number">1</span>) <span class="comment">#可以传入axis参数来指定rank操作的方向</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>b</th>
      <th>a</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>2.0</td>
      <td>1.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>2.0</td>
      <td>1.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1.0</td>
      <td>2.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>2.0</td>
      <td>1.0</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_sort2.rank(method=<span class="string">&#x27;max&#x27;</span>,ascending=<span class="literal">False</span>) <span class="comment">#要改变对重复值的处理方式可以传入method参数，使用降序可以传入ascending=False参数</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>b</th>
      <th>a</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>2.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1.0</td>
      <td>2.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>4.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>3.0</td>
      <td>2.0</td>
    </tr>
  </tbody>
</table>
</div>
<h1 id="统计函数"><a class="markdownIt-Anchor" href="#统计函数"></a> 统计函数</h1>
<p>Pandas支持对Series和DataFrame中的数据做一些数学统计，常用的统计函数包括：</p>
<ul>
<li>count：统计非NaN元素的数目</li>
<li>describe：自动统计dataframe中每一列的数据数目，平均值，标准差，最小值，25%，50%，75%，100%分位数，可以用于分析数据的大致统计规律</li>
<li>min、max：统计最小或最大值</li>
<li>argmin、argmax：统计最小或最大值出现的位置，返回对应的序号</li>
<li>idxmin、idxmax：统计最小或最大值出现的位置，返回对应的index值</li>
<li>quantile：统计某个百分位数（需要传入一个0到1中间的数字）</li>
<li>sum：统计所有元素的和</li>
<li>mean：统计所有元素的平均数</li>
<li>median：统计所有元素的中位数</li>
<li>mad：统计相较于平均值的绝对偏差的平均值</li>
<li>var：统计方差</li>
<li>std：统计标准差</li>
<li>skew：统计偏度，表示随机变量与中心分布的不对称程度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">（</mi><msup><mi>μ</mi><mn>3</mn></msup><mi mathvariant="normal">/</mi><msup><mi>σ</mi><mn>3</mn></msup><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">（μ^3/σ^3）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">（</span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">）</span></span></span></span>，右偏为正，左偏为负</li>
<li>kurt：统计峰度，表征概率密度分布曲线在平均值处峰值高低的特征数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">（</mi><msup><mi>μ</mi><mn>4</mn></msup><mi mathvariant="normal">/</mi><msup><mi>σ</mi><mn>4</mn></msup><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">（μ^4/σ^4）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">（</span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">）</span></span></span></span>。以正态分布为界，如果比正态分布陡，峰度大于0，否则小于0</li>
<li>cumsum：计算累积和（即保留计算总和时中间每一步的结果）</li>
<li>cummin、cummax：计算累积最小值或最大值</li>
<li>cumprod：计算累积乘积</li>
<li>diff：计算一阶算数偏差（即拿第二个值减第一个，第三个值减第二个，以此类推）</li>
<li>pct_change：计算百分数改变</li>
</ul>
<p>在统计函数中，可以使用的一些参数包括：</p>
<ul>
<li>axis：指定统计函数在哪个维度上计算，0为行，1为列（即0是按照竖直方向，1是按照水平方向）</li>
<li>skipna：是否跳过NaN，默认为True</li>
<li>level：如果使用多重index，则对每一个层级的结果进行分组</li>
</ul>
<p>下面为一些使用示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_stat=pd.DataFrame(np.random.rand(<span class="number">5</span>,<span class="number">5</span>),columns=[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>])</span><br><span class="line">dataframe_stat</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
      <th>d</th>
      <th>e</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0.925587</td>
      <td>0.285093</td>
      <td>0.016950</td>
      <td>0.140965</td>
      <td>0.179401</td>
    </tr>
    <tr>
      <th>1</th>
      <td>0.213783</td>
      <td>0.146496</td>
      <td>0.816971</td>
      <td>0.065923</td>
      <td>0.067685</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0.615921</td>
      <td>0.717184</td>
      <td>0.375118</td>
      <td>0.233150</td>
      <td>0.188625</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0.469468</td>
      <td>0.960874</td>
      <td>0.769445</td>
      <td>0.503390</td>
      <td>0.928483</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0.480754</td>
      <td>0.340058</td>
      <td>0.424418</td>
      <td>0.566608</td>
      <td>0.810999</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_stat.pct_change() <span class="comment">#如果不指定axis则默认是按行做计算</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
      <th>d</th>
      <th>e</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>1</th>
      <td>-0.769030</td>
      <td>-0.486148</td>
      <td>47.199252</td>
      <td>-0.532347</td>
      <td>-0.622717</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1.881058</td>
      <td>3.895602</td>
      <td>-0.540843</td>
      <td>2.536707</td>
      <td>1.786814</td>
    </tr>
    <tr>
      <th>3</th>
      <td>-0.237778</td>
      <td>0.339787</td>
      <td>1.051211</td>
      <td>1.159082</td>
      <td>3.922365</td>
    </tr>
    <tr>
      <th>4</th>
      <td>0.024039</td>
      <td>-0.646095</td>
      <td>-0.448410</td>
      <td>0.125585</td>
      <td>-0.126533</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_stat.describe()</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
      <th>d</th>
      <th>e</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>5.000000</td>
      <td>5.000000</td>
      <td>5.000000</td>
      <td>5.000000</td>
      <td>5.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>0.541102</td>
      <td>0.489941</td>
      <td>0.480580</td>
      <td>0.302007</td>
      <td>0.435039</td>
    </tr>
    <tr>
      <th>std</th>
      <td>0.259489</td>
      <td>0.337565</td>
      <td>0.326279</td>
      <td>0.221912</td>
      <td>0.401825</td>
    </tr>
    <tr>
      <th>min</th>
      <td>0.213783</td>
      <td>0.146496</td>
      <td>0.016950</td>
      <td>0.065923</td>
      <td>0.067685</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>0.469468</td>
      <td>0.285093</td>
      <td>0.375118</td>
      <td>0.140965</td>
      <td>0.179401</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>0.480754</td>
      <td>0.340058</td>
      <td>0.424418</td>
      <td>0.233150</td>
      <td>0.188625</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>0.615921</td>
      <td>0.717184</td>
      <td>0.769445</td>
      <td>0.503390</td>
      <td>0.810999</td>
    </tr>
    <tr>
      <th>max</th>
      <td>0.925587</td>
      <td>0.960874</td>
      <td>0.816971</td>
      <td>0.566608</td>
      <td>0.928483</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_stat.min(axis=<span class="number">1</span>) <span class="comment">#可以通过传入axis来指定计算方向</span></span><br></pre></td></tr></table></figure>
<pre><code>0    0.016950
1    0.065923
2    0.188625
3    0.469468
4    0.340058
dtype: float64
</code></pre>
<p>Pandas也提供了协方差和相关系数的计算，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_stat.corr() <span class="comment">#对于一个DataFrame，计算所有列与列之间的相关系数</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
      <th>d</th>
      <th>e</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>a</th>
      <td>1.000000</td>
      <td>0.074114</td>
      <td>-0.925876</td>
      <td>-0.087650</td>
      <td>-0.130717</td>
    </tr>
    <tr>
      <th>b</th>
      <td>0.074114</td>
      <td>1.000000</td>
      <td>0.226825</td>
      <td>0.512625</td>
      <td>0.550285</td>
    </tr>
    <tr>
      <th>c</th>
      <td>-0.925876</td>
      <td>0.226825</td>
      <td>1.000000</td>
      <td>0.158210</td>
      <td>0.271455</td>
    </tr>
    <tr>
      <th>d</th>
      <td>-0.087650</td>
      <td>0.512625</td>
      <td>0.158210</td>
      <td>1.000000</td>
      <td>0.963646</td>
    </tr>
    <tr>
      <th>e</th>
      <td>-0.130717</td>
      <td>0.550285</td>
      <td>0.271455</td>
      <td>0.963646</td>
      <td>1.000000</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_stat.cov() <span class="comment">#计算所有列与列之间两两的协方差</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
      <th>d</th>
      <th>e</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>a</th>
      <td>0.067334</td>
      <td>0.006492</td>
      <td>-0.078390</td>
      <td>-0.005047</td>
      <td>-0.013630</td>
    </tr>
    <tr>
      <th>b</th>
      <td>0.006492</td>
      <td>0.113950</td>
      <td>0.024983</td>
      <td>0.038401</td>
      <td>0.074642</td>
    </tr>
    <tr>
      <th>c</th>
      <td>-0.078390</td>
      <td>0.024983</td>
      <td>0.106458</td>
      <td>0.011455</td>
      <td>0.035590</td>
    </tr>
    <tr>
      <th>d</th>
      <td>-0.005047</td>
      <td>0.038401</td>
      <td>0.011455</td>
      <td>0.049245</td>
      <td>0.085928</td>
    </tr>
    <tr>
      <th>e</th>
      <td>-0.013630</td>
      <td>0.074642</td>
      <td>0.035590</td>
      <td>0.085928</td>
      <td>0.161463</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_stat[<span class="string">&#x27;a&#x27;</span>].cov(dataframe_stat[<span class="string">&#x27;c&#x27;</span>]) <span class="comment">#对于一个Series来说，需要传入另一个规模相同的Series来进行计算</span></span><br></pre></td></tr></table></figure>
<pre><code>-0.07838993925634331
</code></pre>
<p>此外，还有一些用于统计Series中数据数目以及查找数据的函数，下面为一些使用示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_stat=pd.Series([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>])</span><br><span class="line">series_stat</span><br></pre></td></tr></table></figure>
<pre><code>0     1
1     2
2     3
3     1
4     1
5     1
6     1
7     2
8     4
9     5
10    5
dtype: int64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_stat.value_counts() <span class="comment">#统计Series中每个元素出现的次数</span></span><br></pre></td></tr></table></figure>
<pre><code>1    5
5    2
2    2
4    1
3    1
dtype: int64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_stat.unique() <span class="comment">#对Series中的所有元素去重，元素的排列顺序按照它们第一次出现的顺序</span></span><br></pre></td></tr></table></figure>
<pre><code>array([1, 2, 3, 4, 5], dtype=int64)
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_stat.isin([<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>]) <span class="comment">#传入一个list，输出一个布尔类型的Series，对应于Series中的元素是否包含在传入的list当中</span></span><br></pre></td></tr></table></figure>
<pre><code>0     False
1     False
2      True
3     False
4     False
5     False
6     False
7     False
8      True
9     False
10    False
dtype: bool
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.DataFrame([series_stat,series_stat,series_stat]).apply(pd.value_counts) <span class="comment">#如果要对DataFrame使用上述三个函数，可以借助apply函数</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>0</th>
      <th>1</th>
      <th>2</th>
      <th>3</th>
      <th>4</th>
      <th>5</th>
      <th>6</th>
      <th>7</th>
      <th>8</th>
      <th>9</th>
      <th>10</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>3.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>3.0</td>
      <td>3.0</td>
      <td>3.0</td>
      <td>3.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>2</th>
      <td>NaN</td>
      <td>3.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>3.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>3</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>3.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>3.0</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>5</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>3.0</td>
      <td>3.0</td>
    </tr>
  </tbody>
</table>
</div>
<h1 id="数据清洗"><a class="markdownIt-Anchor" href="#数据清洗"></a> 数据清洗</h1>
<h2 id="处理丢失数据"><a class="markdownIt-Anchor" href="#处理丢失数据"></a> 处理丢失数据</h2>
<p>在Pandas中，可能会遇到Series或者DataFrame中存在丢失数据的情况。对于如何处理丢失数据，Pandas提供了一些相关的函数。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_nan=pd.DataFrame(</span><br><span class="line">    &#123;<span class="string">&#x27;Nevada&#x27;</span>: &#123;<span class="number">2001</span>:<span class="number">2.4</span>, <span class="number">2002</span>:<span class="number">2.9</span>, <span class="number">2003</span>:<span class="number">3.3</span>&#125;, </span><br><span class="line">    <span class="string">&#x27;Ohio&#x27;</span>: &#123;<span class="number">2000</span>:<span class="number">1.5</span>, <span class="number">2001</span>:<span class="number">1.7</span>, <span class="number">2003</span>:<span class="number">3.6</span>&#125;,</span><br><span class="line">    <span class="string">&#x27;New York&#x27;</span>:&#123;<span class="number">2003</span>:<span class="number">3.5</span>, <span class="number">2004</span>:<span class="number">5.7</span>&#125;,</span><br><span class="line">    <span class="string">&#x27;Denver&#x27;</span>:&#123;<span class="number">2000</span>:<span class="number">0.5</span>, <span class="number">2001</span>:<span class="number">1.1</span>, <span class="number">2002</span>:<span class="number">2.1</span>, <span class="number">2003</span>:<span class="number">1.5</span>, <span class="number">2004</span>:<span class="number">0.9</span>&#125;&#125;,</span><br><span class="line">    index=[<span class="number">2000</span>,<span class="number">2001</span>,<span class="number">2002</span>,<span class="number">2003</span>,<span class="number">2004</span>,<span class="number">2005</span>])</span><br><span class="line">dataframe_nan</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Nevada</th>
      <th>Ohio</th>
      <th>New York</th>
      <th>Denver</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2000</th>
      <td>NaN</td>
      <td>1.5</td>
      <td>NaN</td>
      <td>0.5</td>
    </tr>
    <tr>
      <th>2001</th>
      <td>2.4</td>
      <td>1.7</td>
      <td>NaN</td>
      <td>1.1</td>
    </tr>
    <tr>
      <th>2002</th>
      <td>2.9</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>2.1</td>
    </tr>
    <tr>
      <th>2003</th>
      <td>3.3</td>
      <td>3.6</td>
      <td>3.5</td>
      <td>1.5</td>
    </tr>
    <tr>
      <th>2004</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>5.7</td>
      <td>0.9</td>
    </tr>
    <tr>
      <th>2005</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<p><code>dropna()</code>函数可以将丢失的数据删除掉。对于Series来说，丢失的数据会被直接删除掉；而对于DataFrame来说，默认操作是只要一行内有一个NaN就把这一行全部删除。下面是一些程序示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_nan.dropna() <span class="comment">#默认为按行删除，且只要一行内有一个NaN就把该行全部删除</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Nevada</th>
      <th>Ohio</th>
      <th>New York</th>
      <th>Denver</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2003</th>
      <td>3.3</td>
      <td>3.6</td>
      <td>3.5</td>
      <td>1.5</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_nan.dropna(how=<span class="string">&#x27;all&#x27;</span>) <span class="comment">#可以传入how=&#x27;all&#x27;参数，这样只有一行全部为NaN时才会删除该行</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Nevada</th>
      <th>Ohio</th>
      <th>New York</th>
      <th>Denver</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2000</th>
      <td>NaN</td>
      <td>1.5</td>
      <td>NaN</td>
      <td>0.5</td>
    </tr>
    <tr>
      <th>2001</th>
      <td>2.4</td>
      <td>1.7</td>
      <td>NaN</td>
      <td>1.1</td>
    </tr>
    <tr>
      <th>2002</th>
      <td>2.9</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>2.1</td>
    </tr>
    <tr>
      <th>2003</th>
      <td>3.3</td>
      <td>3.6</td>
      <td>3.5</td>
      <td>1.5</td>
    </tr>
    <tr>
      <th>2004</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>5.7</td>
      <td>0.9</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_nan.dropna(axis=<span class="number">1</span>, thresh=<span class="number">3</span>) <span class="comment">#可以通过设置axis参数，设定删除操作是对行还是对列进行。thresh参数可以用来指定当某一行或者某一列的非空元素大于等于多少时保留</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Nevada</th>
      <th>Ohio</th>
      <th>Denver</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2000</th>
      <td>NaN</td>
      <td>1.5</td>
      <td>0.5</td>
    </tr>
    <tr>
      <th>2001</th>
      <td>2.4</td>
      <td>1.7</td>
      <td>1.1</td>
    </tr>
    <tr>
      <th>2002</th>
      <td>2.9</td>
      <td>NaN</td>
      <td>2.1</td>
    </tr>
    <tr>
      <th>2003</th>
      <td>3.3</td>
      <td>3.6</td>
      <td>1.5</td>
    </tr>
    <tr>
      <th>2004</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>0.9</td>
    </tr>
    <tr>
      <th>2005</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<p>要对缺失的数据进行填补，可以使用<code>fillna</code>函数。这一函数支持传入不同类型的参数，从而进行不同方法的填补。函数的返回值是一个新的变量，不改变原变量，如果要对原变量直接修改可以传入<code>inplace=True</code>参数。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_nan.fillna(dataframe_nan.mean()) <span class="comment">#传入一个Series，每列中的缺失值会根据Series中对应的值来进行填补，如果在Series中找不到对应的值则仍为NaN。如果传入一个dict，也按照类似的策略进行填补。需要注意，这种方法不支持按行索引的填补方式。此处的示例为使用每列数据的平均值来进行填补。</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Nevada</th>
      <th>Ohio</th>
      <th>New York</th>
      <th>Denver</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2000</th>
      <td>2.866667</td>
      <td>1.500000</td>
      <td>4.6</td>
      <td>0.50</td>
    </tr>
    <tr>
      <th>2001</th>
      <td>2.400000</td>
      <td>1.700000</td>
      <td>4.6</td>
      <td>1.10</td>
    </tr>
    <tr>
      <th>2002</th>
      <td>2.900000</td>
      <td>2.266667</td>
      <td>4.6</td>
      <td>2.10</td>
    </tr>
    <tr>
      <th>2003</th>
      <td>3.300000</td>
      <td>3.600000</td>
      <td>3.5</td>
      <td>1.50</td>
    </tr>
    <tr>
      <th>2004</th>
      <td>2.866667</td>
      <td>2.266667</td>
      <td>5.7</td>
      <td>0.90</td>
    </tr>
    <tr>
      <th>2005</th>
      <td>2.866667</td>
      <td>2.266667</td>
      <td>4.6</td>
      <td>1.22</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_nan.fillna(<span class="number">0</span>) <span class="comment">#将每个缺失值填补为传入的数值</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Nevada</th>
      <th>Ohio</th>
      <th>New York</th>
      <th>Denver</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2000</th>
      <td>0.0</td>
      <td>1.5</td>
      <td>0.0</td>
      <td>0.5</td>
    </tr>
    <tr>
      <th>2001</th>
      <td>2.4</td>
      <td>1.7</td>
      <td>0.0</td>
      <td>1.1</td>
    </tr>
    <tr>
      <th>2002</th>
      <td>2.9</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>2.1</td>
    </tr>
    <tr>
      <th>2003</th>
      <td>3.3</td>
      <td>3.6</td>
      <td>3.5</td>
      <td>1.5</td>
    </tr>
    <tr>
      <th>2004</th>
      <td>0.0</td>
      <td>0.0</td>
      <td>5.7</td>
      <td>0.9</td>
    </tr>
    <tr>
      <th>2005</th>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_nan.fillna(method=<span class="string">&#x27;ffill&#x27;</span>,limit=<span class="number">1</span>) <span class="comment">#使用向上或向下复制的方式进行填补，limit参数规定了向上或向下复制的最大次数</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Nevada</th>
      <th>Ohio</th>
      <th>New York</th>
      <th>Denver</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2000</th>
      <td>NaN</td>
      <td>1.5</td>
      <td>NaN</td>
      <td>0.5</td>
    </tr>
    <tr>
      <th>2001</th>
      <td>2.4</td>
      <td>1.7</td>
      <td>NaN</td>
      <td>1.1</td>
    </tr>
    <tr>
      <th>2002</th>
      <td>2.9</td>
      <td>1.7</td>
      <td>NaN</td>
      <td>2.1</td>
    </tr>
    <tr>
      <th>2003</th>
      <td>3.3</td>
      <td>3.6</td>
      <td>3.5</td>
      <td>1.5</td>
    </tr>
    <tr>
      <th>2004</th>
      <td>3.3</td>
      <td>3.6</td>
      <td>5.7</td>
      <td>0.9</td>
    </tr>
    <tr>
      <th>2005</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>5.7</td>
      <td>0.9</td>
    </tr>
  </tbody>
</table>
</div>
<h2 id="除去重复数据"><a class="markdownIt-Anchor" href="#除去重复数据"></a> 除去重复数据</h2>
<p><code>drop_duplicates()</code>函数可以删除掉一个series或dataframe中的重复行。默认条件下，<code>drop_duplicates()</code>函数只会删除一行的所有元素都相同的多余行。如果想基于某些特定的行作为判断标准，需要传入一个以列名称构成的list作为参数。同时，默认条件下函数会保留第一个发现的行，如果想取最后一个发现的行，需要传入<code>keep='last'</code>参数。</p>
<p>下面是一些使用示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_duplicate=pd.DataFrame(&#123;<span class="string">&#x27;k1&#x27;</span>: [<span class="string">&#x27;one&#x27;</span>] * <span class="number">3</span> + [<span class="string">&#x27;two&#x27;</span>] * <span class="number">4</span>, <span class="string">&#x27;k2&#x27;</span>: [<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>]&#125;)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_duplicate</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>k1</th>
      <th>k2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>one</td>
      <td>1</td>
    </tr>
    <tr>
      <th>1</th>
      <td>one</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <td>one</td>
      <td>2</td>
    </tr>
    <tr>
      <th>3</th>
      <td>two</td>
      <td>3</td>
    </tr>
    <tr>
      <th>4</th>
      <td>two</td>
      <td>3</td>
    </tr>
    <tr>
      <th>5</th>
      <td>two</td>
      <td>4</td>
    </tr>
    <tr>
      <th>6</th>
      <td>two</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_duplicate.duplicated() <span class="comment">#生成一个布尔类型的Series，表示每行是否为重复行</span></span><br></pre></td></tr></table></figure>
<pre><code>0    False
1     True
2    False
3    False
4     True
5    False
6     True
dtype: bool
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_duplicate.drop_duplicates() <span class="comment">#丢掉重复数据，默认保留第一个发现的行</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>k1</th>
      <th>k2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>one</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <td>one</td>
      <td>2</td>
    </tr>
    <tr>
      <th>3</th>
      <td>two</td>
      <td>3</td>
    </tr>
    <tr>
      <th>5</th>
      <td>two</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_duplicate.drop_duplicates([<span class="string">&#x27;k1&#x27;</span>]) <span class="comment">#以名为&#x27;k1&#x27;的列作为判断标准，只要k1这一列的数据重复便视作是重复行</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>k1</th>
      <th>k2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>one</td>
      <td>1</td>
    </tr>
    <tr>
      <th>3</th>
      <td>two</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_duplicate.drop_duplicates([<span class="string">&#x27;k1&#x27;</span>],keep=<span class="string">&#x27;last&#x27;</span>) <span class="comment">#保留重复数据的最后一个</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>k1</th>
      <th>k2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2</th>
      <td>one</td>
      <td>2</td>
    </tr>
    <tr>
      <th>6</th>
      <td>two</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
</div>
<h2 id="函数与映射-2"><a class="markdownIt-Anchor" href="#函数与映射-2"></a> 函数与映射</h2>
<p><code>map()</code>函数支持传入一个函数或者dict变量，从而对一个Series中的所有数据做映射，得到转换后的数据。注意这一操作不能对DataFrame进行。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_map = pd.DataFrame(&#123;<span class="string">&#x27;food&#x27;</span>: [<span class="string">&#x27;bacon&#x27;</span>, <span class="string">&#x27;pulled pork&#x27;</span>, <span class="string">&#x27;bacon&#x27;</span>, <span class="string">&#x27;Pastrami&#x27;</span>,<span class="string">&#x27;corned beef&#x27;</span>, <span class="string">&#x27;Bacon&#x27;</span>, <span class="string">&#x27;pastrami&#x27;</span>, <span class="string">&#x27;honey ham&#x27;</span>, <span class="string">&#x27;nova lox&#x27;</span>],<span class="string">&#x27;ounces&#x27;</span>: [<span class="number">4</span>, <span class="number">3</span>, <span class="number">12</span>, <span class="number">6</span>, <span class="number">7.5</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>]&#125;)</span><br><span class="line">meat_to_animal = &#123;<span class="string">&#x27;bacon&#x27;</span>: <span class="string">&#x27;pig&#x27;</span>,<span class="string">&#x27;pulled pork&#x27;</span>: <span class="string">&#x27;pig&#x27;</span>,<span class="string">&#x27;pastrami&#x27;</span>: <span class="string">&#x27;cow&#x27;</span>,<span class="string">&#x27;corned beef&#x27;</span>: <span class="string">&#x27;cow&#x27;</span>,<span class="string">&#x27;honey ham&#x27;</span>: <span class="string">&#x27;pig&#x27;</span>,<span class="string">&#x27;nova lox&#x27;</span>: <span class="string">&#x27;salmon&#x27;</span>&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_map</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>food</th>
      <th>ounces</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>bacon</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>pulled pork</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>bacon</td>
      <td>12.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Pastrami</td>
      <td>6.0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>corned beef</td>
      <td>7.5</td>
    </tr>
    <tr>
      <th>5</th>
      <td>Bacon</td>
      <td>8.0</td>
    </tr>
    <tr>
      <th>6</th>
      <td>pastrami</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>7</th>
      <td>honey ham</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>8</th>
      <td>nova lox</td>
      <td>6.0</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_map[<span class="string">&#x27;animal&#x27;</span>]=dataframe_map[<span class="string">&#x27;food&#x27;</span>].map(str.lower).map(meat_to_animal) <span class="comment">#先使用函数进行映射，再使用dict进行映射</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_map</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>food</th>
      <th>ounces</th>
      <th>animal</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>bacon</td>
      <td>4.0</td>
      <td>pig</td>
    </tr>
    <tr>
      <th>1</th>
      <td>pulled pork</td>
      <td>3.0</td>
      <td>pig</td>
    </tr>
    <tr>
      <th>2</th>
      <td>bacon</td>
      <td>12.0</td>
      <td>pig</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Pastrami</td>
      <td>6.0</td>
      <td>cow</td>
    </tr>
    <tr>
      <th>4</th>
      <td>corned beef</td>
      <td>7.5</td>
      <td>cow</td>
    </tr>
    <tr>
      <th>5</th>
      <td>Bacon</td>
      <td>8.0</td>
      <td>pig</td>
    </tr>
    <tr>
      <th>6</th>
      <td>pastrami</td>
      <td>3.0</td>
      <td>cow</td>
    </tr>
    <tr>
      <th>7</th>
      <td>honey ham</td>
      <td>5.0</td>
      <td>pig</td>
    </tr>
    <tr>
      <th>8</th>
      <td>nova lox</td>
      <td>6.0</td>
      <td>salmon</td>
    </tr>
  </tbody>
</table>
</div>
<h2 id="数据替换"><a class="markdownIt-Anchor" href="#数据替换"></a> 数据替换</h2>
<p>使用<code>replace</code>函数，可以对Series或者DataFrame中的某些值进行替换。<code>replace</code>函数可以传入两个参数，第一个代表需要替换的值，可以是一个值，也可以是一个list；第二个代表要替换成的值，可以是一个值，也可以是一个与第一个参数大小相同的list。也或者是只传入一个dict作为参数。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_replace=dataframe_map</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_replace</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>food</th>
      <th>ounces</th>
      <th>animal</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>bacon</td>
      <td>4.0</td>
      <td>pig</td>
    </tr>
    <tr>
      <th>1</th>
      <td>pulled pork</td>
      <td>3.0</td>
      <td>pig</td>
    </tr>
    <tr>
      <th>2</th>
      <td>bacon</td>
      <td>12.0</td>
      <td>pig</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Pastrami</td>
      <td>6.0</td>
      <td>cow</td>
    </tr>
    <tr>
      <th>4</th>
      <td>corned beef</td>
      <td>7.5</td>
      <td>cow</td>
    </tr>
    <tr>
      <th>5</th>
      <td>Bacon</td>
      <td>8.0</td>
      <td>pig</td>
    </tr>
    <tr>
      <th>6</th>
      <td>pastrami</td>
      <td>3.0</td>
      <td>cow</td>
    </tr>
    <tr>
      <th>7</th>
      <td>honey ham</td>
      <td>5.0</td>
      <td>pig</td>
    </tr>
    <tr>
      <th>8</th>
      <td>nova lox</td>
      <td>6.0</td>
      <td>salmon</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_replace.replace(<span class="string">&#x27;pig&#x27;</span>,<span class="string">&#x27;PIG&#x27;</span>) <span class="comment">#传入两个值，一个代表要替换的元素，另一个代表替换后的元素</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>food</th>
      <th>ounces</th>
      <th>animal</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>bacon</td>
      <td>4.0</td>
      <td>PIG</td>
    </tr>
    <tr>
      <th>1</th>
      <td>pulled pork</td>
      <td>3.0</td>
      <td>PIG</td>
    </tr>
    <tr>
      <th>2</th>
      <td>bacon</td>
      <td>12.0</td>
      <td>PIG</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Pastrami</td>
      <td>6.0</td>
      <td>cow</td>
    </tr>
    <tr>
      <th>4</th>
      <td>corned beef</td>
      <td>7.5</td>
      <td>cow</td>
    </tr>
    <tr>
      <th>5</th>
      <td>Bacon</td>
      <td>8.0</td>
      <td>PIG</td>
    </tr>
    <tr>
      <th>6</th>
      <td>pastrami</td>
      <td>3.0</td>
      <td>cow</td>
    </tr>
    <tr>
      <th>7</th>
      <td>honey ham</td>
      <td>5.0</td>
      <td>PIG</td>
    </tr>
    <tr>
      <th>8</th>
      <td>nova lox</td>
      <td>6.0</td>
      <td>salmon</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_replace.replace([<span class="string">&#x27;pig&#x27;</span>,<span class="string">&#x27;bacon&#x27;</span>],[np.nan,<span class="string">&#x27;Bacon&#x27;</span>]) <span class="comment">#传入两个list，按照list中的顺序对应起来进行替换。注意NaN可以参与到替换操作中去</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>food</th>
      <th>ounces</th>
      <th>animal</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Bacon</td>
      <td>4.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>1</th>
      <td>pulled pork</td>
      <td>3.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Bacon</td>
      <td>12.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Pastrami</td>
      <td>6.0</td>
      <td>cow</td>
    </tr>
    <tr>
      <th>4</th>
      <td>corned beef</td>
      <td>7.5</td>
      <td>cow</td>
    </tr>
    <tr>
      <th>5</th>
      <td>Bacon</td>
      <td>8.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>6</th>
      <td>pastrami</td>
      <td>3.0</td>
      <td>cow</td>
    </tr>
    <tr>
      <th>7</th>
      <td>honey ham</td>
      <td>5.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>8</th>
      <td>nova lox</td>
      <td>6.0</td>
      <td>salmon</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_replace.replace(&#123;<span class="number">4.0</span>:<span class="number">-4.0</span>,<span class="number">7.5</span>:<span class="number">-7.5</span>&#125;) <span class="comment">#传入一个dict进行替换，key作为要替换的值，用对应的value作为替换后的值</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>food</th>
      <th>ounces</th>
      <th>animal</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>bacon</td>
      <td>-4.0</td>
      <td>pig</td>
    </tr>
    <tr>
      <th>1</th>
      <td>pulled pork</td>
      <td>3.0</td>
      <td>pig</td>
    </tr>
    <tr>
      <th>2</th>
      <td>bacon</td>
      <td>12.0</td>
      <td>pig</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Pastrami</td>
      <td>6.0</td>
      <td>cow</td>
    </tr>
    <tr>
      <th>4</th>
      <td>corned beef</td>
      <td>-7.5</td>
      <td>cow</td>
    </tr>
    <tr>
      <th>5</th>
      <td>Bacon</td>
      <td>8.0</td>
      <td>pig</td>
    </tr>
    <tr>
      <th>6</th>
      <td>pastrami</td>
      <td>3.0</td>
      <td>cow</td>
    </tr>
    <tr>
      <th>7</th>
      <td>honey ham</td>
      <td>5.0</td>
      <td>pig</td>
    </tr>
    <tr>
      <th>8</th>
      <td>nova lox</td>
      <td>6.0</td>
      <td>salmon</td>
    </tr>
  </tbody>
</table>
</div>
<h2 id="频数统计"><a class="markdownIt-Anchor" href="#频数统计"></a> 频数统计</h2>
<p>Pandas中的<code>cut()</code>函数可以对一个list中的数据按照给定的区间进行分类，从而进一步统计它们的频数。下面为一些使用示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ages=[<span class="number">20</span>, <span class="number">22</span>, <span class="number">25</span>, <span class="number">27</span>, <span class="number">21</span>, <span class="number">23</span>, <span class="number">37</span>, <span class="number">31</span>, <span class="number">61</span>, <span class="number">45</span>, <span class="number">41</span>, <span class="number">32</span>] </span><br><span class="line">bins=[<span class="number">18</span>,<span class="number">25</span>,<span class="number">35</span>,<span class="number">60</span>,<span class="number">100</span>]</span><br><span class="line">cats=pd.cut(ages,bins)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cats <span class="comment">#cut操作得到的变量类型为categorical，包含两个属性。其中一个是labels，为一个list，内容为元素对应的区间编号；另一个是levels，它是一个list，内容为区间。默认条件下形成的区间为左开右闭区间。</span></span><br></pre></td></tr></table></figure>
<pre><code>[(18, 25], (18, 25], (18, 25], (25, 35], (18, 25], ..., (25, 35], (60, 100], (35, 60], (35, 60], (25, 35]]
Length: 12
Categories (4, interval[int64]): [(18, 25] &lt; (25, 35] &lt; (35, 60] &lt; (60, 100]]
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.value_counts(cats) <span class="comment">#借助value_counts函数，可以将categorical类型的变量转化为一个series，series的内容是区间与频数的对应关系</span></span><br></pre></td></tr></table></figure>
<pre><code>(18, 25]     5
(35, 60]     3
(25, 35]     3
(60, 100]    1
dtype: int64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.cut(ages,bins,right=<span class="literal">False</span>) <span class="comment">#可以传入right=False参数，得到左闭右开区间</span></span><br></pre></td></tr></table></figure>
<pre><code>[[18, 25), [18, 25), [25, 35), [25, 35), [18, 25), ..., [25, 35), [60, 100), [35, 60), [35, 60), [25, 35)]
Length: 12
Categories (4, interval[int64]): [[18, 25) &lt; [25, 35) &lt; [35, 60) &lt; [60, 100)]
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">group_names = [<span class="string">&#x27;Youth&#x27;</span>, <span class="string">&#x27;YoungAdult&#x27;</span>, <span class="string">&#x27;MiddleAged&#x27;</span>, <span class="string">&#x27;Senior&#x27;</span>]</span><br><span class="line">pd.cut(ages,bins,labels=group_names) <span class="comment">#可以使用labels参数，这个参数接收一个list，list的大小与区间数相等，其中的内容为区间的名称。这样在输出时，区间会被自动替换为对应的名称</span></span><br></pre></td></tr></table></figure>
<pre><code>[Youth, Youth, Youth, YoungAdult, Youth, ..., YoungAdult, Senior, MiddleAged, MiddleAged, YoungAdult]
Length: 12
Categories (4, object): [Youth &lt; YoungAdult &lt; MiddleAged &lt; Senior]
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.cut(ages,<span class="number">4</span>,precision=<span class="number">2</span>) <span class="comment">#可以传入一个数字，来表示将区间均匀地分成若干等份。函数会自动根据最大和最小值算出区间大小。同时可以传入precision参数表示计算区间大小时的小数点位数。</span></span><br></pre></td></tr></table></figure>
<pre><code>[(19.96, 30.25], (19.96, 30.25], (19.96, 30.25], (19.96, 30.25], (19.96, 30.25], ..., (30.25, 40.5], (50.75, 61.0], (40.5, 50.75], (40.5, 50.75], (30.25, 40.5]]
Length: 12
Categories (4, interval[float64]): [(19.96, 30.25] &lt; (30.25, 40.5] &lt; (40.5, 50.75] &lt; (50.75, 61.0]]
</code></pre>
<p>另一个功能相近的函数为<code>qcut()</code>。这个函数的用法有两种：第一种是传入一个整数，代表将所有元素均分为若干份，然后根据均分结果得到区间范围；第二种是传入一个list，list中的元素为0到1递增的数字，每个数字代表在该分位数处作为一个区间的起点/终点。用法如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data_qcut=np.random.randn(<span class="number">1000</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.qcut(data_qcut,<span class="number">5</span>) <span class="comment">#传入一个数字，表示将所有元素均分成若干个区间</span></span><br></pre></td></tr></table></figure>
<pre><code>[(0.787, 2.964], (-3.3779999999999997, -0.802], (-0.802, -0.226], (-0.802, -0.226], (-3.3779999999999997, -0.802], ..., (-0.802, -0.226], (-0.226, 0.236], (-0.226, 0.236], (0.236, 0.787], (-0.802, -0.226]]
Length: 1000
Categories (5, interval[float64]): [(-3.3779999999999997, -0.802] &lt; (-0.802, -0.226] &lt; (-0.226, 0.236] &lt; (0.236, 0.787] &lt; (0.787, 2.964]]
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.value_counts(pd.qcut(data_qcut,<span class="number">5</span>))</span><br></pre></td></tr></table></figure>
<pre><code>(0.787, 2.964]                   200
(0.236, 0.787]                   200
(-0.226, 0.236]                  200
(-0.802, -0.226]                 200
(-3.3779999999999997, -0.802]    200
dtype: int64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.qcut(data_qcut,[<span class="number">0</span>,<span class="number">0.1</span>,<span class="number">0.5</span>,<span class="number">0.9</span>,<span class="number">1</span>]) <span class="comment">#传入list，使用list中的值作为分位数来划分区间</span></span><br></pre></td></tr></table></figure>
<pre><code>[(1.267, 2.964], (-1.179, -0.0053], (-1.179, -0.0053], (-1.179, -0.0053], (-1.179, -0.0053], ..., (-1.179, -0.0053], (-1.179, -0.0053], (-0.0053, 1.267], (-0.0053, 1.267], (-1.179, -0.0053]]
Length: 1000
Categories (4, interval[float64]): [(-3.3779999999999997, -1.179] &lt; (-1.179, -0.0053] &lt; (-0.0053, 1.267] &lt; (1.267, 2.964]]
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.value_counts(pd.qcut(data_qcut,[<span class="number">0</span>,<span class="number">0.1</span>,<span class="number">0.5</span>,<span class="number">0.9</span>,<span class="number">1</span>]))</span><br></pre></td></tr></table></figure>
<pre><code>(-0.0053, 1.267]                 400
(-1.179, -0.0053]                400
(1.267, 2.964]                   100
(-3.3779999999999997, -1.179]    100
dtype: int64
</code></pre>
<h2 id="dummy变量"><a class="markdownIt-Anchor" href="#dummy变量"></a> Dummy变量</h2>
<p>在Series或DataFrame中，某些列可能为类别型的变量。而在机器学习等任务中，类别型的变量可能无法被识别，因此需要将其转换为数字。Pandas的<code>get_dummies()</code>函数便可以完成这一功能。</p>
<p><code>get_dummies</code>需要将一个Series或者DataFrame作为输入。假设某一列中的数据含有k个类别，在这一操作之后会生成出k列。其中每一列都代表k种类别中的某一个，全部用0或1填充，某一列为1则代表这个类别是原始列中这一行的数据。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_dummy=pd.DataFrame(&#123;<span class="string">&#x27;key&#x27;</span>: [<span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>],<span class="string">&#x27;data1&#x27;</span>: range(<span class="number">6</span>),<span class="string">&#x27;key2&#x27;</span>: [<span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;d&#x27;</span>]&#125;)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_dummy</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>key</th>
      <th>data1</th>
      <th>key2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>b</td>
      <td>0</td>
      <td>b</td>
    </tr>
    <tr>
      <th>1</th>
      <td>b</td>
      <td>1</td>
      <td>b</td>
    </tr>
    <tr>
      <th>2</th>
      <td>a</td>
      <td>2</td>
      <td>a</td>
    </tr>
    <tr>
      <th>3</th>
      <td>c</td>
      <td>3</td>
      <td>c</td>
    </tr>
    <tr>
      <th>4</th>
      <td>a</td>
      <td>4</td>
      <td>a</td>
    </tr>
    <tr>
      <th>5</th>
      <td>b</td>
      <td>5</td>
      <td>d</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.get_dummies(dataframe_dummy) <span class="comment">#传入DataFrame时，这一函数会自动将类别型的列全部转换为dummy变量，同时自动为这些列构造列名。</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>data1</th>
      <th>key_a</th>
      <th>key_b</th>
      <th>key_c</th>
      <th>key2_a</th>
      <th>key2_b</th>
      <th>key2_c</th>
      <th>key2_d</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>4</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>5</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.get_dummies(dataframe_dummy[<span class="string">&#x27;key&#x27;</span>]) <span class="comment">#如果传入的是一个Series，由于Series本身没有列名，因此默认会使用类别型变量自身的名称作为列名。</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.get_dummies(dataframe_dummy[<span class="string">&#x27;key&#x27;</span>],prefix=<span class="string">&#x27;Key&#x27;</span>)<span class="comment">#可以手动传入prefix参数，作为列名的前缀。</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Key_a</th>
      <th>Key_b</th>
      <th>Key_c</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<h2 id="字符串的处理"><a class="markdownIt-Anchor" href="#字符串的处理"></a> 字符串的处理</h2>
<p>Pandas中提供了一些矢量化的字符串函数，可以用来批量处理Series或者DataFrame中的字符串。包括：</p>
<ul>
<li>cat：将字符串拼接起来，并可以使用分隔符</li>
<li>contains：判断字符串是否含有特定的子串</li>
<li>count：判断特定的子串出现的次数</li>
<li>endswith/startswith：是否以某个特定的子串作为开头/结尾</li>
<li>findall：找到子串或者正则表达式出现过的所有地方</li>
<li>get：对字符串做索引</li>
<li>join：使用分隔符将字符串拼接起来</li>
<li>len：计算字符串长度</li>
<li>lower/upper：转换为大写/小写</li>
<li>match：使用正则表达式进行匹配，找到匹配的部分</li>
<li>pad：在字符串的左侧/右侧/双侧(等价于center函数)添加空格</li>
<li>repeat：将字符串重复若干次</li>
<li>replace：将某个子串或者正则表达式匹配到的部分替换为其他字符串</li>
<li>slice：将字符串进行分割</li>
<li>split：根据某个分隔符或者正则表达式对字符串进行分割</li>
<li>strip/rstrip/lstrip：切掉空格，然后替换成换行</li>
</ul>
<p>这些用法与Python自带的字符串处理函数或是正则表达式处理函数类似，此处不再赘述。</p>
<h1 id="多层index"><a class="markdownIt-Anchor" href="#多层index"></a> 多层index</h1>
<p>Pandas中实现了一种叫做MultiIndex的类，允许Series和DataFrame有多层的index。</p>
<p>下面是Series中使用多层index的一些相关操作：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_multiIndex=pd.Series(np.random.randn(<span class="number">10</span>),index=[[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;d&#x27;</span>],[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>]]) <span class="comment">#创建一个具有多重index的Series</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_multiIndex</span><br></pre></td></tr></table></figure>
<pre><code>a  1    2.862886
   2    1.973711
   3    1.367350
b  1    1.245817
   2    1.270334
   3    0.872359
c  1    0.651468
   2   -0.454727
d  2    1.249058
   3    0.591254
dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_multiIndex.index <span class="comment">#此时，访问其index属性，则会得到一个MultiIndex</span></span><br></pre></td></tr></table></figure>
<pre><code>MultiIndex([('a', 1),
            ('a', 2),
            ('a', 3),
            ('b', 1),
            ('b', 2),
            ('b', 3),
            ('c', 1),
            ('c', 2),
            ('d', 2),
            ('d', 3)],
           )
</code></pre>
<p>MultiIndex可以通过传入嵌套数组来创建：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.MultiIndex.from_arrays([[<span class="string">&#x27;Ohio&#x27;</span>, <span class="string">&#x27;Ohio&#x27;</span>, <span class="string">&#x27;Colorado&#x27;</span>], [<span class="string">&#x27;Green&#x27;</span>, <span class="string">&#x27;Red&#x27;</span>, <span class="string">&#x27;Green&#x27;</span>]],names=[<span class="string">&#x27;state&#x27;</span>,<span class="string">&#x27;color&#x27;</span>]) <span class="comment">#多层index中的每一层都可以有一个名字</span></span><br></pre></td></tr></table></figure>
<pre><code>MultiIndex([(    'Ohio', 'Green'),
            (    'Ohio',   'Red'),
            ('Colorado', 'Green')],
           names=['state', 'color'])
</code></pre>
<p>对具有多重index的Series或者DataFrame，在做索引操作时需要同时传入内外层的索引元素。因此，这与单层index的索引操作有些不同，下面以例子进行说明：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_multiIndex[<span class="string">&#x27;b&#x27;</span>] <span class="comment">#如果仅使用外层的index进行索引，则可以省略掉内层的index</span></span><br></pre></td></tr></table></figure>
<pre><code>1    1.245817
2    1.270334
3    0.872359
dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_multiIndex[(<span class="string">&#x27;b&#x27;</span>,<span class="number">1</span>)] <span class="comment">#同时使用两层index进行索引，等同于语句series_multiIndex[&#x27;b&#x27;,1]</span></span><br></pre></td></tr></table></figure>
<pre><code>1.2458169817277376
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_multiIndex[[<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;d&#x27;</span>]] <span class="comment">#在传入list进行索引时，就不能再使用内层的索引。如series_multiIndex[[&#x27;b&#x27;,&#x27;d&#x27;],[2,3]]便为错误操作</span></span><br></pre></td></tr></table></figure>
<pre><code>b  1    1.245817
   2    1.270334
   3    0.872359
d  2    1.249058
   3    0.591254
dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_multiIndex[:,<span class="number">1</span>] <span class="comment">#仅使用内层进行索引，需要用:来指明使用外层的全部索引。如果不指定外层，直接用内层的index进行索引就会报错。但是需要注意此时内层的索引不能使用list，例如series_multiIndex[:,[1,2]]的操作便是错误的。</span></span><br></pre></td></tr></table></figure>
<pre><code>a    2.862886
b    1.245817
c    0.651468
dtype: float64
</code></pre>
<p>注意：在MultiIndex中使用整数序号进行索引时会比较容易混淆。其基本规则可以大致描述为，多重index在使用整数索引时，会优先匹配index中是否包含这个整数，如果没有则将其作为序号进行索引。下面进行详细的说明：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_multiIndex[<span class="number">1</span>] <span class="comment">#在本例中，这一索引语句是按照元素的排列顺序来索引。</span></span><br></pre></td></tr></table></figure>
<pre><code>1.973710915404737
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_multiIndex2=pd.Series(np.random.randn(<span class="number">10</span>),index=[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>],[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;d&#x27;</span>]]) </span><br><span class="line">series_multiIndex2[<span class="number">1</span>] <span class="comment">#此时最外层的index为整数，因此在索引时是使用外层index进行索引的</span></span><br></pre></td></tr></table></figure>
<pre><code>a   -0.041453
b   -0.329131
c   -0.776732
dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_multiIndex2[<span class="number">4</span>] <span class="comment">#由于外层index中不包含4，因此按照元素的排列顺序，索引第5个元素。但是在单层的index中，如果使用不包含在index中的整数进行索引则会报错。</span></span><br></pre></td></tr></table></figure>
<pre><code>0.7369307651244501
</code></pre>
<p>对于使用两层index的Series来说，如果要解除多层index，可以使用<code>unstack()</code>函数；它相应的反操作为<code>stack()</code>。<code>stack</code>操作的实质是将某个columns“旋转”至index，而<code>unstack</code>操作则是将某个index“旋转”至columns。</p>
<p>此处有一些简单的示例，在下面的内容中还会对这一操作进行进一步的分析。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_multiIndex.unstack() <span class="comment">#对一个Series做unstack操作，会得到一个DataFrame。默认对最里层做unstack操作。</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>1</th>
      <th>2</th>
      <th>3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>a</th>
      <td>2.862886</td>
      <td>1.973711</td>
      <td>1.367350</td>
    </tr>
    <tr>
      <th>b</th>
      <td>1.245817</td>
      <td>1.270334</td>
      <td>0.872359</td>
    </tr>
    <tr>
      <th>c</th>
      <td>0.651468</td>
      <td>-0.454727</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>d</th>
      <td>NaN</td>
      <td>1.249058</td>
      <td>0.591254</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_multiIndex.unstack(level=<span class="number">0</span>) <span class="comment">#如果想改变unstack操作使用的index，可以传入level参数指定使用哪一层的index</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
      <th>d</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>2.862886</td>
      <td>1.245817</td>
      <td>0.651468</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1.973711</td>
      <td>1.270334</td>
      <td>-0.454727</td>
      <td>1.249058</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1.367350</td>
      <td>0.872359</td>
      <td>NaN</td>
      <td>0.591254</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_multiIndex.unstack(level=<span class="number">0</span>).stack() <span class="comment">#与上面的结果对比，可以看出stack()操作默认是将columns“旋转”到index的最里层。unstack()操作也是类似的规则，此处不再用程序展示。如果有多层的index，也可以传入level参数设置传入到哪一层的下面。</span></span><br></pre></td></tr></table></figure>
<pre><code>1  a    2.862886
   b    1.245817
   c    0.651468
2  a    1.973711
   b    1.270334
   c   -0.454727
   d    1.249058
3  a    1.367350
   b    0.872359
   d    0.591254
dtype: float64
</code></pre>
<p>如果要改变层级顺序，可以使用swaplevel函数，在交换前后，Series中的元素顺序保持不变：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_multiIndex.swaplevel(<span class="number">0</span>,<span class="number">1</span>) <span class="comment">#需要传入两个整数指定要交换的两层。如果每一层有自己的名字，也可以传入名字来指定要交换的层</span></span><br></pre></td></tr></table></figure>
<pre><code>1  a    2.862886
2  a    1.973711
3  a    1.367350
1  b    1.245817
2  b    1.270334
3  b    0.872359
1  c    0.651468
2  c   -0.454727
   d    1.249058
3  d    0.591254
dtype: float64
</code></pre>
<p>在部分统计函数中，可以添加level参数，这样便可以根据指定的level做统计：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_multiIndex.sum(level=<span class="number">1</span>) </span><br></pre></td></tr></table></figure>
<pre><code>1    4.760171
2    4.038376
3    2.830964
dtype: float64
</code></pre>
<p>对于DataFrame来说，index和columns都可以使用MultiIndex。下面为一些使用示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_multiIndex= pd.DataFrame(np.arange(<span class="number">12</span>).reshape((<span class="number">4</span>, <span class="number">3</span>)),index=[[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;b&#x27;</span>], [<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>]],columns=[[<span class="string">&#x27;Ohio&#x27;</span>, <span class="string">&#x27;Ohio&#x27;</span>, <span class="string">&#x27;Colorado&#x27;</span>],[<span class="string">&#x27;Green&#x27;</span>, <span class="string">&#x27;Red&#x27;</span>, <span class="string">&#x27;Green&#x27;</span>]])</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_multiIndex</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead tr th {
        text-align: left;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr>
      <th></th>
      <th></th>
      <th colspan="2" halign="left">Ohio</th>
      <th>Colorado</th>
    </tr>
    <tr>
      <th></th>
      <th></th>
      <th>Green</th>
      <th>Red</th>
      <th>Green</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th rowspan="2" valign="top">a</th>
      <th>1</th>
      <td>0</td>
      <td>1</td>
      <td>2</td>
    </tr>
    <tr>
      <th>2</th>
      <td>3</td>
      <td>4</td>
      <td>5</td>
    </tr>
    <tr>
      <th rowspan="2" valign="top">b</th>
      <th>1</th>
      <td>6</td>
      <td>7</td>
      <td>8</td>
    </tr>
    <tr>
      <th>2</th>
      <td>9</td>
      <td>10</td>
      <td>11</td>
    </tr>
  </tbody>
</table>
</div>
<p>在DataFrame中，可以使用<code>set_index</code>函数指定某个或某些列来作为index；它的反操作是<code>reset_index</code>，可以将某个或某些index转化为列插入进DataFrame中去。下面是一些实例:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_multiIndex2=pd.DataFrame(&#123;<span class="string">&#x27;a&#x27;</span>: range(<span class="number">7</span>), <span class="string">&#x27;b&#x27;</span>: range(<span class="number">7</span>, <span class="number">0</span>, <span class="number">-1</span>),<span class="string">&#x27;c&#x27;</span>: [<span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;two&#x27;</span>, <span class="string">&#x27;two&#x27;</span>, <span class="string">&#x27;two&#x27;</span>, <span class="string">&#x27;two&#x27;</span>],<span class="string">&#x27;d&#x27;</span>: [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]&#125;,index=[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;g&#x27;</span>])</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_multiIndex2</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
      <th>d</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>a</th>
      <td>0</td>
      <td>7</td>
      <td>one</td>
      <td>0</td>
    </tr>
    <tr>
      <th>b</th>
      <td>1</td>
      <td>6</td>
      <td>one</td>
      <td>1</td>
    </tr>
    <tr>
      <th>c</th>
      <td>2</td>
      <td>5</td>
      <td>one</td>
      <td>2</td>
    </tr>
    <tr>
      <th>d</th>
      <td>3</td>
      <td>4</td>
      <td>two</td>
      <td>0</td>
    </tr>
    <tr>
      <th>e</th>
      <td>4</td>
      <td>3</td>
      <td>two</td>
      <td>1</td>
    </tr>
    <tr>
      <th>f</th>
      <td>5</td>
      <td>2</td>
      <td>two</td>
      <td>2</td>
    </tr>
    <tr>
      <th>g</th>
      <td>6</td>
      <td>1</td>
      <td>two</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_multiIndex2.set_index([<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>]) <span class="comment">#默认情况下，选作index的列在生成的新DataFrame中不会显示。如果传入一个list，那么多层index的层级顺序是按照list中的元素顺序从外到里。同时，这些列之前的列名也会自动被转化为index对应的名称。注意：这一操作会覆盖掉之前的index。</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th></th>
      <th>a</th>
      <th>b</th>
    </tr>
    <tr>
      <th>c</th>
      <th>d</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th rowspan="3" valign="top">one</th>
      <th>0</th>
      <td>0</td>
      <td>7</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>6</td>
    </tr>
    <tr>
      <th>2</th>
      <td>2</td>
      <td>5</td>
    </tr>
    <tr>
      <th rowspan="4" valign="top">two</th>
      <th>0</th>
      <td>3</td>
      <td>4</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2</th>
      <td>5</td>
      <td>2</td>
    </tr>
    <tr>
      <th>3</th>
      <td>6</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_multiIndex2.set_index([<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;c&#x27;</span>],drop=<span class="literal">False</span>) <span class="comment">#传入drop=False，变为index的两列便不会被删除。</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
      <th>d</th>
    </tr>
    <tr>
      <th>d</th>
      <th>c</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <th>one</th>
      <td>0</td>
      <td>7</td>
      <td>one</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <th>one</th>
      <td>1</td>
      <td>6</td>
      <td>one</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <th>one</th>
      <td>2</td>
      <td>5</td>
      <td>one</td>
      <td>2</td>
    </tr>
    <tr>
      <th>0</th>
      <th>two</th>
      <td>3</td>
      <td>4</td>
      <td>two</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <th>two</th>
      <td>4</td>
      <td>3</td>
      <td>two</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <th>two</th>
      <td>5</td>
      <td>2</td>
      <td>two</td>
      <td>2</td>
    </tr>
    <tr>
      <th>3</th>
      <th>two</th>
      <td>6</td>
      <td>1</td>
      <td>two</td>
      <td>3</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_multiIndex.reset_index([<span class="number">0</span>,<span class="number">1</span>]) <span class="comment">#将index变为列插入到DataFrame中去。如果之前的index有名字，那么这个名字会变为列名，否则会为生成的列自动生成一个名字。需要注意的是，如果原来的columns具有多层，那么新转换得到的列名位于最外层，且它的内层为空。</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead tr th {
        text-align: left;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr>
      <th></th>
      <th>level_0</th>
      <th>level_1</th>
      <th colspan="2" halign="left">Ohio</th>
      <th>Colorado</th>
    </tr>
    <tr>
      <th></th>
      <th></th>
      <th></th>
      <th>Green</th>
      <th>Red</th>
      <th>Green</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>a</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>2</td>
    </tr>
    <tr>
      <th>1</th>
      <td>a</td>
      <td>2</td>
      <td>3</td>
      <td>4</td>
      <td>5</td>
    </tr>
    <tr>
      <th>2</th>
      <td>b</td>
      <td>1</td>
      <td>6</td>
      <td>7</td>
      <td>8</td>
    </tr>
    <tr>
      <th>3</th>
      <td>b</td>
      <td>2</td>
      <td>9</td>
      <td>10</td>
      <td>11</td>
    </tr>
  </tbody>
</table>
</div>
<h1 id="数据的重构与组合"><a class="markdownIt-Anchor" href="#数据的重构与组合"></a> 数据的重构与组合</h1>
<h2 id="按列合并"><a class="markdownIt-Anchor" href="#按列合并"></a> 按列合并</h2>
<p>merge函数可以将两个DataFrame按列合并起来，这一函数要求在两个DataFrame中各自选择一列，然后按照这一列中元素的对应关系，将两个DataFrame合并为一个。默认情况下，函数会自己选择名称相同的列。</p>
<p>默认情况下，只有当某个元素在两个DataFrame里面选中的列内都出现时（即交集），最终合并得到的DataFrame中才会包含有相应元素；只出现在其中一个DataFrame中的元素会被舍去。</p>
<p><code>merge()</code>函数支持传入下面的可选参数：</p>
<ul>
<li>left：以左侧的DataFrame为基准进行合并</li>
<li>right：以右侧的DataFrame为基准进行合并</li>
<li>how：可以选择’inner’，‘outer’，'left’和’right’四种模式。四种模式的意义如下：
<ul>
<li>inner：左右两侧元素保留交集部分（默认操作）</li>
<li>outer：左右两侧元素全部保留</li>
<li>left：保留仅出现在左边的元素，舍去仅出现在右边的元素</li>
<li>right：保留仅出现在右边的元素，舍去仅出现在左边的元素</li>
</ul>
</li>
<li>on：指定参与合并操作的列名</li>
<li>left_on：指定左侧DataFrame中参与合并操作的列名</li>
<li>right_on：指定右侧DataFrame中参与合并操作的列名</li>
<li>left_index：是否使用左侧DataFrame的index参与合并，默认为False</li>
<li>right_index：是否使用右侧DataFrame的index参与合并，默认为False</li>
<li>sort：是否按照参与合并的元素对DataFrame进行排序，默认为True。如果要处理大表格时可以使用False来加快速度</li>
<li>suffixes：传入一个二元的tuple用于区分数据来自于哪一个DataFrame，当出现重名的columns时则会自动在这些columns后面加上后缀。默认值为<code>('_x'和'_y')</code></li>
<li>copy：是否生成原始数据的副本，默认为True</li>
</ul>
<p>下面为一些使用示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_merge1=pd.DataFrame(&#123;<span class="string">&#x27;value&#x27;</span>: [<span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>],<span class="string">&#x27;data1&#x27;</span>: range(<span class="number">7</span>)&#125;)</span><br><span class="line">dataframe_merge2=pd.DataFrame(&#123;<span class="string">&#x27;value&#x27;</span>: [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;d&#x27;</span>],<span class="string">&#x27;data2&#x27;</span>: range(<span class="number">3</span>)&#125;)</span><br><span class="line">pd.merge(dataframe_merge1,dataframe_merge2) <span class="comment">#默认自动选取名称相同的column</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>value</th>
      <th>data1</th>
      <th>data2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>b</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>1</th>
      <td>b</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <td>b</td>
      <td>6</td>
      <td>1</td>
    </tr>
    <tr>
      <th>3</th>
      <td>a</td>
      <td>2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>a</td>
      <td>4</td>
      <td>0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>a</td>
      <td>5</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.merge(dataframe_merge1,dataframe_merge2,on=<span class="string">&#x27;value&#x27;</span>) <span class="comment">#可以传入on参数手动指定merge操作所参考的列，这一操作当两个DataFrame中存在多个名称相同的列时可以避免非期望的结果。</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>value</th>
      <th>data1</th>
      <th>data2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>b</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>1</th>
      <td>b</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <td>b</td>
      <td>6</td>
      <td>1</td>
    </tr>
    <tr>
      <th>3</th>
      <td>a</td>
      <td>2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>a</td>
      <td>4</td>
      <td>0</td>
    </tr>
    <tr>
      <th>5</th>
      <td>a</td>
      <td>5</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.merge(dataframe_merge1,dataframe_merge2,left_on=<span class="string">&#x27;data1&#x27;</span>,right_on=<span class="string">&#x27;data2&#x27;</span>) <span class="comment">#也可以手动指定两个名称不同的列进行合并操作。如果合并之前存在相同列名，会在合并之后将它们区分开</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>value_x</th>
      <th>data1</th>
      <th>value_y</th>
      <th>data2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>b</td>
      <td>0</td>
      <td>a</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>b</td>
      <td>1</td>
      <td>b</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <td>a</td>
      <td>2</td>
      <td>d</td>
      <td>2</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_merge3=pd.DataFrame(&#123;<span class="string">&#x27;key1&#x27;</span>: [<span class="string">&#x27;foo&#x27;</span>, <span class="string">&#x27;foo&#x27;</span>, <span class="string">&#x27;bar&#x27;</span>], <span class="string">&#x27;key2&#x27;</span>: [<span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;two&#x27;</span>, <span class="string">&#x27;one&#x27;</span>], <span class="string">&#x27;lval&#x27;</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]&#125;)</span><br><span class="line">dataframe_merge4=pd.DataFrame(&#123;<span class="string">&#x27;key1&#x27;</span>: [<span class="string">&#x27;foo&#x27;</span>, <span class="string">&#x27;foo&#x27;</span>, <span class="string">&#x27;bar&#x27;</span>, <span class="string">&#x27;bar&#x27;</span>],<span class="string">&#x27;key2&#x27;</span>: [<span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;two&#x27;</span>], <span class="string">&#x27;rval&#x27;</span>: [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]&#125;)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.merge(dataframe_merge3,dataframe_merge4,on=[<span class="string">&#x27;key1&#x27;</span>,<span class="string">&#x27;key2&#x27;</span>],how=<span class="string">&#x27;outer&#x27;</span>) <span class="comment">#on参数可以传入多个列名，代表按照多列进行合并</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>key1</th>
      <th>key2</th>
      <th>lval</th>
      <th>rval</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>foo</td>
      <td>one</td>
      <td>1.0</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>foo</td>
      <td>one</td>
      <td>1.0</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>foo</td>
      <td>two</td>
      <td>2.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>3</th>
      <td>bar</td>
      <td>one</td>
      <td>3.0</td>
      <td>6.0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>bar</td>
      <td>two</td>
      <td>NaN</td>
      <td>7.0</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_merge5=pd.DataFrame(&#123;<span class="string">&#x27;key1&#x27;</span>: [<span class="string">&#x27;Ohio&#x27;</span>, <span class="string">&#x27;Ohio&#x27;</span>, <span class="string">&#x27;Ohio&#x27;</span>, <span class="string">&#x27;Nevada&#x27;</span>, <span class="string">&#x27;Nevada&#x27;</span>], <span class="string">&#x27;key2&#x27;</span>: [<span class="number">2000</span>, <span class="number">2001</span>, <span class="number">2002</span>, <span class="number">2001</span>, <span class="number">2002</span>],<span class="string">&#x27;data&#x27;</span>: np.arange(<span class="number">5.</span>)&#125;)</span><br><span class="line">dataframe_merge6=pd.DataFrame(np.arange(<span class="number">12</span>).reshape((<span class="number">6</span>, <span class="number">2</span>)), index=[[<span class="string">&#x27;Nevada&#x27;</span>, <span class="string">&#x27;Nevada&#x27;</span>, <span class="string">&#x27;Ohio&#x27;</span>, <span class="string">&#x27;Ohio&#x27;</span>, <span class="string">&#x27;Ohio&#x27;</span>, <span class="string">&#x27;Ohio&#x27;</span>], [<span class="number">2001</span>, <span class="number">2000</span>, <span class="number">2000</span>, <span class="number">2000</span>, <span class="number">2001</span>, <span class="number">2002</span>]],columns=[<span class="string">&#x27;event1&#x27;</span>, <span class="string">&#x27;event2&#x27;</span>])</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.merge(dataframe_merge5,dataframe_merge6,left_on=[<span class="string">&#x27;key1&#x27;</span>,<span class="string">&#x27;key2&#x27;</span>],right_index=<span class="literal">True</span>,how=<span class="string">&#x27;outer&#x27;</span>) <span class="comment">#如果是与多层index进行合并，则需要同时传入多个列名，合并完成之后这些index会变为DataFrame中的列</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>key1</th>
      <th>key2</th>
      <th>data</th>
      <th>event1</th>
      <th>event2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Ohio</td>
      <td>2000</td>
      <td>0.0</td>
      <td>4.0</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>0</th>
      <td>Ohio</td>
      <td>2000</td>
      <td>0.0</td>
      <td>6.0</td>
      <td>7.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Ohio</td>
      <td>2001</td>
      <td>1.0</td>
      <td>8.0</td>
      <td>9.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Ohio</td>
      <td>2002</td>
      <td>2.0</td>
      <td>10.0</td>
      <td>11.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Nevada</td>
      <td>2001</td>
      <td>3.0</td>
      <td>0.0</td>
      <td>1.0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Nevada</td>
      <td>2002</td>
      <td>4.0</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Nevada</td>
      <td>2000</td>
      <td>NaN</td>
      <td>2.0</td>
      <td>3.0</td>
    </tr>
  </tbody>
</table>
</div>
<p>与<code>merge()</code>函数功能类似的还有<code>join()</code>函数，用法为：<code>DataFrame1.join(DataFrame2)</code>。<code>join()</code>函数支持传入一个list，代表同时对三个及以上的DataFrame进行合并。<code>join()</code>函数可以使用的参数与<code>merge()</code>函数类似。</p>
<p>由于这两个函数的作用相同，此处不再赘述。</p>
<h2 id="拼接"><a class="markdownIt-Anchor" href="#拼接"></a> 拼接</h2>
<p>Pandas中的<code>concat</code>函数类似于NumPy中的<code>concatenate</code>函数，传入一个由series或dataframe组成的list，将它们拼接在一起。</p>
<p><code>concat</code>函数支持的参数包括：</p>
<ul>
<li>objs：一个包含了Pandas数据类型的list或者dict（必须传入的参数）</li>
<li>axis：进行拼接的方向，默认为行方向（即0）</li>
<li>join：‘inner’或者’outer’其中的一个，默认为’outer’。inner代表只留下index或者columns中的交集部分进行拼接，而outer则代表拼接操作按照并集的方式进行，没有对应元素的使用NaN填充</li>
<li>keys：指明一系列拼接时使用的关键字，它们用于在拼接之后形成多层index，从而区分出数据的来源</li>
<li>levels：如果传入keys参数，levels参数用于指明被用作层级index的哪一层</li>
<li>names：如果使用key或者level参数，设定它们在index中对应的名字</li>
<li>verify_integrity：检查数据是否有重复并报错，默认为False，即允许数据重复</li>
<li>ignore_index：在合并的维度上丢掉原来所有的index，将其重新编号为0至n-1</li>
</ul>
<p>下面是一些使用示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">series_concat1=pd.Series([<span class="number">0</span>,<span class="number">1</span>],index=[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>])</span><br><span class="line">series_concat2=pd.Series([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],index=[<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>])</span><br><span class="line">series_concat3=pd.Series([<span class="number">5</span>,<span class="number">6</span>],index=[<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;g&#x27;</span>])</span><br><span class="line">dataframe_concat1=pd.DataFrame(np.arange(<span class="number">6</span>).reshape(<span class="number">3</span>, <span class="number">2</span>), index=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>],columns=[<span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;two&#x27;</span>])</span><br><span class="line">dataframe_concat2=pd.DataFrame(<span class="number">5</span> + np.arange(<span class="number">4</span>).reshape(<span class="number">2</span>, <span class="number">2</span>), index=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;c&#x27;</span>], columns=[<span class="string">&#x27;three&#x27;</span>, <span class="string">&#x27;four&#x27;</span>])</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.concat([series_concat1,series_concat2,series_concat3]) <span class="comment">#默认按照竖直方向合并</span></span><br></pre></td></tr></table></figure>
<pre><code>a    0
b    1
c    2
d    3
e    4
f    5
g    6
dtype: int64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.concat([series_concat1,series_concat2,series_concat3],axis=<span class="number">1</span>) <span class="comment">#按照水平方向合并，默认采用outer合并方式</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>0</th>
      <th>1</th>
      <th>2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>a</th>
      <td>0.0</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>b</th>
      <td>1.0</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>c</th>
      <td>NaN</td>
      <td>2.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>d</th>
      <td>NaN</td>
      <td>3.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>e</th>
      <td>NaN</td>
      <td>4.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>f</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>g</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>6.0</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.concat([series_concat1,series_concat2,series_concat3],keys=[<span class="string">&#x27;one&#x27;</span>,<span class="string">&#x27;two&#x27;</span>,<span class="string">&#x27;three&#x27;</span>],names=[<span class="string">&#x27;upper&#x27;</span>,<span class="string">&#x27;lower&#x27;</span>]) <span class="comment">#在拼接完成之后将key作为额外的一层index来表示数据来源，并可以传入names为新的index中的每一层进行命名</span></span><br></pre></td></tr></table></figure>
<pre><code>upper  lower
one    a        0
       b        1
two    c        2
       d        3
       e        4
three  f        5
       g        6
dtype: int64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.concat([dataframe_concat1,dataframe_concat2],axis=<span class="number">1</span>,ignore_index=<span class="literal">True</span>) <span class="comment">#合并时忽略掉原有的index，为合并后的DataFrame赋予一个Range类型的index</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>0</th>
      <th>1</th>
      <th>2</th>
      <th>3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>a</th>
      <td>0</td>
      <td>1</td>
      <td>5.0</td>
      <td>6.0</td>
    </tr>
    <tr>
      <th>b</th>
      <td>2</td>
      <td>3</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>c</th>
      <td>4</td>
      <td>5</td>
      <td>7.0</td>
      <td>8.0</td>
    </tr>
  </tbody>
</table>
</div>
<h2 id="填充式合并"><a class="markdownIt-Anchor" href="#填充式合并"></a> 填充式合并</h2>
<p>Pandas中含有一个<code>x.combine_first(y)</code>函数，可以将y中有而x中没有的数据加入到x中，同时x中原有的数据不做任何修改：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_combine1=pd.DataFrame(&#123;<span class="string">&#x27;a&#x27;</span>: [<span class="number">1.</span>, np.nan, <span class="number">5.</span>, np.nan],<span class="string">&#x27;b&#x27;</span>: [np.nan, <span class="number">2.</span>, np.nan, <span class="number">6.</span>],<span class="string">&#x27;c&#x27;</span>: range(<span class="number">2</span>, <span class="number">18</span>, <span class="number">4</span>)&#125;)</span><br><span class="line">dataframe_combine2=pd.DataFrame(&#123;<span class="string">&#x27;a&#x27;</span>: [<span class="number">5.</span>, <span class="number">4.</span>, np.nan, <span class="number">3.</span>, <span class="number">7.</span>],<span class="string">&#x27;b&#x27;</span>: [np.nan, <span class="number">3.</span>, <span class="number">4.</span>, <span class="number">6.</span>, <span class="number">8.</span>]&#125;)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_combine1.combine_first(dataframe_combine2) <span class="comment">#自动按照DataFrame中的列名进行列的匹配，并且只填充NaN，其余部分不变</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1.0</td>
      <td>NaN</td>
      <td>2.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4.0</td>
      <td>2.0</td>
      <td>6.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>5.0</td>
      <td>4.0</td>
      <td>10.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>3.0</td>
      <td>6.0</td>
      <td>14.0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>7.0</td>
      <td>8.0</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_combine2.combine_first(dataframe_combine1) <span class="comment">#注意这一操作的顺序是不可交换的</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>5.0</td>
      <td>NaN</td>
      <td>2.0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>4.0</td>
      <td>3.0</td>
      <td>6.0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>5.0</td>
      <td>4.0</td>
      <td>10.0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>3.0</td>
      <td>6.0</td>
      <td>14.0</td>
    </tr>
    <tr>
      <th>4</th>
      <td>7.0</td>
      <td>8.0</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<h2 id="重排与旋转"><a class="markdownIt-Anchor" href="#重排与旋转"></a> 重排与旋转</h2>
<p>Pandas中的<code>stack()</code>操作可以将某个columns“旋转”至index，与之对应的<code>unstack()</code>操作则是将某个index“旋转”至columns。这两个操作都会把选择的那层index或者column插入到最内层。</p>
<p>使用示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_stack=pd.DataFrame(np.arange(<span class="number">6</span>).reshape((<span class="number">2</span>, <span class="number">3</span>)),index=pd.Index([<span class="string">&#x27;Ohio&#x27;</span>, <span class="string">&#x27;Colorado&#x27;</span>], name=<span class="string">&#x27;state&#x27;</span>),columns=pd.MultiIndex.from_arrays([[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>],[<span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;two&#x27;</span>, <span class="string">&#x27;three&#x27;</span>]]))</span><br><span class="line">dataframe_stack</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead tr th {
        text-align: left;
    }
    .dataframe thead tr:last-of-type th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr>
      <th></th>
      <th colspan="2" halign="left">a</th>
      <th>b</th>
    </tr>
    <tr>
      <th></th>
      <th>one</th>
      <th>two</th>
      <th>three</th>
    </tr>
    <tr>
      <th>state</th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Ohio</th>
      <td>0</td>
      <td>1</td>
      <td>2</td>
    </tr>
    <tr>
      <th>Colorado</th>
      <td>3</td>
      <td>4</td>
      <td>5</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_stack.stack() <span class="comment">#stack默认选择最里层的columns，与之类似的是unstack默认选择的是最里层的index。需要注意stack和unstack操作都可能会产生NaN数据</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th></th>
      <th>a</th>
      <th>b</th>
    </tr>
    <tr>
      <th>state</th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th rowspan="3" valign="top">Ohio</th>
      <th>one</th>
      <td>0.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>three</th>
      <td>NaN</td>
      <td>2.0</td>
    </tr>
    <tr>
      <th>two</th>
      <td>1.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th rowspan="3" valign="top">Colorado</th>
      <th>one</th>
      <td>3.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>three</th>
      <td>NaN</td>
      <td>5.0</td>
    </tr>
    <tr>
      <th>two</th>
      <td>4.0</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_stack.stack(level=<span class="number">0</span>) <span class="comment">#可以通过传入level参数来指定stack操作对哪一层columns进行操作。从外向里对应的level值由0开始递增，当然也可以传入负数做逆序索引。unstack也可以做类似操作</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th></th>
      <th>one</th>
      <th>three</th>
      <th>two</th>
    </tr>
    <tr>
      <th>state</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th rowspan="2" valign="top">Ohio</th>
      <th>a</th>
      <td>0.0</td>
      <td>NaN</td>
      <td>1.0</td>
    </tr>
    <tr>
      <th>b</th>
      <td>NaN</td>
      <td>2.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th rowspan="2" valign="top">Colorado</th>
      <th>a</th>
      <td>3.0</td>
      <td>NaN</td>
      <td>4.0</td>
    </tr>
    <tr>
      <th>b</th>
      <td>NaN</td>
      <td>5.0</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_stack.unstack(<span class="string">&#x27;state&#x27;</span>) <span class="comment">#可以传入某一层对应的名称来进行操作</span></span><br></pre></td></tr></table></figure>
<pre><code>          state   
a  one    Ohio        0
          Colorado    3
   two    Ohio        1
          Colorado    4
b  three  Ohio        2
          Colorado    5
dtype: int32
</code></pre>
<p>pivot函数可以对一个DataFrame进行重排，要求这个DataFrame中的index为默认值。函数返回一个新的DataFrame。</p>
<p>如果传入三个及以上的列名称作为参数，第一个列中的内容会被转化为行的index，第二个列所包含的内容会被转化为column，之后，所有列中的内容会与index和column做对应，从而填充整个DataFrame；如果只传入两个列作为参数，那么第一列仍然作为index，原表格中的其它所有列都被保留下来，并与第二个列的内容共同构成一个多层的columns。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_pivot=pd.DataFrame(&#123;<span class="string">&#x27;key&#x27;</span>: [<span class="string">&#x27;foo&#x27;</span>, <span class="string">&#x27;bar&#x27;</span>, <span class="string">&#x27;baz&#x27;</span>], <span class="string">&#x27;A&#x27;</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], <span class="string">&#x27;B&#x27;</span>: [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], <span class="string">&#x27;C&#x27;</span>: [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]&#125;)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_pivot</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>key</th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>foo</td>
      <td>1</td>
      <td>4</td>
      <td>7</td>
    </tr>
    <tr>
      <th>1</th>
      <td>bar</td>
      <td>2</td>
      <td>5</td>
      <td>8</td>
    </tr>
    <tr>
      <th>2</th>
      <td>baz</td>
      <td>3</td>
      <td>6</td>
      <td>9</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_pivot.pivot(<span class="string">&#x27;key&#x27;</span>,<span class="string">&#x27;B&#x27;</span>) <span class="comment">#当只传入两个参数时，除了将选中的两列变为index和columns之外，其余数据全部保留。本例中将key这一列作为index，同时也将B这一列变为columns的其中一层</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead tr th {
        text-align: left;
    }
    .dataframe thead tr:last-of-type th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr>
      <th></th>
      <th colspan="3" halign="left">A</th>
      <th colspan="3" halign="left">C</th>
    </tr>
    <tr>
      <th>B</th>
      <th>4</th>
      <th>5</th>
      <th>6</th>
      <th>4</th>
      <th>5</th>
      <th>6</th>
    </tr>
    <tr>
      <th>key</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>bar</th>
      <td>NaN</td>
      <td>2.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>8.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>baz</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>3.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>9.0</td>
    </tr>
    <tr>
      <th>foo</th>
      <td>1.0</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>7.0</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_pivot.pivot(<span class="string">&#x27;key&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;A&#x27;</span>) <span class="comment">#如果传入三个或以上的参数，那么最终的数据只保留第三个及以后的参数所对应列中的数据</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th>B</th>
      <th>4</th>
      <th>5</th>
      <th>6</th>
    </tr>
    <tr>
      <th>key</th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>bar</th>
      <td>NaN</td>
      <td>2.0</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>baz</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>3.0</td>
    </tr>
    <tr>
      <th>foo</th>
      <td>1.0</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>
<p>相对应地，<code>pivot</code>的反操作为<code>melt</code>。这一操作会将DataFrame变为两列或三列。</p>
<p>如果只传入value_vars参数，那么生成的DataFrame有两列，分别为variable和value，variable对应的是value_vars所包含的列名，value对应的是value_vars中的列名所指向的列里面的所有元素。</p>
<p>如果除了value_vars参数，还传入了id_vars参数，那么最终形成的DataFrame中会额外多出id_vars所对应的若干列。这些列中的内容为id_vars所对应列中的元素。</p>
<p>下面为一些示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_pivot.melt(id_vars=[<span class="string">&#x27;key&#x27;</span>]) <span class="comment">#只传入id_vars参数的话，默认会选取其他所有的列为value_vars</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>key</th>
      <th>variable</th>
      <th>value</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>foo</td>
      <td>A</td>
      <td>1</td>
    </tr>
    <tr>
      <th>1</th>
      <td>bar</td>
      <td>A</td>
      <td>2</td>
    </tr>
    <tr>
      <th>2</th>
      <td>baz</td>
      <td>A</td>
      <td>3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>foo</td>
      <td>B</td>
      <td>4</td>
    </tr>
    <tr>
      <th>4</th>
      <td>bar</td>
      <td>B</td>
      <td>5</td>
    </tr>
    <tr>
      <th>5</th>
      <td>baz</td>
      <td>B</td>
      <td>6</td>
    </tr>
    <tr>
      <th>6</th>
      <td>foo</td>
      <td>C</td>
      <td>7</td>
    </tr>
    <tr>
      <th>7</th>
      <td>bar</td>
      <td>C</td>
      <td>8</td>
    </tr>
    <tr>
      <th>8</th>
      <td>baz</td>
      <td>C</td>
      <td>9</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_pivot.melt(value_vars=[<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>])</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>variable</th>
      <th>value</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>B</td>
      <td>4</td>
    </tr>
    <tr>
      <th>1</th>
      <td>B</td>
      <td>5</td>
    </tr>
    <tr>
      <th>2</th>
      <td>B</td>
      <td>6</td>
    </tr>
    <tr>
      <th>3</th>
      <td>C</td>
      <td>7</td>
    </tr>
    <tr>
      <th>4</th>
      <td>C</td>
      <td>8</td>
    </tr>
    <tr>
      <th>5</th>
      <td>C</td>
      <td>9</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_pivot.melt(id_vars=[<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>],value_vars=[<span class="string">&#x27;key&#x27;</span>,<span class="string">&#x27;C&#x27;</span>])</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>variable</th>
      <th>value</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>4</td>
      <td>key</td>
      <td>foo</td>
    </tr>
    <tr>
      <th>1</th>
      <td>2</td>
      <td>5</td>
      <td>key</td>
      <td>bar</td>
    </tr>
    <tr>
      <th>2</th>
      <td>3</td>
      <td>6</td>
      <td>key</td>
      <td>baz</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1</td>
      <td>4</td>
      <td>C</td>
      <td>7</td>
    </tr>
    <tr>
      <th>4</th>
      <td>2</td>
      <td>5</td>
      <td>C</td>
      <td>8</td>
    </tr>
    <tr>
      <th>5</th>
      <td>3</td>
      <td>6</td>
      <td>C</td>
      <td>9</td>
    </tr>
  </tbody>
</table>
</div>
<h1 id="数据的分组"><a class="markdownIt-Anchor" href="#数据的分组"></a> 数据的分组</h1>
<h2 id="生成groupby变量"><a class="markdownIt-Anchor" href="#生成groupby变量"></a> 生成GroupBy变量</h2>
<p>Series和DataFrame可以基于提供的一组关键字，按照行或列对其进行分组。</p>
<p>分组的方法有以下几类：</p>
<ol>
<li>一个list或array，其中的元素作为分组的依据，要求大小与待分组轴向的大小相等</li>
<li>一个dict或Series，将待分组的数据以及这些数据所在的分组对应起来</li>
<li>一个列名，该列中的元素作为分组的依据，等同于传入一个Series</li>
<li>一个函数，可以作用于index或者是元素</li>
<li>一个index，适用于多层index的情况</li>
</ol>
<p>使用<code>groupby</code>函数，并传入上述三种参数中的其中一个，便可得到一个类型为<code>SeriesGroupBy</code>或者<code>DataFrameGroupBy</code>的变量。</p>
<p>下面为一些使用示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_groupby=pd.DataFrame(&#123;<span class="string">&#x27;key1&#x27;</span> : [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;a&#x27;</span>],<span class="string">&#x27;key2&#x27;</span> : [<span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;two&#x27;</span>, <span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;two&#x27;</span>, <span class="string">&#x27;one&#x27;</span>], <span class="string">&#x27;data1&#x27;</span> : np.random.randn(<span class="number">5</span>), <span class="string">&#x27;data2&#x27;</span> : np.random.randn(<span class="number">5</span>)&#125;)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_groupby</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>key1</th>
      <th>key2</th>
      <th>data1</th>
      <th>data2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>a</td>
      <td>one</td>
      <td>0.773597</td>
      <td>-0.769454</td>
    </tr>
    <tr>
      <th>1</th>
      <td>a</td>
      <td>two</td>
      <td>0.552522</td>
      <td>-0.123829</td>
    </tr>
    <tr>
      <th>2</th>
      <td>b</td>
      <td>one</td>
      <td>-0.264872</td>
      <td>-0.145577</td>
    </tr>
    <tr>
      <th>3</th>
      <td>b</td>
      <td>two</td>
      <td>-0.222394</td>
      <td>-0.357799</td>
    </tr>
    <tr>
      <th>4</th>
      <td>a</td>
      <td>one</td>
      <td>-1.691627</td>
      <td>0.530238</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">grouped_series=dataframe_groupby[<span class="string">&#x27;data1&#x27;</span>].groupby(dataframe_groupby[<span class="string">&#x27;key1&#x27;</span>]) <span class="comment">#使用Series作为分组的依据</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">grouped_series <span class="comment">#得到一个GroupBy类型的变量</span></span><br></pre></td></tr></table></figure>
<pre><code>&lt;pandas.core.groupby.generic.SeriesGroupBy object at 0x000001B04A2A2688&gt;
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">grouped_series2=dataframe_groupby[<span class="string">&#x27;data1&#x27;</span>].groupby([dataframe_groupby[<span class="string">&#x27;key1&#x27;</span>],dataframe_groupby[<span class="string">&#x27;key2&#x27;</span>]]) <span class="comment">#可以传入多个Series进行分组，最终得到的Series具有多重index</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">states = np.array([<span class="string">&#x27;Ohio&#x27;</span>, <span class="string">&#x27;California&#x27;</span>, <span class="string">&#x27;California&#x27;</span>, <span class="string">&#x27;Ohio&#x27;</span>, <span class="string">&#x27;Ohio&#x27;</span>])</span><br><span class="line">years = np.array([<span class="number">2005</span>, <span class="number">2005</span>, <span class="number">2006</span>, <span class="number">2005</span>, <span class="number">2006</span>])</span><br><span class="line">grouped_arr=dataframe_groupby[<span class="string">&#x27;data1&#x27;</span>].groupby([states,years]) <span class="comment">#传入array来进行分组，array中的元素作为分组的依据</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">grouped_colname=dataframe_groupby.groupby([<span class="string">&#x27;key1&#x27;</span>,<span class="string">&#x27;key2&#x27;</span>]) <span class="comment">#可以传入多个列名进行分组</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">grouped_col=dataframe_groupby.groupby(dataframe_groupby.dtypes,axis=<span class="number">1</span>) <span class="comment">#默认情况下按照行进行分组，可以传入axis=1来按列进行分组</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mapping=&#123;<span class="number">0</span>:<span class="string">&#x27;red&#x27;</span>,<span class="number">1</span>:<span class="string">&#x27;green&#x27;</span>,<span class="number">2</span>:<span class="string">&#x27;blue&#x27;</span>,<span class="number">3</span>:<span class="string">&#x27;red&#x27;</span>,<span class="number">4</span>:<span class="string">&#x27;blue&#x27;</span>&#125;</span><br><span class="line">grouped_mapping=dataframe_groupby.groupby(mapping) <span class="comment">#使用dict来进行分组，与传入一个Series的作用类似</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">func=<span class="keyword">lambda</span> x: x&gt;<span class="number">0</span></span><br><span class="line">grouped_func=dataframe_groupby[<span class="string">&#x27;data1&#x27;</span>].groupby(func) <span class="comment">#使用函数来进行分组</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">columns = pd.MultiIndex.from_arrays([[<span class="string">&#x27;US&#x27;</span>, <span class="string">&#x27;US&#x27;</span>, <span class="string">&#x27;US&#x27;</span>, <span class="string">&#x27;JP&#x27;</span>, <span class="string">&#x27;JP&#x27;</span>],[<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">3</span>]], names=[<span class="string">&#x27;cty&#x27;</span>, <span class="string">&#x27;tenor&#x27;</span>])</span><br><span class="line">dataframe_groupby2=pd.DataFrame(np.random.randn(<span class="number">4</span>, <span class="number">5</span>), columns=columns)</span><br><span class="line">grouped_hier=dataframe_groupby2.groupby(level=<span class="string">&#x27;cty&#x27;</span>, axis=<span class="number">1</span>) <span class="comment">#使用多层index中的某一层进行分组</span></span><br></pre></td></tr></table></figure>
<h2 id="groupby变量的使用"><a class="markdownIt-Anchor" href="#groupby变量的使用"></a> GroupBy变量的使用</h2>
<h3 id="查看内容"><a class="markdownIt-Anchor" href="#查看内容"></a> 查看内容</h3>
<p>groupby<code>函数得到的</code>GroupBy`变量可以按照下面的两种方法查看或是使用每个分组的内容：</p>
<ol>
<li>用于循环遍历，每个循环输出一个分组名称和内容</li>
<li>转换为list类型，list中的每个元素都是一个tuple，包含每个分组的名称和内容</li>
</ol>
<h3 id="索引"><a class="markdownIt-Anchor" href="#索引"></a> 索引</h3>
<p>如果<code>GroupBy</code>变量是从一个DataFrame分组而来的，可以使用DataFrame的列名对其进行索引，得到一个<code>SeriesGroupBy</code>变量。</p>
<h3 id="使用函数"><a class="markdownIt-Anchor" href="#使用函数"></a> 使用函数</h3>
<p><code>GroupBy</code>变量也支持一些统计函数，包括：</p>
<ul>
<li>count：统计分组中非NaN的数目</li>
<li>sum：统计所有非NaN元素的和</li>
<li>mean：计算所有非NaN元素的平均值</li>
<li>median：计算所有非NaN元素的中位数</li>
<li>std、var：统计非偏（即分母为n-1）标准差或方差</li>
<li>min、max：统计非NaN元素的最大与最小值</li>
<li>prod：统计所有非NaN元素的乘积</li>
<li>first、last：第一个或者最后一个非NaN元素</li>
<li>describe：对每个分组的数据进行统计，输出一些统计量</li>
</ul>
<p>另外，还有几个比较特殊的函数用法：</p>
<ul>
<li>agg：这一函数的用法有下面几种
<ol>
<li>可以自己定义函数，然后作为参数传入到<code>agg</code>方法中，从而作用于每一个分组。传入的函数要求是聚合函数（即输出像统计函数一样会降维）</li>
<li>支持传入一个元素为统计函数名称的list</li>
<li>或是传入一个以二维tuple为元素的list，tuple的第一个元素为统计结果列的名称，第二个元素为统计函数的名称或是一个函数变量。</li>
</ol>
</li>
<li>apply：传入一个函数作为输入参数，对每个分组调用这一函数，然后用concat方法将计算结果合起来，得到一个多重index的DataFrame。因此，每个分组的计算结果要满足concat操作的要求。</li>
<li>transform：对每个分组使用一个函数，要求函数的输出结果必须为一个标量，或是大小相同的array。这一操作完成之后，会生成一个与分组前规模相同的Series或者DataFrame，其中元素的值便是使用原始数据所在分组的函数输出来填充进去的。</li>
</ul>
<p>下面为一些使用示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> name,group <span class="keyword">in</span> grouped_func:</span><br><span class="line">    print(name) <span class="comment">#name对应于分组的名称</span></span><br><span class="line">    print(group) <span class="comment">#group对应于每个分组的内容，可以是一个Series或者DataFrame</span></span><br></pre></td></tr></table></figure>
<pre><code>False
0    0.773597
Name: data1, dtype: float64
True
1    0.552522
2   -0.264872
3   -0.222394
4   -1.691627
Name: data1, dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list(grouped_col) <span class="comment">#将GroupBy转化为一个list</span></span><br></pre></td></tr></table></figure>
<pre><code>[(dtype('float64'),
        data1     data2
  0  0.773597 -0.769454
  1  0.552522 -0.123829
  2 -0.264872 -0.145577
  3 -0.222394 -0.357799
  4 -1.691627  0.530238),
 (dtype('O'),
    key1 key2
  0    a  one
  1    a  two
  2    b  one
  3    b  two
  4    a  one)]
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">grouped_hier[<span class="string">&#x27;US&#x27;</span>] <span class="comment">#从DataFrameGroupBy中索引得到SeriesGroupBy</span></span><br></pre></td></tr></table></figure>
<pre><code>&lt;pandas.core.groupby.generic.SeriesGroupBy object at 0x000001B04A2ACFC8&gt;
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">grouped_colname.sum() <span class="comment">#对GroupBy变量使用统计函数</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th></th>
      <th>data1</th>
      <th>data2</th>
    </tr>
    <tr>
      <th>key1</th>
      <th>key2</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th rowspan="2" valign="top">a</th>
      <th>one</th>
      <td>-0.918030</td>
      <td>-0.239216</td>
    </tr>
    <tr>
      <th>two</th>
      <td>0.552522</td>
      <td>-0.123829</td>
    </tr>
    <tr>
      <th rowspan="2" valign="top">b</th>
      <th>one</th>
      <td>-0.264872</td>
      <td>-0.145577</td>
    </tr>
    <tr>
      <th>two</th>
      <td>-0.222394</td>
      <td>-0.357799</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">grouped_hier.describe()</span><br><span class="line"><span class="comment">#这一函数相当于是下面两条命令的简化版：</span></span><br><span class="line"><span class="comment">#f=lambda x:x.describe()</span></span><br><span class="line"><span class="comment">#grouped.apply(f)</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th></th>
      <th></th>
      <th>count</th>
      <th>mean</th>
      <th>std</th>
      <th>min</th>
      <th>25%</th>
      <th>50%</th>
      <th>75%</th>
      <th>max</th>
    </tr>
    <tr>
      <th>cty</th>
      <th>cty</th>
      <th>tenor</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th rowspan="2" valign="top">JP</th>
      <th rowspan="2" valign="top">JP</th>
      <th>1</th>
      <td>4.0</td>
      <td>-0.469233</td>
      <td>1.009621</td>
      <td>-1.229898</td>
      <td>-0.940842</td>
      <td>-0.832966</td>
      <td>-0.361357</td>
      <td>1.018895</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4.0</td>
      <td>0.167405</td>
      <td>0.584559</td>
      <td>-0.516235</td>
      <td>-0.212018</td>
      <td>0.221274</td>
      <td>0.600696</td>
      <td>0.743307</td>
    </tr>
    <tr>
      <th rowspan="3" valign="top">US</th>
      <th rowspan="3" valign="top">US</th>
      <th>1</th>
      <td>4.0</td>
      <td>-0.356559</td>
      <td>1.681193</td>
      <td>-1.717014</td>
      <td>-1.399371</td>
      <td>-0.874332</td>
      <td>0.168480</td>
      <td>2.039443</td>
    </tr>
    <tr>
      <th>3</th>
      <td>4.0</td>
      <td>-0.080853</td>
      <td>0.551140</td>
      <td>-0.674817</td>
      <td>-0.479963</td>
      <td>-0.060771</td>
      <td>0.338339</td>
      <td>0.472946</td>
    </tr>
    <tr>
      <th>5</th>
      <td>4.0</td>
      <td>0.227364</td>
      <td>1.239056</td>
      <td>-1.354026</td>
      <td>-0.461604</td>
      <td>0.498428</td>
      <td>1.187396</td>
      <td>1.266626</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">diff</span>(<span class="params">arr</span>):</span></span><br><span class="line">    <span class="keyword">return</span> arr.max()-arr.min()</span><br><span class="line">grouped_arr.agg(diff)</span><br></pre></td></tr></table></figure>
<pre><code>California  2005    0.00000
            2006    0.00000
Ohio        2005    0.99599
            2006    0.00000
Name: data1, dtype: float64
</code></pre>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">grouped_series.agg([<span class="string">&#x27;count&#x27;</span>,<span class="string">&#x27;max&#x27;</span>,<span class="string">&#x27;min&#x27;</span>]) <span class="comment">#传入一个元素为统计函数名称的list</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>count</th>
      <th>max</th>
      <th>min</th>
    </tr>
    <tr>
      <th>key1</th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>a</th>
      <td>3</td>
      <td>0.773597</td>
      <td>-1.691627</td>
    </tr>
    <tr>
      <th>b</th>
      <td>2</td>
      <td>-0.222394</td>
      <td>-0.264872</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">grouped_mapping.agg([(<span class="string">&#x27;sum_val&#x27;</span>,<span class="string">&#x27;sum&#x27;</span>),(<span class="string">&#x27;bar&#x27;</span>,np.std)]) <span class="comment">#传入一个元素为tuple的list</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead tr th {
        text-align: left;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr>
      <th></th>
      <th colspan="2" halign="left">data1</th>
      <th colspan="2" halign="left">data2</th>
    </tr>
    <tr>
      <th></th>
      <th>sum_val</th>
      <th>bar</th>
      <th>sum_val</th>
      <th>bar</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>blue</th>
      <td>-1.956499</td>
      <td>1.008868</td>
      <td>0.384661</td>
      <td>0.477873</td>
    </tr>
    <tr>
      <th>green</th>
      <td>0.552522</td>
      <td>NaN</td>
      <td>-0.123829</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>red</th>
      <td>0.551203</td>
      <td>0.704271</td>
      <td>-1.127252</td>
      <td>0.291084</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">grouped_hier.transform(np.mean) <span class="comment">#transform函数的使用示例，输出与原始的DataFrame具有相同规模，其中的元素来源于数据所在分组计算出的函数输出</span></span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead tr th {
        text-align: left;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr>
      <th>cty</th>
      <th colspan="3" halign="left">US</th>
      <th colspan="2" halign="left">JP</th>
    </tr>
    <tr>
      <th>tenor</th>
      <th>1</th>
      <th>3</th>
      <th>5</th>
      <th>1</th>
      <th>3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>0.392919</td>
      <td>0.392919</td>
      <td>0.392919</td>
      <td>0.786027</td>
      <td>0.786027</td>
    </tr>
    <tr>
      <th>1</th>
      <td>-1.020843</td>
      <td>-1.020843</td>
      <td>-1.020843</td>
      <td>-0.243295</td>
      <td>-0.243295</td>
    </tr>
    <tr>
      <th>2</th>
      <td>-0.529225</td>
      <td>-0.529225</td>
      <td>-0.529225</td>
      <td>-0.668838</td>
      <td>-0.668838</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0.877084</td>
      <td>0.877084</td>
      <td>0.877084</td>
      <td>-0.477551</td>
      <td>-0.477551</td>
    </tr>
  </tbody>
</table>
</div>
<h1 id="数据透视表"><a class="markdownIt-Anchor" href="#数据透视表"></a> 数据透视表</h1>
<p>Pandas提供的<code>pivot_table</code>函数可以用来构造数据透视表。这一函数支持的参数如下：</p>
<ul>
<li>values：用于做数据透视表的数据列，默认使用全部的数据列</li>
<li>index：传入一个列名或者是其它用于分组的关键词，用作数据透视表的行</li>
<li>columns：传入一个列名或者是其它用于分组的关键词，用作数据透视表的列</li>
<li>aggfunc：传入一个聚合函数或者是聚合函数列表，默认为<code>mean</code></li>
<li>fill_value：对数据透视表中NaN的数据的填充值</li>
<li>margins：是否加入每行/每列的总计以及总体的总计，默认为False</li>
<li>dropna：如果为True，则不包含全部为NaN的列</li>
</ul>
<p>如果要做交叉表，即表中元素为数据频数的特殊数据透视表，可以用<code>crosstab</code>函数。</p>
<p>下面为一些示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data=[[<span class="number">16.99</span>, <span class="number">1.01</span>, <span class="string">&#x27;No&#x27;</span>, <span class="string">&#x27;Sun&#x27;</span>, <span class="string">&#x27;Dinner&#x27;</span>, <span class="number">2</span>, <span class="number">0.059447</span>],</span><br><span class="line">[<span class="number">10.34</span>, <span class="number">1.66</span>, <span class="string">&#x27;No&#x27;</span>, <span class="string">&#x27;Sun&#x27;</span>, <span class="string">&#x27;Dinner&#x27;</span>, <span class="number">3</span>, <span class="number">0.160542</span>],</span><br><span class="line">[<span class="number">21.01</span>, <span class="number">3.50</span>, <span class="string">&#x27;No&#x27;</span>, <span class="string">&#x27;Sat&#x27;</span>, <span class="string">&#x27;Lunch&#x27;</span>, <span class="number">3</span>, <span class="number">0.166587</span>],</span><br><span class="line">[<span class="number">23.68</span>, <span class="number">3.31</span>, <span class="string">&#x27;Yes&#x27;</span>, <span class="string">&#x27;Sat&#x27;</span>, <span class="string">&#x27;Breakfast&#x27;</span>, <span class="number">2</span>, <span class="number">0.139780</span>],</span><br><span class="line">[<span class="number">24.59</span>, <span class="number">3.61</span>, <span class="string">&#x27;No&#x27;</span>, <span class="string">&#x27;Sun&#x27;</span>, <span class="string">&#x27;Dinner&#x27;</span>, <span class="number">4</span>, <span class="number">0.146808</span>],</span><br><span class="line">[<span class="number">25.29</span>, <span class="number">4.71</span>, <span class="string">&#x27;Yes&#x27;</span>, <span class="string">&#x27;Sat&#x27;</span>, <span class="string">&#x27;Lunch&#x27;</span>, <span class="number">4</span>, <span class="number">0.186240</span>]]</span><br><span class="line">dataframe_pivottable=pd.DataFrame(data,columns=[<span class="string">&#x27;total_bill&#x27;</span>,<span class="string">&#x27;tip&#x27;</span>,<span class="string">&#x27;smoker&#x27;</span>,<span class="string">&#x27;day&#x27;</span>,<span class="string">&#x27;time&#x27;</span>,<span class="string">&#x27;size&#x27;</span>,<span class="string">&#x27;tip_pct&#x27;</span>])</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dataframe_pivottable.pivot_table(index=[<span class="string">&#x27;smoker&#x27;</span>,<span class="string">&#x27;day&#x27;</span>],columns=<span class="string">&#x27;time&#x27;</span>,margins=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead tr th {
        text-align: left;
    }
    .dataframe thead tr:last-of-type th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr>
      <th></th>
      <th></th>
      <th colspan="4" halign="left">size</th>
      <th colspan="4" halign="left">tip</th>
      <th colspan="4" halign="left">tip_pct</th>
      <th colspan="4" halign="left">total_bill</th>
    </tr>
    <tr>
      <th></th>
      <th>time</th>
      <th>Breakfast</th>
      <th>Dinner</th>
      <th>Lunch</th>
      <th>All</th>
      <th>Breakfast</th>
      <th>Dinner</th>
      <th>Lunch</th>
      <th>All</th>
      <th>Breakfast</th>
      <th>Dinner</th>
      <th>Lunch</th>
      <th>All</th>
      <th>Breakfast</th>
      <th>Dinner</th>
      <th>Lunch</th>
      <th>All</th>
    </tr>
    <tr>
      <th>smoker</th>
      <th>day</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th rowspan="2" valign="top">No</th>
      <th>Sat</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>3.0</td>
      <td>3</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>3.500</td>
      <td>3.500000</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>0.166587</td>
      <td>0.166587</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>21.01</td>
      <td>21.010000</td>
    </tr>
    <tr>
      <th>Sun</th>
      <td>NaN</td>
      <td>3.0</td>
      <td>NaN</td>
      <td>3</td>
      <td>NaN</td>
      <td>2.093333</td>
      <td>NaN</td>
      <td>2.093333</td>
      <td>NaN</td>
      <td>0.122266</td>
      <td>NaN</td>
      <td>0.122266</td>
      <td>NaN</td>
      <td>17.306667</td>
      <td>NaN</td>
      <td>17.306667</td>
    </tr>
    <tr>
      <th>Yes</th>
      <th>Sat</th>
      <td>2.0</td>
      <td>NaN</td>
      <td>4.0</td>
      <td>3</td>
      <td>3.31</td>
      <td>NaN</td>
      <td>4.710</td>
      <td>4.010000</td>
      <td>0.13978</td>
      <td>NaN</td>
      <td>0.186240</td>
      <td>0.163010</td>
      <td>23.68</td>
      <td>NaN</td>
      <td>25.29</td>
      <td>24.485000</td>
    </tr>
    <tr>
      <th>All</th>
      <th></th>
      <td>2.0</td>
      <td>3.0</td>
      <td>3.5</td>
      <td>3</td>
      <td>3.31</td>
      <td>2.093333</td>
      <td>4.105</td>
      <td>2.966667</td>
      <td>0.13978</td>
      <td>0.122266</td>
      <td>0.176414</td>
      <td>0.143234</td>
      <td>23.68</td>
      <td>17.306667</td>
      <td>23.15</td>
      <td>20.316667</td>
    </tr>
  </tbody>
</table>
</div>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pd.crosstab([dataframe_pivottable[<span class="string">&#x27;smoker&#x27;</span>],dataframe_pivottable[<span class="string">&#x27;time&#x27;</span>]],dataframe_pivottable[<span class="string">&#x27;day&#x27;</span>],margins=<span class="literal">True</span>) </span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
    .dataframe tbody tr th {
        vertical-align: top;
    }
    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>day</th>
      <th>Sat</th>
      <th>Sun</th>
      <th>All</th>
    </tr>
    <tr>
      <th>smoker</th>
      <th>time</th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th rowspan="2" valign="top">No</th>
      <th>Dinner</th>
      <td>0</td>
      <td>3</td>
      <td>3</td>
    </tr>
    <tr>
      <th>Lunch</th>
      <td>1</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th rowspan="2" valign="top">Yes</th>
      <th>Breakfast</th>
      <td>1</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>Lunch</th>
      <td>1</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>All</th>
      <th></th>
      <td>3</td>
      <td>3</td>
      <td>6</td>
    </tr>
  </tbody>
</table>
</div>
<h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1>
<ol>
<li>Python for Data Analysis, 2nd Edition.</li>
</ol>
]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>数据分析</tag>
      </tags>
  </entry>
</search>
